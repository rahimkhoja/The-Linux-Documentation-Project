
File system HOWTOMartin Hinner

Versione 0.7.5, 22 Agosto 2000

   Questo piccolo HOWTO riguarda i file system e come accedervi. Non è un
   documento relativo a Linux o Unix come probabilmente ti aspetti.
   Potrai trovare anche diverse informazioni interessanti circa file
   system non Unix, ma Unix è il mio interesse principale :-)
     _________________________________________________________________

   Sommario
   1. Introduzione

        1.1. Copyright
        1.2. Mailing list sui file system
        1.3. File system collection su metalab.unc.edu
        1.4. Riconoscimenti
        1.5. Mappa di accessibilità dei file system
        1.6. Introduzione ai file system con allocazione contigua
        1.7. Introduzione ai file system con allocazione a liste
                collegate

        1.8. Introduzione ai file system basati su FAT
        1.9. Introduzione ai file system basati su inode
        1.10. Introduzione ai file system estesi (Extent)
        1.11. Introduzione ai file system basati su alberi bilanciati
                (btree)

        1.12. Introduzione ai file system di tipo "logging/journaling"
        1.13. Altre caratteristiche dei file system

   2. Volumi

        2.1. Partizioni dei PC
        2.2. Altre partizioni
        2.3. Disklabel Unix
        2.4. Volumi Windows NT
        2.5. MD - Driver Linux per dispositivi multipli
        2.6. LVM - Logical Volume Manager (HP-UX LVM?)
        2.7. VxVM - Gestore del volumi Veritas
        2.8. IBM OS/2 LVM
        2.9. StackVM
        2.10. Volumi di Novell NetWare

   3. DOS FAT 12/16/32, VFAT

        3.1. VFAT: Nomi lunghi
        3.2. UMSDOS: LFN/attributi Linux nei file system FAT
        3.3. Attributi estesi di OS/2 per i file system FAT
        3.4. Star LFN
        3.5. Accesso alla VFAT da OS/2 (VFAT-OS2)
        3.6. Accesso alla VFAT da DOS (driver LFNDOS)
        3.7. Accesso alla VFAT da DOS (driver LFNDOS gratis)
        3.8. Accesso alla VFAT da DOS (programmi LFN di Odi)
        3.9. Accesso alla FAT32 da OS/2 (FAT32.IFS)
        3.10. Accesso alla FAT32 da Windows NT 4.0
        3.11. Accesso alla FAT32 da Windows NT 4.0
        3.12. Accedere a dischi Stac/Dblspace/Drvspace da Linux (DMSDOS)
        3.13. Accedere a dischi Dblspace/Drvspace da Linux (thsfs)
        3.14. Fsresize - FAT16/32 resizer
        3.15. FIPS - FAT16 resizer

   4. High Performance file system (HPFS)

        4.1. Accedere a HPFS da DOS (iHPFS)
        4.2. Accedere a HPFS da DOS (hpfsdos)
        4.3. Accedere a HPFS da DOS (hpfsa)
        4.4. Accedere a HPFS da DOS (amos)
        4.5. Accedere a HPFS da Linux
        4.6. Accedere a HPFS da FreeBSD
        4.7. Accedere a HPFS da Windows NT 3.5
        4.8. Accedere a HPFS da Windows NT 4

   5. New Technology file system (NTFS)

        5.1. Accedere a NTFS da DOS (NTFSDOS.EXE)
        5.2. Accedere a NTFS da DOS (ntpwd)
        5.3. Accedere a NTFS da OS/2
        5.4. Accedere a NTFS da Linux
        5.5. Accedere a NTFS da FreeBSD e NetBSD
        5.6. Accedere a NTFS da BeOS
        5.7. Accedere a NTFS da BeOS (un altro)
        5.8. Riparare NTFS usando NTFSDOS
        5.9. Riparare NTFS usando NTRecover

   6. File system esteso(Ext, Ext2, Ext3)

        6.1. File system esteso(ExtFS)
        6.2. Secondo file system esteso (Ext2 FS)
        6.3. Terzo file system esteso(Ext3 FS)
        6.4. E2compr - Compressione transparente per Ext2fs
        6.5. Accedere a Ext2 da DOS (strumenti Ext2)
        6.6. Accedere a Ext2 da DOS, Windows 9x/NT ed altri Unix (LTools)
        6.7. Accedere a Ext2 da OS/2
        6.8. Accedere a Ext2 da Windows 95/98 (FSDEXT2)
        6.9. Accedere a Ext2 da Windows 95 (Explore2fs)
        6.10. Accedere a Ext2 da Windows NT (ext2fsnt)
        6.11. Accedere a Ext2 da BeOS
        6.12. Accedere a Ext2 da MacOS (MountX)
        6.13. Accedere a Ext2 da MiNT
        6.14. Ext2fs defrag
        6.15. Ext2fs resize
        6.16. Ext2end
        6.17. Riparare/analizzare/creare Ext2 con E2fsprogs
        6.18. Editor per il file system Ext2 - Ext2ed
        6.19. Editor per il file system di Linux - lde
        6.20. Programma di utilità "undelete" per Ext2

   7. Macintosh Hierarchical file system - HFS

        7.1. Accedere a HFS da Linux
        7.2. Accedere a HFS da OS/2 (HFS/2)
        7.3. Accedere a HFS da Windows 95/98/NT (HFV Explorer)
        7.4. Accedere a HFS da DOS (MAC-ETTE)
        7.5. HFS util
        7.6. MacFS: una libreria portabile per il file system Macintosh

   8. ISO 9660 - File system per CD-ROM

        8.1. Estensioni RockRidge
        8.2. Estensioni Joliet
        8.3. CD-ROM ibridi
        8.4. Indici Novell NetWare su ISO9660
        8.5. Accedere a Joliet da Linux
        8.6. Accedere a Joliet da BeOS
        8.7. Accedere a Joliet da OS/2
        8.8. Accedere ad un CD audio come un file system da Linux
        8.9. Accedere ad un CD audio come un file system da BeOS
        8.10. Accedere a tutte le tracce da Linux (CDfs)
        8.11. Creare CD-ROM ibridi (mkhybrid)

   9. Altri file system

        9.1. ADFS - Acorn Disc File System
        9.2. AFFS - Amiga fast file system
        9.3. BeFS - Il file system di BeOS
        9.4. BFS - UnixWare Boot file system
        9.5. File system CrosStor
        9.6. DTFS - Desktop file system
        9.7. EFS - Enhanced file system (Linux)
        9.8. EFS - Extent file system (IRIX)
        9.9. FFS - File system veloce di BSD
        9.10. GPFS - General Parallel file system
        9.11. HFS - File system ad alte prestazioni per HP-UX
        9.12. HTFS - High throughput file system
        9.13. JFS - File system journaled (HP-UX, AIX, OS/2 5, Linux)
        9.14. LFS - Il file system Linux strutturato a log
        9.15. MFS - File system Macintosh
        9.16. File system Minix
        9.17. NWFS - File system NetWare di Novell
        9.18. NSS - Novell Storage Services
        9.19. ODS - File system On Disk Structure
        9.20. File system QNX
        9.21. File system Reiser
        9.22. RFS (File system per CD-ROM)
        9.23. RomFS - File system Rom
        9.24. SFS - File system sicuro
        9.25. File system Spiralog (OpenVMS)
        9.26. File system System V e derivati
        9.27. Text - (File system per CD-ROM di Philips)
        9.28. UDF - Universal Disk Format (file system per DVD-ROM)
        9.29. UFS
        9.30. File system V7
        9.31. VxFS - File system Veritas (HP-UX, SCO UnixWare, Solaris)
        9.32. XFS - File system esteso (IRIX)
        9.33. File system Xia

   10. Partizioni raw

        10.1. Il backup di partizioni raw usando DBsnapshot

   11. Appendice

        11.1. File system di rete
        11.2. File system cifrati
        11.3. Programma di utilità per il benchmark dei file system
        11.4. Scrivere un proprio driver per file system
        11.5. Altri documenti

1. Introduzione

Il "File System HOWTO" tratta dei file system e di come accedere ai file
system da diversi OS. Sebbene il documento sia stato assemblato al meglio
delle mie conoscenze, potrebbe contenere degli errori. Se trovi qualche
errore o informazioni non aggiornate, fammelo sapere. Cercherò di mantenere
questo documento il più possibile aggiornato e libero di errori. Anche
contributi sono ben accetti, quindi se vuoi scrivere qualcosa sui file
system, contattami via email.

Prima di leggere questo HOWTO, si consiglia di leggere il Disk-HOWTO di
Stein Gjoen (puoi ottenerlo da &#65533; ).

Questo HOWTO può essere ottenuto da &#65533; o &#65533;.

Se sei un utente giapponese, potresti essere interessato al fatto che
FUJIWARA Teruyoshi ha tradotto questo HOWTO in giapponese. La traduzione è
disponibile su &#65533;. Il file sorgente in formato SGLM può essere
scaricato da &#65533;
     _________________________________________________________________

1.1. Copyright

The file system HOWTO, Copyright (c) 1999 Martin Hinner< mhi@penguin.cz>.

This HOWTO is free document; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your option)
any later version.

This HOWTO is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
more details.

You should have received a copy of the GNU General Public License along with
this document or GNU CC; if not, write to the: Free Software Foundation,
Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
     _________________________________________________________________

1.2. Mailing list sui file system

Potresti considerare l'iscrizione alla mailing list sui file system. Questa
lista è riconosciuta come una buona fonte di informazioni sia per gli utenti
finali che per gli sviluppatori. Se quindi hai qualcosa a che fare con i
file system, iscriviti. Per iscriverti manda una email a <
majordomo@penguin.cz> e nel testo (non nell'oggetto) del messaggio metti
(senza le virgolette): "subscribe fs-l".
     _________________________________________________________________

1.2.1. Mailing list sui file system del kernel di Linux

Per iscriverti alla mailing list sui file system supportati dal kernel di
Linux linux-fsdev@vger.rutgers.edu, manda una mail a
listserv@vger.rutgers.edu. Metti "subscribe linux-fsdev" nel testo del
messaggio.
     _________________________________________________________________

1.2.2. Mailing list sui file system di FreeBSD

Per iscriverti alla mailing list tecnica sui file system supportati da
FreeBSD freebsd-fs@FreeBSD.org, manda una mail a majordomo@FreeBSD.org.
Metti "subscribe freebsd-fs" net testo del messaggio.
     _________________________________________________________________

1.3. File system collection su metalab.unc.edu

File system collection è un sito FTP/WWW che fornisce informazioni utili sui
file system e sui programmi e driver relativi ad i file system. Il sito è
&#65533;, oppure, via FTP, &#65533;.
     _________________________________________________________________

1.4. Riconoscimenti

La versione originale di "file system access HOWTO" è stata scritta da
Georgatos Photis (vedi la sua homepage su &#65533;). Questo HOWTO contiene
molte informazioni dalla suo sito. Grazie, Gef.

FUJIWARA Teruyoshi <fujiwara@linux.or.jp> ha tradotto questo HOWTO in
Giapponese.

Altre persone che hanno contribuito o che mi hanno aiutato (direttamente o
indirettamente) per questo HOWTO sono, in ordine alfabetico:

     * Mariusz Borkowski <borkowsm@ii.pw.edu.pl> - ISO9660/RR info
     * Remy Card <card@masi.ibp.fr> - Introduzione al file system Ext2
     * Peter A. Dinda <pdinda@cs.cmu.edu> - Descrizione del file system
       HFS
     * Alfonso De Gregorio <adg@speedcom.it> - Informazioni sul file
       system TCFS
     * Radek Machacka <radekm@sco.com> - Grazie per SCO UnixWare e SCO
       OpenServer
     * Andrey Shedel <andreys@cr.cyco.com> - Vari aggiornamenti
     * Peter Todd <retep2@home.com> - Informazioni sul file system SFS
     * Theodore Ts'o <tytso@mit.edu> - Introduzione al file system Ext2
     * Stephen Tweedie <sct@dcs.ed.ac.uk> - Introduzione al file system
       Ext2

Molte grazie a queste persone. Se ho dimenticato qualcuno, fatemelo sapere.
     _________________________________________________________________

1.5. Mappa di accessibilità dei file system

Questa è la mappa di accessibilità dei file system, ordinata alfabeticamente
in ordine di sistema operativo. Potresti trovare questo elenco un pò
caotico. Questo è dovuto agli sgmltools di Linux che non gestiscono le
tabelle.

COME PUOI VEDERE, QUESTA 'MAPPA' E' ANCORA INCOMPLETA. CERCHERO' DI FINIRLA
NEL PROSSIMO FUTURO.

FreeBSD: la Sezione 9.9 | la Sezione 4.6 | la Sezione 5.5

Linux: la Sezione 9.2| la Sezione 9.3| la Sezione 9.4| la Sezione 9.9| la
Sezione 4.5| la Sezione 9.20| la Sezione 9.33

NetBSD: la Sezione 9.9 | la Sezione 3 | la Sezione 8

NetWare 2.x: la Sezione 9.17.1

NetWare 3.x, 4.x: la Sezione 9.17.2 | la Sezione 8

NetWare 5.x: la Sezione 9.17.2 | la Sezione 9.18 | la Sezione 8

OpenBSD: la Sezione 9.9 | la Sezione 3

OS/2: la Sezione 6.7 | la Sezione 3 | la Sezione 4 | la Sezione 4 | la
Sezione 8 | la Sezione 9.13 | la Sezione 3.5

QNX 4: la Sezione 3 | la Sezione 8 | la Sezione 9.20

SCO OpenServer: la Sezione 9.26.1| la Sezione 9.6| la Sezione 9.26.2| la
Sezione 9.12| la Sezione 8 | la Sezione 9.26.5

SCO UnixWare: la Sezione 9.4| la Sezione 9.6| la Sezione 8 | la Sezione
9.26.4| la Sezione 9.31
     _________________________________________________________________

1.6. Introduzione ai file system con allocazione contigua

Alcuni file system con allocazione contigua: la Sezione 9.4, la Sezione 8.
     _________________________________________________________________

1.7. Introduzione ai file system con allocazione a liste collegate

(da fare)
     _________________________________________________________________

1.8. Introduzione ai file system basati su FAT

(da fare)

Alcuni file system basati su FAT: la Sezione 3 and la Sezione 9.17.
     _________________________________________________________________

1.9. Introduzione ai file system basati su inode

(da fare)
     _________________________________________________________________

1.10. Introduzione ai file system estesi (Extent)

(da fare)

Alcuni file system estesi: la Sezione 9.8 and la Sezione 9.31.
     _________________________________________________________________

1.11. Introduzione ai file system basati su alberi bilanciati (btree)

(da fare)

Alcuni file system che usano gli alberi B+: la Sezione 7, la Sezione 9.18,
la Sezione 9.21 e la Sezione 9.25.
     _________________________________________________________________

1.12. Introduzione ai file system di tipo "logging/journaling"

I file system aggiornano la loro struttura informativa (chiamata metadati)
con scritture sincrone. Ogni aggiornamento dei metadati può richiedere
diverse scritture distinte e, se il sistema va in crash durante la sequenza
delle scritture, i metadati possono rimanere in una situazione
inconsistente.

Al successivo boot, il programma di verifica del file system (chiamato fsck)
deve analizzare le strutture dei metadati, controllandoli e riparandoli.
Questa operazione può richiedere un tempo molto lungo per file system molto
grandi ed il disco può non contenere informazioni sufficienti per correggere
la struttura. Da questo derivano file cancellati o incompleti.

Un file system di tipo "journaling" usa un'area separata chiamata log o
journal. Prima di effettuare ogni cambiamento ai metadati, questo è
registrato in un'area separata. Il cambiamento è quindi successivamente
effettuato. Se il sistema va in crash durante l'operazione, ci sono
informazioni sufficienti nel log per riprendere e completare l'operazione.

Questo approccio non richiede una verifica completa del file system,
rendendo così molto veloce la verifica di file system molto grossi, in
genere pochi secondi per un file system di molti gigabyte. In aggiunta,
poichè tutte le informazioni sulle operazioni in sospeso sono salvate, non
sono necessarie rimozioni e troncamenti. Lo svantaggio dei file system di
tipo "journaling" è la maggiore lentezza rispetto ad altri file system.

Alcuni file system di tipo "journaling": la Sezione 9.3, la Sezione 9.12, la
Sezione 9.13, la Sezione 9.18, la Sezione 9.25, la Sezione 9.31 e la Sezione
9.32.
     _________________________________________________________________

1.13. Altre caratteristiche dei file system

1.13.1. Quote

(da fare)
     _________________________________________________________________

1.13.2. Snapshot

(da fare)
     _________________________________________________________________

1.13.3. ACL

(da fare)
     _________________________________________________________________

2. Volumi

2.1. Partizioni dei PC

     * &#65533; Documento sui tipi di partizioni scritto da Andries
       Brouwer < aeb@cwi.nl >
     _________________________________________________________________

2.1.1. GNU parted

     * Homepage: &#65533;
     * Download: &#65533;
     * Autori: Andrew Clausen < clausen@gnu.org >, Lennert Buytenhek <
       buytenh@dsv.nl> e Matt Wilson < msw@redhat.com>.
     * Rapporti sui problemi: < bug-parted@gnu.org>,
     * Accesso: varia a seconda del file system, vedi dopo.
     * Licenza: GPL

GNU Parted è un programma per la creazione, l'eliminazione, la verifica e la
copia di partizioni e dei file system contenuti in esse.

   Parted è utile per creare spazio per un nuovo sistema operativo, per
   riorganizzare l'utilizzo del disco, per copiare i dati tra gli hard
   disk e per il "disk imaging", replicare cioè una installazione su
   diversi computer.

   Parted supporta le seguenti operazioni: file system Rileva Crea
   Ridimensiona Copia Verifica ext2 * * *1 *2 *3 fat * * *4 *4 *
   linux-swap * * * * *

   NOTE:

   (1) L'inizio della partizione deve rimanere fissa per ext2.

   (2) La partizione sulla quale si copia deve essere più grande (o
   esattamente delle stesse dimensioni) della partizione da cui si copia.

   (3) Una verifica ridotta è effettuata quando il file system è in uso.
   Questa è la sola verifica al momento. Tutti i comandi (incluso
   ridimensiona) falliscono senza danni, lasciando il file system
   intatto, se ci sono errori nel file system( come pure per molti degli
   errori in generale).

   (4) Le dimensioni della nuova partizione, dopo i comandi ridimensiona
   o copia, è limitata dalle dimensioni del cluster nelle partizioni fat
   (principalmente FAT16). Questo è peggio di quanto tu possa pensare
   perchè il programma non ti permette di scegliere le dimensioni del
   cluster (questo è un baco di Windows, ma tu vuoi la compatibilità,
   giusto?).

   Quindi, in pratica, puoi sempre ridurre la tua partizione (poichè
   Parted può ridurre le dimensioni del cluster), ma puoi non essere in
   grado di aumentare la partizione fino alle dimensioni desiderate. Se
   non hai problemi ad usare la FAT32, sarai sempre in grado di aumentare
   una partizione fino alle dimensioni che vuoi.

   Riassunto: puoi sempre diminuire una partizione. Se non puoi usare la
   FAT32 per qualche motivo, potresti non essere in grado di aumentare la
   tua partizione.
     _________________________________________________________________

2.1.2. Riparare la tabella delle partizioni rovinata

2.1.2.1. Fixdisktable

     * Homepage: &#65533;
     * Download: ?
     * Autore: ?
     * Accesso: ?
     * Licenza: ?

Questo è un programma di utilità che gestisce ext2, FAT, NTFS, ufs, BSD
"disk label" (ma non le partizioni swap dei vecchi Linux); di fatto può
riscrivere la tabella delle partizioni, se ne ha il permesso.
     _________________________________________________________________

2.1.2.2. gpart

     * Homepage: &#65533;
     * Download: ?
     * Autore: ?
     * Accesso: ?
     * Licenza: ?

GPART è un programma di utilità che gestisce ext2, FAT, Linux swap, HPFS,
NTFS, FreeBSD e Solaris/x86 "disk label", minix, reiser fs; visualizza i
suggerimenti per i contenuti della tabella di partizioni ed è ben
documentato.
     _________________________________________________________________

2.1.2.3. rescuept

     * Homepage: util-linux ?
     * Download: ?
     * Autore: ?
     * Accesso: ?
     * Licenza: ?

Riconosce superblocchi ext2, partizioni FAT, partizioni swap e tabelle di
partizioni estese; potrebbe riconoscere anche "disklabel" BSD e partizioni
Unixware. Stampa le informazioni che possono essere usate con fdisk o sfdisk
per ricostruire la tabelle delle partizioni. Si trova nella parte non
installata della distribuzione util-linux.
     _________________________________________________________________

2.1.2.4. findsuper

     * Homepage: e2progs ?
     * Download: ?
     * Autore: ?
     * Accesso: ?
     * Licenza: ?

Piccolo programma di utilità che trova i blocchi con la firma del
superblocco ext2 e ne mostra la posizione ed alcune informazioni. Si trova
nella parte non installata della distribuzione e2progs.
     _________________________________________________________________

2.2. Altre partizioni

Poichè io utilizzo solo macchine Intel x86, qualsiasi contributo (o la
donazione di una macchina non-x86 ;-) ) è sicuramente benvenuto. Se puoi
fornire qualche informazioni utile, non esitare a contattar mi.
     _________________________________________________________________

2.2.1. Partizioni ADFS

(da fare)
     _________________________________________________________________

2.2.2. Partizioni Amiga

(da fare)
     _________________________________________________________________

2.2.3. Partizioni ATARI

(da fare)
     _________________________________________________________________

2.2.4. Partizioni Macintosh

(da fare)
     _________________________________________________________________

2.2.5. Partizioni OSF

(da fare)
     _________________________________________________________________

2.2.6. Partizioni Sun

(da fare)
     _________________________________________________________________

2.2.7. Partizioni Ultrix

(da fare)
     _________________________________________________________________

2.3. Disklabel Unix

(da fare)
     _________________________________________________________________

2.3.1. Disklabel BSD

(da fare)
     _________________________________________________________________

2.3.2. Disklabel UnixWare

La VTOC (Volume Table Of Contents, Contenuto delle tabelle dei volumi) di
UnixWare divide il disco in 16 partizioni logiche. Il kernel di Linux
supporta la VTOC di UnixWare; dovresti abilitare "UnixWare slices support
(EXPERIMENTAL)" e ricompilare il kernel. Un altro modo per leggere la
disklabel di UnixWare è usare il porting GPL del comando prtvtoc(1), che si
trova nel package vxtools.
     _________________________________________________________________

2.3.3. Disklabel SCO OpenServer

(da fare)
     _________________________________________________________________

2.3.4. Disklabel Sun Solaris

(da fare)
     _________________________________________________________________

2.4. Volumi Windows NT

     * Homepage: &#65533;
     * Autore: Martin Hinner < mhi@penguin.cz>
     * Accesso: Solo lettura, supporta volumi OS/2, stripe e volumi
       Windows NT.
     * Download: &#65533;
     * Licenza: GPL

Questo driver del kernel di Linux ti permette di accedere e montare volumi
lineari e stripe.
     _________________________________________________________________

2.4.1. Riparare dischi NT "fault tolerant" usando FTEdit

     * Homepage: ? MS ARTICLE ID: Q131658
     * Download: &#65533;
     * Autore: Microsoft Corp.
     * Licenza: ?

Se hai una workstation o un server Windows NT configurato con partizioni
fault tolerant (FT) (come stripe con parità ed insiemi di volumi), e queste
partizioni non sono accessibili ed appaiono nel "Disk Administrator" come di
tipo sconosciuto ("Unknown"), puoi probabilmente renderle ancora disponibili
utilizzando il programma di utilità FTEdit.
     _________________________________________________________________

2.5. MD - Driver Linux per dispositivi multipli

     * Homepage:?
     * Autore: Marc Zyngier <maz@wild-wind.fr.eu.org>
     * Accesso: Solo lettura, supporta i modi lineari, RAID-1, RAID-4 e
       RAID-5.
     * Download: kernel Linux, i programmi sono disponibili su &#65533;
     * Licenza: GPL

Questo driver permette di combinare diverse partizione del disco in un
dispositivo logico a blocchi. Può essere usato per aggiungere una partizione
ad un'altra e per riunire diversi hard disk ridondanti in un dispositivo
RAID1/4/5 in modo da fornire protezione contro i guasti degli hard disk.
Questa tecnica è chiamata "Software RAID" poichè l'unione delle partizioni è
effettuata dal kernel.
     _________________________________________________________________

2.6. LVM - Logical Volume Manager (HP-UX LVM?)

La versione Linux è disponibile su:

     * Homepage: &#65533;
     * Autore: Heinz Mauelshagen <mauelsha@ez-darmstadt.telekom.de>
     * Accesso: ?
     * Download: &#65533;
     * Licenza: GPL
     _________________________________________________________________

2.7. VxVM - Gestore del volumi Veritas

Per maggiori informazioni sul gestore dei volumi Veritas guarda su &#65533;.

Vedi anche: la Sezione 9.31.
     _________________________________________________________________

2.8. IBM OS/2 LVM

Il gestore dei volumi logici è disponibile in OS/2 WarpServer 5. Ti permette
di creare volumi lineari su diversi dischi o partizioni. Alcuni dicono che è
compatibile con il gestore dei volumi di IBM AIX.

Vedi anche: la Sezione 4, la Sezione 9.13
     _________________________________________________________________

2.9. StackVM

StackVM è il gestore dei volumi di CrosStor. Usando StackVM l'amministratore
può combinare diversi dischi fisici in un singolo dispositivo logico detto
vdisk. Vdisk significa "virtual disk". I dischi fisici possono essere
combinati per formare una concatenazione, RAID 0 (stripe), RAID 1 (mirror),
RAID 4 o RAID 5. In aggiunta una singola partizione del disco può essere
divisa in molteplici vdisk. Per maggiori informazioni vedi la homepage di
CrosStor su &#65533;.
     _________________________________________________________________

2.10. Volumi di Novell NetWare

I volumi NetWare sono utilizzati per il file system NWFS-386.
     _________________________________________________________________

3. DOS FAT 12/16/32, VFAT

3.1. VFAT: Nomi lunghi

Windows 95/98 e Windows NT/2000 memorizzano i nomi lunghi della FAT in una
voce speciale della directory con attivi gli attributi ReadOnly,
Hidden,System e Volume, in modo che se tu accedi al volume FAT dal DOS non
vedi questi "file". Queste speciali voci hanno questa strana struttura:

byte numero consecutivo di slot string(10) primi 5 caratteri nel nome byte
byte degli attributi byte sempre 0 byte checksum per l'alias 8.3 string(12)
altri 6 caratteri del nome word numero del primo cluster, 0 negli slot
lunghi (long slots) string(4) gli ultimi 2 caratteri nel nome

Un problema nasce quando cancelli o modifichi un file con un nome lungo da
un sistema senza il supporto della VFAT, perchè solo la voce DOS 8+3 sarà
cancellata o modificata. Scandisk di Windows 95/98 può rimediare a questo
problema.
     _________________________________________________________________

3.2. UMSDOS: LFN/attributi Linux nei file system FAT

Linux ha le sue proprie estensioni, chiamate UMSDOS, alla FAT, le quali
forniscono nomi lunghi, diritti e proprietari, link e dispositivi speciali
nelle partizioni FAT. Ogni directory contiene un file in cui sono
memorizzati i nomi lunghi ed altri campi necessari. Per maggiore
informazioni leggi il file /usr/src/linux/Documentation/file
system/umsdos.txt. Autore del driver UMSDOS di Linux è Jacques Gelinas
<jacques@solucorp.qc.ca> ed è attualmente manuntenuto da Matija Nalis
<mnalis@jagor.srce.hr>.
     _________________________________________________________________

3.3. Attributi estesi di OS/2 per i file system FAT

OS/2 Warp versioni 3,4 e 5 memorizzano i nomi lunghi e gli attributi estesi
dei volumi FAT nei file "\ea data. sf" e "\wp root. sf" (entrambi si trovano
nella directory principale del file system). Da quanto mi risulta, non ci
sono implementazioni note degli attributi estesi di OS/2 per altri sistemi
operativi. Se puoi fornirmi informazioni riguardanti la struttura degli EA,
non esitare a contattar mi.
     _________________________________________________________________

3.4. Star LFN

Star LFN è un emulatore che permette ai programmi che girano sotto DOS 4.0 o
superiori, di usare le funzioni per i nomi lunghi disponibili nella finestra
DOS di Windows 95. Attualmente, il programma può solo leggere e scrivere
nomi lunghi da e verso un file di sistema nascosto, il che significa che non
puoi leggere o scrivere i veri nomi lunghi di Windows 95. Per maggiori
informazioni vedi su &#65533;.
     _________________________________________________________________

3.5. Accesso alla VFAT da OS/2 (VFAT-OS2)

     * Homepage: &#65533;
     * Autore: Daniel Steiner <info@dsteiner.com>
     * Accesso: Lettura e scrittura, gli EA non sono supportati.
     * Mirror: &#65533;
     * Licenza: GPL

VFAT-OS2 è un pacchetto che permette ad OS/2 di accedere senza problemi alle
partizioni VFAT formattate da Windows 95, come dischi standard di OS/2. Lo
scopo ultimo di questo pacchetto è quello di usare il file system VFAT come
sostituto di quello FAT. Adesso permette di accedere anche alle partizioni
NTFS in sola lettura.
     _________________________________________________________________

3.6. Accesso alla VFAT da DOS (driver LFNDOS)

Alcuni dicono che la Microsoft abbia rilasciato un driver chiamato LFNDOS
che fornisce l'API Microsoft sui nomi lunghi in ambiente DOS. Se sai dove
questo driver può essere scaricato, mandami un mail per favore.
     _________________________________________________________________

3.7. Accesso alla VFAT da DOS (driver LFNDOS gratis)

     * Homepage: &#65533;
     * Autore: Chris Jones <dosuser@bigfoot.com>
     * Accesso: Lettura e scrittura
     * Mirror: &#65533;
     * Licenza: Libero, codice sorgente disponibile

LFNDOS fornisce l'API di Windows 95 sui nomi lunghi ai programmi DOS.
Utilizza lo stesso formato per memorizzare i nome usato da Windows 95 per
cui puoi vedere ed utilizzare i nomi lunghi in entrambi i sistemi in maniera
interscambiabile. Viene eseguito come programma residente in memoria,
richiedendo 60K circa di memoria convenzionale.

   Sotto Windows 95, un programma DOS può usare i nomi lunghi chiamando
   un insieme di funzioni di interrupt, che Windows fornisce. Per
   esempio, COMMAND.COM permette i nomi lunghi quando eseguito al prompt
   del DOS all'interno di Windows ma non li permette se rifai partire la
   macchina in modalità MS-DOS. Altri programmi come EDIT.COM e tutti gli
   DJGPP usano i nomi lunghi se disponibili.
     _________________________________________________________________

3.8. Accesso alla VFAT da DOS (programmi LFN di Odi)

     * Homepage: &#65533;
     * Autore: Ortwin Glueck <glueck@freesurf.ch>
     * Accesso: lettura e scrittura, solo programmi di utilità DOS
     * Mirror: &#65533;
     * Licenza: ?

Questi programmi permettono una facile gestione dei file sotto DOS con i
nomi lunghi creati da Windows 95/98 su file system FAT32, FAT16 e FAT12.
Scrivendo LDIR viene mostrato il contenuti della directory. Copiando un file
con LCOPY vengono preservati i nomi lunghi. Puoi anche creare nuove
directory (LMD) con nomi lunghi o rinominare file (LREN) con nomi lunghi.
     _________________________________________________________________

3.9. Accesso alla FAT32 da OS/2 (FAT32.IFS)

     * Homepage: &#65533;
     * Autore: Henks Kelder < hkelder@capgemini.nl >
     * Accesso: lettura e scrittura, nomi lunghi, gli EA non sono
       supportati.
     * Download: &#65533;
     * Licenza: gratis

FAT32.IFS per OS/2 permette di accedere alle partizioni FAT32 da OS/2. Non
puoi creare partizioni FAT32; per questo hai ancora bisogno di Win95 OSR2.
Inoltre, CHKDSK di OS/2 non può correggere tutti i possibili errori che
possono accadere; in questo caso hai bisogno ancora di Scandisk di Windows
95.
     _________________________________________________________________

3.10. Accesso alla FAT32 da Windows NT 4.0

     * Download: &#65533;
     * Autore: anonimo
     * Licenza: gratis o GPL ?

Driver NT 4.0 e 3.51 per file system FAT32.
     _________________________________________________________________

3.11. Accesso alla FAT32 da Windows NT 4.0

     * Homepage: &#65533;
     * Autori: Mark Russinovich <mark@sysinternals.com> e Bryce Cogswell
       <cogswell@winternals.com>.
     * Accesso: Solo lettura nella versione gratis, lettura e scrittura
       in quella commerciale.
     * Download: ?
     * Licenza: gratis (solo lettura) o commerciale (lettura e scrittura)

Questo è un driver Windows NT 4.0 per i file system FAT32. Una volta
installato, tutti i drive FAT32 presenti nel sistema saranno pienamente
accessibili come volumi Windows NT nativi. La versione gratis fornisce un
accesso di sola lettura. Una versione di lettura e scrittura è in vendita.
     _________________________________________________________________

3.12. Accedere a dischi Stac/Dblspace/Drvspace da Linux (DMSDOS)

     * Homepage: &#65533;
     * Autore: Frank Gockel <gockel@sent13.uni-duisburg.de> e Pavel Pisa
       <pisa@cmp.fel k.cvut.cz>
     * Accesso: Stacker, Dblspace e Drvspace in lettura e scrittura, nomi
       lunghi.
     * Download: &#65533;
     * Freshmeat: Console/file system
     * Licenza: GPL

DMSDOS legge e scrive file system DOS compressi (CVF-FAT). Le seguenti
configurazioni sono supportate:

     * DoubleSpace / DriveSpace (MS-DOS 6.x)
     * DoubleSpace / DriveSpace (Windows 95)
     * DriveSpace 3 (Windows 95 con il pacchetto Plus!)
     * Stacker 3
     * Stacker 4

   Lavora con FAT32, NLS, codepage (verificato con le patch FAT32
   versioni 0.2.8 sotto Linux 2.0.33 e con FAT32 nei kernel standard
   2.1.xx e 2.0.35+35). DMSDOS può girare insieme a vfat o umsdos per i
   nomi lunghi. E' stato riprogettato per essere pronto per il SMP e
   dovrebbe ora essere compilabile completamente sotto libc6.
     _________________________________________________________________

3.13. Accedere a dischi Dblspace/Drvspace da Linux (thsfs)

     * Download: &#65533;
     * Autore: Thomas Scheuermann <ths@ai-lab.fh-furtwangen.de>
     * Accesso: Dblspace e Drvspace in sola lettura.
     * Licenza: Vedi il copyright nei file. In pratica gratis
     _________________________________________________________________

3.14. Fsresize - FAT16/32 resizer

     * Homepage: &#65533;
     * Autore: Andrew Clausen <clausen@alphalink.com.au>
     * Download: &#65533;
     * Freshmeat: Console/file system
     * Accesso: Lettura e scrittura, supporto completo di FAT16/FAT32
     * Licenza: GPL

Ridimensiona file system FAT16/FAT32. Non richiede altri programmi (come un
deframmentatore). Possiede le opzioni --backup e --restore, così se c'è un
problema sull'alimentazione (o un baco), puoi sempre tornare indietro. I
file di backup sono di solito < 1 mega.

   Probabilmente l'autore non rilascerà più nuove versioni di fsresize,
   perchè sta lavorando a parted, un clone di Partition Magic. Sarà
   capace di ridimensionare, copiare, creare e verificare file system e
   partizioni.
     _________________________________________________________________

3.15. FIPS - FAT16 resizer

     * Homepage: ?
     * Autore: Arno Schaefer <schaefer@rbg.informatik.th-darmstadt.de>
     * Download: &#65533;
     * Licenza: GPL
     _________________________________________________________________

4. High Performance file system (HPFS)

Buoni link su HPFS:

     * &#65533;
     * &#65533;
     * &#65533; - una buona pagina sull'accessibilità di HPFS
     * &#65533; - IBM OS/2 Warp Server: Features & Benefits : File &
       Print
     _________________________________________________________________

4.1. Accedere a HPFS da DOS (iHPFS)

     * Homepage:&#65533;
     * Autore: Marcus Better Marcus.Better@abc.se
     * Download: &#65533;
     * Accesso: sola lettura
     * Licenza: GPL

   iHPFS permette agli utenti OS/2 di usare le loro partizioni HPFS
   quando fanno il boot da DOS. La partizione HPFS è assegnata ad una
   lettera in modo che si possa accedervi come un qualsiasi disco DOS.
   L'accesso è in sola lettura.

   Questo programma non è più sviluppato perchè l'autore non usa più
   OS/2. Se sei interessato a manuntenere il programma, contattalo.
     _________________________________________________________________

4.2. Accedere a HPFS da DOS (hpfsdos)

     * Homepage: ?
     * Autore: Robert Muchsel <rmuchsel@iiic.ethz.ch> (questa email non
       funziona)
     * Accesso: Solo lettura
     * Licenza: Shareware ($23)
     _________________________________________________________________

4.3. Accedere a HPFS da DOS (hpfsa)

     * Homepage: &#65533;
     * Autore: Andreas Kinzler <akinzler@rbg.informatik.th-darmstadt.de>
       (questa email non funziona)
     * Download: &#65533;
     * Accesso: lettura e scrittura
     * Licenza: Shareware ($40)
     _________________________________________________________________

4.4. Accedere a HPFS da DOS (amos)

     * Homepage: ?
     * Autore: Allan Mertner <mertner@login.dknet.dk> (questa email non
       funziona)
     * Download: &#65533;
     * Licenza: Shareware ($50)
     _________________________________________________________________

4.5. Accedere a HPFS da Linux

     * Homepage:&#65533;
     * Download: &#65533; per i kernel 2.0 e &#65533; per i kernel 2.2
     * Autore: Mikulas Patocka < mikulas@artax.karlin.mff.cuni.cz >
     * Accesso: lettura e scrittura, attributi estesi, nomi lunghi.
     * Licenza: GPL

Questo driver fa parte del kernel di Linux (2.1.x+). Può leggere e scrivere
partizioni HPFS. Diritti di accesso ed utenti possono essere salvati negli
attributi estesi. Alcuni bachi nella versione originale a sola lettura sono
stato corretti. Supporta HPFS386 su Warp Server Advanced.

   Se hai un kernel con supporto HPFS, abilita la voce "OS/2 HPFS file
   system support" nel sotto menu dei file system. Ricompila quindi il
   kernel, usando 'make dep bzImage', fai il reboot e prova a montare la
   partizione HPFS (ad es. mount /dev/hda2 /mnt -t hpfs).
     _________________________________________________________________

4.6. Accedere a HPFS da FreeBSD

     * Homepage: &#65533;
     * Download: &#65533;
     * Autore: Semen A. Ustimenko < semenu@FreeBSD.org >
     * Accesso: sola lettura
     * Licenza: BSD

Il driver permette di montare volumi HPFS nel namespace Unix. Solo un
accesso a sola lettura è supportato al momento.
     _________________________________________________________________

4.7. Accedere a HPFS da Windows NT 3.5

     * Homepage:&#65533;
     * Download: &#65533;
     * Autore: Chris Behnken < nbehnken@htc.net >
     * Licenza: gratis

Questo programma modifica i registry di Windows NT, abilitando il supporto
di HPFS. Pinball.sys è il driver HPFS per Windows NT. Si trova nel CD-ROM di
NT 3.5x. Microsoft non supporta più HPFS. Installando questo programma, si
invalida la garanzia e probabilmente l'accordo di licenza.
     _________________________________________________________________

4.8. Accedere a HPFS da Windows NT 4

     * Download: &#65533;
     * Autore: ?
     * Licenza: ?

Driver HPFS per Windows NT 4.0
     _________________________________________________________________

5. New Technology file system (NTFS)

Riferimenti:

     * &#65533; Informazioni su NTFS 5
     * Rajeev Nagar, Windows NT File System Internals (O'Reilly).
     * Helen Custer, Inside the Windows NT File System, ISBN:
       1-55615-660-X.
     * Documentazione su NTFS scritta da Regis Duchesne
       <regis@via.ecp.fr>, &#65533; o &#65533;
     * Microsoft TechNet, February 97, Windows NT Training: Support, NTFS
     * &#65533;
     _________________________________________________________________

5.1. Accedere a NTFS da DOS (NTFSDOS.EXE)

     * Homepage: http://www.sysinternals.com/ntfs20.htm
     * Autori: Mark Russinovich <mark@sysinternals.com> e Bryce Cogswell
       <cogswell@winternals.com>.
     * Accesso: sola lettura, nomi lunghi sotto DOS 7 e Win9x.

NTFSDOS.EXE è un redirector di file system di rete per DOS/Windows che
riconosce e monta drive NTFS per un accesso trasparente. Rende i dischi NTFS
indistinguibili dai dischi FAT standard, permettendo la navigazione e
l'esecuzione di programmi da DOS o da Windows, anche dal File Manager di
Windows 3.1 e da Explorer di Windows 95.
     _________________________________________________________________

5.2. Accedere a NTFS da DOS (ntpwd)

     * Homepage: &#65533;
     * Autore: Grenier Christophe < grenier@nef.esiea.fr >
     * Accesso: sola lettura (lettura e scrittura in fase sperimentale),
       nomi lunghi supportati, niente lettere di disco (tool dos)
     * Licenza: GPL

   NTpwd contiene programmi da linea di comando per accedere a partizioni
   NTFS; è un porting su DOS del driver usato in Linux. Contiene anche un
   piccolo programma di utilità per cambiare una password di NT.
     _________________________________________________________________

5.3. Accedere a NTFS da OS/2

     * Homepage: &#65533;
     * Mirror: &#65533;, &#65533;
     * Autore: Daniel Steiner < info@dsteiner.com >
     * Accesso: sola lettura, nomi lunghi supportati

ntfs_003.zip contiene solo i programma da linea di comando per accedere ad
una partizione da OS/2. Un vero IFS per accedere a NTFS è incluso in la
Sezione 3.5 v0.05.
     _________________________________________________________________

5.4. Accedere a NTFS da Linux

     * Homepage: &#65533;
     * Autore: Martin von Löwis loewis@informatik.hu-berlin.de
     * Freshmeat: Console/file system
     * Homepage: &#65533;
     * Mirror: Incluso nel kernel ufficiale di Linux
     * Accesso: sola lettura, lettura/scrittura in fase sperimentale,
       compressione, niente cifratura
     * Licenza: GPL

Lavora sia come driver del kernel sia come programma da linea di comando.
     _________________________________________________________________

5.5. Accedere a NTFS da FreeBSD e NetBSD

     * Homepage: &#65533;
     * Autore: Semen A. Ustimenko <semenu@FreeBSD.org>
     * Download: come parte di FreeBSD (&#65533;), e NetBSD (&#65533;)
     * Mirror: Cerca i mirror di FreeBSD e NetBSD
     * Accesso: lettura + scrittura limitata, non supporta le codepage
     * Licenza: BSD

Questo driver permette di montare i volumi NTFS sotto FreeBSD e NetBSD.
Supporta anche una limitata capacità di scrittura: si può scrivere in file
non compressi senza buchi ma non si può ancora cambiare le dimensioni del
file. Il supporto per la scrittura è stato sviluppato per migrare su volumi
NTFS.
     _________________________________________________________________

5.6. Accedere a NTFS da BeOS

     * Homepage: &#65533;
     * Autore: Travis Geiselbrecht < geist@tamu.edu >
     * Download: &#65533;
     * Accesso: ?
     * Licenza: gratis

Questa è la versione alfa di un driver NTFS per BeOS. Non è sicuramente la
cosa più pulita del mondo, ma ogni nuova versione che l'autore rilascia è
sempre più stabile. La lettura dei file compressi è stata appena realizzata
quindi occorre prestare attenzione. Finalmente lavora anche con i volumi
NTFS 5, riuscendo a risolvere alcuni bachi.

   L'autore adesso lavora per la Be Inc. per cui il supporto per NTFS e
   ext2 non sarà aggiornato in tempi brevi. I driver saranno inseriti in
   future versioni di BeOS.
     _________________________________________________________________

5.7. Accedere a NTFS da BeOS (un altro)

     * Homepage: http://www.sw.com.sg/solutions/ntfs-ro.shtml
     * Autore: Standard & Western Software, http://www.sw-soft.com
     * Download: http://download.sw.com.sg/pub/Be/ntfs-rod-0302.tar.gz
     * Accesso: sola lettura.
     _________________________________________________________________

5.8. Riparare NTFS usando NTFSDOS

     * Homepage: &#65533;
     * Autore: Winternals Software <info@wintern als.com>
     * Accesso: lettura e scrittura, copia e sostituzione di file.
     * Licenza: commerciale

Una aggiunta a NTFSDOS che permette di rinominare file esistenti o di
sovrascrivere un file con nuovi dati. Funzionalità molto limitate.
     _________________________________________________________________

5.9. Riparare NTFS usando NTRecover

     * Homepage: &#65533;
     * Autore: Winternals Software <info@winternals.com>
     * Accesso: versione gratis con sola lettura, versione commerciale
       con lettura e scrittura.
     * Licenza: gratis per la versione con sola lettura, commerciale per
       la versione con lettura e scrittura

Usa un floppy di boot ed un collegamento seriale ad un secondo sistema NT
per fornire un pieno accesso ai dischi NTFS del sistema NT morto. Ideale per
salvare dati o sostituire dischi.
     _________________________________________________________________

6. File system esteso(Ext, Ext2, Ext3)

Il file system esteso (ext fs), il secondo file system esteso (ext2fs) ed il
terzo file system esteso (ext3fs) sono stati progettati e realizzati su
Linux da Rémy Card, Laboratoire MASI--Institut Blaise Pascal,
<card@masi.ibp.fr>, Theodore Ts'o, Massachussets Institute of Technology,
<tytso@mit.edu> e Stephen Tweedie, University of Edinburgh, <sct@redhat.com>

     * &#65533; - La homepage di ext2. Questa è la principale fonte di
       informazioni su ext2.
     * &#65533; - Documento su ext2fs di John Newbigin.
     * &#65533; - Ext2fs_Rec (ext2 recognizer per WinNT).
     _________________________________________________________________

6.1. File system esteso(ExtFS)

Questo è un vecchio file system usato nelle vecchie versioni di Linux.
     _________________________________________________________________

6.2. Secondo file system esteso (Ext2 FS)

Il secondo file system esteso è probabilmente il più utilizzato file system
nella comunità Linux. Fornisce la semantica Unix standard per i file e
caratteristiche avanzate. Inoltre, grazie alle ottimizzazioni incluse nel
codice del kernel, è robusto ed offre prestazioni eccellenti.

Poichè ext2fs è stato progettato considerandone l'evoluzione, esso contiene
hooks (agganci) che possono essere utilizzate per aggiungere nuove
caratteristiche. Alcuni stanno lavorando su estensioni all'attuale file
system: liste di controllo d'accesso conformi alla semantica Posix, undelete
e compressione dei file "al volo".

Ext2fs è stato il primo sviluppato ed integrato nel kernel di Linux ed è ora
attivamente portato su altri sistemi operativi. Un server ext2fs che gira
sullo GNU Hard è stato realizzato. Alcuni stanno lavorando ad una versione
per il server LITES, che gira sul micro kernel Mach e sul sistema operativo
VSTa. In ultimo, Ext2fs è una importante parte del sistema operativo Masix,
attualmente in sviluppo da parte di uno degli autori.
     _________________________________________________________________

6.2.1. Motivazioni

Il secondo file system è stato progettato e sviluppato per risolvere alcuni
problemi presenti nel primo file system esteso. L'obiettivo era quello di
fornire un file system potente, con la semantica del file di Unix e
caratteristiche avanzate.

Ovviamente volevamo per Ext2fs prestazioni eccellenti. Volevamo anche
fornire un file system robusto in modo da ridurre il rischio di una perdita
dei dati. In ultimo, Ext2fs doveva prevedere la possibilità di estensioni in
modo da permettere agli utenti di usufruire di nuove capacità senza
riformattare i dischi.
     _________________________________________________________________

6.2.2. Caratteristiche ``standard'' di ext2fs

Ext2fs supporta i tipi di file standard Unix: file regolari, directory,
device speciali e link simbolici.

Ext2fs è in grado di gestire file system creati in partizioni veramente
molto grandi. Mentre il codice originale nel kernel limitava il file system
a 2 GB, un recente lavoro sul layer VFS ha alzato questo limite a 4 TB.
Quindi è ora possibile usare dischi molto grandi senza la necessità di
creare diverse partizioni.

Ext2fs getisce i nomi lunghi in quanto usa voci nella directory di lunghezza
variabile. Il limite massimo per i nomi è 255 caratteri ma può essere esteso
a 1012 se necessario.

Ext2fs riserva alcuni blocchi per il super utente (root). Normalmente il 5%
dei blocchi è riservato. Questo permette all'amministratore di correggere
facilmente situazioni dove i processi di un utente riempiono il file system.
     _________________________________________________________________

6.2.3. Caratteristiche avanzate di Ext2fs

In aggiunta alle caratteristiche standard Unix, Ext2fs supporta alcune
estensioni che non sono normalmente presenti nel file system Unix.

Gli attributi dei file permettono agli utenti di modificare il comportamento
del kernel quando opera su un insieme di file. Si possono definire attributi
per un file o per una directory. Nel secondo caso, tutti i file creati
successivamente nella directory erediteranno gli attributi.

Al momento del mount si può scegliere la semantica BSD o quella del System V
Versione 4. Una opzione del mount permette infatti di scegliere la semantica
per la creazione dei file. In un file system montato con la semantica BSD, i
file sono creati con lo stesso id di gruppo della directory madre. La
semantica System V è un pò più complicata: se la directory ha il bit setgid
abilitato, i nuovi file ereditano l'di di gruppo della directory e le nuove
sotto directory ereditano sia l'id di gruppo che il bit setgid; in caso
contrario, file e directory sono creati con l'id di gruppo principale del
processo.

Gli aggiornamenti sincroni alla BSD possono essere utilizzati in Ext2fs. Una
opzione del mount permette all'amministratore di richiedere che i meta dati
(inode, blocchi di bitmap, blocchi indiretti e blocchi di directory) vengano
scritti in maniera sincrona su disco quando vengono modificati. Questo può
essere utile per mantenere una rigida consistenza dei meta dati ma porta a
prestazioni molto scarse. In realtà, questa possibilità non viene in genere
usata, perchè, in aggiunta al decadimento delle prestazioni associato
all'aggiornamento sincrono dei meta dati, può essere causa di corruzione dei
dati utente che non vengono segnalati dal controllore del file system.

Ext2fs permette all'amministratore di scegliere le dimensioni del blocco
logico quando viene creato un file system. Le dimensioni del blocco possono
tipicamente essere di 1024, 2048 e 4096 byte. Usare blocco di grandi
dimensioni può velocizzare le operazioni di I/O per le ridotte richieste di
I/O e quindi per i minori spostamenti della testina del disco che devono
essere fatti per accedere ad un file. D'altro canto blocchi grossi sprecano
più spazio su disco: in media l'ultimo blocco di ogni file è pieno per metà,
quindi, al crescere delle dimensioni del blocco, più spazio viene sprecato
nell'ultimo blocco. Inoltre, molti dei vantaggi nell'usare blocchi grandi
sono ottenuti dalle tecniche di pre allocazione del file system Ext2fs.

Ext2fs supporta i link simbolici veloci. Un link simbolico veloce non usa
alcun blocco dati del file system. Il nome del file target non è salvato nel
blocco dati ma nell'inode stesso. Questa politica permette di risparmiare
spazio su disco (non servono blocchi dati) e velocizza le operazioni sui
link (non è necessario accedere a blocchi dati). Naturalmente lo spazio
all'interno degli inode è limitato per cui non tutti i link possono essere
realizzati come link veloci. Le dimensioni massime del nome del file target
sono 60 caratteri. Si prevede di poter estendere questo limite in futuro.

Ext2fs tiene traccia dello stato del file system. Un campo speciale nel
super blocco è usato dal kernel per indicare lo stato del file system.
Quando un file system è montato in lettura e scrittura, il suo stato è posto
a 'Not Clean'. Quando è smontato o rimontato in sola lettura, il suo stato è
posto a 'Clean'. Durante il boot, il controllore del file system usa queste
informazioni per decidere se un file system deve essere controllato. Il
codice del kernel tiene traccia anche degli errori in questo campo. Quando
una inconsistenza è rilevata dal codice del kernel, il file system è marcato
come 'Erroneus'. Il controllore del file system verifica questo in modo da
forzare il controllo del file system indipendentemente dal suo stato.

Saltare sempre i controlli del file system può essere a volte pericoloso,
per cui Ext2fs fornisce due modi per forzare i controlli ad intervalli
regolari. Un contatore di mount è gestito nel super blocco. Ogni volta che
il file system viene montato in lettura e scrittura, il contatore viene
incrementato. Quando raggiunge il valore massimo (anch'esso memorizzato nel
super blocco), il controllore del file system forza una verifica anche se il
file system è 'Clean'. Anche la data dell'ultimo controllo ed il massimo
intervallo consentito tra due controlli sono salvati nel super blocco.
Questi due campi permettono all'amministratore del sistema di forzare
controlli periodici. Quando l'intervallo massimo viene superato, il file
system viene controllato indipendentemente dal suo stato.

Un attributo permette agli utenti di richiedere la cancellazione dei file in
modo sicuro. Quando un file viene cancellato in maniera sicura, dati casuali
vengono scritti nei blocchi su disco in precedenza usati dal file. Questo
non permette a malintenzionati di ottenere l'accesso al precedente contenuto
del file usando un disk editor.

In ultimo, nuovi tipi di file ispirati dal file system di BSD 4.4 sono stati
di recente introdotti in Ext2fs. I file immutabili possono essere solo
letti: nessuno può scriverci o cancellarli. Questo può essere utile per
proteggere file di configurazione importanti. File a sola aggiunta possono
essere aperti solo in scrittura ma i dati sono sempre aggiunti in fondo al
file. Questi file non possono, come quelli immutabili, essere cancellati o
rinominati. Questo tipo è particolarmente indicato per i log file.
     _________________________________________________________________

6.2.4. Struttura fisica

La struttura fisica di un file system Ext2fs è stata fortemente influenzata
dal layout del file system BSD. Un file system è costituito da gruppi di
blocchi (analoghi ai gruppi di cilindri del file system BSD). Tuttavia i
gruppi di blocchi non sono legati alla disposizione fisica dei blocchi sul
disco poichè i dischi moderni tendono ad essere ottimizzati per un accesso
sequenziale e nascondono la loro geometria fisica al sistema operativo
,---------+---------+---------+---------+---------, | Settore | Gruppo |
Gruppo | ... | Gruppo | | di boot | bloc. 1 | bloc. 2 | | bloc. n |
`---------+---------+---------+---------+---------'

Ogni gruppo di blocchi contiene una copia ridondante delle informazioni di
controllo cruciali del file system (il super blocco e i descrittori del file
system) e contiene anche una parte del file systsem (un blocco bitmap, una
bitmap degli inode, una parte della tabella degli inode e i blocchi dato).
La struttura del gruppo di blocchi è rappresentata in questa tabella:
,---------+---------+---------+---------+---------+---------, | Super | FS |
Blocco | Bitmap | Tabella | Blocchi | | blocco | desc. | bitmap | inode |
inode | dato | `---------+---------+---------+---------+---------+---------'

Usare i gruppi di blocchi è un grosso vantaggio per l'affidabilità: poichè
le strutture di controllo sono replicate in ogni gruppo, è facile
ripristinare un file system con il super blocco danneggiato. Questa
struttura aiuta anche ad ottenere delle buone prestazioni: riducendo la
distanza tra la tabella degli inode ed i blocchi dato, è possibile ridurre
gli spostamenti della testina del disco durante l'I/O sui file.

In Ext2fs, le directory sono gestite con liste collegate con voci di
dimensioni variabile. Ogni voce contiene il numero di inode, le dimensioni
della voce, il nome del file e la sua lunghezza. Usando voci di dimensioni
variabili, è possibile gestire i nomi lunghi senza sprecare spazio su disco.
     _________________________________________________________________

6.2.5. Ottimizzazioni per le prestazioni

In Linux, il codice Ext2fs nel kernel contiene molte ottimizzazioni per le
prestazioni, le quali tendono a migliorare la velocità di I/O durante la
lettura e la scrittura dei file.

Ext2fs si avvantaggia della gestione del cache buffer per eseguire delle
letture in anticipo: quando un blocco deve essere letto, il codice del
kernel richiede l'I/O di diversi blocchi contigui. In questo modo, si cerca
di assicurare che il blocco successivo da leggere sia già caricato nel
buffer. Le letture in anticipo sono normalmente effettuate durante l'accesso
sequenziale dei file; Ext2fs le estende anche alla lettura delle directory,
sia in modo esplicito (chiamate alla readdir(2)) sia in modo implicito
(ricerca con namei).

Ext2fs contiene anche molte ottimizzazioni di allocazione. I gruppi di
blocchi sono utilizzati per raggruppare insieme inode e dati correlati: il
codice del kernel cerca sempre di allocare per un file blocchi dato nello
stesso gruppo di blocchi del suo inode. Questo per ridurre gli spostamenti
della testina del disco quando si leggono un inode ed i suoi blocchi dato.

Nello scrivere dati in un file, Ext2fs prealloca fino a 8 blocchi adiacenti
quando alloca un nuovo blocco. La preallocazione ha una percentuale di
successo di circa il 75%, anche su un file system molto pieno. Con questa
preallocazione si raggiungono buone prestazioni in scrittura a pieno carico.
Permette anche che blocchi contigui siano allocati per lo stesso file,
velocizzando così le future letture sequenziali.

Questi due ottimizzazioni nelle allocazioni producono una localizzazione
molto buona di:

     * file collegati fra di loro, attraverso i gruppi di blocchi
     * blocchi collegati fra di loro, attraverso gli 8 bit di
       raggruppamento della allocazione dei gruppi.
     _________________________________________________________________

6.3. Terzo file system esteso(Ext3 FS)

Ext3 possiede le stesse caratteristiche di Ext2 ma include anche il
journaling. Si può scarica la versione preliminare da &#65533;.
     _________________________________________________________________

6.4. E2compr - Compressione transparente per Ext2fs

     * Homepage: &#65533;
     * Download: &#65533;
     * Responsabile: Peter Moulder <reiter@netspace.net.au>
     * Freshmeat: Console/file system
     * Accesso: come per ext2 (lettura/scrittura, nomi lunghi)
     * Licenza: GPL tranne gli algoritmi di compressione (diverse
       licenze)

Implementa il comando `chattr +c' per il file system Ext2fs. Il software
consiste in una patch per il kernel Linux ed in versioni modificate di
diversi programmi (principalmente e2fsprogs cioè e2fsck ed amici). Sebbene
alcuni lo utilizzino da anni, questo software è ancora in sviluppo e non è
pronto per l'utente finale.
     _________________________________________________________________

6.5. Accedere a Ext2 da DOS (strumenti Ext2)

     * Download:ftp://sunsite.unc.edu/pub/Linux/system/file system/ext2/
     * Accesso: sola lettura, nessuna lettera di disco (programmi di
       utilità speciali)
     * Autore: Claus Tondering <ct@login.dknet.dk>
     * Accesso: ?
     * Licenza: ?

Una collezione di programmi DOS che permettono di leggere un file system
Ex2fs Linux da DOS.
     _________________________________________________________________

6.6. Accedere a Ext2 da DOS, Windows 9x/NT ed altri Unix (LTools)

     * Homepage: &#65533;
     * Autore: Werner Zimmermann <Werner.Zimmermann@fht-esslingen.de>
     * Homepage: &#65533;
     * Mirror: &#65533; (solo le principali versioni)
     * Accesso: lettura, scrittura e modifica, nomi lunghi
     * Licenza: GPL

Gli LTools sono sotto DOS/Windows 3.x/Windows 9x/Windows NT e UNIX non Linux
quello che gli MTools sono sotto Linux. Puoi accedere (in lettura, scrittura
e modifica) ai file Linux quando si esegue un altro sistema operativo. Il
kernel degli LTools è un insieme di programmi da linea di comando. In
aggiunta è disponibile un programma JAVA come interfaccia grafica
stand-alone. In alternativa è possibile usare un browser web standard come
interfaccia grafica. Gli LTools non solo permettono l'accesso ai file linux
sulla macchina ma anche di accedere remotamente a file su altre macchine.
     _________________________________________________________________

6.7. Accedere a Ext2 da OS/2

     * Homepage:&#65533;
     * Autore: Matthieu WILLM <willm@ibm.net> ,
       <matthieu.willm@wanadoo.fr>
     * Download: &#65533;
     * Freshmeat: Console/file system
     * Accesso: lettura/scrittura e boot da e verso Ext2, supporto per i
       media removibili ma non per gli attributi estesi.

EXT2-OS2 è un pacchetto che permette ad OS/2 di accedere facilmente a
partizioni formattate Ext2 da OS/2 come drive standard OS/2. Lo scopo ultimo
di questo pacchetto è quello di poter usare un file system ext2 in
sostituzione della FAT o HPFS. Al momento l'unico caratteristica mancante
per raggiungere questo obiettivo è il supporto per gli attributi estesi di
OS/2.
     _________________________________________________________________

6.8. Accedere a Ext2 da Windows 95/98 (FSDEXT2)

     * Homepage:http://www.yipton.demon.co.uk/
     * Autore: Peter van Sebille pvs@globalxs.nl ,
       pese@nlnwgfsc.origin.nl
     * Freshmeat: Console/file system
     * Accesso: sola lettura, supportati i nomi lunghi
     _________________________________________________________________

6.9. Accedere a Ext2 da Windows 95 (Explore2fs)

     * Homepage:&#65533;
     * Accesso: lettura e scrittura, nomi lunghi, link simbolici, etc..
     * Autore: John Newbigin <jn@it.swin.edu.au>
     * Licenza: GPL

Un applicazione utente che può leggere e scrivere su Ext2fs. Supporta hard
disk e media rimovibili, inclusi gli zip e i floppy. Usa una interfaccia
simile a windows explorer per mostrare file e dettagli. Supporta il
Drag&Drop, i menu contestuali, etc.. Scritto per Windows NT, ha anche
qualche supporto per Windows95. Dischi molto grandi possono causare
problemi.
     _________________________________________________________________

6.10. Accedere a Ext2 da Windows NT (ext2fsnt)

     * Homepage: &#65533;
     * Download: &#65533;
     * Autore: Andrey Shedel < andreys@cr.cyco.com >
     * Freshmeat: Console/file system
     * Licenza: gratis
     * Accesso: lettura e scrittura, nomi lunghi, sicurezza, page file,
       link hard.
     _________________________________________________________________

6.11. Accedere a Ext2 da BeOS

     * Homepage: &#65533;
     * Autore: Travis Geiselbrecht < geist@tamu.edu >
     * Download: &#65533; per R4 e &#65533; per R3.
     * Accesso: sola lettura, supportati i nomi lunghi.
     * Licenza: gratis

Questo è un driver che permette a BeOS di montare un file system Ext2 Linux.
La versione attualmente rilasciata è considerata dall'autore stabile. Molti
l'hanno usata per molto tempo, senza report di bachi.

   L'autore lavora adesso per la Be Inc per cui non si vedrà il suo
   supporto per Ext2 e NTFS aggiornato su web per molto tempo. I driver
   dovrebbero essere inseriti nelle future versioni di BeOS.
     _________________________________________________________________

6.12. Accedere a Ext2 da MacOS (MountX)

     * Homepage: &#65533;
     * Autore: ?
     * Download: ?

Driver MacOS che permette di montare un file system Ext2 (Linux e MkLinux)
su MacIntosh.
     _________________________________________________________________

6.13. Accedere a Ext2 da MiNT

     * Homepage: &#65533;
     * Autore: <yescrew@capybara.sk-pttsc.lj.edus.si>
     * Download: ?
     * Licenza: GPL

Questo è un driver completamente funzionante per il file system Ext2 su
FreeMiNT. Si può leggere e scrivere l'attuale versione di Ext2 così come
implementata su Linux per esempio. Le dimensioni delle partizioni non sono
limitate e quelle del settore logico possono essere di 1024, 2048 e 4096
byte. La sola restrizione è che le dimensioni del settore fisico devono
essere più piccole o uguali di quelle del settore logico. Le dimensioni del
blocco possono essere configurate con mke2fs in fase di inizializzazione
della partizione.
     _________________________________________________________________

6.14. Ext2fs defrag

     * Download: &#65533;
     * Autore: Stephen C. Tweedie < sct@redhat.com >
     * Licenza: GPL

Deframmenta il file system Ext2fs. Richiede un aggiornamento per le librerie
Glib.
     _________________________________________________________________

6.15. Ext2fs resize

     * Homepage: &#65533;
     * Download: &#65533;
     * Autore: Lennert Buytenhek <buytenh@dsv.nl>.
     * Licenza: GPL

Ridimensiona il secondo file system esteso.
     _________________________________________________________________

6.16. Ext2end

     * Homepage: &#65533;
     * Responsabile: Mike Field <mafield@the.net.nz>
     * Licenza: copyright di Mike Field. Diventerà GPL una volta stabile.

Da usare con la Sezione 2.6. Consiste in due programmi di utilità:
ext2endable riorganizza un file system ext2 vuoto per permettere di essere
esteso mentre ext2end estende un file system ext2 non montato. Se
ext2endable non è stato eseguito durante la creazione del file system,
ext2end sarà solo in grado di estenderlo a multipli di 256MB.
     _________________________________________________________________

6.17. Riparare/analizzare/creare Ext2 con E2fsprogs

     * Homepage: &#65533;
     * Download: &#65533;
     * Autori: tytso@mit.edu e card@masi.ibp.fr
     * Porting su Windows NT: &#65533;
     * Freshmeat: Console/file system
     * Licenza: GPL

Il pacchetto ext2fsprogs contiene programmi di utilità essenziali per il
file system ext2 tra cui e2fsck, mke2fs, debugfs, dumpe2fs, tune2fs e gran
parte delle utilità principali del file system ext2fs.
     _________________________________________________________________

6.18. Editor per il file system Ext2 - Ext2ed

     * Homepage: ?
     * Autore: tgud@tochnapc2.technion.ac.il.
     * Download: &#65533;
     * Licenza: GPL

EXT2ED è un disk editor per il file system Ext2. Mostra le strutture del
file system in una simpatica ed intuitiva modalità, permettendo una facile
navigazione per le necessarie modifiche.
     _________________________________________________________________

6.19. Editor per il file system di Linux - lde

     * Homepage: ?
     * Autore: Scott D. Heavner <sdh@po.cwru.edu>.
     * Download: &#65533;
     * Licenza: GPL

Permette di vedere alcuni file system Linux; la modifica in esadecimale dei
blocchi e degli inode sono ora supportati e si può salvare un file
cancellato su un'altra partizione con un pò di lavoro. Supporta ext2, minix
e xiafs. Include una introduzione sul file system Minix in LaTeX. E'
necessario applicare delle patch ai sorgenti per compilarlo per i kernel
2.2.x e 2.3.x, a causa della mancanza nel kernel degli header Xia.
     _________________________________________________________________

6.20. Programma di utilità "undelete" per Ext2

     * Homepage: &#65533;
     * Autori: Gunther Costas, Wilfredo Lugo, Jerry Ramirez
       <undelete@amadeus.uprm.edu>
     * Freshmeat: Console/file system
     * Licenza: GPL

Questa è una patch per il kernel 2.0.30 che aggiunge capacità di recupero da
cancellazioni (undelete) utilizzando l'attributo di "undeletable" fornito da
ext2fs. La patch include le pagine man, il demone undelete ed i programmi di
utilità. Controllare la pagina web per l'ultima versione.
     _________________________________________________________________

7. Macintosh Hierarchical file system - HFS

Tutti i dispositivi di memorizzazione dei MacIntosh, ad esclusione dei
floppy, sono partizionati su uno o più volumi. I volumi contengono quattro
tipi di voci: file, directory, directory concatenate e file concatenati.
Ogni voce è descritta da un record catalogo, analogo agli inode Unix. I
record catalogo sono organizzati su disco in un albero bilanciato (B-tree).
Solo un file può occupare spazio fuori da questi record catalogo.

Un file MacIntosh contiene due componenti o fork. Il fork di risorse è un
file indicizzato contenente segmenti di codice, voci dei menu, finestre di
dialogo,etc. Il fork dati ha la semantica Unix di una sequenza di byte. Ogni
fork è costituito da uno o più gruppi di blocchi contigui. Un descrittore
dimensionale codifica in un numero a 32bit il blocco iniziale e la
lunghezza. Il primo record dimensionale (tre descrittori dimensionali) di
ogni fork è parte del record catalogo del file. Ogni successivo record
dimensionale viene tenuto nel'albero B-Tree dimensionale per gli overflow.

In aggiunta alle estensioni per file e B-Tree, un volume contiene anche due
blocchi di boot, un blocco di informazioni sul volume ed una bitmap dello
spazio libero. C'è una notevole quantità di ridondanza nelle strutture dati
su disco, la quale favorisce il recupero da crash. Sebbene non strettamente
parte del file system, bisogna notare che diversi campi dei record catalogo
sono riservati ad uso esclusivo di Finder, un programma che gestisce
l'accesso degli utente al file system e mantiene automaticamente le
associazioni tra l'applicazione ed il file dati. Così, HFS deve anche
mantenere le informazioni di Finder.

Ogni file e directory in un volume HFS possiede un numero identificativo,
simile al numero di inode nel file system Unix. Tuttavia, un file o
directory è chiamato a partire dal numero identificativo del genitore e dal
nome del file o directory, una stringa di 32 caratteri anche nulli. Questa
combinazione è la chiave di ricerca del B-Tree catalogo del volume. Il
B-Tree catalogo differisce da un tradizionale struttura B-Tree nel fatto che
tutti i nodi ad ogni livello dell'albero sono collegati fra di loro a
formare una doppia lista collegata e che tutti i record sono nei nodi
foglia. Queste variazioni permettono di accedere a molte voci in una stessa
directory attraversando le foglie usando le liste collegate. Per essere
precisi, i B-Tree di HFS sono varianti dei B+-Tree sebbene la documentazione
tecnica di Apple li chiami B*-Tree.

Ogni directory, inclusa la directory root, contiene il proprio directory
thread, il quale contiene un nome vuoto. Il record del directory thread
contiene il nome della directory e l'id del genitore della directory. In
maniera simile, un file thread contiene il nome del file e l'id della
directory che lo contiene.Mentre ogni directory deve contenere un directory
thread, i file thread sono poco comuni. Infatti, entrambi sono esempi della
ridondanza di HFS: per alberi non danneggiati, i thread non sono
strettamente necessari. I record dei file e delle directory contengono
entrambi 32 byte di informazioni uilizzati da Finder. I primi tre
descrittori dimensionali per il B-Tree catalogo sono memorizzati nel blocco
di informazioni del volume. Se il B-Tree catalogo cresce oltre i tre
descrittori, i rimanenti descrittori dimensionali sono memorizzati
nell'overflow dimensionale.

I file system HFS e HFS+ (chiamato anche Sequoia) sono molte ben
documentati. La miglior fonte di informazioni tecniche su HFS è la serie di
libri Inside Macintosh. Vedi su &#65533;. Il file system HFS+ è descritto in
Nota tecnica 1150, disponibile su &#65533;. Molte informazioni sonon
disponibili anche in altre note tecniche. I seguenti link sono raccolti da
Paul H. Hargrove:

     * &#65533; - HFS Ruminations.
     * &#65533; - Hey, Buddy, Can You Spare A Block?
     * &#65533; - Alias Manager Q&As
     * &#65533; - File Manager File Handling Q&As
     * &#65533; - File Manager Volume Handling Q&As
     * &#65533; - Bizarre Extension Loading Order: BackQuote Sorts
       Between "A" and "B"
     * &#65533; - Finder Q&As
     _________________________________________________________________

7.1. Accedere a HFS da Linux

     * Homepage: &#65533;
     * Autore: Paul. Hargrove <hargrove@sccm.stanford.edu>
     * Freshmeat: Console/file system
     * Licenza: GPL
     _________________________________________________________________

7.2. Accedere a HFS da OS/2 (HFS/2)

     * Homepage: &#65533;
     * Autore: Marcus Better <Marcus.Better@abc.se>

   HFS/2 permette ad utenti OS/2 di leggere e scrivere facilmente file su
   floppy formattati con HFS, il file system usato dai computer
   MacIntosh. Con HFS/2, i dischetti MacIntosh possono essere usati come
   normali dischetti.

   Il programma non è più sviluppato perchè l'autore non usa più OS/2. Se
   sei interessato ad usare il programma, contattalo.
     _________________________________________________________________

7.3. Accedere a HFS da Windows 95/98/NT (HFV Explorer)

     * Homepage: &#65533;
     * Autore: Lauri Pesonen <lpesonen@nic.fi>
     * Accesso: Lettura e scrittura da floppy, dischi ZIP e file su
       volumi virtuali. Sola lettura a HFS e CD ibridi.
     * Licenza: GPL

Un browser di volumi HFS per WindowsNT e Windows 9x basato sulle hfsutils.
Supporto per il lancio di tutti i principali emulatori MacIntosh per
Windows.
     _________________________________________________________________

7.4. Accedere a HFS da DOS (MAC-ETTE)

     * Homepage: ?
     * Autore: Paul E. Thomson
     * Download: &#65533;
     * Accesso: sola lettura
     * Licenza: Shareware ($34)

Mac-ette è una utility per PC che può leggere, scrivere, formattare e
copiare floppy da 1.4M formattati HFS, su un PC equipaggiato con un drive
3.5 ad alta densità.
     _________________________________________________________________

7.5. HFS util

     * Homepage: &#65533;
     * Autore: Robert Leslie <rob@mars.org>
     * OS/2 port: &#65533;

   Il pacchetto hfsutil contiene un insieme di programmi di utilità da
   linea di comando quali hformat, hmount, hdir, hcopy, etc. Queste
   permettono di accedere in lettura e scrittura a file e directory nei
   volumi HFS.
     _________________________________________________________________

7.6. MacFS: una libreria portabile per il file system Macintosh

     * Tech report: &#65533;
     * Autori: Peter A. Dinda <pdinda+macfs@cs.cmu.edu>, George C.
       Necula, and Morgan Price
     * Download: &#65533;
     * Accesso: lettura e scrittura, pieno supporto per
       open,read,write,seek e close
     * Licenza: gratis per usi non commerciali e non militari, vedi
       &#65533;

E' una libreria per il file system MacIntosh che è portabile su una varietà
di sistemi operativi e piattaforme. Presenta una interfaccia di
programmazione sufficiente per creare una API a livello utente e per driver
di file system per i sistemi operativi che li supportano. Gli autori hanno
realizzato questa interfaccia utente e programmi di utilità sia usando
questa libreria sia su uno Unix Virtual File System sperimentale. Descrivono
anche il file system gerarchico di MacIntosh e la loro implementazione e
notano che il progetto non è molto adatto per la rientranza (reentrancy) e
che le sue complesse strutture dati possono portare a realizzazioni lente in
ambienti multi-programma. La misura delle prestazioni mostra che questa
implementazione è più veloce di quella nativa di MacIntosh nel creare,
cancellare, leggere e scrivere file di dimensioni modeste, ma che è più
lenta del file system veloce (FFS) di Berkeley. Tuttavia, la versione nativa
di MacIntosh può eseguire grandi operazioni di lettura e scrittura più
velocemente sia di MacFs che di FFS.
     _________________________________________________________________

8. ISO 9660 - File system per CD-ROM

Link utili su ISO-9660:

     * &#65533; - Specifiche ISO-9660 (cioè ECMA-119, cioè High Sierra)
     _________________________________________________________________

8.1. Estensioni RockRidge

Estensioni che permettono nomi lunghi e link simbolici tipo Unix.

Link utili su RockRidge:

     * &#65533; - System Usage Sharing Protocol (SUSP, IEEE P1281)
     * &#65533; - Rock Ridge Interchange Protocol (RRIP, IEEE P1282)
     _________________________________________________________________

8.2. Estensioni Joliet

Joliet è una estensione Microsoft al file system ISO 9660 che permette di
usare caratteri Unicode nei nomi dei file. Questo è utile per gestire le
internazionalizzazioni. Come le estensioni Rock Ridge, anche Joliet permette
i nomi lunghi.
     _________________________________________________________________

8.3. CD-ROM ibridi

I CD ibridi contengono tre file system su un disco solo: ISO9660/RR, Joliet
e HFS. Questo CD sono accessibili sotto DOS, Unix, MacIntosh e Windows
9x/NT. Tutti e tre i file system utilizzano gli stessi dati, solo i metadati
sono distinti.
     _________________________________________________________________

8.4. Indici Novell NetWare su ISO9660

(da fare)
     _________________________________________________________________

8.5. Accedere a Joliet da Linux

     * Homepage: &#65533;
     * Licenza: GPL
     _________________________________________________________________

8.6. Accedere a Joliet da BeOS

     * Homepage: &#65533;
     * Autore: Gertjan van Ratingen <gertjan@iae.nl>
     * Licenza: ?

E' un driver ISO9660 aggiornato in grado di usare le estensioni Joliet.
     _________________________________________________________________

8.7. Accedere a Joliet da OS/2

     * Download: & #65533;
     * Autore: IBM
     * Licenza: ?

L'archivio Jcdfs.zip contiene il driver CDFS.IFS per OS/2 con supporto per
Joliet livello 3.
     _________________________________________________________________

8.8. Accedere ad un CD audio come un file system da Linux

     * Homepage: &#65533;
     * Download: ?
     * Autore: Mariusz Borkowski <borkowsm@ii.pw.edu.pl>
     * Licenza: ?

Modulo kernel che permette di accedere ad un CD audio come un normale file
system.
     _________________________________________________________________

8.9. Accedere ad un CD audio come un file system da BeOS

     * Homepage: &#65533;
     * Download: &#65533;(archivio PPC/Intel)
     * Autore: Marco ?
     * Licenza: ?

Questo add-on per file system permette, se il drive CD lo supporta, di
gestire un normale CD audio come un insieme di file WAV. Si possono copiare
i file, codificarli come MP3, eseguirli lentamente, velocemente ed anche
all'indietro.
     _________________________________________________________________

8.10. Accedere a tutte le tracce da Linux (CDfs)

     * Homepage: &#65533;
     * Download: &#65533;
     * Autore: Michiel Ronsse <ronsse@elis.rug.ac.be>
     * Licenza: GPL

CDfs è un file system per i sistemi Linux che esporta tutte le tracce e le
immagini di boot di un CD come normali file. Questi file possono così essere
montati (per immagini di boot e ISO), copiati, eseguiti (tracce audio),.etc.
Lo scopo principale dello sviluppo di questo file system è stato quello di
sbloccare le informazioni nelle vecchie sessioni ISO. Il file system
permette anche di accedere ai dati su dischi multi sessione difettosi,
ovvero dischi con multiple sessioni singole invece di una sola sessione
multipla.
     _________________________________________________________________

8.11. Creare CD-ROM ibridi (mkhybrid)

     * Homepage: &#65533;
     * Download: &#65533;
     * Autore: <j.pearson@ge.ucl.ac.uk>
     * Licenza: ?

Crea un volume su CD ibrido condiviso ISO9660/HFS/JOLIET.
     _________________________________________________________________

9. Altri file system

9.1. ADFS - Acorn Disc File System

L'Acorn Disc Filing System è il file system standard del sistema operativo
RiscOS che gira sui PC Acorn basati sul RISC ARM e sulle macchine Archimedes
sempre di Acorn.

Il kernel 2.1.x di Linux supporta questo file system. Autore
dell'implementazione Linux è Russell King <rmk@arm.uk.linux.org>.
     _________________________________________________________________

9.2. AFFS - Amiga fast file system

Il Fast File System (FFS) è il file system comunemente usato sugli hard disk
dai sistemi Amiga dalla versione 1.3 (34.20) dell'AmigaOS.

Il kernel 2.1.x+ di Linux supporta questo file system. Autore
dell'implementazione Linux è Ray Burr <ryb@nightmare.com>.
     _________________________________________________________________

9.3. BeFS - Il file system di BeOS

BeFS è la Sezione 1.12 il file system usato in BeOS. Per maggiori
infomazioni su BeFS vedi il libro Practical File System Design with the Be
File System oppure il sorgente del driver Linux per BeFS.

Implementazione Linux di BeFS:

     * Homepage: &#65533;
     * Download: &#65533;
     * Autore: Makoto Kato <m_kato@ga2.so-net.ne.jp>
     * Accesso: sola lettura
     * Licenza: GPL

Questo driver supporta Linux sulle piattaforme x86 e PowerPC. Inoltre,
supporta solo hard disk e floppy solo in lettura.
     _________________________________________________________________

9.4. BFS - UnixWare Boot file system

Il file system BFS di UnixWare è un tipo speciale di file system. E' stato
progettato per caricare e fare il boot del kernel di UnixWare. E' stato
progettato come la Sezione 1.6. BFS supporta solo una directory e si possono
creare solo file semplici: sotto directory e file speciali, come device o
socket non possono essere creati.

Per maggiori informazioni su BFS: &#65533;.

     * &#65533; - superblock
     * &#65533; - inode
     * &#65533; - storage block

   Si può accedere la file system BFS da Linux:

     * Homepage: &#65533;
     * Download: nel kernel di Linux. Patch disponibili sul sito.
     * Autore: Tigran A. Aivazian <tigran@ocston.org>
     * Licenza: GPL
     * Accesso: lettura e scrittura (la parte di scrittura è limitata;
       manca ancora la compattazione).

   Il supporto per BFS è incluso nel kernel di Linux dalla versione
   2.3.25. Per le versioni precedenti, occorre controllare sul sito
   l'eventuale esistenza di una patch specifica. Il sito contiene anche
   bugfix e miglioramenti non ancora intergrati nel kernel ufficiale.

   Esiste anche una mia vecchia versione, ora obsoleta. Il mio piano è
   quella di portare questo codice in FreeBSD.

     * Homepage: &#65533;
     * Download: &#65533;
     * Autore: Martin Hinner <mhi@penguin.cz>
     * Licenza: GPL
     * Accesso: sola lettura

   Supporto a sola lettura del file system BFS di UnixWare per Linux. Può
   essere usato per montare a sola lettura le partizioni UnixWare e i
   floppy disk. Non è prevista una versione a lettura e scrittura ma se
   sei interessato, mandami una mail. Potresti essere interessato anche
   al supporto Linuxla Sezione 9.31.
     _________________________________________________________________

9.5. File system CrosStor

Questo è il nuovo nome per il High throughput file system (HTFS). Per
maggiori informazioni consulta il sito di CrosStor &#65533;.
     _________________________________________________________________

9.6. DTFS - Desktop file system

Gli obiettivi nella progettazione del file system Desktop sono influenzati
da quello che dovrebbe essere l'ambiente per piccoli sistemi. DTFS comprime
i dati memorizzati in normali file per ridurre le richieste di spazio su
disco (le directory rimangono non compresse). La compressione è eseguita una
pagina alla volta ed avviene al volo. DTFS supporta la LZW ma si possono
aggiungere algoritmi personali. Un pò di spazio è salvato non allocando in
anticipo gli inode. E' gioco facile allocare un blocco su disco come inode.
Ogni inode è memorizzato come B+tree. Per maggiori informazioni, si può
leggere il documento USENIX su DTFS (scaricabile da &#65533;).

Driver commerciale a lettura e scrittura disponibile da CrosStor per
UnixWare e SUN Solaris:

     * Download: &#65533;
     * Licenza: commerciale?
     * Accesso: lettura e scrittura
     _________________________________________________________________

9.7. EFS - Enhanced file system (Linux)

Il progetto del file system enhanced ha come obiettivo quello di creare un
nuovo file system per Linux ed eventualmente per altri sistemi operativi che
permette all'amministratore di definire "file system" montabili su un
insieme di dispositivi a blocchi (hard disk o partizioni). L'intento è
quello di permettere l'aggiunta o la rimozione di file system da un insieme
di partizioni mentre il sistema è in esecuzione, allo scopo di permettere ad
un numero di file system montabili di condividere lo stesso pool di spazio
di memorizzazione (avere cioè le home degli utenti nello stesso pool delle
news ma avere un sistema di accounting separato) e di permettere anche la
facile aggiunta di nuovi dischi.

Alcune altre caratteristiche che gli autori vogliono implementare sono la
Sezione 1.12, il supporto per il più ampio numero di sistemi operativi
(sebbene tutto il lavoro sarà inizialmente svolto su Linux) e per le quote
direttamente nel file system, in modo he non sia più necessario sprecare
tempo eseguendo il quotacheck durante il boot. Vogliono essere in grado di
fare il boot di un sistema con 10 giga di news sparse su 4 dischi, con pieno
supporto delle quote, dopo un guasto all'alimentazione con meno di 20
secondi per il mounting dei dischi!

Il sito dell'Enhanced FS è &#65533;. Contattare Russell Coker
<russell@coker.com.au> per maggiori informazioni.
     _________________________________________________________________

9.8. EFS - Extent file system (IRIX)

Il file sistem Extent (efs) è un vecchio file system block-device di Silicon
Graphics, largamente utilizzato nelle versioni di Irix precedenti alla 6.0.
Dalla 6.0, xfs è stato aggiunto ad Irix e gli utenti sono stati incoraggiati
a migrare al file system xfs. Il supporto in Irix per efs diventerà a sola
lettura nelle versioni di Irix successive alla 6.5; efs è tuttavia ancora
molto utilizzato da SGI per la distribuzione del software su CD.

Ci sono due moduli per il kernel di Linux per accedere al file system EFS.

     * Homepage: &#65533;
     * Download: &#65533;
     * Autore: Al Smith <Al.Smith@aeschi.ch.eu.org>
     * Licenza: GPL
     * Accesso: sola lettura

Il modulo kernel efs è una realizzazione del file system extent per Linux
con kernel 2.2. Una sua versione (efsmod-0.6.tar.gz) era stata in origine
scritta da Christian Vogelgsang per il kernel 1.x. In questa versione il
codice è stato sottoposto ad una completa riscrittura ed è anche "endian
clean". Per usare il modulo efs è necessario almeno il kernel 2.2. Per
montare i CD Irix, il lettore CD deve essere in grado di gestire blocchi da
512 byte. Questa versione di efs contiene il supporto per le partizioni su
hard disk e contiene anche una patch che permette di installare il codice
efs all'interno dell'albero di sviluppo del kernel di Linux. Anche la
gestione dei file grossi è stata migliorata molto.

   La versione orginale di efsmod è disponibile anche:

     * Homepage: &#65533;
     * Download: &#65533;
     * Autore: Christian Vogelgsang
     * Licenza: GPL
     * Accesso: sola lettura

   Efs-mod 0.6 è la versione originale di EFS a sola lettura per Linux.
   La versione 0.6 è finita ma il progetto è stato fermato per la
   mancanza di tempo ed informazioni per realizzare la parte di
   scrittura.
     _________________________________________________________________

9.8.1. EFS e libreria FFS, libfs

     * Download: &#65533;
     * Autore: J.A. Gutierrez <spd @ivo.cps.unizar.es>
     * Licenza: GPL
     * Accesso: IRIX EFS a sola lettura e Sun UFS

Una libreria C per leggere EFS e FFS da WinNT x86, SunOS e Irix. Facile da
usarsi (interfaccia simile a Posix) e da linkare, ha anche winefssh.exe e
winufssh.exe, due semplici eseguibili WinNT che leggono file system UFS e
EFS. Non è un pacchetto molto documentato ma qualcuno potrebbe trovarlo
utile.

   Link utili:

     * Breve descrizione del file sistem EFS di Irix: &#65533;
     _________________________________________________________________

9.9. FFS - File system veloce di BSD

Questo è il file system nativo per molti unix BSD (FreeBSD, NetBSD, OpenBSD,
Sun Solaris, ...).

Vedi anche: la Sezione 9.24, la Sezione 9.29.
     _________________________________________________________________

9.10. GPFS - General Parallel file system

Questo è un file system di tipo Unix progettato per i server RS/6000 SP.
Permette ad applicazioni su nodi multipli di condividere file di dati. GPFS
supporta file system molto grandi e suddivide i dati su molteplici dischi
per migliorare le prestazioni. GPFS è basato su un modello di condivisione
dei dischi che fornisce un accesso con basso overhead ai dischi non
attaccati direttamente ai nodi applicativi ed usa un protocollo di lock
distribuito per fornire la piena coerenza dei dati nell'accesso da ogni
nodo. Offre molte delle interfacce standard del file system AIX, permettendo
a molte applicazioni di girare senza modifiche o ricompilazioni. Queste
capacità sono disponibili mentre viene permesso l'accesso ai dati ad alta
velocità agli stessi dati da tutti i nodi del sistema SP, fornendo la piena
coerenza dei dati per le operazioni svolte dai vari nodi. GPFS cerca di
continuare a funzionare in presenza di guasti a diversi nodi o componenti,
sempre che ci siano sufficienti risorse per continuare.

     * &#65533;
     _________________________________________________________________

9.11. HFS - File system ad alte prestazioni per HP-UX

Questo è il secondo hfs che appare in questo HOWTO. E' usato nelle vecchie
versioni di HP-UX.
     _________________________________________________________________

9.12. HTFS - High throughput file system

Link utili:

     * Whitepaper sul file system di SCO OpenServer 5: &#65533;

   Driver commerciale per lettura e scrittura disponibile dalla CrosStor:

     * Download: &#65533;
     * Licenza: Commerciale?
     * Accesso: lettura e scrittura
     _________________________________________________________________

9.13. JFS - File system journaled (HP-UX, AIX, OS/2 5, Linux)

     * Homepage: &#65533;
     * Download: &#65533;
     * Autori: Steve Best <sbest@us.ibm.com> e Dave Kleikamp
       <shaggy@us.ibm.com>
     * Licenza: GPL
     * Accesso: ?

JFS è la tecnologia di file system journaled di IBM, attualmente utilizzata
sui server enterprise di IBM, ed è progettata per ambienti server con alto
throughput.
     _________________________________________________________________

9.14. LFS - Il file system Linux strutturato a log

Il file system per Linux struttura a log è chiamato d(t)fs:

     * Homepage: &#65533;
     * Autore: Christian Czezatke <e9025461@student.tuwien.ac.at>
     * Licenza: GPL
     * Accesso: lettura e scrittura, nomi lunghi, etc

d(t)fs è un progetto per un file system strutturato a log per Linux.
Attualmente il file system è quasi completamento funzionante ma non ne è
stato ancora scrittu un ripulitore.

   Ci sarà anche una mailing list che sarà annunciata sulla home page.
   Per maggiori informazioni vedi: &#65533;

     * &#65533; - La homepage di kfs Cornelius "Kees" Cook ha iniziato un
       progetto di file system strutturato a log per Linux, prima che
       dtfs iniziasse.
     * &#65533; - Una altra implementazione (morta) di LFS ;-)
     * &#65533; - La pagina su LFS di Margo Seltzer <
       margo@das.harvard.edu>
     _________________________________________________________________

9.15. MFS - File system Macintosh

MFS è il file system originale di Macintosh. E' stato sostituito da HFS /
HFS+. Se puoi fornirmi ulteriori informazioni, mandami una mail per favore.
     _________________________________________________________________

9.16. File system Minix

Questo è il file system nativo di Minix. E' stato anche usato nella prima
versione di Linux.
     _________________________________________________________________

9.17. NWFS - File system NetWare di Novell

NWFS è il file system nativo del sistema operativo Netware di Novell. E' un
file system basato su FAT modificata. Ne esistono due varianti: il NWFS 286
a 16 bit usato in Netware 2.x ed il NWFS 386 a 32 bit usato in Netware 3.x,
4.x e 5.
     _________________________________________________________________

9.17.1. NetWare file system / 286

(da fare)
     _________________________________________________________________

9.17.2. NetWare file system / 386

(da fare)
     _________________________________________________________________

9.17.3. Accedere a NWFS-386 da Linux

     * Homepage: &#65533;
     * Download: &#65533;
     * Autore: Timpanogas Research Group, Inc. (jmerkey@timpanogas.com)
     * Licenza: GPL
     * Accesso: sola lettura

Questo driver permette di montare un file system NWFS-386 in Linux.
     _________________________________________________________________

9.18. NSS - Novell Storage Services

Questo è un nuovo file system la Sezione 1.12 a 64 bit che utilizza
algoritmi la Sezione 1.11. E' utilizzato in Netware 5 di Novell.

     * &#65533; - Whitepaper su NSS
     _________________________________________________________________

9.19. ODS - File system On Disk Structure

Questo è il file system nativo di OpenVMS e VMS.
     _________________________________________________________________

9.20. File system QNX

Questo file system è usato in QNX. Ne esistono due versioni principali, la 2
usata in QNX2 e la versione 4 usata in QNX4. QNX4 non supporta la versione 2
e viceversa.

Il file system QNX4 è accessibile in Linux 2.1.x+, abilitando la voce 'QNX
file system support'.

     * Download: Nel kernel :)
     * Autore: Frank Denis <j@4u.net> (responsabile), Richard Frowijn
     * Licenza: GPL
     * Accesso: lettura (tranne per i file multi-extent), scrittura
       (sperimentale)

Driver per il file system QNX4.
     _________________________________________________________________

9.21. File system Reiser

Reiserfs è un file system che usa una variante dei classici algoritmi ad
albero bilanciato. I risultati, quando lo si compara con il file system
ext2fs basato su una allocazione dei blocchi convenzionale, usando lo stesso
sistema operativo ed impiegando lo stesso codice di buffering suggeriscono
che questi algoritmi sono molto efficaci, in velocità per file più grandi
delle dimensioni dei nodi (4k), diventando meno veloci e più compatti se i
file hanno dimensioni vicine a quelle dei nodi e diventano marcatamente più
veloci e compatti se i file sono più piccoli dei nodi raggiungendo diversi
ordini di grandezza di vantaggio per file di 100 byte. I miglioramenti nella
velocità e nello spazio occupato dai piccoli file suggeriscono forse di
rivedere una tipica assunzione della progettazione dei sistemi operativi di
aggregare piccoli oggetti usando layer superiori al layer del file system.

Link utili:

     * La homepage del file system Reiser &#65533;
     _________________________________________________________________

9.22. RFS (File system per CD-ROM)

Il file system per la scrittura a blocchi incrementale di Sony.
     _________________________________________________________________

9.23. RomFS - File system Rom

Autore della versione Linux di RomFS è Janos Farkas < chexum@shadow.banki.hu
>. Per maggiori informazioni vedi /usr/src/linux/Documentation/file
system/romfs.txt.
     _________________________________________________________________

9.24. SFS - File system sicuro

Il file system di tipo SFS è una variazione del file system di tipo FFS. Il
boot block, il superblock, gli storage block e i blocchi liberi del file
system sfs sono, a livello ammimnistrativo, identici a quelli del FFS. Gli
inode differiscono tuttavia da quelli FFS. Gli inode con numeri dispari sono
riservati ad informazioni di sicurezza (liste di controllo degli accessi).
Non sono sicuro che sfs non abbia altre capacità.

Link su SFS:

     * &#65533; - Documentazione UnixWare 7: File system SFS
     _________________________________________________________________

9.25. File system Spiralog (OpenVMS)

Spiralog è un file system a 64 bit ad alte prestazioni. Spiralog combina la
tecnologia basata su la Sezione 1.12log con la più tradizionale tecnologia
la Sezione 1.11B-tree per fornire una astrazione generica. Il meccanismo di
mappatura B-tree usa un logging write-ahead per dare garanzie di stabilità e
recuperabilità.

Link Digital relativi a Spiralog:

     * &#65533; - Spiralog File System per OpenVMS Alpha
     * &#65533; - Panoramica del file system Spiralog
     * &#65533; - Progettazione del server per il file system Spiralog
     _________________________________________________________________

9.26. File system System V e derivati

La homepage del progetto System V Linux project si trova su &#65533;.
Responsabile di questo progetto è <kgb@manjak.knm.pl.org>.
     _________________________________________________________________

9.26.1. AFS - File system Acer Fast

Il file system Acer Fast è utilizzato su Open Server di SCO. E' simile al
file system di System V Release 4 ma usa bitmap invece di liste concatenate
di blocchi liberi.
     _________________________________________________________________

9.26.2. EAFS - File system Acer Fast esteso

Il file system AFS può essere esteso per gestire nomi di file fino a 255
caratteri ma le voci nelle directory hanno ancora nomi di 14 caratteri.
Questo file system è utilizzato su OpenServer di SCO.
     _________________________________________________________________

9.26.3. File system Coherent

(da fare)
     _________________________________________________________________

9.26.4. S5

Questo file system è usato in UnixWare. E' probabilmente compatibile con
SystemV ma non l'ho ancora verificato. Per maggiori informazioni &#65533;.
     _________________________________________________________________

9.26.5. S51K - SystemV 1K

(da fare)
     _________________________________________________________________

9.26.6. File system Version 7

Questo file system è utilizzato in Unix versione 7 per le macchine PDP-11.
     _________________________________________________________________

9.26.7. File system Xenix

(da fare)
     _________________________________________________________________

9.27. Text - (File system per CD-ROM di Philips)

Standard Philips per la codifica di dischi e tracce di dati su CD-Audio.
     _________________________________________________________________

9.28. UDF - Universal Disk Format (file system per DVD-ROM)

Esiste un driver Linux per il file system UDF:

     * Homepage: &#65533;
     * Download: &#65533;
     * Autore: Dave Boynton <dave@trylinux.com>
     * Mailing-list: <linux_udf@hootie.lvld.hp.com>
     * Licenza: GPL
     * Accesso: sola lettura
     _________________________________________________________________

9.29. UFS

Nota: molti chiamano incorrettamente la Sezione 9.9 il Fast File System di
BSD come UFS. FFS e UFS sono file system diversi. Tutti gli Unix moderni
usano file system FFS e non UFS. L'UFS è stato utilizzato in vecchie
versioni BSD. Puoi scaricare il codice sorgente da &#65533;.

Link utili:

     * &#65533; - Implementazione del write-clustering per il UFS di Sun

   Vedi anche: la Sezione 9.9
     _________________________________________________________________

9.30. File system V7

Il file system V7 è stata utulizzato nella settima edizione del sistema Unix
Time Sharing (1980 circa). Per maggiori informazioni, vedi il codice
sorgente della settima edizione, disponibile presso l'archivio Unix:
&#65533;.
     _________________________________________________________________

9.31. VxFS - File system Veritas (HP-UX, SCO UnixWare, Solaris)

Questo è un file system commerciale sviluppato da Veritas Inc. E'
disponibile su HP-UX, SCO UnixWare, Solaris e probabilmente altri sistemi.
Possiede caratteristiche molto interessanti: allocazione basata sulle
dimensioni, journaling, liste di controllo degli accessi (ACL), supporto per
file fino a 2 terabyte, backup on line (file system snapshot), quote d'uso
sullo stile BSD e molte altre.

Ci sono tre versioni di VxFS disponibili:

Versione 1: La versione originale, non più molto utilizzata.

Versione 2: Supporto per i fileset e l'allocazione dinamica degli inode.

Versione 4: L'ultima versione, supporto per file grandi e per le quote
d'uso.

Da notare che le versioni su HP-UX, Solaris e UnixWare usano strutture
leggermente differenti, così non dovrebbe essere possibile leggere VxFS da
un sistema diverso.

Link relativi a VxFS:

     * &#65533; - Veritas Inc < vx-sales@veritas.com>.
     * &#65533; - VxFS ODM FS Admin - UnixWare 7 (documentazione, molto
       valida).
     * &#65533; - VxFS FS Manager - UnixWare 7 (documentazione).
     * &#65533; - VxFS - Reliant Unix.

   Vedi anche: la Sezione 2.7 e la Sezione 1.12.
     _________________________________________________________________

9.31.1. VxTools

Programma di utilità Unix da linea di comando per accedere a VxFS versioni 2
e 4, disponibili sotto GNU GPL:

     * Homepage: &#65533;
     * Download: &#65533;
     * Autore: Martin Hinner <mhi@penguin.cz>
     * Mailing-list: <fs-l@penguin.cz>
     * Licenza: GPL
     * Accesso: sola lettura, programma di utilità da linea di comando

Vxtools è un insieme di utilità da linea di comando che permettono di
accedere ai file system VxFS da Linux ( e probabilmente altri Unix). La
versione attuale legge VxFS versioni 2 e 4.

   Io ho pianificato anche un driver per il kernek di VxFS.

   AFAIK, Rodney Ramdas < rodney@quicknet.nl > sta lavorando ad un driver
   VxFS per FreeBSD. Non conosco l'attuale stato del suo progetto, così
   se vuoi avere maggiori informazioni, contattalo direttamente.
     _________________________________________________________________

9.32. XFS - File system esteso (IRIX)

XFS (tm) è il file system di nuova generazione per i sistemi di Silicon
Graphics, dalle workstation da tavolo ai supercomputer. XFS offre capacità a
64bit per gestire facilmente file e file system estremamente grandi che
crescono fino ad un terabyte. Il file system XFS integra la gestione dei
volumi, velocità di I/O garantite ed una tecnologia di journaling per veloci
ed affidabili recuperi. I file system possono essere salvati su backup anche
durante il loro utilizzo, riducendo significativamente il sovraccarico
amministrativo.

XFS è progettato per altissime prestazioni: un throughput mantenuto
superiore a 300MB al secondo è stato ottenuto su sistemi Challenge. XFS
scala nelle prestazioni per adattarsi all'architettura di Challenge MP. File
tradizionali, directory e file system hanno prestazioni ridotte non appena
crescono in dimensioni. Con il file system XFS, non si paga invece in
prestazioni. Per esempio, le directory XFS sono state verificate fino a 32
milioni di file in una singola directory.

XFS è un file system con journaling. Memorizza i cambiamenti agli inode,
directory e bitmap su disco prima che le voci originali siano aggiornate.
Nel caso di crash del sistema prima che gli aggiornamenti siano completati,
questi possono essere ripresi e completati usando i log.

XFS usa una gestore dello spazio (space manager) per allocare spazio su
disco per il file system e controllare gli inode. Usa una gestore dello
spazio dei nomi per controlare l'allocazione di file e directory. Questi
gestori usano indici B-tree per memorizzare informazioni sulla posizione dei
file, diminuendo in maniera significativa il tempo di accesso richiesta per
recuperare le informazioni sui file.

Gli inode sono creati quando necessari e non sono limitati ad una
particolare area su una partizione del disco. XFS cerca di posizionare gli
inode vicino ai file ed alle directory a cui si riferiscono. File molto
piccoli, come link simbolici ed alcune directory, sono memorizzati
direttamente negli inode, per migliorare le prestazioni e salvare spazio. Le
directory grandi usano indici B-tree contenuti nel directory file per
accelerare le ricerche, le aggiunte e le cancellazioni.

Link utili su XFS:

     * &#65533; Whitepaper su XFS

   Il porting di XFS su Linux, con licenza GNU GPL, è disponibile dalla
   SGI Inc.:

     * Homepage: &#65533;
     * Download: &#65533;
     * Autore: SGI Inc., &#65533;
     * Licenza: GPL
     * Accesso: lettura e scrittura
     _________________________________________________________________

9.33. File system Xia

Questo file system è stato sviluppato per sostituire, in Linux, il vecchio
file system Minix. Autore di questo file system è Franx Xia <
qx@math.columbia.edu >.
     _________________________________________________________________

10. Partizioni raw

10.1. Il backup di partizioni raw usando DBsnapshot

(da fare: www.crosstor.com)
     _________________________________________________________________

11. Appendice

11.1. File system di rete

Questo HOWTO non riguarda i file system di rete ma devo almeno menzionarli.

Questa è una breve lista di alcuni che conosco.
     _________________________________________________________________

11.1.1. AFS - File system Andrew

     * La FAQ su AFS si trova su &#65533;.
     * Client e server commerciali sono disponibili per quasi tutte le
       piattaforme (Win98 escluso) da IBM. Vedi &#65533;
     * Un client gratis per Unix è disponibile grazie al Arla Team su
       &#65533;.
     * Un server gratis è in preparazione ma non ancora in produzione.
     _________________________________________________________________

11.1.2. CODA

     * Homepage: &#65533;
     * Download: &#65533;
     * Autore: CMU Coda Group <braam@coda.cs.cmu.edu>.
     * Licenza: GPL
     * Accesso: lettura e scrittura

Coda è un file system distribuito con caratteristiche innovative come le
operazioni disconnesse e la replica dei server.
     _________________________________________________________________

11.1.3. NFS - Network file system (Unix)

(da fare)
     _________________________________________________________________

11.1.4. NCP - NetWare Core Protocol (Novell NetWare)

(da fare)
     _________________________________________________________________

11.1.5. SMB - Session Message Block (Windows 3.x/9x/NT)

Questo protocollo è utilizzato nel mondo Windows.
     _________________________________________________________________

11.1.6. Intermezzo

     * Homepage: &#65533;
     * Download: &#65533;
     * Autore: Stelias e Redhat <info@stelias.com>.
     * Licenza: GPL
     * Accesso: lettura e scrittura

Intermezzo è un file system distribuito per Linux. E' stato ispirato da CODA
ma usa il file system su disco come una cache persistente. Intermezzo
supporta operazioni disconnesse ma non possiede ancora un sistema di
identificazione.
     _________________________________________________________________

11.2. File system cifrati

11.2.1. CFS

     * Homepage: ?
     * Download: ?
     * Autore: Matt Blaze <mab@research.att.com>.
     * Licenza: ?
     * Accesso: lettura e scrittura, usa DES/3DES.

CFS inserisce servizi di cifratura nel file system di Unix(tm). Supporta
l'archiviazione sicura a livello di sistema attraverso una interfaccia
standard Unix ai file cifrati. Gli utenti associano una chiave crittografica
alle directory che vogliono proteggere. I file in queste directory (come
anche i componenti del loro pathname) sono cifrati e decifrati con la chiave
specificata in maniera trasparente, senza ulteriore intervento da parte
dell'utente; il testo in chiaro non è mai memorizzato su un disco o spedito
ad un server remoto. CFS impiega una innovativa combinazione di flusso DES e
modalità di cifratura basata su libro di codici per offrire una alta
sicurezza, unita a buone prestazioni su una workstation moderna. CFS può
usare, per le sue archiviazioni, un qualsiasi file system, senza alcuna
modifica, inclusi file server remoti come NFS. Funzioni di gestione del
sistema, come il backup, lavorano normalmente senza alcuna conoscenza delle
chiave.
     _________________________________________________________________

11.2.2. TCFS

     * Homepage: &#65533;
     * Download: &#65533;
     * Autori: Luigi Catuogno <luicat@ tcfs.dia.unisa.it>, Aniello Del
       Sorbo <anidel@tcfs.dia.unisa.it>, Luigi Della Monica
       <dellui@tcfs.dia.unisa.it>, G.Cattaneo <cattaneo@dia.unisa.it>,
       G.Persiano (&#65533;), Ermelindo (Erry) Mauriello
       <errmau@tcfs.dia.unisa.it>, Angelo Celentano
       <angcel@tcfs.dia.unisa.it>, Andrea Cozzolino
       <andcoz@tcfs.dia.unisa.it>.
     * Licenza: GPL
     * Accesso: lettura e scrittura trasparente usando
       CBC-DES/3DES/RC5/IDEA/Altri.

La principale differenza tra TCFS e CFS è la trasparenza che gli utenti
ottengono usando TCFS. In pratica, CFS lavora nello spazio utente mentre
TCFS lavora nello spazio del kernel, risultando così migliore in prestazioni
e sicurezza. La caratteristica di TCFS del modulo di cifratura dinamico
permette all'utente di specificare il motore di cifratura da usare. Al
momento disponibile solo per Linux, TCFS sarà rilasciato presto anche per
NetBSD e supporterà, in un futuro vicino, anche altri FS e quindi NFS.
     _________________________________________________________________

11.2.3. SFS

( da fare: &#65533; )
     _________________________________________________________________

11.2.4. VS3FS: File system stenografico per Linux

     * Homepage: &#65533;
     * Licenza: ?
     * Accesso: ?

fspatch è una patch del kernel che introduce il supporto modulare per un
file system stenografico (noto in passato VS3FS) un tipo di file system
sperimentale che non solo cifra tutte le informazioni su disco, ma cerca
anche di nascondere le informazioni in modo tale che non può essere provato
la loro esistenza sul disco. Questo permette di tenere dati sensibili su
disco, senza poter essere forzati a rivelarli. In casi estremi, falsi
documenti possono essere memorizzati in una parte del disco, per i quali una
password può essere rivelata. Non dovrebbe essere possibile trovare dove le
altre informazioni sono salvate su disco.
     _________________________________________________________________

11.3. Programma di utilità per il benchmark dei file system

11.3.1. IOzone

     * Homepage: &#65533;
     * Download: &#65533;
     * Licenza: distribuibile liberamente

IOZone è uno strumenti di benchmark di file system. Il benchmark genera e
misura una varietà di operazioni sui file. IOZone è stato portato su molte
macchine e gira su diversi sistemi operativi.
     _________________________________________________________________

11.4. Scrivere un proprio driver per file system

11.4.1. DOS

Non ho ancora trovato in Rete una buona pagina sulla scrittura di driver
(redirector di rete) DOS. La fonte migliore è la lista di interrupt di Ralf
Brown ed il codice sorgente di la Sezione 4.1.
     _________________________________________________________________

11.4.2. OS/2

     * &#65533;
     * &#65533; - device driver a 32 bit per OS/2 con supporto IFS.
       Fornisce servizi di kernel a 32 bit (DevHelp) e funzioni di
       utilità per codice a 32 bit per il ring 0 di OS/2 (device driver e
       driver per file system installabili).
     _________________________________________________________________

11.4.3. Windows NT

La pagina Microsoft sul kit IFS (&#65533;) dovrebbe essere utile in quanto
miglior modo per entrare nello sviluppo dei file system di NT (anche per il
suo costo di $1K).

Per maggiori informazioni sulla scrittura di driver FS per Windows NT vedi
&#65533; di <bosse@acc.umu.se>.
     _________________________________________________________________

11.5. Altri documenti

     * &#65533; - una buona pagina sui file system
     * &#65533; - Linux overlay file system di
       <artnaseef@worldnet.att.net>.
     * &#65533; - Gestione dei diritti su Linux
     * &#65533; - Transparent Cryptography file system
     * &#65533; - Il Large file Summit - Affronta il problema dei file
       più grandi di 2Giga su computer a 32 bit
     * &#65533; - Il progetto CODA (un file system distribuito basato su
       AFS)
     * &#65533; - Pagine relative a LFS
     * &#65533; - Linux Kernel H acker's guide
     * &#65533; - Large disk HOWTO
     * &#65533; - Linux devfs
     * &#65533; - Il Global File System (GFS)
     * &#65533; - Il file system/2 virtuale di Toronto
     * &#65533; Drive IFS su RAM dinamica per OS/2
     * &#65533; - Documentazione in linea su UnixWare e SCO Unix
     * &#65533; - Documentazione in linea su UnixWare 7
     * &#65533; - Inside OS/2 LAN Server 4.0
     * &#65533; - Linux UserFS, permette di scrivere un processo Linux
       che realizza un file system.
     * &#65533; - Multi Disk System Tuning HOWTO di Stein Gjoen.
     * &#65533; - Linux Today: interessantissimo elenco di file system
       stilato da Kragen.
     * &#65533; - Il file sistem UNix di Kristian Kohntopp (in tedesco).


                          ISP-Connectivity-mini-HOWTO

Michael Strates, mstrates@croftj.net

   v2.0, 6 Novembre 1997
     _________________________________________________________________

   _Ce document décrit comment configurer une liaison PPP, se connecter à
   son Fournisseur d'Accès Internet (F.A.I.), configurer le courrier et
   les news, obtenir une adresse IP statique (si cela est possible),
   obtenir un nom de domaine et avoir un système sérieux tournant en un
   peu plus de trente minutes._
     _________________________________________________________________

1. Introduction

   Le but principal de ce document est, évidemment, de familiariser un
   nouvel utilisateur avec tout ce qui concerne la connexion d'un PC
   Linux à Internet, l'obtention d'adresses IP, de noms de domaines, et
   la configuration des différentes parties. Ce guide est destiné à un
   utilisateur moyen, bien que les débutants intelligents ne devraient
   pas, non plus, avoir de problèmes.

1.1 Nouvelles versions de ce document

   Les nouvelles versions de ce document seront périodiquement postées
   dans _comp.os.linux.answers_ (NDT : les versions françaises des Howtos
   et Mini-Howtos sont postées tous les mois dans
   _fr.comp.os.linux.annonces_). Elles seront aussi placées sur les
   différents sites FTP anonymes qui archivent les informations sur
   Linux. Parmi ceux-ci :

   ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO

   Vous trouverez aussi ce document sur la page du « Linux Documentation
   Project » :

   http://sunsite.unc.edu/LDP/

   La version française est disponible sur le site :

   ftp://ftp.lip6.fr/pub/linux/french/docs/HOWTO

1.2 Commentaires

   J'apprécierais tout commentaire sur ce HOWTO, fautes d'orthographes,
   comment il fonctionne, remerciements et critiques. J'espère avoir
   aider certaines personnes avec ce HOWTO, et, si je l'ai fait, je
   serais heureux de vous l'entendre dire.

   mstrates@croftj.net

   http://linloft.home.ml.org/

   Les remarques concernant la traduction française peuvent être envoyées
   à _Éric Jacoboni_ :

   jaco@mail.dotcom.fr

1.3 Termes d'utilisation

   Aucune responsabilité quant au contenu de ce document ne peut être
   acceptée. L'utilisation des concepts, exemples et autres sont fait à
   vos propres risques. Comme il s'agit d'une nouvelle édition de ce
   document, celle-ci peut contenir des erreurs et des imprécisions qui
   peuvent porter préjudice à votre système. Procédez avec précaution et
   bien que qu'il y ait de fortes chances pour que cela ne soit pas
   nécessaire, je décline toute responsabilité pour tout dommage.

   Il y a, bien sûr, probablement de meilleures façons de faire les
   choses décrites dans ce document. Il y a toujours un autre chemin dans
   le monde Linux. C'est la voie que j'ai suivie, et c'est celle-ci que
   je vous présente dans ce HOWTO.

1.4 Informations de Copyright

   Ce document est copyright (c)1997 Michael Strates et distribué sous
   les termes suivants :

     * Les documents HOWTOs Linux peuvent être reproduits et distribués
       dans leur intégralité ou en partie, sur tout support physique ou
       électronique, à condition que cette note de copyright soit
       présente sur toutes les copies. Une redistribution commerciale est
       autorisée et encouragée ; cependant, l'auteur souhaiterai en être
       averti.
     * Toute traduction ou travail incluant des documents HOWTOs Linux
       doit être couvert par cette notice. Vous ne pouvez donc produire
       un travail dérivé d'un HOWTO et imposer des restrictions
       supplémentaires sur sa distribution. Des exceptions à ces règles
       peuvent être accordées sous certaines conditions ; contactez le
       coordinateur des HOWTOs Linux à l'adresse donnée ci-dessous.
     * Si vous avez des questions, contactez Greg Hankins, le
       coordinateur des HOWTOs Linux à :

   gregh@sunsite.unc.edu

2. Se connecter au monde extérieur.

   Dans ce document, nous expliquerons comment le faire en utilisant PPP
   (Point to Point Protocol), un protocole presque toujours utilisé sur
   Internet. Il permet à votre modem de parler au monde extérieur. C'est
   ce que font des applications comme Trumpet Winsock sous Windows 3.x,
   et beaucoup d'autres programmes que vous n'avez probablement jamais
   vus.

   Sous Linux, nous utilisons quelque chose appelé chat pour réaliser
   l'appel téléphonique du F.A.I., puis nous utilisons un outil nommé
   pppd pour « utiliser » cette connexion. Dans un sens, chat est celui
   qui appelle, et pppd est notre protocole. Nous décrirons plus loin
   comment les configurer.

2.1 Parler et communiquer avec pppd et chat.

   La façon probablement la plus facile de faire les choses est de créer
   un script shell nommé ppp-connect dans le répertoire de root, et
   d'invoquer ce script à chaque fois que vous voulez établir votre
   connexion. Nous décrirons cette méthode.

   En tant que root, ouvrez votre éditeur de texte favori sur
   ~/ppp-connect. Vous devez maintenant choisir vos paramètres.

   _pppd connect 'chat -v "" "votre_chaîne-init" "" ATDTnuméro_fai
   CONNECT "" ogin: votre_username word: votre_mot_de_passe'
   /dev/tty(0/1/2) vitesse modem_

   Sur mon système, pppd invoque /usr/sbin/pppd, puis lance chat pour
   réaliser l'appel téléphonique. chat envoie _votre_chaîne-init_ puis
   appelle _numéro_fai_. Il attend alors CONNECT, puis attend ogin: (le
   caractère `l' est omis car le premier caractère est quelquefois
   perdu), envoie _votre_mot_de_passe_, chat se termine alors et rend la
   main à pppd.

   La fin de la commande spécifie votre port modem (le mien est
   /dev/ttyS1). Dans la plupart des cas, ce sera ttyS1 (COM2 sous DOS),
   ttyS0 (COM1 sous DOS), ou, si vous utilisez la Slackware, cua1 ou
   cua0. La vitesse est celle du modem. J'utilise 115200 pour le mien (un
   33.6k). Si vous avez une machine relativement récente, disposant d'une
   UART 16550, alors n'allez pas en dessous de 57600. Ou, pour un 14.4k :
   38400. _modem_ indique simplement à pppd qu'il s'agit d'une connexion
   série/modem. Otez l'option -v si vous ne souhaitez pas avoir de longs
   messages dans vos fichiers logs.

   Le scénario ci-dessous est celui utilisé pour appeler un F.A.I. qui
   lance automatiquement PPP, ie. qu'il n'y a pas réellement de lancement
   d'un shell. Voici sa commande dans son ~/ppp-connect :

   _pppd connect 'chat "" "ATZ" "" ATDT555-1800 CONNECT "" ogin: johnny
   word: blackjak' /dev/ttyS1 115200 modem_

   Cependant, pour certains, il y a des F.A.I. qui lancent un shell et ne
   lancent pas automatiquement PPP. Cela peut être un problème.
   Heureusement, chat peut gérer cela aussi. Il suffit d'ajouter une
   autre commande à votre script de chat. Ci-dessous, par exemple,
   _johnny_ utilise un F.A.I. qui lui retourne un shell lui demandant de
   taper ppp pour obtenir une connexion ppp. Son invite de shell se
   termine par $.

   _pppd connect 'chat "" "ATZ" "" ATDT555-1800 CONNECT "" ogin: johnny
   word: blackjak $ ppp' /dev/ttyS1 115200 modem_

   S'il y a plus d'un mot, entourez les de quotes. J'espère que vous avez
   compris toutes ces implications et que vous êtes capables de créer
   votre propre script convenant à votre connexion. Modifiez simplement
   le premier ou le deuxième script ci-dessus pour l'ajuster à votre
   port, serveur, etc. puis, sauvez ce fichier.

   Maintenant que le fichier est créé, il faut s'assurer que seul root
   puisse le lancer, le lire ou y écrire. Ceci est très important.
   Assurez-vous aussi que personne ne puisse lire vos fichiers logs, si
   vous avez décidé de garder l'option -v, car votre mot de passe est
   clairement lisible dans ceux-ci (je ne vois pas beaucoup d'utilité à
   l'option -v, ôtez-la si vous n'en avez pas un besoin express).

2.2 Adresses IP, Noms de domaines et sous-réseaux.

   Pour la plupart de ceux qui utilisent les options décrites ci-dessus,
   le fait qu'une adresse IP change ne les gênera pas. Les utilisateurs
   de base, ceux qui veulent un accès simple, qui n'ont que des comptes
   accessibles par liaison téléphonique et qui ne sont pas spécialement
   motivés par la technique, tous ceux-la peuvent survoler cette section.
   J'y aborderai les aspects importants pour configurer correctement
   votre système. Les débutants, sautez les parties concernant les
   adresses IP fixes, les noms de domaines, les sous-réseaux et ne lisez
   que la dernière partie de cette section.

   Disposer d'une adresse IP fixe est peut-être une option gratuite pour
   votre F.A.I. : demandez-lui en cas de doute. Personnellement, je dois
   payer pour avoir une adresse IP fixe. Cela permet d'envoyer du
   courrier en utilisant une adresse IP, un domaine, etc. uniques. Si
   vous désirez avoir une adresse permanente, envoyez un courrier à votre
   fournisseur d'accès et demandez-lui s'il peut le faire.

   Lorsque vous avez une adresse IP fixe, faites un grep dans votre
   répertoire _/etc_ pour retrouver les fichiers contenant vos anciennes
   adresses IP. J'ai dû modifier des fichiers dans mon répertoire
   _sendmail_ et dans _/etc/hosts_.Il y a d'autres fichiers importants que
   vous ne retouverez qu'avec grep. Ouvrez /etc/hosts et ajoutez votre
   nouvelle adresse IP au format standard. Relancez votre machine, vous
   devriez être prêt à continuer.

   Vous devez maintenant changer votre script chat pour répercuter votre
   nouvelle configuration. Si PPP est lancé dès que vous vous connectez,
   vous devez informer l'administrateur système de votre F.A.I. pour
   qu'il s'assure que leur système PPP reconnaisse que vous avez une
   adresse IP fixe et vous l'attribue plutôt que de vous en donner une
   autre. Si vous vous retrouvez devant une invite shell, et qu'il vous
   faut taper ppp ou autre pour lancer la connexion, plutôt que de le
   faire, modifiez votre script ~/ppp-connect pour envoyer ceci à la
   place de ppp ou autre lorsqu'il voit un $ ou autre prompt shell.

   _/usr/sbin/pppd :Votre_Adresse_IP_

   Remplacez _Votre_Adresse_IP_ par l'adresse que votre F.A.I. vous a
   donnée. Assurez vous de l'entourer de " " lorsque vous la placez dans
   votre script chat. Si cela ne fonctionne pas, contactez votre F.A.I.
   pour lui demander où se trouve votre serveur PPP et demandez-lui la
   commande à donner. Essayex pour voir si le serveur vous reconnaît et
   vous donne votre adresse correctement.

   La prochaine chose à faire est probablement d'obtenir un nom de
   domaine. Je sais qu'en Australie, .asn.au et .org.au sont gratuits.
   Aux États-Unis, vous pouvez obtenir un domaine .us gratuitement, mais
   cela prend du temps. Si vous habitez l'Australie, allez sur
   http://www.aunic.net/ pour enregistrer vos domaines. Aux États-Unis,
   c'est http://www.internic.net/ .

   Pour enregistrer les domaines, vous devez fournir des services DNS et
   autres trucs pointus. Si votre F.A.I. ne peut les fournir, balancez
   par la fenêtre les domaines .asn.au et autres et prenez un domaine
   Internet Monolith.

   Monolith offre des domaines gratuits à tout le monde. Tout est fait
   sans intervention humaine, via une interface web que vous accédez avec
   votre navigateur. Votre domaine est de la forme Votre_Choix.ml.org.
   Monolith hébergera alors localement le DNS pour vous. Si vous voulez
   envoyer et recevoir du courrier de ce domaine, demandez à votre F.A.I.
   de se transformer en passeur de courrier pour vous.

   Allez voir sur http://www.ml.org/ et remplissez le formulaire. Entrez
   dans NIC avec votre identifiant et votre mot de passe, et creez un
   domaine GRATUIT. Vous devrez entrer votre adresse IP. Votre domaine
   sera dans le DNS dans quelques jours.

   Ok, nous allons passer maintenant à la partie pour les débutants ou
   pour ceux qui ne peuvent avoir d'adresse IP ou de domaine fixe. Tout
   ce que vous avez à faire est d'éditer /etc/hosts sous le compte root,
   nommer votre site avec un nom qui ne posera pas de problème, lui
   donner une adresse IP 10.10.10 ou quelque chose comme ça et redémarrer
   votre machine.

   Maintenant, vous n'avez qu'à configurer votre machine avec pppd et
   chat. Cela ne prend que 10 minutes. Passons à la section suivante, qui
   traite du courrier électronique.

3. Courrier électronique sur votre machine Linux

   L'un des aspects les plus importants de l'Internet est la possibilité
   d'envoyer et de recevoir du courrier de par le monde. Linux dispose de
   très nombreux paquetages de courriers utilisables en mode console.
   Celui que nous allons décrire s'appelle Pine (programe pour le
   courrier et les news Internet) de l'Université de Washington. Pour
   récupérer le courrier, le programme s'appelant Fetchmail, écrit par
   _Eric S. Raymond_ devrait aussi faire partie de votre distribution
   Linux.

   Fetchmail est un programme qui récupère votre couurier sur votre
   serveur en utilisant le protocole POP. Il transfère ce courrier sur
   votre machine, puis le détruit du serveur, comme le font des
   programmes comme Eudora ou Microsoft Exchange. Pour configurer et
   automatiser fetchmail, on utilise un fichier .fetchmailrc dans le
   répertoire de base. Ouvrez simplement ~/.fetchmailrc (faites-le sous
   votre compte, pas sous root) avec votre éditeur favori et observez les
   options décrites ci-dessous :

   _poll mail.votre_fai proto pop3 user votre_login password votre_passwd_

   _user votre_login with pass votre_passwd is votre_login here_

   Tout ce que vous avez à faire est de remplacer _mail.votre_fai_ par le
   nom du serveur de courrier de votre F.A.I., _votre_passwd_ par votre
   mot de passe, et _votre_login_ par votre identifiant.

   Point important à noter : pour que Pine et cette procédure
   fonctionnent correctement, votre identifiant doit correpondre à celui
   que vous utilisez pour votre F.A.I. Ceci veut dire que votre
   identifiant local doit correspondre à celui que vous utilisez sur le
   serveur, et à votre adresse e-mail.

   Ensuite, assurez-vous que .fetchmailrc possède les permissions
   correctes (lecture/écriture pour user). Fetchmail peut être lancé de
   deux façons : en mode standard (où il récupère les messages du serveur
   et se termine), ou en mode serveur (où il reste actif et
   vérifie/récupère le courrier toutes les x secondes). Pour utiliser le
   mode serveur, tapez _fetchmail -a -d(Secondes entre les
   vérifications)_. -a assure qu'il récupèrera tous les courriers. Pour
   utiliser le mode standard, tapez simplement _fetchmail -a_.

   Vous devez maintenant configurer Pine. Lancez Pine en tapant pine au
   prompt. Choisissez Setup - Configuration. Configurez votre domaine
   utilisateur comme le domaine qui est dans votre adresse e-mail. Par
   exemple, pour jack@linux.org, ce serait linux.org. Puis, configurez
   smtp-server comme votre serveur de courrier POP (le même que celui que
   vous avez utilisé dans la configuration de fetchmail). Pour le même
   exemple, nous entrerions mail.linux.org. Si vous désirez les forums
   Usenet, configurez votre serveur nntp avec le serveur de news de votre
   F.A.I.

   Bon, on a fini. Tout devrait fonctionner correctement maintenant. Pour
   vous connecter à votre F.A.I., lancez ~/ppp-connect sous le compte
   root. Pour recevoir votre courrier, lancez fetchmail -a sous votre
   compte. Pour parcourir votre courrier et les forums Usenet, utilisez
   Pine. Si vous voulez naviguer sur le web, installez un navigateur en
   mode texte comme Lynx.

   _Envoyez tous commentaires et suggestions à : mstrates@croftj.net_

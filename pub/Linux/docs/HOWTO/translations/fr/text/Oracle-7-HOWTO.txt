
                             Oracle Database HOWTO

Paul Haigh, paul@nailed.demon.co.uk
Adaptation française par Stéphane Lee Chip Hing, slee@ile-maurice.com

   v1.2, 04 août 1998
     _________________________________________________________________

   _Un guide pour installer et configurer le Serveur de Base de Données
   Oracle sur un système Linux._
     _________________________________________________________________

1. Introduction

1.1 Historique des Versions

     * v0.1 - 21 fév. 1998 - Paul Haigh - Version Originale
     * v0.2 - 01 mars 1998 - Paul Haigh - Adjonction des Commentaires des
       Relecteurs
     * v1.0 - 10 mars 1998 - Paul Haigh - Publié sous LDP
     * v1.1 - 20 juin 1998 - Paul Haigh - Section Dépannage ajoutée et
       rangement général
     * v1.2 - 04 août 1998 - Paul Haigh - Nouvelles d'Oracle Corp ajoutée
       et section sur les Améloirations Futures supprimée.

1.2 Copyright

   Le HOWTO Oracle Database est copyright (c) 1998, Paul Haigh.

   Comme tous les documents HOWTO Linux, celui-ci peut être reproduit et
   distribué en entier ou en extrait, sur n'importe quel support,
   physique ou électronique, tant que ce copyright est maintenu sur
   toutes les copies.

   La redistribution commerciale est autorisée et encouragée. Cependant,
   l'auteur aimerait être avisé de telles distributions. Vous pouvez
   traduire ce HOWTO dans n'importe quelle langue tant que vous incluez
   une notice précisant celui ou celle qui a traduit ce document.

1.3 Mise en garde

   Bien que j'ai essayé d'inclure les informations les plus correctes et
   les plus récentes a ma disposition, je ne peux garantir que leur
   utilisation ne va pas occasionner des pertes de données ou de
   matériel. Je ne fournis AUCUNE GARANTIE sur les informations dans ce
   HOWTO et je ne suis responsable d'aucune conséquence résultant de
   l'utilisation des informations de ce document.

1.4 But de ce HOWTO

   Dans ce HOWTO, je vais essayer de couvrir l'installation et
   l'administration basique d'une base de données Oracle tournant sur une
   machine Linux. Je vais couvrir particulièrement l'installation du
   serveur Oracle, la configuration de SQL*Net et du client.

   Ce document n'est pas un tutoriel complet sur l'utilisation et
   l'administration d'une base de données Oracle. Si c'est cela que vous
   recherchez, il y a de bons livres sur ces sujets publiés par O'Reilly
   et autres.

   Je ne vais pas non plus couvrir le développement des programmes Oracle
   sous UNIX. Si cela vous est absolument nécessaire, je vous
   recommanderais d'acheter le système de développement de SCO (avec
   OpenServer 5.x) , dont on m'a dit qu'il pouvait être obtenu pour un
   prix très raisonnable US $19, à SCO

1.5 Pré-Requis

   Je suppose acquises un certain nombre de notions pour comprendre la
   suite du HOWTO.
     * _Le CD Serveur Oracle pour SCO OpenServer (Version 7.3.3.0.0.)_

                Ceci _doit_ être une copie légale. N'oubliez pas
                qu'Oracle est une société commerciale et vend ses
                produits. Si vous voulez une base de données compatible
                SQL gratuite, utilisez PostgreSQL ou quelque chose de
                similaire.

                Il est aussi possible d'installer Oracle, avec une
                licence d'évaluation de 60 jours, à partir d'un fichier
                tar téléchargeable sur le site web d'Oracle. Je ne l'ai
                pas personnellement essayé et ce n'est pas vérifié.

     * _Un Serveur Linux_

                Vous n'auriez pas lu ceci sans un... N'est-ce pas?

     * _Noyau 2.0.30+_

                Je ne peux garantir que les instructions seront fiables
                pour les autres noyaux. (ni pour le 2.0.30,
                d'ailleurs...)

     * _iBCS_

                Il est très important que ceci soit installé et tourne
                avec la version la plus récente possible pour votre
                plate-forme. (J'utilise iBCS-2.0-10.i386.rpm de RedHat
                Linux).

     * _Beaucoup d'espace disque_

                600 Mb+ est une quantité raisonnable. Il est possible
                d'installer avec moins de place mais vous devez faire des
                sacrifices, et je ne commence jamais avec ça. Néanmoins,
                je vais essayer de souligner les endroits où l'on peut
                libérer de l'espace.

     * _32Mb+ Ram_

                Je sais que ceci peut sembler important, surtout en ce
                qui concerne Linux, mais n'oubliez pas que Oracle est un
                logiciel complexe. Vous n'auriez pas ces réserves sur
                SCO!

                Je ne dis pas que Oracle ne marchera pas avec moins, mais
                que c'est le minimum recommandé par Oracle, ce que je
                n'aurais pas conseillé.

     * _Licences de Oracle_

                Je sais que je l'ai deja mentionné ceci mais je voudrais
                être clair sur son importance. Utilisez les logiciels
                d'Oracle sans licence est illégal.

1.6 Nouvelles d'Oracle Corporation

   Oracle a cédé sous la pression de la communauté Linux. Oracle
   Corporation a décidé de supporter _officiellement_ Oracle 8 sur la
   plate-forme Linux (i386). Elle doit être lancé en décembre 1998, selon
   le site web d'Oracle.

   Mieux encore, Oracle va aussi porter Oracle Applications sur Linux. Il
   doit être disponible dans le premier semestre 1999, selon le site web
   d'Oracle.

   Références:
     * http://www.oracle.com/html/linux.html
     * http://www.news.com/News/Item/0,4,24436,00.html
     * http://www.zdnet.com/pcweek/news/0720/20morac.html

2. Installation du logiciel Oracle

2.1 Préparation du Serveur

  Création d'un Utilisateur Oracle

   Nous avons évidemment besoin d'un utilisateur pour maintenir la base
   de données Oracle. Comme nous n'avons l'intention de relier le noyau
   Oracle (plus sur ceci plus tard), nous devons accepter les noms
   d'utilisateur et de groupe par défaut d'Oracle. Il inclut
   l'utilisateur ORACLE et le groupe DBA.

    1. Se connecter comme root
    2. Créer l'utilisateur oracle et le groupe dba.
       ______________________________________________________________

$ groupadd dba
$ useradd  oracle
       ______________________________________________________________

    3. S'assurer que le répertoire personnel est créé pour l'utilisateur
       oracle.
       ______________________________________________________________

$ mkdir /home/oracle
$ mkdir /home/oracle/7.3.3.0.0 (Version of Oracle)
$ chown -R oracle.dba /home/oracle
       ______________________________________________________________

2.2 Installation depuis le CDROM

   Malheureusement, l'Installateur Oracle sur le CD SCO ne marchera pas.
   Beaucoup de problèmes peut être rencontrés, des core dumps aux
   blocages. On doit donc copier les fichiers du CDROM manuellement et
   les décompresser:

   (S'assurer que le CDROM est monté sur le système).
    1. Se connecter comme utilisateur Oracle
    2. Changer de répertoire pour /home/oracle/7.3.3.0.0.
    3. Copier les fichiers d'installation du CDROM
       ______________________________________________________________

$ cp -a /mnt/cdrom/* .
       ______________________________________________________________

    4. Décompresser les fichiers Oracle du CDROM.
       ______________________________________________________________

$ find . -name *_ -exec ~/7.3.3.0.0/orainst/oiuncomp {} \;
       ______________________________________________________________

2.3 Tâches de Post Installation

  Tâches pour Root

   Ajouter les lignes suivantes dans /etc/profile ou dans .profile pour
   chaque utilisateur d'Oracle.
       ______________________________________________________________

# Oracle Specific
ORACLE_HOME=/home/oracle/7.3.3.0.0
ORACLE_SID=orcl
ORACLE_TERM=vt100
export ORACLE_HOME ORACLE_SID ORACLE_TERM

# Changer le chemin pour Oracle
PATH="$PATH:$ORACLE_HOME/bin"
       ______________________________________________________________

   Nous devons aussi changer le propriétaire et les permissions de
   l'utilitaire Oracle d'augmentation de ulimit.
       ______________________________________________________________

$ chown root.root $ORACLE_HOME/bin/osh
$ chmod u+s $ORACLE_HOME/bin/osh
       ______________________________________________________________

  Tâches pour Oracle

   Changer les permissions pour les fichiers Oracle pour s'assurer de
   leur bonne exécution.
       ______________________________________________________________

$ chmod +x $ORACLE_HOME/bin/*
$ chmod u+s $ORACLE_HOME/bin/oracle
       ______________________________________________________________

   Les outils Oracle demandent que les messages soient dans le répertoire
   $ORACLE_HOME/tool_name/mesg. Donc, déplacez les fichiers msb des
   répertoires msg_ship aux répertoires mesg.
       ______________________________________________________________

$ mv $ORACLE_HOME/plsql/mesg/mesg_ship/* $ORACLE_HOME/plsql/mesg/.
$ mv $ORACLE_HOME/rdbms/mesg/mesg_ship/* $ORACLE_HOME/rdbms/mesg/.
$ mv $ORACLE_HOME/svrmgr/mesg/mesg_ship/* $ORACLE_HOME/svrmgr/mesg/.
       ______________________________________________________________

   Créer les répertoires suivants, s'ils n'existent pas:
       ______________________________________________________________

$ mkdir $ORACLE_HOME/rdbms/log
$ mkdir $ORACLE_HOME/rdbms/audit
$ mkdir $ORACLE_HOME/network/log
       ______________________________________________________________

  Ceux que vous pouvez enlever

   Les répertoires suivants peuvent être enlevés sans problème:
     * $ORACLE_HOME/guicommon2/
     * $ORACLE_HOME/ctx/
     * $ORACLE_HOME/md/
     * $ORACLE_HOME/mlx/
     * $RACLE_HOME/precomp/
     * $ORACLE_HOME/slax/

3. Création d'une base de données

   Maintenant que le serveur Oracle est installé, nous devons créer une
   base de données pour tester l'installation. Si vous utilisez Oracle
   7.2.x ou une version anterieure, veuillez lire la section Dépannage
   ci-dessous.

3.1 Créer le fichier d'Initialisation

   Copiez $ORACLE_HOME/dbs/init.ora vers $ORACLE_HOME/dbs/initorcl.ora:
       ______________________________________________________________

$ cd $ORACLE_HOME/dbs
$ cp init.ora initorcl.ora
       ______________________________________________________________

   Le modifier en ajoutant les lignes suivantes:
       ______________________________________________________________

db_name = orcl
COMPATIBLE=7.3.3.0.0
       ______________________________________________________________

3.2 Création du script pour l'installation de la base de données

   Créer un fichier script nommé makedb.sql dans le répertoire
   $ORACLE_HOME/dbs:
       ______________________________________________________________

connect internal
startup nomount
set echo on
spool makedb.log
create database orcl
        maxinstances 1
        maxlogfiles  8
        datafile '$ORACLE_HOME/dbs/orcl_syst_01.dbf' size 40M reuse
        logfile
                '$ORACLE_HOME/dbs/orcl_redo_01.dbf' size 1M reuse,
                '$ORACLE_HOME/dbs/orcl_redo_02.dbf' size 1M reuse,
                '$ORACLE_HOME/dbs/orcl_redo_03.dbf' size 1M reuse;
@$ORACLE_HOME/rdbms/admin/catalog.sql
create tablespace rollback
        datafile '$ORACLE_HOME/dbs/orcl_roll_01.dbf' size 8.5M reuse;
create tablespace temp
        datafile '$ORACLE_HOME/dbs/orcl_temp_01.dbf' size 5M reuse
        temporary;
create tablespace users
        datafile '$ORACLE_HOME/dbs/orcl_user_01.dbf' size 10M reuse;
create rollback segment r1 tablespace rollback
        storage ( optimal 5M );
alter rollback segment r1 online;
connect system/manager
@$ORACLE_HOME/rdbms/admin/catdbsyn.sql
connect internal
@$ORACLE_HOME/rdbms/admin/catproc.sql
connect system/manager
@$ORACLE_HOME/sqlplus/admin/pupbld.sql
spool off
exit
       ______________________________________________________________

3.3 Exécuter le script pour l'installation de la base de données

   Démarrer svrmgrl et exécuter le script:
       ______________________________________________________________

$ cd $ORACLE_HOME/dbs
$ svrmgrl

Oracle Server Manager Release 2.3.3.0.0 - Production

Copyright (c) Oracle Corporation 1994, 1995. All rights reserved.

Oracle7 Server Release 7.3.3.0.0 - Production Release
PL/SQL Release 2.3.3.0.0 - Production

SVRMGR> connect internal
Connected.
SVRMGR> startup nomount
ORACLE instance started.
Total System Global Area       4313312 bytes
Fixed Size                       41876 bytes
Variable Size                  4140364 bytes
Database Buffers                122880 bytes
Redo Buffers                      8192 bytes
SVRMGR> @makedb
<beaucoup de messages>
SVRMGR> exit
Server Manager complete.
       ______________________________________________________________

3.4 Démarrer la base de données

   Premièrement, nous devons lancer la base de données manuellement (nous
   l'automatiserons plus tard). Pour démarrer une base de données Oracle,
   nous devons émettre la commande startup en étant connecté localement:
       ______________________________________________________________

$ svrmgrl

Oracle Server Manager Release 2.3.3.0.0 - Production

Copyright (c) Oracle Corporation 1994, 1995. All rights reserved.

Oracle7 Server Release 7.3.3.0.0 - Production Release
PL/SQL Release 2.3.3.0.0 - Production

SVRMGR> connect internal
Connected.
SVRMGR> startup
ORACLE instance started.
Total System Global Area       4313316 bytes
Fixed Size                       41876 bytes
Variable Size                  4140368 bytes
Database Buffers                122880 bytes
Redo Buffers                      8192 bytes
Database mounted.
Database opened.
SVRMGR> exit
Server Manager complete.
       ______________________________________________________________

3.5 Arrêter la base de données

   Il est important de mentionner ici que redémarrer un serveur Linux
   sans fermer auparavant la base de données Oracle risque fort de
   corrompre la base de données.

   Donc, avant d'émettre la commande Linux shutdown, il est sage de
   fermer le base de données:
       ______________________________________________________________

$ svrmgrl

Oracle Server Manager Release 2.3.3.0.0 - Production

Copyright (c) Oracle Corporation 1994, 1995. All rights reserved.

Oracle7 Server Release 7.3.3.0.0 - Production Release
PL/SQL Release 2.3.3.0.0 - Production

SVRMGR> connect internal
Connected.
SVRMGR> shutdown
Database closed.
Database dismounted.
ORACLE instance shut down.
SVRMGR> exit
Server Manager complete.
       ______________________________________________________________

3.6 Créer un Utilisateur par défaut

   La base de données, telle qu'elle a été créée, a deux utilisateurs
   spéciaux qui sont créés automatiquement. Ce sont;
       ______________________________________________________________

Username                Password

SYSTEM                  MANAGER
SYS                     change_on_install
       ______________________________________________________________

   Ces utilisateurs sont typiquement utilisés pour maintenir les
   informations sur le dictionnaire standard de données pour la base de
   données. C'est une bonne idée de changer les mots de passe par défaut
   aussitôt que possible.

   Ceci peut être fait par:
       ______________________________________________________________

sqlplus system/manager

SQL*Plus: Release 3.3.3.0.0 - Production on Sat Feb 21 12:43:33 1998

Copyright (c) Oracle Corporation 1979, 1996.  All rights reserved.


Connected to:
Oracle7 Server Release 7.3.3.0.0 - Production Release

SQL> alter user system identified by <newpassword>;

User altered.

SQL> alter user sys identified by <newpassword>;

User altered.

SQL> exit;
Disconnected from Oracle7 Server Release 7.3.3.0.0 - Production Release
PL/SQL Release 2.3.3.0.0 - Production
       ______________________________________________________________

   Comme l'utilisateur system/manager est similaire à l'utilisateur root
   sur une machine UNIX, nous devons créer un utilisateur avec moins de
   pouvoir à causer des dégats possibles (rappelez-vous de lancer la base
   de données avant d'essayer de créer un utilisateur).

   Se connecter à SQL*Plus et créer un utilisateur:
       ______________________________________________________________

$ sqlplus system/manager

SQL*Plus: Release 3.3.3.0.0 - Production on Sat Feb 21 12:43:33 1998

Copyright (c) Oracle Corporation 1979, 1996.  All rights reserved.


Connected to:
Oracle7 Server Release 7.3.3.0.0 - Production Release
PL/SQL Release 2.3.3.0.0 - Production

SQL> create user <user> identified by <psw>
  2  default tablespace users
  3  temporary tablespace temp;

User created.

SQL> grant connect, resource to <user>

Grant succeeded.

SQL> exit
Disconnected from Oracle7 Server Release 7.3.3.0.0 - Production Release
PL/SQL Release 2.3.3.0.0 - Production
       ______________________________________________________________

   Maintenant que vous avez un nouvel utilisateur sur le système, vous
   pouvez jouer avec. Pour se connecter sur la base de données Oracle:
       ______________________________________________________________

$ sqlplus <user>/<password>
       ______________________________________________________________

   Si ceci s'exécute sans messages d'erreur, vous avez donc une base de
   données Oracle qui marche. Si vous ne voulez vous connecter qu'à
   partir de ce serveur, votre travail est donc terminé. Amusez-vous!

   Si, cependant, comme la plupart des gens, vous voulez configurer la
   partie réseau du logiciel pour que vous puissiez vous connecter depuis
   d'autres machine, continuez votre lecture.

4. Configurer SQL*Net sur le Serveur

   Tous ces fichiers configurent la partie réseau d'Oracle (SQL*Net ou
   Net8 pour Oracle8). Ces fichiers doivent être créés sur le serveur
   dans le répertoire $ORACLE_HOME/network/admin.

4.1 tnsnames.ora

   Le fichier TNSNAMES.ORA identifie les services disponibles depuis la
   machine. Dans notre cas, nous décrirons toutes les bases de données
   que le serveur a monté. Pour chaque base de données sur votre serveur,
   ajouter une section comme ci-dessous:
       ______________________________________________________________

orcl.world =
  (DESCRIPTION =
    (ADDRESS_LIST =
        (ADDRESS =
          (COMMUNITY = tcp.world)
          (PROTOCOL = TCP)
          (Host = <INSERER LE NOM LOGIQUE DU SERVEUR ICI> )
          (Port = 1521)
        )
        (ADDRESS =
          (COMMUNITY = tcp.world)
          (PROTOCOL = TCP)
          (Host = <INSERER LE NOM LOGIQUE DU SERVEUR ICI> )
          (Port = 1526)
        )
    )
    (CONNECT_DATA = (SID = ORCL)
    )
  )
       ______________________________________________________________

4.2 listener.ora

   Le fichier listener.ora contient la description des services auxquels
   d'autres machines sont autorisées à se connecter et toutes les
   configurations nécessaires pour l'écouteur du serveur.

   Il contient les sections pour le nom de l'écouteur, son adresse, les
   bases de données desservies par l'écouteur et les paramètres de
   configuration.

   Voici un exemple:
       ______________________________________________________________

# Nom de l'écouteur et les adresses a écouter
LISTENER =
        ( ADDRESS_LIST =
                (ADDRESS =
                        (PROTOCOL=tcp)
                        (HOST=<INSERT HOST>)
                        (PORT=1521)
                        (COMMUNITY=UK_SUP_TCPIP)
                )
                (ADDRESS =
                        (PROTOCOL=ipc)
                        (KEY=700)
                        (COMMUNITY=UK_SUP_TCPIP)
                )
        )

# Liste des services désservis par l'écouteur
SID_LIST_LISTENER=
        (SID_LIST=
                (SID_DESC=
                        (SID_NAME=orcl)
                        (ORACLE_HOME=/home/oracle/7.3.3.0.0)
                )
        )

# Début des paramètres de configuration
TRACE_LEVEL_LISTENER=OFF
TRACE_FILE_LISTENER = "listener"
LOG_FILE_LISTENER = "listener"
CONNECT_TIMEOUT_LISTENER = 10
STOP_LISTENER = YES
DBA_GROUP = dba
       ______________________________________________________________

4.3 sqlnet.ora

   Le fichier sqlnet.ora contient la configuration pour le noeud du
   réseau. Ceci est indépendant du nombre de bases de données ou du
   nombre d'écouteurs. La chose la plus importante dans ce fichier est la
   variable de configuration Timeout des Connexions Mortes.

   Le timeout des connexions mortes vérifie chaque processus entrant à la
   base de données et assure que le côté client répond toujours. Si le
   client (de tout type) ne répond pas, le processus en tâche de fond du
   serveur Oracle sera tué.

   Ceci est très utile si vous avez plusieurs clients qui accèdent à la
   base de données, surtout pendant la phase de développement où ces
   clients ne réussiront certainement pas à sortir proprement de la base
   de données Oracle.

   Voici une copie de mon fichier sqlnet.ora pour vous servir d'exemple:
       ______________________________________________________________

TRACE_LEVEL_CLIENT = OFF
sqlnet.expire_time = 30         # le nombre de secondes entre les vérifications
 des clients.
names.default_domain = world
name.default_zone = world
       ______________________________________________________________

4.4 Lancer et Arrêter les Ecouteurs.

   Maintenant que la configuration des écouteurs et de SQL*Net est finie,
   nous pouvons essayer de connecter la base de données en utilisant la
   partie réseau. (Avant nous utilisions l'accès direct à la base de
   données, alors qu'ici nous simulons une connexion depuis une machine
   cliente distante).

   Pour lancer l'écouteur en utilisant la configuration ci-dessus:
       ______________________________________________________________

$ lsnrctl

LSNRCTL for SCO System V/386: Version 2.3.3.0.0 - Production on 23-FEB-98 20:38
:25

Copyright (c) Oracle Corporation 1994.  All rights reserved.

Welcome to LSNRCTL, type "help" for information.

LSNRCTL> start
Starting /home/oracle/7.3.3.0.0/bin/tnslsnr: please wait...

TNSLSNR for SCO System V/386: Version 2.3.3.0.0 - Production
System parameter file is /home/oracle/7.3.3.0.0/network/admin/listener.ora
Log messages written to /home/oracle/7.3.3.0.0/network/log/listener.log
Listening on: (ADDRESS=(PROTOCOL=tcp)(DEV=6)(HOST=192.168.1.1)(PORT=1521))
Listening on: (ADDRESS=(PROTOCOL=ipc)(DEV=10)(KEY=700))

Connecting to (ADDRESS=(PROTOCOL=tcp)(HOST=magic.com)(PORT=1521)(COMMUNITY=UK_S
UP_TCPIP))
STATUS of the LISTENER
------------------------
Alias                     LISTENER
Version                   TNSLSNR for SCO System V/386: Version 2.3.3.0.0 - Pro
duction
Start Date                23-FEB-98 20:38:50
Uptime                    0 days 0 hr. 0 min. 0 sec
Trace Level               off
Security                  OFF
SNMP                      ON
Listener Parameter File   /home/oracle/7.3.3.0.0/network/admin/listener.ora
Listener Log File         /home/oracle/7.3.3.0.0/network/log/listener.log
Services Summary...
  orcl          has 1 service handler(s)
The command completed successfully
LSNRCTL> exit
       ______________________________________________________________

   Pour arrêter les écouteurs:
       ______________________________________________________________

$ lsnrctl

LSNRCTL for SCO System V/386: Version 2.3.3.0.0 - Production on 23-FEB-98 20:43
:20

Copyright (c) Oracle Corporation 1994.  All rights reserved.

Welcome to LSNRCTL, type "help" for information.

LSNRCTL> stop
Connecting to (ADDRESS=(PROTOCOL=tcp)(HOST=magic.com)(PORT=1521)(COMMUNITY=UK_S
UP_TCPIP))
The command completed successfully
LSNRCTL> exit
       ______________________________________________________________

   Si vous avez une configuration DNS qui ne retourne pas l'adresse IP
   pour le nom logique specifié, le lancement et l'arrêt de l'écouteur
   prendront donc in certain temps. (2-3 mins. dépendant de la variable
   timeout du DNS). Si c'est le cas , ne vous inquiétez pas. Soyez
   patient.

5. Configuration du Client

5.1 Clients Windows

   La configuration SQL*Net sur un PC avec les versions récentes du
   logiciel Client Oracle est très facile. La meilleure façon (et la plus
   facile) pour réussir l'installation d'un client qui marche
   entièrement, est d'utiliser l'outil SQL*Net Easy Configuration fourni
   par Oracle.

   Cet outil a une interface qui vous guidera dans l'installation des
   fichiers tnsnames.ora et sqlnet.ora.

   Sélectionnez "Add Database Alias" et entrez le nom pour l'alias
   demandé. Cet alias est le nom par lequel vous allez vous référer à
   l'instance de la base de données, et doit donc être le même que celui
   de l'instance (orcl dans ce cas).

   Sélectionnez TCP/IP comme protocole, le nom logique de la machine
   hébergeant la base de données et le nom de l'instance de la base de
   données.

   C'est tout.

   Cependant, si vous n'avez pas l'outil SQL*Net Easy Configuration Tool,
   ne vous inquietez pas. Vous pouvez simplement créer les fichiers
   tnsnames.ora et sqlnet.ora dans le répertoire
   $ORACLE_HOME/network/admin sur le client, exactement comme sur le
   serveur. Il fournira comme alias le même que sur le serveur (toujours
   une bonne idée de toute façon).

5.2 Clients Unix

   Les clients UNIX ne sont pas très différents des clients Windows. Si
   vous avez Network Manager d'Oracle, alors utilisez-le de la même façon
   que ci-dessus, sinon vous pouvez utiliser juste les mêmes fichiers de
   configuration que sur le serveur dans le répertoire
   $ORACLE_HOME/network/admin.

6. Lancement et Arrêt Automatique

6.1 dbstart et dbstop

   Le démarrage et l'arrêt automatique de la base de données Oracle
   peuvent être effectués (avec la version 7.3.3.0.0) avec les fichiers
   dbstart et dbshut, tous deux fournis par Oracle. Ces fichiers
   dépendent sur l'existence du fichier /etc/oratab pour fonctionner
   (bien qu'en modifiant les fichiers dbshut et dbstart il puissent être
   déplacés).

   Le format du fichier /etc/oratab est le suivant:
       ______________________________________________________________

SID:ORACLE_HOME:AUTO
       ______________________________________________________________

   Un exemple:
       ______________________________________________________________

orcl:/home/oracle/7.3.3.0.0:Y
leaveup:/home/oracle/7.3.2.1.0:N
       ______________________________________________________________

6.2 init.d et rc.d

   Pour démarrer et arrêter la base de données quand la machine se lance
   ou s'éteint, il faut modifier les routines de démarrage pour la
   machine Linux. Ceci est très facile, bien que je devrais souligner que
   cela peut changer suivant la distribution Linux (Slackware, Debian,
   RedHat, etc). Je vais montrer quelques exemples qui marchent avec
   RedHat Linux 5.0. Pour modifier ceux-ci pour votre propre distribution
   Linux, veuillez voir votre documentation Linux. (bien que ceci doit
   être valable pour n'importe quel UNIX de type Sys V)

   Premièrement, nous devons créer le script qui exécutera dbshut et
   dbstart dans le répertoire /etc/rc.d/init.d . Créez le fichier suivant
   comme /etc/rc.d/init.d/oracle:
       ______________________________________________________________

#!/bin/sh
#
# /etc/rc.d/init.d/oracle
# Description: Starts and stops the Oracle database and listeners
# See how we were called.
case "$1" in
  start)
        echo -n "Starting Oracle Databases: "
        echo "----------------------------------------------------" >> /var/log
/oracle
        date +"! %T %a %D : Starting Oracle Databases as part of system up." >>
 /var/log/oracle
        echo "----------------------------------------------------" >> /var/log
/oracle
        su - oracle -c dbstart >> /var/log/oracle
        echo "Done."
        echo -n "Starting Oracle Listeners: "
        su - oracle -c "lsnrctl start" >> /var/log/oracle
        echo "Done."
        echo ""
        echo "----------------------------------------------------" >> /var/log
/oracle
        date +"! %T %a %D : Finished." >> /var/log/oracle
        echo "----------------------------------------------------" >> /var/log
/oracle
        touch /var/lock/subsys/oracle
        ;;
  stop)
        echo -n "Shutting Down Oracle Listeners: "
        echo "----------------------------------------------------" >> /var/log
/oracle
        date +"! %T %a %D : Shutting Down Oracle Databases as part of system do
wn." >> /var/log/oracle
        echo "----------------------------------------------------" >> /var/log
/oracle
        su - oracle -c "lsnrctl stop" >> /var/log/oracle
        echo "Done."
        rm -f /var/lock/subsys/oracle
        echo -n "Shutting Down Oracle Databases: "
        su - oracle -c dbshut >> /var/log/oracle
        echo "Done."
        echo ""
        echo "----------------------------------------------------" >> /var/log
/oracle
        date +"! %T %a %D : Finished." >> /var/log/oracle
        echo "----------------------------------------------------" >> /var/log
/oracle
        ;;
  restart)
        echo -n "Restarting Oracle Databases: "
        echo "----------------------------------------------------" >> /var/log
/oracle
        date +"! %T %a %D : Restarting Oracle Databases as part of system up."
>> /var/log/oracle
        echo "----------------------------------------------------" >> /var/log
/oracle
        su - oracle -c dbstop >> /var/log/oracle
        su - oracle -c dbstart >> /var/log/oracle
        echo "Done."
        echo -n "Restarting Oracle Listeners: "
        su - oracle -c "lsnrctl stop" >> /var/log/oracle
        su - oracle -c "lsnrctl start" >> /var/log/oracle
        echo "Done."
        echo ""
        echo "----------------------------------------------------" >> /var/log
/oracle
        date +"! %T %a %D : Finished." >> /var/log/oracle
        echo "----------------------------------------------------" >> /var/log
/oracle
        touch /var/lock/subsys/oracle
        ;;
  *)
        echo "Usage: oracle {start|stop|restart}"
        exit 1
esac
       ______________________________________________________________

   Il vaut la peine de vérifier si le fichier arrête et démarre vraiment
   correctement les bases de données pour le système. Vérifiez le fichier
   de log, /var/log/oracle, pour les messages d'erreur.

   Une fois que le script marche, nous devons créer les liens symboliques
   de start et kill dans les répertoires appropriés de niveau d'exécution
   (runlevel) /etc/rc.d/rcX.d.

   Les commandes suivantes assureront que les bases de données vont
   démarrer dans les niveaux d'exécution 2,3 et 4:
       ______________________________________________________________

$ ln -s ../init.d/oracle /etc/rc.d/rc2.d/S99oracle
$ ln -s ../init.d/oracle /etc/rc.d/rc3.d/S99oracle
$ ln -s ../init.d/oracle /etc/rc.d/rc4.d/S99oracle
       ______________________________________________________________

   Pour arrêter les bases de données avant un réamorçage ou arrêt, nous
   avons besoin des liens suivants:
       ______________________________________________________________

$ ln -s ../init.d/oracle /etc/rc.d/rc0.d/K01oracle          # Halting
$ ln -s ../init.d/oracle /etc/rc.d/rc6.d/K01oracle          # Rebooting
       ______________________________________________________________

7. Autres trucs

7.1 Agent Intelligent

   Si vous avez besoin d'un Agent Intelligent Oracle, vous pouvez
   l'exécuter sans changement de la configuration.

   Pour démarrer le AI, essayez:
       ______________________________________________________________

$ lsnrctl dbsnmp_start
       ______________________________________________________________

   Pour arrêter l'AI, essayez:
       ______________________________________________________________

$ lsnrctl dbsnmp_stop
       ______________________________________________________________

   Il ne semble pas y avoir de message indiquant le lancement avec succès
   ou non de l'agent intelligent. Cependant, l'AI répond au gestionnaire
   _Enterprise_ sur le côté client. Donc, je ne peux que supposer qu'il
   marche.

8. Dépannage

   Voir ci-dessous les différents conseils de dépannage.

8.1 Je ne peux pas créer une base de données en utilisant Oracle 7.2.x.

   Les fichiers expédiés par Oracle dans les versions 7.2.x sont
   incorrects en supposant que vous voulez installer une configuration
   parallèle de serveur. Le fichier init.ora contient la ligne suivante:
       ______________________________________________________________

# define parallel server (multi-instance) parameters
ifile = ora_system:initps.ora
       ______________________________________________________________

   Pour fixer le problème, mettez la en commentaire:
       ______________________________________________________________

# define parallel server (multi-instance) parameters
#ifile = ora_system:initps.ora
       ______________________________________________________________

8.2 J'obtiens les défauts de segmentation dans le svrmgrl de la version
7.3.4.x.

   Ce problème m'a été signalé par un certain nombre de personnes. Gerald
   Weber gerald_weber@master.co.at l'a résolu:
       ______________________________________________________________

Bonjour Paul,

D'abord merci pour votre aide, mais aucun des problèmes possubles que vous pens
ez n'était responsable de mon problème.
Le problème esy l'émulateur iBCS lui-même.
Il semble que Oracle exécute les appels sysconf qui ne sont pas supportés dans
la version en cours d'iBCS.
Regardez la trace:

<7>[22]615 sysconf(34)
<7>iBCS2 unsupported sysconf call 34
<7>[22]615 sysconf error return linux=-22 -> ibcs=22 <Invalid argument>
<7>[24]615 sysconf(34)
<7>iBCS2 unsupported sysconf call 34
<7>[24]615 sysconf error return linux=-22 -> ibcs=22 <Invalid argument>

Solution:  patcher iBCS-source.apply avec le diff-patch suivant:


--- sysconf.c   Sun Apr 19 19:19:15 1998
+++ sysconf.c.ori       Sun Apr 19 19:28:45 1998
@@ -60,7 +60,6 @@
 #define _SC_JOB_CONTROL        5
 #define _SC_SAVED_IDS  6
 #define _SC_VERSION    7
-#define _SC_HACK_FOR_ORACLE 34

 #define _SC_PAGESIZE   11

@@ -97,11 +96,6 @@
                case _SC_SAVED_IDS: {
                        return (1);
                }
-
-               case _SC_HACK_FOR_ORACLE: {
-                 return (1);
-               }
-

                case _SC_PAGESIZE: {
                  return PAGE_SIZE;
       ______________________________________________________________

9. Crédits

   Ce document est basé sur un document écrit par Bob Withers. Des
   informations supplémentaires sont extraites des documents écrits par
   Georg Rehfeld et David Mansfield.

   Relectures supplémentaires faites par Bob Withers, Mark Watling, Peter
   Sodhi et Greg Hankins.

   Mes remerciements vont au support immense de la part des gens
   impliqués dans ce document et aux recherches qu'ils ont effectuées.
   Remerciements particuliers à Bob Withers et Mark Watling pour leurs
   commentaires additionnels et l'aide qu'ils m'ont apportée.

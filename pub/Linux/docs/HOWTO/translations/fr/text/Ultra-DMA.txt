
                         Le Linux Ultra-DMA Mini Howto

Brion Vibber, brion@pobox.com -- traduction : Maxime Baudin
mbaudin@club-internet.fr

   v2.0, 7 Août 1998
     _________________________________________________________________

   _Ce document est destiné à expliquer comment utiliser des disques et
   des interfaces UltraDMA (aussi connus sous le nom de Ultra-ATA ou bien
   Ultra-33) sous linux. La version la plus récente de ce document peut
   être trouvée,en version originale, à l'adresse suivante :
   http://pobox.com/~brion/linux/Ultra-DMA.html. Et en version française
   à : http://www.freenix.org/linux/mini/Ultra-DMA.html._
     _________________________________________________________________

1. Introduction

   Ce document est destiné à expliquer comment utiliser des disques et
   des interfaces UltraDMA (aussi connus sous le nom de Ultra-ATA ou bien
   Ultra-33) sous Linux. Dans certains cas, vous n'aurez aucun problème
   pour exploiter ce type de matériel, mais quelques conseils permettront
   d'accroître ses performances. Dans d'autres cas vous devrez faire
   d'énormes efforts simplement pour accéder à vos disques.

1.1 Mise en garde

   Les informations contenues dans ce document sont (autant que je sache)
   correctes et devraient fonctionner. Toutefois, il peut y avoir des
   erreurs de frappe, de mystérieuses erreurs de transmission, ou bien
   des incompatibilités dans votre système qui rendront inefficaces les
   techniques décrites dans ce document. Alors avant de "faire le malin"
   avec vos disques : FAITES DES SAUVEGARDES DE VOS DONNÉES VITALES !!!
   Si vous ne faites pas de sauvegardes régulières, il serait temps de
   commencer pour plus de sécurité.

1.2 Remerciements

   Michel Aubry - patch permettant l'utilisation de l'UDMA sur les jeux
   de composants (chipsets) VIA et apparentés pour les noyaux <=2.0.33 &
   d'autres infos, patch "grand unified UDMA" pour le 2.0.34 et +

   Andrew Balsa - Pour ses infos générales sur l'UDMA et le patch
   générique UDMA pour les jeux de composants (chipsets) INTEL TX, SiS et
   VP1

   Maxime Baudin - Traduction française

   Bokonon - ``Contrôleur'' contre ``interface''

   John G ( prefect@ipass.net) - pour la création du patch VIA VP2 et
   pour les informations qu'il m'a données

   John G. - Patch pour l'UDMA et le VIA plus quelques informations

   Martin Gaitan - pour la carte Promise ide0/ide1

   Andre M. Hedrick - Patch "Grand unified UDMA" pour le noyau 2.0.34+,
   Artop ATP850UF

   Norman Jacobowitz - pour m'avoir donné des infos sur le VIA3

   John Levon - Info sur les jeux de composants TX Pro mobos

   Peter Monta - Info sur l'utilisation de deux cartes Ultra33

   Masayoshi Nakano - Traduction Japonaise

   Gadi Oxman - pour la création du patch pour la carte Promise Ultra33
   et pour avoir trouvé les nombres magiques permettant un contournement
   logiciel du problème.

   Andy Pearce - Suggested adding info on the additional device files for
   hde-h

   Andrei Pitis - LILO patch

   Brion Vibber - Ce document

1.3 Historique de ce document

   V2.0, 7 Août 1998 : Grosses modifications et restructuration presque
   totale du document en deux parties : les interfaces intégrés aux
   cartes mères et les cartes d'extensions. Ajout du patch "Grand Unified
   UDMA" (composantes du patch Jumbo) pour le noyau 2.0.35. Les
   remerciements sont désormais dans l'ordre alphabétique. Changement du
   mot "contrôleur" par "interface" paraissant plus correct techniquement
   dans beaucoup de cas. Ajout d'info à propos de
   l'activation/désactivation de l'UDMA, de la liste noire et de bien
   d'autres choses.

   v1.45, 6 Juillet 1998 : mise à, jour - Red Hat 5.1 et un patch du
   noyau 2.0.34 pour la carte Promise Ultra33. Patch de LILO permettant
   de démarrer indépendamment des cartes contrôleurs PCI telles que la
   carte Promise Ultra33.

   v1.41, 3 Mai 1998 : Correction de quelques fautes, ajouts des
   traducteurs dans la section Remerciement.

   v1.4, 28 Avril 1998 : Patch générique pour L'UDMA, plus quelques
   informations générale. Ajout de la section Copie et distribution.

   v1.3, 5 Mars 1998 : infos sur le VIA VP3, de meilleures instructions
   pour les patchs, mise à jour des pointeurs pour patcher la carte
   Promise.

   v1.2, 27 Janvier 1998 : Infos supplémentaires pour l'environnement de
   la carte Promise.

   v1.1, 21 Janvier 1998 : Nouvelles infos sur le jeu de composant VIA,
   installation avec une Promise Ultra33 et validation des modes de
   transfert Bus Master et UDMA.

   v1.0, 19 Janvier 1998 : Plus ou moins complet, première version en
   SGML.

1.4 Copies et distribution

   Ce document peut être copié et distribué sans restriction à titre
   d'information. Il ne doit pas être modifié, excepté pour être remis en
   page, sans la permission de l'auteur. Vous pouvez traduire ce document
   dans une autre langue, cependant il est conseillé de contacter
   l'auteur en premier lieu, de sorte que les mises à jour de ce document
   vous soient envoyées en même temps qu'au Linux Documentation Projet.

2. Qu'est ce que l'Ultra DMA et pourquoi l'utiliser

   Voici un rapide survol des différentes technologies basées sur l'IDE.

2.1 IDE, EIDE et ATAPI

   Ce sont les "anciens" standards. La plupart des disques et contrôleurs
   non-SCSI que l'on trouve actuellement sont, désormais, au standard
   EIDE. Cependant les disques les plus récents sont au standard UDMA.

2.2 Bus Master DMA

   Le Bus Master DMA est une technologie permettant d'accélérer le débit
   de vos disques durs. Elle requièrt des cartes mères ainsi que des BIOS
   spécifiques et bien entendu un disque exploitant ces possibilités.

   Vous trouverez de plus amples informations à l'adresse suivante :
   http://developer.intel.com/design/pcisets/busmatr/FAQs.htm

2.3 Ultra-DMA, ou bien Ultra-ATA, ou bien Ultra33 et tous ce qui commence par
Ultra...

   Comme vous pouvez le constater, l'Ultra-DMA a beaucoup de noms,
   appelons-le UDMA.

   L'UDMA est la technologie IDE la plus avancée à l'heure actuelle. Elle
   permet d'atteindre des taux de transfert de 33.3 Mb/s, c'est à dire
   deux fois plus que l'EIDE, et pour un prix largement inférieur au
   SCSI. La plupart des nouveaux ordinateurs sont désormais livrés avec
   des contrôleurs et des disques UDMA. Il est aussi possible d'ajouter
   un contrôleur UDMA sur un système pour en augmenter les performances
   (comme la carte Promise Ultra33), même si vous utilisez de "vieux"
   disques IDE.

   Pour en apprendre plus sur l'UDMA, allez donc jeter un coup d'oeil à
   l'adresse suivante : http://www.quantum.com/src/whitepapers/ultraata/

   À noter que la longueur des nappes des disques UDMA doit être plus
   courte qu'avec du DMA ordinaire, préférez en général des câbles longs
   de 30 cm (12') au maximum.

2.4 Est-ce vraiment le "nec plus Ultra"

   Avant d'aller plus loin, éclaircissons un malentendu. Le taux de
   transfert de 33 Mb/s indiqué est le _taux de transfert en mode
   rafale_, et ce n'est pas quelque chose que vous verrez très souvent.
   Pour comprendre, voici un extrait de l'"udma-generic" : UDMA.txt

Les taux de transfert en rafale sont supposés aller de 16.6Mb/s (mode PIO 4) à
16.6Mb/s
(DMA mode 2) et jusqu'à 33Mb/s (UDMA). Dans son patch pour le noyau 2.1.55, Kim
-Hoe à
mesuré des taux de transfert en rafale avec un analyseur logique : 60ns/mot, ce
 qui
équivaut à 33Mb/s.

à noter que ces taux de transfert ne s'appliquent de sur/depuis le cache disque
 (476kB pour le
disque IBM 6.4 Gb) et à mon avis ne sont pas particulièrement significatifs pou
r la
majorité des utilisateurs de Linux.


Le noyau de Linux utilise le plus de RAM possible comme cache disque, et donc s
i les données
ne sont pas dans le cache du noyau, il y a peu de chances qu'elles soient dans
le cache disque (de
taille moins important).

   Le _taux de transfert continu_, la vitesse à laquelle les données
   peuvent être transférées du disque à la mémoire centrale où elles
   pourront être utilisées, est beaucoup plus significatif. Un moyen
   simple pour mesurer le "taux de transfert continu" est d'utiliser la
   commande hdparm, par exemple " hdparm -Tt /dev/hda" permet de mesurer
   le taux de transfert du premier disque IDE.

Voici quelques informations rassemblées après de nombreux tests, en utilisant
 l'utilitaire hdparm (écrit aussi par Mark Lord) :

Taux de transfert du mode PIO 4 sous Linux :    +/- 5.2 Mb/s

Taux de transfert du DMA mode 2 sous Linux :    +/- 7.2 Mb/s

Taux de transfert de l'UDMA mode 2 sous Linux : +/- 9.8 Mb/s

   Comme vous pouvez le constater, l'UDMA est toujours deux fois plus
   rapide que l'EIDE simple et plus rapide que le bus Mastering.

2.5 Comparer l'UDMA au SCSI

   Je n'ai pas de chiffres à vous donner, mais le consensus général est
   que le SCSI haut de gamme donne de bien meilleures performances que
   l'UDMA. Cependant si vous avez récemment regardé les prix des disques
   durs, vouz avez sans doute remarqué que les disques UDMA sont
   largement moins chers. Le rapport qualité/prix est en faveur de l'UDMA
   dans pratiquement tous les cas.

3. Utiliser vos disques UDMA avec une interface EIDE

   C'est relativement simple. Dans la mesure où les disques UDMA
   respectent la compatilibité descendante avec la norme EIDE, vous
   n'avez qu'à brancher votre disque sur votre contrôleur EIDE comme
   n'importe quel disque et Linux ne devrait avoir aucun problème pour le
   détecter. Toutefois vous serez bien entendu limité aux taux de
   transfert de l'EIDE.

4. Utiliser vos disques avec une interface UDMA

   Bon, j'ai une bonne nouvelle et une mauvaise nouvelle. La bonne
   nouvelle c'est que le contrôleur UDMA peut piloter en même temps des
   disques UDMA et des disques EIDE, et beaucoup plus rapidement qu'avec
   un contrôleur EIDE évidemment.

   La mauvaise nouvelle, c'est que l'actuel noyau stable de Linux
   (2.0.35) ne supporte pas parfaitement l'UDMA. Les noyaux de
   développement (actuellement 2.1.114) intègrent un support UDMA, mais
   il existe de nombreux patchs applicables aux noyaux actuels. De plus
   certains disques UDMA possédant leur propre carte intégrée, plutôt que
   sur la carte mère, requièrent soit d'utiliser un patch spécifique soit
   de ruser pour être fonctionnel. C'est pourquoi ce document existe :
   pour expliquer où trouver les patchs et comment ruser.

5. Cartes d'interfaces UDMA PCI

   Il existe des cartes d'interfaces PCI qui permettent d'utiliser l'UDMA
   sur un ordinateur sans changer de carte mère, ou pour ajouter quatre
   disques supplémentaires sur une machine dont les interfaces intégrées
   sont toutes utilisées. Elles peuvent aussi être trouvées préinstallées
   sur certains ordinateurs, tels que les Gateway 2000 ou les Dell.

   La plupart de ces cartes ne sont pas supportées par les versions
   stables du noyau (comme le 2.0.35), vous devez appliquer un patch sur
   le noyau ou utiliser un noyau de développement (la série 2.1.x). Si
   vous devez installer Linux sur un disque présent sur l'une de ces
   interfaces, vous aurez besoin d'utiliser quelques ruses un peu
   "tordues".

5.1 La carte Promise Ultra33 IDE

   C'est une carte PCI possédant deux canaux UDMA, permettant de
   connecter 4 disques. Toutes les informations concernant les prix, les
   spécificités etc. sont disponibles à l'adresse :
   http://www.promise.com.

   Cette carte est (par exemple) vendue avec les derniers modèles Gateway
   2000 à base de Pentium II, mais rien ne permet de savoir si elle sera
   livrée avec les futurs modèles.

   Le noyau 2.0.35 supporte explicitement l'UDMA et les noyaux de
   développement (actuellement 2.1.114) intègrent un support IDE PCI
   générique, ce qui inclut la détection automatique de la Promise
   Ultra33. Toutefois, les anciennes versions stables (2.0.34 et au
   dessous) n'intègrent pas ce support et dans la mesure où la plupart
   des distributions Linux incluent ces anciens noyaux, il peut s'avérer
   un peu difficile d'installer Linux.

   _Installer Linux avec une carte Promise_

   Bien qu'il existe un patch pour ce contrôleur, ce n'est pas très
   évident de l'appliquer et de recompiler votre noyau si Linux n'est pas
   encore installé ! Il existe pourtant une solution, qui peut peut-être
   marcher sur votre système. Merci à Gadi Oxman pour les informations
   ci-dessous, permettant d'accéder à la configuration de la carte.

Si l'on peut accéder à une console, à partir de la disquette
d'installation, alors on peut utiliser la commande "cat /proc/pci"
permettant d'afficher les paramètres de la carte:

        RAID bus controller: Promise Technology Unknown device (rev 1).
        Vendor id=105a. Device id=4d33
        Medium devsel.   IRQ12.   Master capable.   Latency=32
        I/o at 0xe000.    (a)
        I/o at 0xd804     (b)
        I/o at 0xd400     (c)
        I/o at 0xd004     (d)
        I/o at 0xc800     (e)

et passer en paramètre du noyau la commande suivante:
"ide2=a,b+2 ide3=c,d+2"

   à noter que les adresses ne seront sûrement pas les mêmes sur votre
   système. Par exemple, si l'on prend celles décrites ci-dessus, la
   commande sera : ''ide2=0xe000,0xd806 ide3=0xd400,0xd006''. Vous devrez
   éventuellement ajouter l'IRQ, ce qui donnera : ''ide2=0xe000,0xd806,12
   ide3=0xd400,0xd006,12''.Si vous n'utilisez que le premier canal IDE de
   la carte (si, par exemple, vous ne possédez qu'un disque, ou deux en
   maître et esclave sur le même canal), il n'est alors pas nécessaire de
   spécifier ide3.

   _Red Hat 5.1:_ Démarrer avec la disquette d'amorçage et tapez sur la
   touche "enter" à l'invite de commande. Le noyau se chargera puis il
   vous sera demandé de choisir une langue, un type de clavier et le type
   d'installation. D'autres informations, telles que le type de support
   contenant les sources, vous seront demandées. Vos réponses à tout cela
   importent peu pour le moment, le tout étant d'arriver à l'étape
   suivante. Ensuite, vous devriez tomber sur un écran avec le message
   suivant : ``Select Installation Path''. Appuyez sur Alt-F2 pour
   obtenir un invite de commande. Tapez ``cat /proc/pci'', notez les
   paramètres comme ci-dessus et redémarrez à partir de la disquette.
   Cette fois-ci, tapez ''linux ide2= _(entrez vos paramètres)_
   ide3=_(encore)_''.Il devrait désormais être possible de faire
   l'installation sur votre disque sans difficulté, cependant, LILO ne
   pourra probablement pas s'installer ; faites plutôt une disquette de
   démarrage à laquelle vous passerez les paramètres décrits ci-dessus
   tant que vous n'aurez pas patché LILO ainsi que le noyau.

   Avec la _Red Hat 5.0_ et la _Slackware 3.4_ : elles sont très
   similaires, mais avec une combine pour que les programmes
   d'installation ignorent /dev/hde-h (ce sont les disques identifiant
   l'ide2 et l'ide3). Pour installer à partir de ces disques ou sur
   ceux-ci, il est nécessaire de "surcharger" une interface ou les deux
   intégrées sur votre carte mère. Cependant, assurez-vous de ne pas
   écraser un périphérique que vous désirez installer ; par exemple si
   vous installez Linux à partir d'un lecteur de CD-ROM sur /dev/hdd
   (ide1 - interface intégrée) sur un disque dur sur /dev/hde (ide2 - la
   carte Ultra33), vous devrez surcharger le port ide0 (peu important)
   avec le port ide2 et laisser le port ide1 intact. En utilisant les
   numéros précédents vous démarrerez avec "ide0=0xe000,0xd806". Avec la
   RedHat 5.0 vous aurez une invite de commande en démarrant avec la
   disquette "rescue" ; la Slackware vous propose cette invite avec la
   disquette d'amorçage standard. Cependant la RedHat 5.0 a des
   difficultées pour démarrer après l'installation ; si vous avez des
   problèmes, vous pouvez télécharger une disquette d'amorçage Slackware
   sur ftp://ftp.cdrom.com/pub/linux/slackware-3.5/bootdsks.144/ et
   démarrer avec.

   Avec d'autres distributions Linux, vous devrez improviser un peu, mais
   la procédure devrait être globalement identique.

   _IMPORTANT :_ Sans le patch (présenté dans le chapitre UDMA
   générique), le noyau _a besoin_ de ces paramètres pour accéder à vos
   disques. De plus il est indispensable qu'à la configuration de LILO
   (que ce soit sur un disque ou sur une disquette) vous donniez
   _exactement les mêmes paramètres_ que ceux utilisés à l'installation.
   Autrement votre système ne démarrera pas. Il est toujours possible de
   les fournir au prompt de LILO (pressez la touche Majuscule, puis tapez
   ''linux ide2=_...._'') à chaque démarrage à condition de toujours
   avoir vos paramètres à portée de la main. Il est recommandé de patcher
   le noyau le plus vite possible pour ne plus avoir à se soucier de ça à
   chaque démarrage. Une fois démarré avec le noyau patché, vous n'aurez
   plus jamais à vous soucier de ces paramètres. Autant que je sache, il
   n'y a aucun moyen de passer des paramètres au démarrage d'une
   disquette contenant un noyau (crée avec la commande ''make zdisk''),
   vous _devrez_donc utiliser LILO ou autres 'loaders' permettant le
   passage de paramètres Au démarrage.

   Cependant, certains noyaux non patchés ont parfois des difficultés
   pour utiliser les adresses ide2 et ide3, même lorsque les disques sont
   correctement reconnus. Par conséquent, si vous n'avez pas réussi à
   installer linux à partir des infos ci-dessus, essayez de spécifier les
   adresses ide0 et ide1 à la place de ide2 et ide3 (merci à Martin
   Gaitan pour cette technique). Cela remplace alors les contrôleurs
   intégrés de votre carte mère (s'il y en a)avec ceux de la carte
   Promise. Notons que si vous avez un lecteur de CDROM IDE, branché sur
   votre carte mère, à partir duquel vous installez Linux, vous devrez
   vous assurer que vous ne supplanterez pas le contrôleur sur lequel ce
   lecteur est branché sous peine de ne pas pouvoir lancer l'installation
   ! Si le lecteur de CD est sur hda ou hdb, utilisez le port ide1 pour
   vos disques ; si le lecteur est sur hdc ou hdd, utilisez le port ide0.

   _Installer Linux... puis la carte Promise _

   Si ça ne marche toujours pas, vous devrez tenter une approche
   légèrement plus brutale. La méthode suivante fonctionne de façon
   pratiquement garantie, mais elle requiert que vous ouvriez votre
   ordinateur et tripatouilliez dedans. _ATTENTION :_ si vous n'avez pas
   l'habitude de brancher et débrancher des disques IDE, avant toute
   chose : _lisez les manuels_ livrés avec votre ordinateur, vos disques
   durs et/ou la carte Promise ! Si vous bousillez quelque chose sans
   savoir le réparer, vous pourriez le regretter.

   Cela dit, c'est très simple. De nos jours, la plupart des cartes mères
   possèdent des contrôleurs EIDE intégrés. Déconnectez vos disques de la
   carte Promise, et branchez-les sur les contrôleurs de votre carte
   mère. Si vous avez d'autres préripériques IDE sur votre carte mère,
   tels qu'un lecteur de CD-ROM ou un ZIP, l'installation sera plus
   facile si vous branchez votre disque UDMA sur un port libre (le
   secondaire si le primaire est utilisé), ou si vous retirez
   temporairement un périphérique dont vous n'avez pas immédiatement
   besoin (le lecteur ZIP IDE, ou votre lecteur de bande par exemple).
   Installez Linux, téléchargez et installez le patch pour la carte
   Promise (décrit dans la section suivante).

   Désormais, vous voilà prêt à rebrancher votre disque sur la carte
   Promise.... enfin presque. Pour plus de sûreté faites une disquette
   d'amorçage (cd /usr/src/linux; make zdisk) à partir de laquelle vous
   pourrez démarrer si LILO ne fonctionne pas. Soyons _très_ prudent
   :faites-en deux et mettez la seconde de coté pour le moment.

   Bien, maintenant c'est le moment de réfléchir un peu... Si vous n'avez
   qu'un disque et qu'il est sur la carte Promise, il est alors sûrement
   déclaré en /dev/hde ( a et b pour le contrôleur primaire de la carte
   mère, c et d pour le secondaire). Si vous branchez d'autres disques
   sur la carte Promise, alors le disque esclave sera en /dev/hdf, le
   disque maître du port secondaire sera en /dev/hdg et l'esclave en
   /dev/hdh.

   Éditez le fichier /etc/fstab, et changez le nom de toutes les
   partitions des disques que vous déplacez du contrôleur de la carte
   mère vers la carte Promise (/dev/hda -> /dev/hde ...). Si vous
   déplacez d'autres périphériques (tels que le CD-ROM, le lecteur ZIP..)
   que vous laissez sur la carte mère, pensez aussi à les renommer comme
   il se doit. Par exemple si votre CD-ROM était en maître sur le port
   primaire (/dev/hda), puis déplacé en /dev/hdc durant l'installation
   (pour pouvoir brancher votre disque dur en /dev/hda) et que vous le
   voulez le remettre en /dev/hda, alors pensez à modifier la fstab.

   Si vous utilisez LILO, n'oubliez pas de le reconfigurer pour que vos
   modifications soient prises en compte (la configuration de LILO sort
   du cadre de ce document, pour en savoir plus sur LILO, consultez le
   LILO mini-Howto), sans quoi vous ne pourrez pas redémarrer, à moins
   d'utiliser la disquette d'amorçage précédemment créée; disquette que
   vous voudrez aussi configurer pour pouvoir démarrer sur la nouvelle
   partition. Utilisez pour cela la commande rdev. Insérez la disquette
   dans le lecteur puis tapez ''rdev /dev/fd0 /dev/hde1''. Bien entendu
   cela signifie que votre partition root est la première partition de
   votre disque UDMA. Si ce n'est pas le cas (la mienne est sur /dev/hde7
   par exemple), utilisez évidemment le bon numéro de partition.

   Redémarrez. Votre système devrait désormais fonctionner correctement.

   _Patch pour la carte Promise_

   Les noyaux 2.0.35 et supérieurs incluent un support la carte Promise
   en natif, téléchargez et mettez à jour votre noyau à partir de votre
   distribution Linux ou à partir de http://www.kernel.org.

   Pour avoir plus d'instructions à propos de la compilation d'un noyau,
   consultez le Kernel HOWTO

   _Utiliser deux Ultra33 sur une machine_

   Cela ne fonctionne pas correctement actuellement... Ne le faites pas à
   moins d'être disposé à bricoler le noyau pour tenter de faire en sorte
   que cela fonctionne.

5.2 Artop ATP850UF

   Cette carte est supportée par le "udma-generic". L'installation de
   Linux sur un système possédant une telle interface doit être très
   similaire à celle effectuée pour l'installation de la carte Promise
   Ultra33.

5.3 Ajouter des périphériques

   Les interfaces IDE tertiaire et quaternaire (ide2 et ide3) utilisent
   des périphériques de la forme /dev/hde* jusqu'à /dev/hdh*. Sur les
   anciens noyaux, ces périphériques n'étaient pas créés automatiquement,
   vous devrez donc les ajouter manuellement pour que tout fonctionne
   correctement.

   Cela peut facilement être fait si vous avez installé les sources du
   noyau Linux. Lancez simplement /usr/src/linux/scripts/MAKEDEV.ide pour
   créer tous les périphériques nécessaires.

6. Les interfaces UDMA intégrées

   Ce sont des contrôleurs de disques UDMA intégrés aux cartes mères. Ils
   utilisent les E/S IDE standards et sont donc pleinement utilisables à
   des vitesses "non-UDMA" plus lentes tels qu'ils (les contrôleurs) sont
   exploités avec des noyaux non patchés (comme ceux fournis lors de
   l'installation de Linux). Par conséquent, ces derniers ne devraient
   pas poser de difficultés durant la phase d'installation, et les
   patcher pour exploiter la vitesse de l'UDMA tient plus du luxe que
   d'une étape fondamentale.

6.1 Intel FX, HX, VX, TX et LX

   Encore merci à Gadi pour ces infos

Le bus mastering est supporté sur les jeux de composants  TX à partir du noyau
2.0.31 et supérieur.

   Avec un noyau plus ancien ( comme la version 2.0.30 de la slackware
   3.4) le contrôleur fonctionnera comme un contrôleur EIDE. Dans tous
   les cas, le contrôleur sera automatiquement détecté par le noyau et
   vous ne devriez avoir aucun problème pour l'utiliser.

   Le support UDMA complet pour ces jeux de composants (chipsets) est
   décrit dans le chapitre: UDMA générique.

6.2 Le VIA VPx et les jeux de composants apparentés

   Cette interface est immédiatement reconnue par un noyau non patché
   comme un contrôleur EIDE, mais si en possédez un, vous serez intéressé
   par le fait qu'il existe un patch permettant d'un part d'améliorer les
   taux de transfert, et d'autre part de se débarrasser du message
   "unknown PCI device".

   Vous trouverez un patch à l'adresse http://www.ipass.net/~prefect/. Il
   a été conçu pour le jeux de composants VIA VP2/97 que l'on trouve sur
   les cartes mères FIC PA-2007 et PA-2011, mais il devrait fonctionner
   sur des contrôleurs apparentés. Ce patch fonctionne aussi sur les
   derniers contrôleurs VIA VP3, mais ce n'est pas une règle absolue.

   Ce patch permet uniquemement de faire du Bus Mastering (et pas de
   l'UDMA), mais c'est toujours mieux que le bon vieux mode EIDE. Suivez
   les instructions du site pour activer le Bus Mastering.

   Il existe un autre patch qui supporte toutes les fonctionnalités de
   l'UDMA, disponible à http://www.pyreneesweb.com/Udma/udma.html, écrit
   pour le jeux de composants VIA VT82C586B, et qui devrait aussi
   fonctionner sur les VP2, VP3, VPX, P6 et AGP Appolo. Suivez les
   instructions d'installation et de mise en oeuvre, mais il est
   conseillé de sauvegarder vos données importantes au cas où votre carte
   mère serait incompatible. Cependant, si ça marche la première fois, ça
   marchera pour les suivantes.

   À noter que ce patch ne fonctionne pas sur le jeu de composants VP1,
   mais ce dernier est supporté par le patch générique.

6.3 TX Pro et autres cartes "Pro"

   L'UDMA n'est pour le moment pas supporté par les cartes mères TX Pro.
   Ce ne sont pas les même que les TX mobo, et elles indiquent
   apparemment mal leurs possibilités DMA, d'où le problème. J'ai entendu
   dire que quelqu'un travaillait dessus. Un patch devrait donc
   apparaître dans le futur.

7. UDMA générique

   Le patch générique pour l'UDMA, modifié par André Balsa (
   andrebalsa@altern.org) et Michel Aubry à partir du driver DMA pour le
   jeu de composants Triton (écrit par Mark Lord), permet l'utilisation
   du mode UDMA pour les jeux de composants suivants (pour la version
   0.3) :

     * Tous les jeux de composants Intel: FX, HX, VX, TX, LX
     * Tous les jeux de composants SiS (seul le SiS5598 a été testé, mais
       toute la famille a le même périphérique intégré : le SiS5513).
     * Les jeux de composants VIA (seul le 82C586B a été testé, mais ils
       sont tous bassés sur la même interface). Un support de diagnostic
       spécifique est disponible pour l'interface à base de VIA.
     * Les cartes interfaces Promise et Artop PCI UDMA. Le support pour
       la carte interface Triones PCI UDMA n'est pas encore inclus.

   Il a été écrit pour pouvoir intégrer simplement de nouveaux jeux de
   composants.

   L'UDMA générique, aussi connu sous le nom de Grand Unified UDMA patch
   (GUUP - prononcez "goop" (NDT: "goupe"...avec un accent bien d'chez
   nous) ) a été incorporé dans le patch "Jumbo" qui intègre beaucoup
   d'autres caractéristiques très utiles telles que la détection
   automatique de plus de 64 Mo de mémoire et la détection de la
   fréquence d'horloge du microprocesseur. Vous pouvez obtenir le patch
   Jumbo pour le noyau 2.0.35 à http://www.altern.org/andrebalsa/linux/.
   Ce patch devrait aussi s'appliquer sur le noyau 2.0.36pre1 et peut
   être au delà.

   Voici quelques notes de l'auteur :

Les performances avec un disque IBM UDMA sur une bonne carte mère avoisinent le
s
10 Mb/s de taux de transfert maximum (mesuré avec hdparm -T -t).

Le jeu de composant Intel TX ne possède qu'une FIFO simple partagée pour ses de
ux
contrôleurs IDE, par conséquent utiliser 2 disques UDMA n'apportera pas de
grandes améliorations par rapport à l'utilisation d'un seul disque.
Par contre le jeu de composant SiS5598 possède deux contrôleurs séparés, chacun
avec sa
propre FIFO. Théoriquement, on peut approcher les 66 Mb/s de taux de transfert
sur les cartes mères possédant un SiS5598, en utilisant le driver md et en
faisant le transfert entre deux disques. Le jeu de composant SiS5571 est global
ement
identique. Je n'ai pas les spécifications du chipset VIA, je ne peux donc pas
dire grand-chose à leur propos.

Le driver (U)DMA écrit par Mark Lord possède des temps de setup
particulièrement faibles (temps de latence entre les transfert de données). C'e
st
une méthode idéale pour des transferts de données fréquents, avec des
petits
fichiers (comme ceux d'un serveur de news sous Linux), qui peut s'avérer parfoi
s
supérieur à son homologue SCSI.

8. Activer et désactiver l'UDMA

   Normalement, un noyau intégrant l'UDMA doit automatiquement permettre
   le support UDMA sur les disques et les interfaces adéquats. Cependant
   démarrant à partir du noyau 2.1.113, les transferts DMA sont
   désactivés par défaut tant que vous n'aurez pas configuré
   spécifiquement votre noyau pour l'activer automatiquement. Cela peut
   vous sembler un inconvénient, mais quelques disques et certaines
   interfaces ne fonctionnent pas correctement avec l'UDMA activé : voyez
   la "liste noire" ci-dessous.

8.1 Donner des paramètres au noyau à l'amorçage

   Sur les noyaux 2.1.113 et supérieurs, vous pouvez activer les
   transferts DMA sur les deux disques d'une interface donnée en
   utilisant le paramètre ideX=dma, où X est le numéro de l'interface (la
   première est 0).

   Les paramètres de démarrage du noyau peuvent être appliqués en
   utilisant LILO, LOADLIN ou la plupart des métodes d'amorçage de Linux.
   Pour plus d'informations, consultez le Bootdisk HOWTO

8.2 Utiliser hdparm

   hdparm est un programme permettant de forcer les paramètres de vos
   disques durs sous Linux. Parmi toutes ses possibilités, vous pouvez
   l'utiliser pour activer ou désactiver l'UDMA d'un disque et tester son
   taux de transfert continu.

   La plupart des distributions Linux incluent hdparm, mais vous devrez
   appliquer un patch pour inclure le support UDMA. Vous pouvez
   télécharger hdparm à
   ftp://sunsite.unc.edu/pub/Linux/system/hardware/hdparm-3.3.tar.gz et
   le patch à htmlurl
   name="http://pobox.com/ brion/linux/hdparm-3.3-udma.patch.gz"
   url="http://pobox.com/ brion/linux/hdparm-3.3-udma.patch.gz">.

   Compilez-le et installez-le comme suit :

cd /usr/src
tar zxvf /tmp/download/hdparm-3.3.tar.gz
cd hdparm-3.3
gzip -cd /tmp/download/hdparm-3.3-udma.patch.gz | patch -p0
make
if [ -f /sbin/hdparm ]; then rm -f /sbin/hdparm ; fi
make install
cp /usr/local/sbin/hdparm /sbin/hdparm

   _Pour activer l'UDMA sur un disque dur :_ hdparm -d1 /dev/hda

   _Pour désactiver l'UDMA :_ hdparm -d0 /dev/hda

   _Pour mesurer le taux de transfert d'un disque :_ hdparm -Tt /dev/hda

   _Pour voir quelles options sont activées :_ hdparm /dev/hda

   _Pour avoir plus de détails sur votre disque :_ hdparm -i /dev/hda

   Pour plus de précisions, lisez le man (``man 8 hdparm'').

9. Problèmes

9.1 La liste noire

   Les disques suivants sont sur liste noire. Vous _ne devez pas_
   utiliser l'UDMA avec ces disques sous peine de corrompre vos données.

     * Western Digital WDC AC22100H

   La partie UDMA du patch Jumbo-2.0.35-9 désactivera automatiquement le
   DMA sur ce disque.

9.2 Avez-vous "overclocké" votre machine ?

   Si oui, prenez garde ! Voici un extrait de la documentation de
   l'"udma-generic" :

N'OVERCLOCKEZ PAS le bus PCI. La fréquence maximum supportée par le bus PCI est
 de
37.5 Mhz. Certains (supposés compatibles) disques UDMA ne fonctionneront même p
as
à 37.5 Mhz, mais devraient être OK à 33.3 Mhz.

Dans tous les cas,ne JAMAIS, JAMAIS configurer le bus PCI a 41.5 Mhz

La fréquence RECOMMANDÉE et sans danger est de 33 Mhz.

9.3 Votre BIOS l'accepte-t-il ?

   Voici un autre extrait de la documentation de l'"udma-generic" :

Le véritale travail impliquant le paramétrage des composants pour les transfert
s DMA
 est réalisé principalement par le BIOS de chaque carte mère. Maintenant, bien
 entendu, il faut espérer que le BIOS a été correctement programmé...

Par exemple, la carte mère ASUS SP-97V avec son BIOS original (Rev. 1.03)
 aura un dysfonctionnement avec les pilotes modifiés pour les modes UMDA et DMA
 mode 2;
 Cela fonctionnera correctement si vous utilisez le mode PIO 4, ou sous Windows
 95 dans tous
 les modes. J'ai téléchargé la dernière image du BIOS (1.06) à
 partir du site Web ASUS et flashé l'EPROM avec cette version. Cela fonctionne
 parfaitement depuis (avec un bus à 66 Mhz).

Cela nous indique bien que c'est le BIOS qui initialise le contrôleur DMA avec
des
 timing spécifiques, Ma révision de  BIOS initiale avait probablement
 de mauvais timings. Comme les pilotes de Windows 95 les initialise lui-même(c.
a.d. qu'
 il ne se sert pas du BIOS pour paramétrer les timings de l'interface), je n'av
ais des
 problèmes qu'avec les pilotes de Linux, tandis que Windows 95 fonctionnait cor
rectement.

Donc, laissez-moi vous le répéter encore une fois : les pilotes (U)DMA Linux s'
appuient
 sur des données du BIOS en supposant qu'elles sont correctes. Si vous avez le
moindre
 problème, vérifiez d'abord que vous avez la dernière révision du BIOS de
 votre carte mère.

...

Les dernières versions du BIOS sont disponibles sur le site Web de votre fabriq
uant
 de carte mère. "Flasher" une nouvelle image du BIOS est une opération simple,
mais
 vous devez respecter strictement les intructions du manuel de votre carte mère
.

Les dernières révisions des BIOS Award semblent suffisamment stables pour utili
ser
 l'UDMA. Tout ce qui possède une date avec 1998 devrait être correct.

9.4 Et si ça ne marche toujours pas...

   Si aucune des explications contenues dans ce document ne s'avèrent
   utile ou au moins suffisante pour faire fonctionner votre machine, le
   mieux est d'envoyer un message décrivant précisément votre problème,
   votre contrôleur UDMA (que ce soit sur un carte mère ou fille), si vos
   disques sont UDMA ou non, leur configuration, votre version de Linux
   (distribution + version de noyau) et tout ce qui peut vous sembler
   utile.

10. Si vous avez des infos sur l'UDMA qui ne sont pas recensées ici

   Merveilleux ! Si vous savez des choses que je ne sais pas, envoyez-les
   moi par tous les moyens ( brion@pobox.com) et je les inclurai dans ce
   document le plus rapidement possible.


                             HOW TO Tablette Wacom

Stefan Runkel <runkel@runkeledv.de>
Traduit de l'anglais par Aurélia Girod <agirod@lemel.fr>

   Version 1.0.6, 28 Mars 2000
     _________________________________________________________________

   _Installation de tablettes graphiques Wacom (et pas seulement) sous
   Linux en console et/ou sous XFree86_
     _________________________________________________________________

1. Copyright

   Copyright (c) 1999,2000 par Stefan Runkel Runkel@runkeledv.de

   Ce document décrit l'installation de tablettes Wacom sous Linux.
   Vous pouvez le distribuer soit sous les termes de la licence GPL
   version 2 ou supérieur, soit sous les termes du Projet de
   Documentation de Linux (LPD). Ces licenses devraient être applicables
   quelque soit l'endroit où vous avez obtenu ce document. Dernière
   remarque, depuis que le LDP n'autorise pas de modifications autre que
   les traductions, les versions modifiées ne peuvent être distribuées
   que sous la license GPL.

2. Introduction

   Les tablettes graphiques sont aujourd'hui relativement bon marché.
   Elles sont d'un grand secours pour la retouche d'image. En plus de
   faire la même chose qu'une souris, elles proposent les
   caractéristiques suivantes :

     * la sensibilité à la pression et à l'inclinaison ;
     * une détection du mouvement d'une grande précision ;
     * le positionnement d'une précision inférieure au pixel ;
     * un périphérique qui ressemble et qui se manipule comme un stylo
       normal.

   Ce document s'adresse principalement aux produits Wacom, parce que
   j'en possède trois différents et que ces produits sont assez courants
   en Europe.

   Cependant, je pense que ce doit être facile d'adapter ces explications
   pour d'autres produits.

   J'ai écrit ce document car je n'en ai pas trouvé sur ce sujet qui
   contenait tout ce que je voulais savoir. J'ai donc rassemblé toutes
   les parties d'informations trouvées sur le Net dans ce HowTo.
   Considérant les questions de mes lecteurs, je sais que ce document
   aussi n'est pas complet et qu'il ne le sera jamais, mais je peux dire
   qu'il aidera beaucoup de gens et chaque nouvelle question complétera
   ce HowTo.

2.1 Nouvelles versions de ce document

   La dernière version de ce document sera disponible sur
   http://www.runkeledv.de/linux.htm.

2.2 Opinions et corrections

   Les commentaires, corrections et compléments sont les bienvenus.
   Contactez-moi à

   Runkel@runkeledv.de ou à RunkelEDV@t-online.de

2.3 Remerciements

   Je voudrais remercier tous les auteurs listés sur la section Plus
   d'informations / Documents utilisés ainsi que tous ceux qui ont
   répondu à mes questions par email. Ce HowTo reflète leur travail.

3. Les indispensables

   Ce chapitre contient ce qui est nécessaire pour faire fonctionner
   votre tablette.

3.1 Matériel supporté

   Premièrement, vous devez bien sûr avoir une tablette graphique.
   Celle-ci doit pouvoir se connecter au port série (RS232) de votre
   ordinateur car le support USB pour Linux est encore en développement.
   Au moment où ce doument est écrit (mars 2000), le support du noyau est
   commencé pour les nouveaux produits USB de Graphire et Intuos et cela
   fonctionne avec XFree. Gpm n'est plus maintenu, donc il ne faudra pas
   s'attendre à un driver USB pour ce logiciel.

   Les tablettes Wacom suivantes sont supportées :

     * les séries ArtZ II (connues en Europe sous les séries UltraPad -
       le même nom était aussi utilisé pour d'anciennes tablettes qui ne
       marchaient que partiellement) ;
     * ArtPad II ;
     * PL300 (écran LCD et tablettes combinés) ;
     * Pen Partner ;
     * Graphire (souris et stylo, le driver alpha 16 pour un support
       complet se trouve à http://www.lepied.com/xfree86/) ;
     * les séries Intuos (support seulement partiel avec le driver livré
       avec, téléchargez les nouvelles versions alpha à la page Frederic
       Lepied : http://www.lepied.com/xfree86/).

   Les plus anciennes séries SD et HD ne sont pas supportées par XFree86
   standard. Cependant, un driver modifié qui supporte ces périphériques
   ainsi que quelques produits OEM avec un écran intégré comme le
   Thinkpad 360 PE d'IBM et le Toshiba T200 est téléchargeable à
   l'adresse :
   http://hwr.nici.kun.nl/pen-computing/pen-computing-formats.html

3.2 Logiciel nécessaire

     * Si vous voulez un driver en mode texte sous Linux, téléchargez la
       dernière version de gpm à l'adresse ftp://ftp.prosa.it/pub/gpm ou
       ftp://animal.unipv.it/pub/gpm (miroir)
     * Si vous voulez un driver sous XFree86, utilisez au moins la
       version 3.3.3.1 ou téléchargez la dernière à http://www.xfree.org

3.3 Logiciels supportés

     * Pour le mode texte, je ne connais que Gpm.
     * Sous XFree, le mot-clé est XInput. Les drivers supportent cette
       norme qui fournit des informations supplémentaires. Les programmes
       qui veulent utiliser des périphériques de pointage exotiques
       devront utiliser XInput.

   Il existe un grand nombre de programmes basés sur la bibliothèque GTK.
   XInput est supporté par GTK ce qui le rend facile à utiliser.
   Enfin, les applications suivantes supportent XInput :

     * The Gimp, un puissant logiciel de retouches d'images dans le style
       de Photoshop. La version 1.1.x en développement (non stable)
       inclut le support XInput en standard. On attend la prochaine
       version stable, la 1.2.x. Vous pouvez télécharger Gimp à l'adresse
       http://www.gimp.org , ça vaut vraiment le coup ! Je suis sûr que
       beaucoup le connaisse et c'est pourquoi vous avez acheté une
       tablette.
     * Gsumi, un logiciel de dessin noir et blanc tout simple qui permet
       de dessiner ou d'effacer grâce à la sensiblité de la pression et
       de l'inclinaison. Téléchargez le sur la page Gsumi à l'adresse :
       http://www.gtk.org/~otaylor/gsumi/
     * Xink (par Ralph Levien), un autre programme de dessin rudimentaire
       pour le mode X.
       Il est disponible à l'adresse :
       ftp://kiwi.cs.berkeley.edu/pub/raph/xink.tar.gz
     * RasMol, un logiciel de visualisation de molécule qui supporte un
       périphérique pour numéroter utilisant XInput. Regardez à
       http://www.umass.edu/microbio/rasmol/distrib/rasman.htm .
     * xinput (par Frederic Lepied), un utilitaire très utile pour
       configurer et tester les périphériques XInput. xinput est
       disponible à : ftp://ftp.x.org/contrib/utilities/xinput-1.2.tar.gz

4. Les tablettes qui replacent les souris en console

4.1 Les tablettes et Gpm

   Le gpm démon Gpm supporte beaucoup de périphériques d'entrée incluant
   les tablettes. Si vous voulez avoir la liste du matériel supporté par
   votre Gpm, tapez :

     _gpm -t help_

   et vous l'obtiendrez.

   Le driver Wacom de gpm 1.18.0 et inférieur semble aller pour les très
   vieux modèles artpad, mais la documentation n'en parle pas. Je l'ai
   testé avec les modèles ultrapad, penpartner, graphire et intuos mais
   ça ne marchait pas. J'ai réécrit le driver Wacom pour gpm et pour
   l'utiliser il faut au moins la version 1.18.2 de Gpm. Depuis cette
   version, l'ancien driver Wacom a été remplacé par mon driver Wacom
   pour les produits graphire, penpartner et ultrapad.

   Cependant, si vous avez une vieille artpad, utilisez gpm < 1.18.1 et
   essayez :

     _killall gpm ; gpm -t wacom -m /dev/ttyS0_

   et ça devrait marcher.

   Si vous possédez une graphire, utilisez plutôt gpm > 1.18.1 et pour le
   mode relatif (comme une souris) :

     _killall gpm ; gpm -t wacom -o relative -m /dev/ttyS0_

   pour le mode absolu (comme une tablette) :

     _killall gpm ; gpm -t wacom -o absolute -m /dev/ttyS0_

   Bien sûr, vous n'aurez que les boutons et le mouvement, la pression et
   la sensibilité ne sont pas implémentées parce qu'elles ne sont pas
   utiles dans les éditeurs de texte.
   Il n'y a pas de support pour les boutons de fonction d'ultrapad et la
   roulette de graphire.

   Si vous utilisez gpm et XFree86, il se peut que vous ayez des
   problèmes car normalement un périphérique peut être utilisé par un
   seul programme à la fois. Pour cela, il y a deux solutions :

     * Le mode repeater de gpm. Si vous lancez gpm avec l'option "-R
       protocol", cela balancera toutes les données qu'il contient dans
       le périphérique /dev/gpmdata. Ainsi, si vous avez une souris type
       ps/2 vous lancez gpm comme ça : _gpm -t ps2 -Rmman_ et gpm capture
       les données de la souris ps/2 et essaie de les traduire en un
       paquet mman, qui sera dirigé vers /dev/gpmdata. Depuis gpm 1.18.1,
       les protocoles dans lesquels gpm traduit sont marqués d'une
       astérisque dans la première colonne. Une fois de plus, faite un
       _gpm -t help_ pour obtenir la liste.
       Si vous ne voulez pas de traductions et que vous ne voulez que les
       données octet par octet, tapez : _gpm -t ps2 -R raw_ . Vous pouvez
       ensuite demander à XFree d'utiliser ce second périphérique en
       ajoutant la ligne _Device "/dev/gpmdata"_ dans XF86Config dans la
       section pointeur ou dans la section XInput.
     * Si vous utilisez startx, vous pouvez le modifier avec _gpm -k_
       avant que le serveur X ne soit lancé. Cette option tue un gpm
       lancé.

5. Tablettes sous XFree

5.1 Version de XFree requise

   Il faut au moins XFree la version 3.3.3.1 car elle a développé le
   support de XInput, le deuxième bouton fonctionne et il n'y a plus
   l'effet bloquant de la souris.

   Si vous devez utiliser une version antérieure, Xinput est supporté
   depuis la 3.1.2.d.

   Le support de XInput dans XFree est configuré dans un fichier appelé
   XF86Config. Dans la plupart des cas, ce fichier est placé dans /etc ou
   dans /etc/X11. Je vais présenter une très courte section de
   configuration et expliquer ce qui peut être changé et pourquoi.

5.2 Une partie de XF86Config

Section "Module"
# Wacom Device Driver
Load "xf86Wacom.so"
EndSection

Section "XInput"
# Settings for Wacom pen
  SubSection "WacomStylus"    # type of input device
    Port "/dev/ttyS0"         # Serial Port
    DeviceName "Pen1"         # Name, choose it free
    Baudrate 9600             # Usable only for intuos
    Mode Absolute             # Map Tablet Area to Screen
    AlwaysCore                # See text
    HistorySize 200           # Buffer size for motion events
  EndSubSection
EndSection

5.3 Section Module

   XFree supporte XInput grâce à l'utilisation de modules. Le module pour
   Wacom s'appelle xf86Wacom.so. Il se place dans la section "Module" et
   ne doit apparaître qu'une seule fois par fichier XF86Config.

5.4 Différents types de dispositifs

   Un dispositif peut être :
     * La pointe de votre crayon ;
     * La gomme de votre crayon ;
     * Une souris comme le "lens cursor", la souris 4d ou la souris
       graphire de chez Wacom ;
     * l'aérographe.

   Les produits pentpartner et graphire ne reconnaissent que le type de
   dispositif mais ne peuvent pas les distinguer. Par exemple, vous ne
   pouvez pas utilisez deux crayons différents, un configuré en rouge et
   l'autre configuré en bleu ; tout ce que diront ces produits c'est :
   "J'ai reconnu une pointe de crayon", ou "J'ai trouvé une gomme", ou
   "J'ai trouvé une souris".

   XInput décrit les types de dispositifs aux périphériques. Ces
   dispositifs sont ensuite spécifiés dans XF86Config comme une
   sous-section de la section XInput :
     * WacomStylus Pointe d'un stylo ou aérographe.
     * WacomEraser Gomme d'un stylo ou aérographe.
     * WacomCursor Souris, par exemple souris graphire, "lens cursor",
       souris 4d.

5.5 Noms de périphériques

   Vous devez donner un nom à chaque périphérique configuré (vous pouvez
   choisir n'importe quel nom). Ce nom sera ensuite utilisé dans votre
   logiciel pour communiquer avec ce dispositif.

5.6 Port

   XInput doit connaître le port série où se trouve votre tablette. Cela
   me permet d'utiliser deux tablettes différentes en même temps, par
   exemple une graphire connectée à /dev/ttyS0 et une penpartner
   connectée à /dev/ttyS1.

5.7 Les niveaux de déboggage (DebugLevel)

   Ceci contrôle comment le driver Wacom fonctionne. Le niveau va de 0 à
   10. Si cette spécification n'est pas indiquée, le DebugDevel 0 est
   utilisé, ce qui représente le niveau le plus bas.

   _Exemple :_

SubSection "WacomStylus" # Pen
  DeviceName "PenRed"    # Name, choose it free
  ...
  DebugLevel 10          # be very verbose
  ...
EndSubSection

5.8 Numéro de série (séries intuos seulement)

   Le produit intuos est plus compétent que les produits penpartner et
   graphire car il peut distinguer plusieurs dispositifs en même temps.
   Cela signifie qu'il est maintenant possible d'utiliser deux crayons
   (un configuré en rouge et l'autre en bleu). Comme on l'a vu,
   l'utilisation de dispositifs (pointe, gomme, aérographe, souris) n'est
   pas assez documenté pour manipuler des stylos différents. Cependant,
   chaque dispositif intuos, que ce soit un stylo, une souris ou autre, a
   un numéro de série que l'on spécifie à XInput pour savoir ce qui est
   utilisé. Voici la section de configuration :

Section "XInput"
  SubSection "WacomStylus" # Pen
    DeviceName "PenRed"    # Name, choose it free
    ...
    Serial 2609917443      # Serial Number of that device
    ...
  EndSubSection
  SubSection "WacomStylus" # another Pen
    DeviceName "PenBlue"   # Name, choose it free
    ...
    Serial 2609918664      # Serial Number of that device
    ...
  EndSubSection
EndSection

   Notez que les dispositifs combinés comme les stylos ont seulement un
   numéro de série. Le driver utilise ce numéro de série pour reconnaître
   un stylo spécifique et le type de dispositif pour distinguer la pointe
   de ce stylo de sa gomme.

  Comment trouver le numéro de série d'un dispositif

    1. Configurer le DebugLevel à 6
    2. Lancer le serveur X en tapant _X 2>t_
    3. Passer tous les dispositifs (pointe, gomme...) sur la tablette en
       les notant dans l'ordre où ils sont passés
    4. Tuer le serveur X (Ctrl + Alt + Backspace)
    5. Faites un _grep serial_num t_

   Vous devriez obtenir la liste de vos différents numéros de série.

  Numéro de série - exemple de résultat obtenu

BEGIN xf86WcmProc dev=0x8354d60 priv=0x833e3f0 type=stylus flags=9 what=1
xf86WcmProc pWcm=0x8354d60 what=ON
END xf86WcmProc Success what=1 dev=0x8354d60 priv=0x833e3f0
device_id=0x96 serial_num=2595227137 type=cursor
[cursor] abs prox=false x=0 y=0 z=0 button=false buttons=0

   (le numéro de série est à la ligne 4, 2e block).

5.9 Mode absolu, mode relatif

   Si vous configurez un dispositif en mode absolu, cela signifie que la
   surface active de la tablette représente votre écran. Chaque fois que
   vous pointez un point sur la tablette avec un dispositif absolu, votre
   pointeur de souris apparaîtra au même point sur votre écran.

   Si vous avez configuré le dispositif en mode relatif, le comportement
   de votre souris sera plus intuitif, c'est-à-dire que si vous décollez
   la souris de la tablette, la bougez et que vous la remettez, le
   pointeur de souris n'aura (normalement) pas bougé.

   _Exemple :_
   Mode absolu

5.10 Pointeur en modes étendu, natif ou "AlwaysCore"

   XFree connait deux pointeurs : un avec seulement les caractéristiques
   standards (boutons, mouvements), qui est utilisé pour sélectionner les
   menus, du texte ou pour cliquer sur des boutons. Ceci est le _pointeur
   natif_ (Core device).

   L'autre pointeur est utilisé par des applications qui veulent plus
   d'informations, comme la pression ou l'inclinaison.

   Ceci est le pointeur étendu (Extension device).

   Avec la version 3.3.3.1, l'expression "AlwaysCore" indique au driver
   qu'il doit envoyer les deux types d'événements.

   Si vous ne spécifiez pas "AlwaysCore" dans votre XF86Config, alors le
   pointeur est initialement utilisé comme pointeur étendu, c'est-à-dire
   qu'il n'est utilisable qu'avec des applications et que vous ne pouvez
   pas l'utiliser pour sélectionner des menus dans votre gestionnaire de
   fenêtre.

   Sinon (si "AlwaysCore" est spécifié), votre pointeur réagit comme un
   pointeur natif (en plus de la souris) et donne des informations sur la
   pression et l'inclinaison aux applications qui ouvrent le pointeur en
   mode étendu.

   Vous pouvez configurer deux pointeurs logiques, un en mode natif et un
   en mode étendu, pour un même pointeur physique.
   Pour ce faire, tapez tout simplement deux sections identiques, seule
   la désignation du DeviceName doit changer, puis spécifiez "AlwaysCore"
   dans la dernière section seulement.

   _Exemple :_
   AlwaysCore

5.11 La taille de l'historique (HistorySize)

   Ceci configure la taille du buffer qui est utilisé pour le cache des
   mouvements.

5.12 Dissimulation (Suppress)

   Ceci spécifie de combien d'unités le dispositif doit bouger avant que
   le driver bouge le pointeur. Ce peut être nécessaire quand de grandes
   résolutions sont utilisées.

   _Exemple :_
   Suppress 6

5.13 Le mode inclinaison (intuos seulement) (Tilt Mode)

   Le mode inclinaison permet l'envoi d'informations sur l'inclinaison
   pour les pointeurs intuos. Si cette déclaration est omise, seule
   l'information sur la pression est transmise.

5.14 Les spécifications TopX, TopY, BottomX, BottomY

   Ces quatre spécifications permettent de réduire la surface active de
   la tablette. Mon énorme tablette intuos A4, par exemple, est tellement
   grande que l'on ne peut pas l'utiliser pour un travail de peinture car
   les passages du stylo sont trop longs. J'utilise donc ces quatre
   spécifications pour indiquer au driver que l'écran sera représenté sur
   le quart en bas à gauche de la tablette.
   Il est possible de définir plus d'une surface active sur la même
   tablette : définissez autant de sous sections que vous avez besoin
   avec la même spécification du Port mais avec des spécifications Top,
   Bottom... différents, ainsi que les noms de périphériques. Ceci
   définit de multiples pointeurs logiques ayant chacun leurs limites
   individuelles. De même, vous pouvez utiliser un pointeur en mode
   absolu et un autre en mode relatif.

   _Exemple :_

TopX        0 #coordonnees du coin en haut a gauche
TopY     5000
BottomX  5000 #coordonnees du coin en bas a droite
BottomY 10000

  Obtenir les valeurs X,Y maximales, la configuration courante et la résolution

   Si vous utilisez les quatre spécifications ci-avant, vous voulez
   parfois faire des calculs sur la taille et la position d'un rectangle
   qui doit être défini, et souvent les coordonnées maximales de la
   tablette et la résolution sont utiles. Pour obtenir ces valeurs,
   lancer votre serveur : _X 2>t_. Tuer le serveur X (Ctrl+Alt+Backspace)
   et faites un _grep "X=" t_ . Vous devriez récupérer les valeurs en
   question.

  Obtenir la résolution - exemple de résultat

(--) Wacom IV tablet maximum X=5103 maximum Y=3711 X
     resolution=1000 Y resolution=1000 suppress=6
(--) Wacom tablet top X=0 top Y=0 bottom X=5103 bottom Y=3711
(--) Wacom tablet top X=0 top Y=0 bottom X=5103 bottom Y=3711
(--) Wacom tablet top X=0 top Y=0 bottom X=5103 bottom Y=3711

5.15 Conservation de la forme

   Cette option utilise les spécifications TopX, TopY (ou leurs valeurs
   par défaut, si rien n'est indiqué) et ajuste les valeurs BottomX et
   BottomY, ainsi :

     * La proportion hauteur / largeur de l'écran est la même que pour la
       tablette ;
     * la surface active commençant à HautX, HautY de la tablette est
       aussi grande que cela peut l'être avec les conditions ci-avant.

   Les spécifications BottomX, BottomY sont ignorées, car ces valeurs
   seront calculées.

5.16 Seuil de pression

   Ceci est disponible depuis la version alpha 16 et est utilisé pour
   contrôler la pression minimum requise pour détecter qu'un outil est
   pressé sur la tablette. Cela fonctionne avec les gammes intuos et
   graphire. Notez que la valeur entière doit être codée comme une chaîne
   de caractère, contrairement à toutes les autres valeurs entières.

   _Exemple :_

Threshold "5"

6. Changer la configuration avec un serveur X lancé

6.1 Configurer The Gimp pour utiliser les périphériques XInput

   Gimp a été compilé avec le support XInput depuis la version 1.1.x.

   Gimp doit connaître les périphériques qu'il peut utiliser et dans quel
   mode. Vous devez ouvrir la boite de dialogue
   _Fichier/Dialogues/Périphériques d'Acquisition _pour le configurer.
   Vous trouverez deux listes déroulantes en haut de cette fenêtre
   appelée _Périphérique_ et _Mode_. Choisissez le périphérique à
   configurer dans la liste des _Périphériques_ et choisissez un mode
   dans la liste _Mode_ .

   Les modes sont :

     * désactivé (disabled) : Gimp n'utilise pas ce périphérique ;
     * fenêtre (window) : Gimp utilise ce périphérique. (Le curseur est
       dessiné par l'application) ;
     * écran (screen) : Gimp utilise ce périphérique. (Le curseur est
       dessiné par le serveur X).

   Si vous avez deux curseurs liés à votre périphérique, vous avez deux
   solutions :

     * Utilisez le mode écran mais il se peut que vous perdiez les
       curseurs spéciaux de Gimp ; si tel est le cas, tous les curseurs
       seront remplacés par celui du stylo.
     * Configurez deux périphériques différents dans le fichier
       XF86Config, un _AlwaysCore_ et un autre différent. Dites à Gimp
       d'utiliser le dernier en mode fenêtre. Si vous le faites et avez
       une des quatres spécifications _TopX, TopY, BottomX, BottomY_ dans
       votre XF86Config, faites attention d'utiliser les mêmes
       ajustements pour ces spécifications dans les deux périphériques
       logiques. Si vous ne le faites pas, tout est confus car le serveur
       X dessine le curseur d'un périphérique tandis que l'autre est
       actif. Ceci aura pour effet d'afficher un curseur, très loin du
       point d'action (hotspot).

   Sous les deux listes déroulantes, se trouve un tableau avec deux
   registres _Axes_ et _Touches_. _Axes_ assigne un axe a une fonction,
   ce n'est généralement pas nécessaire de le changer. Mais dans le cas
   d'un peripherique tactile construit dans une tablette qui bouge a 90
   degres, vous pourrez echanger les axes x et y.

   Certaines tablettes ont des touches programmables permettant d'appeler
   des fonctions souvent utilisées. La partie _Touches_ vous permet
   d'associer un caractere à une touche de fonction. Par exemple, vous
   pouvez associer Ctrl+Shift+R a une touche de fonction. Si vous activez
   cette touche, elle remplace Ctrl+Shift+R.
   Le driver actuel de Wacom supporte seulement les touches de fonction
   de la serie ultrapad et la partie macro des produits intuos n'est pas
   encore utilisable.

   Maintenant, nous allons vois commment les peripheriques peuvent être
   utilisés. Ouvrez la boite de dialogue dans _Fichier/Dialogues/Device
   Status_. Ouvrez une image.

   Vous configurez chaque peripherique les uns indépendemment des autres
   dans Gimp.

   Si vous utilisez le curseur avec plusieurs peripheriques dans la
   fenetre où se trouve l'image, vous verrez que les périphériques de la
   boite de dialogue Device Status changent. Si vous choisissez un outil,
   pinceau, couches ou couleur avec un périphérique, une fois encore les
   changements sont visibles dans la boite de dialogue. Vous pouvez
   sauvegarder les parametres de la boite de dialogue Status, pour qu'ils
   soient restorés a la prochaine session.

6.2 The Switch Device

   C'est un périphérique spécial toujours présent. Il génère un événement
   chaque fois qu'un nouveau périphérique devient un pointeur natif. Cela
   s'appelle "axes", sa valeur est l'identificateur du périphérique de
   pointage natif. Je ne sais pas comment un utilisateur peut l'utiliser,
   c'est principalement utile pour une usage interne.

6.3 Boutons

   Les boutons des périphériques sont aussi différents que les
   périphériques le sont :
   Un stylo a au moins une pointe, mais il peut avoir un ou deux côtés et
   une gomme. Une souris peut avoir jusqu'a 32 boutons (mais
   habituellement 3).Les boutons sont numerotés de 1 au nombre de
   boutons. Avec les deux prochaines "astuces" vous pouvez changer cette
   numerotation.

6.4 Bouton configuré avec xmodmap pour les périphériques en mode natif

   xmodmap ne change que le pointeur natif. Comme il n'y a qu'un pointeur
   natif a la fois, il ne fait pas de différence entre les périphériques
   physiques pouvant devenir un pointeur natif. Pour le moment, oublions
   tout ce qu'on a dit sur XInput et pensez au gaucher qui veut
   simplement échanger les boutons gauche et droit de la souris. Vous
   allez exécuter _xmodmap -pp_ pour voir quel est le pointeur natif
   courant. Vous allez obtenir le tableau suivant :

Physical        Button
Button          Code
1              1      # ( Left   Button )
2              2      # ( Right  Button )
3              3      # ( Middle Button )

   Pour échanger les boutons, tapez _xmodmap -e "pointer = 2 1 3"_ et
   pour revenir a l'état d'origine _xmodmap -e "pointer = default"_. Ceci
   marche avec chaque périphérique avec au moins 2 boutons. Notez que
   l'expression _"pointer = x x x"_ doit être accompagnée de guillemets
   pour éviter que cela soit changé par le shell.

6.5 Bouton configuré avec xinput pour les périphériques en mode extension

   Revenons a XInput. Si vous utilisez Gimp, vous voulez sans doute
   changer la configuration du bouton pour chaque périphérique séparément
   (échanger les deux côtés du crayon). Frederic Lepied ecrit un
   utilitaire, appelé xinput.

   Pour échanger les deux côtés, faites un _xinput list_ pour avoir la
   liste des peripheriques et leur configuration actuelle. L'echange est
   fait avec _xinput set-button-map Pen1 1 3 2_ ou _Pen1_ est le
   périphérique à changer.

   Lancez avec XFree 3.3.2, cela marche aussi avec les périphériques
   configurés avec _AlwaysCore_ dans XF86Config.

6.6 xsetmode - changer le mode absolu / relatif

   Avec xsetmode vous pouvez changer le mode d'un périphérique entre
   absolu et relatif.

   _Exemple :_
   _xsetmode GraphireMouse ABSOLUTE_ .

6.7 xsetpointer - configure le peripherique natif par défaut

   Si aucun des périphériques n'est configuré en _AlwaysCore_ et que vous
   voulez en configurer un, utilisez xsetpointer.

   Faites un _xsetpointer Devicename_. L'ancien périphérique natif
   (souvent une souris) n'est plus utilisable et celui specifié sera
   active. Par exemple, on peut configurer une souris graphire en
   périphérique natif standard avec un XFree lancé.

   _xsetpointer -l_ liste tous les peripheriques et le mode dans lequel
   ils sont.

6.8 Touches

   Certains périphériques ont les boutons ou pads programmables pour
   lesquels un scancode ou une chaine peuvent etre associés. Cela ne
   fonctionne qu'avec des périphériques en mode extension et est fait
   pour l'application dans laquelle vous voulez utiliser ces touches.

   _xinput -l_ donne des informations à propos du numéros des touches et
   autre comme le premier scancode.

6.9 Utilitaires pour utiliser plus d'une tablette

   Je possède trois tablettes Wacom et je les utilise sur mon portable.
   Quand aucune tablette n'est connectée et que je lance le mode X, je
   dois attendre longtemps jusqu'à ce que le driver abandonne. Si xdm est
   utilisé, cela augmente le nombre d'essais.

   J'ai écrit deux utilitaires qui devrait faciliter ceci :

     * Le script shell _sx_ pour ceux qui utilisent startx. sx utilise un
       joli menu permettant à l'utilisateur de choisir :
          + un des 10 peripheriques (tablette, joystick...) ;
          + pour les portables, l'écran a utiliser (interne ou externe) ;
          + le gestionnaire de fenêtre à utiliser.
     * La petite application écrite en gtk _xinput-chooser_ pour ceux qui
       utilisent xdm. xinput-chooser utilise un menu quand l'écran de
       connexion xdm s'affiche, où une parmi les 10 configurations peut
       être choisie.

   Ceci est basé sur le fait qu'un fichier XF86Config est séparé en au
   moins un fichier XF86Config.bare, qui contient les informations
   communes à toutes les configurations et de nombreux exemples, chacun
   d'eux présentant une information spéciale d'une configuration
   particulière.

   Les deux utilitaires sont mis ensemble pour une configuration qui
   marche.

   Vous pouvez télécharger ce paquet à l'adresse
   http://www.runkeledv.de/download, il se nomme xinput_chooser_sr.

7. FAQ XFree - problèmes et questions

7.1 Gnome et Gimp ne travaillent qu'avec une souris normale, sans la pression,
ni l'inclinaison. La boîte de dialogue des périphériques d'entrée de Gimp
indique "No input devices" ou "Pas de périphérique d'entrée".

   Il semble que vous n'avez pas compilé votre gtk avec le support
   XInput. Recompilez gtk et utilisez _./configure --with-xinput=xfree_
   pour compiler le Makefile, puis faites un _make && make install_.
   Enfin, recompilez votre Gimp pour qu'il utilise ce gtk étendu.

7.2 Est-ce que la roulette de la souris (curseur) est supportée ?

   Oui, cela génère les événements bouton 4 et bouton 5.

7.3 Comment puis-je trouver le numéro de série intuos de mon outil ?

   Lisez la section à propos des Numéros de série.

7.4 Comment puis-je changer l'utilisation des boutons de mon outil ?

   Reportez vous à la section à propos des boutons.

7.5 Comment puis-je utiliser des macros sur intuos/artpad/ultrapad ?

   Désolé, vous ne pouvez pas utiliser les macros de l'intuos.
   Seules les macros artpad/ultrapad fonctionnent. Lisez la section à
   propos des Clés de Gimp.

7.6 Est-ce possible de définir plusieurs surfaces actives sur la même tablette
?

   Oui, lisez la section à propos des Spécifications Haut...

7.7 Puis-je utiliser plus d'une tablette en même temps ?

   Oui, lisez la section à propos des Spécification de port.

8. FAQ Gpm - problèmes et questions

8.1 Les programmes NCurses ne supportent que couper / coller avec mon nouveau
gpm

   Vous avez probablement mélangé un nouveau gpm avec une ancienne
   bibliothèque gpm, ou vous utilisez un ancien client qui cherche la
   socket gpmctl dans /var/run au lieu de /dev. Dans le dernier cas, vous
   avez deux options : récupérer de nouveaux clients et les recompiler ou
   changer gpm.h pour qu'il utilise /var/run au lieu de /dev et
   recompiler gpm et libgpm.

9. Plus d'informations / documents utilisés

   gpm :
   page de manuel gpm, FAQ gpm, code souce du fichier mice.c

   XInput :
   HOWTO XInput de Owen Taylor

   XFree et Wacom :
   page de manuel XF86Config

   site de Frederic Lepied

   beaucoup, beaucoup d'e-mails ...

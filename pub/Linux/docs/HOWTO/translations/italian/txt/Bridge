  Bridging mini-Howto
  Christopher Cole,  cole@lynkmedia.com. Tradotto da
  Alessandro Rubini (rubini@linux.it).
  v1.10, 13 Novembre 1997. Tradotto il 30 Novembre 1997.

  Questo documento descrive come preparare un bridge per reti Ethernet.
  Ma cos'è un bridge? È un dispositivo che controlla il flusso dei pac­
  chetti in una sottorete cercando di ridurre l'ammontare di traffico.
  Un bridge di solito viene posizionato tra due gruppi di computer che
  parlano molto tra loro ma poco con i calcolatori dell'altro gruppo.
  Come esempio prendiamo un gruppo di Macintosh e un gruppo di macchine
  Unix: entrambi questi gruppi tendono a chiacchierare abbastanza al
  loro interno e il traffico che producono causa collisioni nelle comu­
  nicazioni tra le altre macchine che tentano di parlare tra loro;
  questa è una situazione in cui occorrerebbe mettere un bridge tra i
  due gruppi di calcolatori. Il lavoro del bridge, allora, sta
  nell'esaminare il destinatario di ciascuno dei pacchetti e decidere se
  tale pacchetto deve essere ritrasmesso sull'altro segmento Ethernet
  oppure no. Il risultato di questo lavoro è una rete più veloce perché
  si verificano meno collisioni.
  ______________________________________________________________________

  Indice Generale


  1. Preparazione
  2. Problemi tipici


  ______________________________________________________________________

  11..  PPrreeppaarraazziioonnee


  1. Ci si procuri il pacchetto ``Bridge Config'':

       <ftp://shadow.cabi.net/pub/Linux/BRCFG.tgz>



  2. Ci si procuri e si legga il ``Multiple Ethernet'' HOWTO:

       <ftp://sunsite.unc.edu/pub/Linux/docs/HOWTO/mini/Multiple-Ethernet>



  3.

     Si abiliti la seconda interfaccia ethernet sulla propria macchina
     aggiungendo questo al proprio /etc/lilo.conf, e si reinvochi lilo:


       append = "ether=0,0,eth1"



  Se si hanno tre interfacce sul bridge, si usi questa riga al posto
  della precedete:


       append = "ether=0,0,eth1 ether=0,0,eth2"



  Si possono usare più interfacce aggiungendo altre direttive ether.
  Normalmente il kernel di Linux cerca solo una scheda ethernet, e una
  volta che l'ha trovata smette di verificare l'hardware installato. Le
  direttive append mostrate sopra servono a dire al kernel di continuare
  a cercare schede ethernet anche dopo che ne ha trovata una.

  In alternativa, si può usare il parametro di linea di comando al
  momento del boot:


       linux ether=0,0,eth1



  Oppure, se si hanno 3 interfacce:


       linux ether=0,0,eth1 ether=0,0,eth2



  4. Si ricompili il kernel attivando l'opzione ``bridging''.

  5. Un bridge non dovrebbe avere un indirizzo IP. Può averne uno, ma un
     bridge che non svolga altri compiti non ne ha bisogno.  Per
     rimuovere l'indirizzo IP dal proprio bridge si vada a vedere
     /etc/sysconfig/network-scripts/ (l'esempio si riferisce a un
     sistema RedHat) e si copi ifcfg-lo0 sopra a ifcfg-eth0 e a ifcfg-
     eth1.  In questi due file ``eth'', si cambi la riga che contiene
     ``DEVICE=lo'' in ``DEVICE=eth0'' e ``DEVICE=eth1''.  Altre
     distribuzioni hanno diversi script di configurazione, e bisogna
     applicare modifiche equivalenti ai file appropriati.  Se il proprio
     bridge ha più di due interfacce bisogna assicurarsi di configurare
     allo stesso modo anche le altre interfacce.


  6. Si riavvii il sistema in modo da far girare il  nuovo kernel,
     quello configurato per il bridging; bisogna anche assicurarsi che
     le interfacce di rete non abbiano un indirizzo IP assegnato.

  7. Una volta che il sistema è attivo, si mettano le schede ethernet in
     modo promiscuo, in modo che ricevano tutti i pacchetti che vedono
     transitare sulla rete:


       ifconfig promisc eth0 ; ifconfig promisc eth1



  Devono essere messe in modo promiscuo tutte le interfacce che sono
  connesse ai segmenti ethernet che si vuole collegare.

  8. Si attivi il ``bridging'' usando il programma brcfg:


       brcfg -ena



  9. Si verifiche che il traffico di rete è diverso su ciascuna
     interfaccia:


       tcpdump -i eth0      # in una finestra
       tcpdump -i eth1      # in un'altra finestra



  10.
     Si faccia girare uno ``sniffer'' o tcpdump su di un'altra macchina
     per verificare che il bridge sta partizionando correttamente la
     rete.

  22..  PPrroobblleemmii ttiippiiccii


  1.

     DDoommaannddaa
        Ricevo il messaggio


          ioctl(SIOCGIFBR) failed: Package not installed



     Cosa significa?

     RRiissppoossttaa
        Il proprio kernel non ha la capacità di funzionare da bridge. Ci
        si procuri un kernel versione 2.0 o maggiore e lo si ricompili
        attivando l'opzione _b_r_i_d_g_i_n_g.


  2.

     DDoommaannddaa
        Le macchina da una parte non riescono a raggiungere quelle
        dall'altra parte.

     RRiissppoossttaa

        ·  È stato abilitato il bridging invocando ``brcfg -ena''?
           (brcfg dovrebbe dire ``bridging is ENABLED'')

        ·  Le due interfacce sono state messe in modo promiscuo?  (si
           invochi ``ifconfig'': la modalità ``PROMISC'' dovrebbe
           risultare attiva per entrambe le interfacce).

        ·  Se si usano delle schede di rete a funzionalità multipla
           (BNC/TP), ci si assicuri di avere abilitato quella corretta.
           Occorrerà usare il programma di setup che viene fornito
           insieme con la scheda.


  3.

     DDoommaannddaa
        Non posso fare telnet nè ftp dal bridge. Perché?

     RRiissppoossttaa
        Questo perché il bridge non ha un indirizzo IP. Un bridge è un
        pezzo di rete che risulta trasparente al resto della rete.


  4.

     DDoommaannddaa
        Cosa devo fare per predisporre l'instradamento?

     RRiissppoossttaa
        Nulla!  Tutte le problematiche di instradamento sono gestite dal
        codice del kernel che si occupa del ``bridging''.  Per vedere
        come il brisge impara l'instradamento dei vari indirizzi
        ethernet si usi il comando brcfg in modalità debug:


          brcfg -deb



  5.

     DDoommaannddaa
        Sembra che il bridge funzioni, ma perché il comando
        ``traceroute'' non lo mostra come parte del cammino dei
        pacchetti?

     RRiissppoossttaa
        Per la natura del bridge, un ``traceroute'' NON dovrebbe
        mostrare il bridge stesso nel cammino dei pacchetti. Il bridge
        dovrebbe essere un componente trasparente della rete.


  6.

     DDoommaannddaa
        Occorre abilitare IP_FORWARD quando si compila il kernel?

     RRiissppoossttaa
        No. Il codice del kernel che si occupa del bridging si occupa
        del trasporto dei pacchetti indipendentemente da IP_FORWARD.
        IP_FORWARD occorre per i gateway che hanno indirizzi IP validi
        associati alle loro interfacce.


  7.

     DDoommaannddaa
        Perché secondo il programma ``brcfg'' gli indirizzi hardware
        delle due porte ethernet sono uguali? Non dovrebbero essere
        differenti?

     RRiissppoossttaa
        No. Per come funziona il bridging, tutte le porte di un bridge
        hanno lo stesso indirizzo ethernet fisico.


  8.

     DDoommaannddaa
        Il bridging non appare tra le opzioni di compilazione del
        kernel, come faccio ad abilitarlo?
     RRiissppoossttaa
        Durante la configurazione del kernel, si risponda Y alla domanda
        ``Prompt for development and/or incomplete code/drivers
        (CONFIG_EXPERIMENTAL) [Y/n/?]''.


  9.

     DDoommaannddaa
        So che avere troppi hub (4 o più) in catena sulla stessa
        ethernet crea dei problemi di temporizzazione. Che effetto ha un
        bridge su una rete che contiene altri hub?

     RRiissppoossttaa
        Un bridge non è un hub, e la regola dei 4 hub va applicata a
        ciascun segmento ethernet collegato al bridge. Un bridge non
        contribuisce ai problemi di tempo nella trasmissione dei
        pacchetti.


  10.

     DDoommaannddaa
        È possibile interfacciare con un bridge segmenti ethernet da
        10Mb e da 100Mb? Una configurazione del genere non rallenta il
        resto del traffico sul lato ad alta velocità della rete?

     RRiissppoossttaa
        Si, è possibile collegare con un bridge un segmento da 10Mb con
        un segmento da 100Mb. Finché la scheda di rete del bridge
        collegata con la rete veloce è in grado di portare 100Mb, TCP si
        preoccuperà del resto. Anche se è vero che la comunicazione tra
        un calcolatore collegato a 100Mb e uno collegato a 10Mb avverrà
        solo a 10Mb, il resto del traffico sulla rete ad alta velocità
        non viene rallentato dalla presenza del bridge.




<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<TITLE>garl7</TITLE>
</HEAD>
<BODY TEXT="#000000" LINK="#0000ff" VLINK="#800080" BGCOLOR="#ffffff">

<TABLE CELLSPACING=0 BORDER=0 CELLPADDING=4 WIDTH=737>
<TR><TD WIDTH="46%" VALIGN="TOP">
      <P><a href="garl06.htm"><IMG SRC="left.gif" WIDTH=36 HEIGHT=34 border="0"></a>
    </TD>
<TD WIDTH="11%" VALIGN="TOP">
      <P ALIGN="CENTER"><a href="garl.htm"><IMG SRC="up.gif" WIDTH=34 HEIGHT=36 border="0"></a>
    </TD>
<TD WIDTH="43%" VALIGN="TOP">
      <P ALIGN="RIGHT"><a href="garl08.htm"><IMG SRC="right.gif" WIDTH=36 HEIGHT=34 border="0"></a>
    </TD>
</TR>
</TABLE>

<FONT FACE="Verdana" SIZE=2><P>&nbsp;</P>
</FONT><B><FONT FACE="Arial" SIZE=4 COLOR="#000080"><P ALIGN="CENTER">Cap&iacute;tulo 7</P>
</font></B><P><HR><p></P>
<B><U><FONT FACE="Verdana" SIZE=2><P>SLIP: IP por l&iacute;nea serie</P>
</font></u></B><FONT FACE="Verdana" SIZE=2>
<P>Los protocolos de l&iacute;nea serie, SLIP y PPP, permiten a los "pobres" tener 
  conexi&oacute;n a Internet. Solo se necesita un m&oacute;dem y un puerto serie 
  con buffer FIFO. Utilizarlo no es mas complicado que usar un buz&oacute;n, y 
  cada vez existen mas proveedores que le ofrecen acceso telef&oacute;nico IP 
  a un coste asequible para todos.</P>
<P>En Linux hay controladores tanto de SLIP como de PPP. SLIP es m&aacute;s veterano 
  y por tanto m&aacute;s estable. PPP para Linux ha sido recientemente desarrollado 
  por Michael Callahan y Al Longyear; y se describir&aacute; en el pr&oacute;ximo 
  cap&iacute;tulo 1.</P>
<P><font face="Verdana" size="2">
<dir>
  <a href="garl07.htm#7.1">7.1 Requisitos generales</a><br>
  <a href="garl07.htm#7.2">7.2 Utilizaci&oacute;n de SLIP</a><br>
  <a href="garl07.htm#7.3">7.3 Utilizaci&oacute;n de dip</a></font></P>
</FONT>
<dir> 
  <dir> 
    <p><font face="Verdana" size="2"><a href="garl07.htm#7.3.1">7.3.1 Un script 
      de ejemplo</a><br>
      <a href="garl07.htm#7.3.2">7.3.2 Gu&iacute;a de Referencia de dip</a></font></p>
  </dir>
</dir>
<p><font face="Verdana" size="2"><a href="garl07.htm#7.4">7.4 Funcionamiento en 
  Modo Servidor</a></font></p>
</dir>
  <B><U><FONT FACE="Verdana" SIZE=2 COLOR="#008080">
<P><a name="7.1"></a>7.1 Requisitos generales</P>
</font></u></B><FONT FACE="Verdana" SIZE=2>
<P>Para utilizar SLIP o PPP, hay que configurar algunas caracter&iacute;sticas de red que ya se han descrito en cap&iacute;tulos anteriores, por supuesto. Por lo menos, debe tener el interfaz de bucle (loopback) y el sistema de traducci&oacute;n de nombres. Cuando se conecte a Internet, querr&aacute; usar, por supuesto, el DNS. Lo m&aacute;s f&aacute;cil es poner la direcci&oacute;n de alg&uacute;n servidor de nombres en el fichero resolv.conf; este servidor se usar&aacute; tan pronto como SLIP conecte. Lo mejor es poner el servidor de nombres m&aacute;s cercano.</P>
<P>Sin embargo, esta soluci&oacute;n no es la &oacute;ptima, ya que las b&uacute;squedas de nombres seguir&aacute;n yendo por la conexi&oacute;n SLIP o PPP. Si le interesa consumir menos ancho de banda, puede instalarse un servidor de nombres solo con cache. No requiere un dominio ya que solo actuar&aacute; como relevo, es decir, pasar&aacute; a otro servidor las peticiones que Vd. realice. La ventaja es que construir&aacute; una cache de modo que al pedir un nombre varias veces seguidas, solo se contactar&aacute; con el servidor externo la primera vez. Un fichero named.boot que sirva para esto puede ser el siguiente:</P><DIR>
<DIR>

<P>; fichero named.boot para un servidor solo con cache<BR>
directory /var/named<BR>
<BR>
primary 0.0.127.in-addr.arpa db.127.0.0 ; interfaz "loopback"<BR>
cache . db.cache ; servidores raiz</P></DIR>
</DIR>

<P>Adem&aacute;s debe tener un fichero db.cache con una lista de servidores ra&iacute;z v&aacute;lidos. Este fichero esta descrito al final del cap&iacute;tulo dedicado a la configuraci&oacute;n del servidor de nombres.</P>
<P>_____________________________________________<BR>
1 N. del T.: Actualmente, podemos decir que PPP ya es suficientemente estable. De hecho, SLIP cada vez se utiliza menos</P>
<P>&nbsp;</P>
</FONT><B><U><FONT FACE="Verdana" SIZE=2 COLOR="#008080">
<P><a name="7.2"></a>7.2 Utilizaci&oacute;n de SLIP</P>
</font></u></B><FONT FACE="Verdana" SIZE=2>
<P>Los servidores de IP por tel&eacute;fono suelen ofrecer servicios SLIP mediante cuentas de usuario especiales. Despu&eacute;s de entrar en una cuenta no se entra en un interprete de comandos normal, sino en un programa o shell script que se ejecuta para activar el manejador SLIP del servidor y configurar la interfaz con la red. En ese momento tiene que hacer lo mismo en su m&aacute;quina.</P>
<P>En algunos sistemas operativos, el manejador de SLIP es un programa de usuario, pero bajo Linux es parte del n&uacute;cleo, cosa que lo hace mucho m&aacute;s r&aacute;pido. Requiere, sin embargo, que la l&iacute;nea serie sea expl&iacute;citamente convertida a modo SLIP. Esto se hace mediante una disciplina de l&iacute;nea especial llamada SLIPDISC. Mientras que un terminal (tty) esta en modo normal (DISC0), intercambiar&aacute; datos solo con procesos de usuario, mediante las llamadas read(2) y write(2) habituales, y el manejador de SLIP no podr&aacute; escribir o leer del terminal.</P>
<P>En el modo SLIPDISC se cambian los papeles: ahora los programas de usuario no podr&aacute;n acceder a la l&iacute;nea pero todos los datos que lleguen se pasaran al manejador SLIP.</P>
<P>El manejador de SLIP entiende por si mismo varias versiones del protocolo, incluyendo CSLIP, que realiza la llamada compresi&oacute;n de cabeceras de Van Jacobson en los paquetes IP salientes.2 Esto aumenta el rendimiento de las sesiones interactivas. Adem&aacute;s, hay versiones de seis bits de estos protocolos.</P>
<P>Una forma f&aacute;cil de convertir una l&iacute;nea serie a modo SLIP es usar la utilidad slattach. Suponiendo que tenemos un m&oacute;dem en /dev/cua3 y que se ha entrado correctamente en el servidor de SLIP, se deber&aacute; ejecutar:</P><DIR>
<DIR>

<P># slattach /dev/cua3 &amp;</P></DIR>
</DIR>

<P>_____________________________________________<BR>
2 La compresi&oacute;n de cabeceras de Van Jacobson se describe en el RFC 1441.</P>
<P>&nbsp;</P>
<P>Esto cambiar&aacute; el modo de l&iacute;nea de cua3 a SLIPDISC, y la enganchar&aacute; a uno de los interfaces SLIP disponibles. Si es la &uacute;nica conexi&oacute;n SLIP se enganchar&aacute; al interface sl1, si es la segunda, a sl2, etc. Los n&uacute;cleos actuales soportan hasta ocho enlaces SLIP simult&aacute;neos.</P>
<P>La encapsulaci&oacute;n por defecto que elige slattach es CSLIP. Puede elegirse otra con la opci&oacute;n -p. Para usar SLIP sin compresi&oacute;n deber&aacute; ponerse:</P><DIR>
<DIR>

<P># slattach -p slip /dev/cua3 &amp;</P></DIR>
</DIR>

<P>Otros modos son cslip, slip6, cslip6 (para la versi&oacute;n de 6 bits) y adaptive para SLIP adaptativo, que deja al n&uacute;cleo averiguar que encapsulaci&oacute;n de SLIP usa el otro extremo de la comunicaci&oacute;n.</P>
<P>Observe que debe utilizarse el mismo sistema de encapsulaci&oacute;n que use el otro extremo. Por ejemplo, si cowslip usar&aacute; CSLIP, tendr&aacute; que usarlo Vd. tambi&eacute;n. El s&iacute;ntoma t&iacute;pico de una selecci&oacute;n incorrecta es que la orden ping a una m&aacute;quina remota no tendr&aacute; respuesta. Si la otra m&aacute;quina le hace ping a Vd, recibir&aacute; mensajes del tipo "Can't build ICMP header" (no se puede construir la cabecera ICMP) en la consola. Una forma de intentar evitar este tipo de problemas es usar SLIP adaptativo.</P>
<P>De hecho, slattach no solo le permite activar SLIP, sino tambi&eacute;n otros protocolos serie como PPP o KISS (protocolo que se usa en packet-radio). Para mas detalle, vea el manual en l&iacute;nea de slattach(8).</P>
<P>Despu&eacute;s de preparar la l&iacute;nea para SLIP, tendr&aacute; que configurar el interfaz de red. De nuevo, se har&aacute; esto mediante los programas est&aacute;ndares ifconfig y route. Suponiendo que desde la m&aacute;quina vlager hemos llamado al servidor cowslip, se deber&iacute;a ejecutar:</P><DIR>
<DIR>

<P># ifconfig sl0 vlager pointopoint cowslip<BR>
# route add cowslip<BR>
# route add default gw cowslip</P></DIR>
</DIR>

<P>El primer comando configura la interface como un enlace a cowslip punto a punto, mientras que el segundo y el tercero sirven para a&ntilde;adir la ruta correspondiente a cowslip como ruta por defecto y configurar esa m&aacute;quina como pasarela de todos nuestros mensajes.</P>
<P>Cuando se quiera terminar el enlace SLIP, debe empezarse por eliminar todas las rutas a trav&eacute;s de cowslip mediante el comando route con la opci&oacute;n del, desactivar el interface y enviar al proceso slattach la se&ntilde;al SIGHUP. Despu&eacute;s de esto se deber&aacute; colgar el m&oacute;dem usando un programa de terminal de nuevo:</P><DIR>
<DIR>

<P># route del default<BR>
# route del cowslip<BR>
# ifconfig sl0 down<BR>
# kill -HUP 516</P>
<P>&nbsp;</P></DIR>
</DIR>

</FONT><B><U><FONT FACE="Verdana" SIZE=2 COLOR="#008080">
<P><a name="7.3"></a>7.3 Utilizaci&oacute;n de dip</P>
</font></u></B><FONT FACE="Verdana" SIZE=2> 
<P>Lo visto hasta ahora no es dif&iacute;cil de hacer. Sin embargo, puede que 
  desee automatizar los pasos de modo que solo tenga que invocar un comando. El 
  programa dip hace esto.3 La versi&oacute;n que existe en este momento es la 
  3.3.7. Ha sido parcheada por mucha gente, con lo que no podremos hablar simplemente 
  del programa dip. Las modificaciones ser&aacute;n incorporadas en futuras versiones.</P>
<P>dip tiene un int&eacute;rprete de un lenguaje script sencillo que puede manejar 
  autom&aacute;ticamente el m&oacute;dem, convertir la l&iacute;nea a modo SLIP 
  y configurar las interfaces. Es bastante restrictivo por lo simple que es, pero 
  suficiente para la mayor&iacute;a de los casos. Una nueva versi&oacute;n de 
  este programa podr&aacute; traer una versi&oacute;n mas completa del lenguaje.</P>
<P>Para ser capaces de configurar el interfaz SLIP, dip necesita tener permisos 
  de superusuario. Puede hacerse poniendo el programa con el bit setuid y de propiedad 
  del usuario root, de modo que cualquier usuario sin privilegios podr&aacute; 
  poner en marcha el programa.</P>
<P>Esto es, sin embargo, muy peligroso, ya que una configuraci&oacute;n incorrecta 
  del encaminamiento de dip puede estropear el encaminamiento de su red local. 
  Adem&aacute;s, dar&aacute; a los usuarios la posibilidad de conectarse a cualquier 
  servidor SLIP, y lanzar ataques peligrosos a la red.</P>
<P>Si aun quiere permitir a los usuarios activar conexiones SLIP, escriba peque&ntilde;os 
  programas para cada servidor de modo que cada uno invoque a dip con el script 
  especifico. Estos programas pueden tener privilegios sin peligro.4</P>
<P>&nbsp;</P>
<I><U> 
<P><a name="7.3.1"></a>7.3.1 Un script de ejemplo</P>
</u></I> 
<P>Un script de ejemplo se encuentra en la figura 7.1. Puede utilizarse para conectarse 
  a cowslip invocando a dip de esta forma:</P>
<DIR> 
  <DIR> 
    <P># dip cowslip.dip<BR>
      DIP: Dialup IP Protocol Driver version 3.3.7 (12/13/93)<BR>
      Written by Fred N. van Kempen, MicroWalt Corporation.<BR>
      <BR>
      conectado a cowslip.moo.com with addr 193.174.7.129<BR>
      #<BR>
      # Script de dip para conectarse al servidor cowslip<BR>
      <BR>
      # Preparar nombres local y remoto<BR>
      get $local vlager<BR>
      get $remote cowslip<BR>
      <BR>
      port cua3 # selecci&oacute;n de puerto serie<BR>
      speed 38400 # poner velocidad maxima<BR>
      modem HAYES # poner tipo de modem<BR>
      reset # reiniciar modem y terminal (tty)<BR>
      flush # limpiar buffer de respuesta del modem<BR>
      <BR>
      # Prepararse para marcado.<BR>
      send ATQ0V1E1X1\r<BR>
      wait OK 2<BR>
      if $errlvl != 0 goto error<BR>
      dial 41988<BR>
      if $errlvl != 0 goto error<BR>
      wait CONNECT 60<BR>
      if $errlvl != 0 goto error<BR>
      <BR>
      # Ahora ya estamos conectados<BR>
      sleep 3<BR>
      send \r\n\r\n<BR>
      wait ogin: 10<BR>
      if $errlvl != 0 goto error<BR>
      send Svlager\n<BR>
      wait ssword: 5<BR>
      if $errlvl != 0 goto error<BR>
      send hey-jude\n<BR>
      wait running 30<BR>
      if $errlvl != 0 goto error<BR>
      <BR>
      # Ahora ya estamos en la cuenta. Lancemos SLIP.print Conectado a $remote 
      with address $rmtip<BR>
      default # Hacer que este enlace sea nuestra ruta por defecto<BR>
      mode SLIP # Pasemos a modo SLIP<BR>
      # en caso de error se ejecuta lo siguiente<BR>
      <BR>
      error:<BR>
      print Fallo de la conexi&oacute;n SLIP con $remote .</P>
  </DIR>
</DIR>
<P>Figura 7.1: Un script de ejemplo para dip</P>
<P>&nbsp;</P>
<P>_____________________________________________<BR>
  3 dip significa Dialup IP y fue escrito por Fred van Kempen.<BR>
  4 diplogin puede (y debe) ser ejecutado como superusuario. Vea la secci&oacute;n 
  del final de este cap&iacute;tulo.</P>
<P>&nbsp;</P>
<P>Despu&eacute;s de conectar a cowslip y activar SLIP, dip pasar&aacute; a ejecutarse 
  en segundo plano. Ahora puede conectarse a trav&eacute;s del enlace SLIP mediante 
  los programas habituales de red. Para terminar la conexi&oacute;n, ejecute dip 
  con la opci&oacute;n -k. Esto enviar&aacute; una se&ntilde;al de colgar al proceso 
  dip, cuyo n&uacute;mero se encontrar&aacute; almacenado en el fichero /etc/dip.pid.5</P>
<DIR> 
  <DIR> 
    <P># dip -k</P>
  </DIR>
</DIR>
<P>En el lenguaje que interpreta dip las palabras precedidas con un signo de d&oacute;lar 
  se corresponden con nombres de variables. dip tiene un conjunto predefinido 
  de variables que se listar&aacute; a continuaci&oacute;n. $remote y $local, 
  por ejemplo, contienen los nombres de m&aacute;quina local y remoto, respectivamente, 
  involucrados en el enlace SLIP.</P>
<P>Las dos primeras sentencias del ejemplo son los comandos get, que sirven para 
  establecer variables. Aqu&iacute;, las m&aacute;quinas local y remota han sido 
  vlager y cowslip, respectivamente.</P>
<P>Las cinco sentencias que siguen preparan la l&iacute;nea serie y el m&oacute;dem. 
  La palabra reset env&iacute;a una cadena de reinicio al m&oacute;dem; que ser&aacute; 
  el comando ATZ para m&oacute;dems compatibles con Hayes. La siguiente sentencia 
  limpia el buffer de salida del m&oacute;dem, para conseguir que el di&aacute;logo 
  de entrada (login y password) funcione correctamente. Este dialogo es extremadamente 
  simple: llama al n&uacute;mero 41988, que es el n&uacute;mero de cowslip, entra 
  en la cuenta Svlager mediante la clave de acceso hey-jude. El comando wait hace 
  que se espere a la aparici&oacute;n de la cadena que sigue a esta orden, mientras 
  que su segundo argumento especifica el tiempo de espera en segundos. Los comandos 
  if sirven para ir comprobando la correcci&oacute;n del procedimiento de entrada 
  en la cuenta.</P>
<P>Los comandos finales, ejecutados tras entrar en la cuenta, son default, que 
  hace que el enlace SLIP sea la ruta por defecto para todos los destinos y mode, 
  que pone la l&iacute;nea en modo SLIP y configura autom&aacute;ticamente el 
  interface y la tabla de encaminamiento.</P>
<P>&nbsp;</P>
<I><U> 
<P><a name="7.3.2"></a>7.3.2 Gu&iacute;a de Referencia de dip</P>
</u></I> 
<P>Aunque se utiliza mucho, dip aun no esta muy documentado. En esta secci&oacute;n, 
  daremos una peque&ntilde;a gu&iacute;a de referencia de los comandos de dip. 
  Puede obtenerse un resumen de los comandos ejecutando dip en modo de prueba 
  (opci&oacute;n -t), e introduciendo el comando help. Para obtener ayuda sobre 
  un comando se debe ejecutar sin argumentos; por supuesto esto no funcionar&aacute; 
  con comandos que no tengan argumentos.</P>
<DIR> 
  <DIR> 
    <P>$ dip -t<BR>
      DIP: Dialup IP Protocol Driver version 3.3.7 (12/13/93)<BR>
      Written by Fred N. van Kempen, MicroWalt Corporation.<BR>
      DIP&gt; help<BR>
      DIP knows about the following commands:<BR>
      <BR>
      databits default dial echo flush<BR>
      get goto help if init<BR>
      mode modem parity print port<BR>
      reset send sleep speed stopbits<BR>
      term wait<BR>
      <BR>
      DIP&gt; echo<BR>
      Usage: echo on|off<BR>
      DIP&gt; _</P>
  </DIR>
</DIR>
<P>_____________________________________________<BR>
  5 Vea el grupo alt.tla si desea conocer mas abreviaturas en Ingles que sean 
  pal&iacute;ndromas, como este caso.</P>
<P>&nbsp;</P>
<P>En los siguientes apartados, los ejemplos que muestran el prompt DIP&gt; indican 
  como se introducir&iacute;a el comando en modo prueba, y que salida producir&iacute;a. 
  Los ejemplos que no muestren este prompt deben tomarse como trozos de scripts.</P>
</FONT><U><FONT FACE="Verdana" SIZE=2 COLOR="#808080"> 
<P>Comandos del m&oacute;dem</P>
</font></U><FONT FACE="Verdana" SIZE=2><P>Existe un conjunto de comandos de dip pensados para configurar la l&iacute;nea serie y el m&oacute;dem. Algunos son de uso obvio, como port, que sirve para elegir el puerto serie, y speed, databits, stopbits, y parity, que establecen los par&aacute;metros habituales de las l&iacute;neas serie.</P>
<P>El comando m&oacute;dem selecciona el tipo de m&oacute;dem. Actualmente solo esta soportado el tipo HAYES 6. Debe decirse el tipo, pues si no dip se negar&aacute; a ejecutar los comandos dial y reset. Este &uacute;ltimo comando env&iacute;a la cadena de reinicio al m&oacute;dem, la cual depende del tipo de m&oacute;dem elegido. Para m&oacute;dems compatibles Hayes, esta cadena es ATZ.</P>
<P>La orden flush puede utilizarse para vaciar las respuestas anteriores de la memoria del m&oacute;dem. De otro modo, un script de dialogo con el m&oacute;dem podr&iacute;a fallar, porque lea la respuesta OK que proceda de &oacute;rdenes anteriormente enviadas al m&oacute;dem.</P>
<P>El comando init selecciona la cadena de inicializaci&oacute;n enviada al m&oacute;dem antes de marcar, que para m&oacute;dems Hayes es, por defecto, la cadena "ATE0 Q0 V1 X1", que activa el eco de los comandos, hace que el m&oacute;dem de los c&oacute;digos de resultado en modo extendido (es decir, por palabras y no n&uacute;meros de c&oacute;digo) y selecciona marcado a ciegas, sin esperar tono de marcado.</P>
<P>El comando dial env&iacute;a la cadena de inicializaci&oacute;n al m&oacute;dem y llama al sistema remoto. El comando de marcado por defecto en los m&oacute;dems Hayes es ATD.</P>
<P>_____________________________________________<BR>
6 Deben respetarse las may&uacute;sculas</P>
<P>&nbsp;</P>
</FONT><U><FONT FACE="Verdana" SIZE=2 COLOR="#808080"><P>Comandos echo y term</P>
</font></U><FONT FACE="Verdana" SIZE=2><P>El comando echo on se usa con prop&oacute;sitos de depuraci&oacute;n, ya que hace que dip copie en la consola todo lo que env&iacute;e al puerto serie. Puede desactivarse despu&eacute;s con una orden echo off.</P>
<P>dip tambi&eacute;n puede salirse temporalmente a un modo terminal, de modo que Vd. pueda dialogar manualmente con el m&oacute;dem. Para ello se usa el comando term, y para salir de este modo se pulsa |Ctrl-]|.</P>
</FONT><U><FONT FACE="Verdana" SIZE=2 COLOR="#808080"><P>Comando get</P>
</font></U><FONT FACE="Verdana" SIZE=2><P>La orden get sirve para poner valores a las variables internas. Puede usarse como se vio en ejemplos anteriores, o bien de forma interactiva, a&ntilde;adiendo la palabra ask:</P><DIR>
<DIR>

<P>DIP&gt; get $local ask<BR>
Enter the value for $local: _</P></DIR>
</DIR>

<P>Un tercer uso de este comando es intentar obtener el valor de la m&aacute;quina remota. Aunque extra&ntilde;o pueda parecer, resulta &uacute;til en muchos casos: muchas veces el servidor SLIP no permite que nosotros nos pongamos cualquier direcci&oacute;n IP, sino que nos la asignar&aacute; de un conjunto predeterminado y nos informar&aacute; de ello mediante una frase tal como "Your address: 193.174.7.202" (Su direcci&oacute;n: 193.174.7.202). De esta frase querremos que dip ajuste autom&aacute;ticamente nuestra direcci&oacute;n IP, para lo que haremos lo siguiente (observar que se usa el par&aacute;metro remote):</P><DIR>
<DIR>

<P>... di&aacute;logo de entrada en la cuenta ....<BR>
wait address: 10<BR>
get $locip remote</P></DIR>
</DIR>

</FONT><U><FONT FACE="Verdana" SIZE=2 COLOR="#808080"><P>Comando print</P>
</font></U><FONT FACE="Verdana" SIZE=2><P>Este es el comando para enviar textos a la consola. Cualquier variable puede enviarse a la consola mediante comandos de este tipo, por ejemplo:</P><DIR>
<DIR>

<P>DIP&gt; print Utilizando puerto $port con velocidad $speed<BR>
Utilizando puerto cua3 con velocidad 38400</P></DIR>
</DIR>

</FONT><U><FONT FACE="Verdana" SIZE=2 COLOR="#808080"><P>Nombres de las variables</P>
</font></U><FONT FACE="Verdana" SIZE=2><P>dip solo entiende un conjunto predefinido de variables. Un nombre de variable siempre empieza con un s&iacute;mbolo de d&oacute;lar y debe escribirse en min&uacute;sculas.</P>
<P>Las variables $local y $locip contienen respectivamente el nombre de nuestra m&aacute;quina y su direcci&oacute;n IP. Poniendo el nombre de la m&aacute;quina, dip guardar&aacute; dicho nombre en la variable $local, al tiempo que guardar&aacute; la direcci&oacute;n IP en la variable $locip.</P>
<P>Las variables $remote y $rmtip hacen lo mismo pero con la m&aacute;quina remota. Por otro lado, $mtu contiene el valor del MTU para la conexi&oacute;n actual.</P>
<P>Esas cinco variables son las &uacute;nicas que pueden actualizarse mediante un comando get. Otras deben actualizarse mediante comandos espec&iacute;ficos, aunque siempre pueden sacarse por pantalla con el comando print. Esas variables son $modem, $port, y $speed.</P>
<P>La variable $errlvl sirve para conocer el resultado del &uacute;ltimo comando ejecutado, siendo de valor 0 si fue bien, o distinto de 0 si hubo alg&uacute;n problema.</P>
</FONT><U><FONT FACE="Verdana" SIZE=2 COLOR="#808080"><P>Comandos if y goto</P>
</font></U><FONT FACE="Verdana" SIZE=2><P>El comando if es un salto condicional. Su sintaxis es</P><DIR>
<DIR>

<P>if variable oper n&uacute;mero goto etiqueta</P></DIR>
</DIR>

<P>donde la expresi&oacute;n puede ser una simple comparaci&oacute;n entre una de las variables siguientes: $errlvl, $locip, y $rmtip. El segundo operando debe ser un n&uacute;mero entero; el operador oper puede ser uno de los siguientes: ==, !=, &lt;, &gt;, &lt;=, y &gt;=.</P>
<P>El comando goto lanza la ejecuci&oacute;n a partir de la situaci&oacute;n de la etiqueta, que debe ponerse al principio de una l&iacute;nea seguida de dos puntos.</P>
</FONT><U><FONT FACE="Verdana" SIZE=2 COLOR="#808080"><P>Comandos send, wait y sleep</P>
</font></U><FONT FACE="Verdana" SIZE=2><P>Estos comandos ayudan a implementar sencillos scripts de dialogo. send env&iacute;a su argumento a la l&iacute;nea serie. No pueden ponerse variables, pero entiende secuencias de escape al estilo del lenguaje C, como \n y \b. El car&aacute;cter de tilde (~) puede usarse como abreviatura del retorno de carro.</P>
<P>El comando wait hace que dip espere a que por la l&iacute;nea serie se reciba la palabra pasada como primer argumento. El segundo argumento, que es opcional, fija un tiempo de espera m&aacute;ximo, en segundos. Si la palabra no se recibe en ese tiempo, el comando fallar&aacute; actualizando la variable $errlvl con el valor 1.</P>
<P>La orden sleep puede usarse para esperar cierto tiempo, por ejemplo para esperar pacientemente una invitaci&oacute;n a entrar en la cuenta. Una vez mas, el tiempo se especificar&aacute; en segundos.</P>
</FONT><U><FONT FACE="Verdana" SIZE=2 COLOR="#808080"><P>Comandos mode y default</P>
</font></U><FONT FACE="Verdana" SIZE=2><P>Se utilizan para cambiar el puerto entre modo SLIP o normal, y configurar la interface. </P>
<P>El comando mode es el &uacute;ltimo que ejecuta dip antes de pasar al segundo plano (daemon). A menos que suceda un error, de este comando no se retorna.</P>
<P>Este comando tiene un argumento, que es el protocolo. Actualmente se reconocen los protocolos SLIP y CSLIP, es decir, la versi&oacute;n actual de dip no soporta SLIP adaptativo.</P>
<P>Despu&eacute;s de poner la l&iacute;nea en modo SLIP, dip ejecutar&aacute; un comando ifconfig para configurar la interface como enlace punto a punto y otro route para cambiar las tablas de encaminamiento apuntando a la m&aacute;quina remota.</P>
<P>Si, adem&aacute;s, se ejecuta default antes que mode, el programa har&aacute; que el camino por defecto de nuestros paquetes vaya al enlace SLIP.</P>
<P>&nbsp;</P>
</FONT><B><U><FONT FACE="Verdana" SIZE=2 COLOR="#008080">
<P><a name="7.4"></a>7.4 Funcionamiento en Modo Servidor</P>
</font></u></B><FONT FACE="Verdana" SIZE=2>
<P>Curiosamente, configurar su m&aacute;quina como servidor SLIP va a ser mucho m&aacute;s sencillo que configurarla como cliente.</P>
<P>Una forma de hacerlo es usar dip en modo servidor, que puede conseguirse si se ejecuta como diplogin. Su configuraci&oacute;n principal se encontrar&aacute; en /etc/diphosts, que asocia nombres de cuenta con direcciones de m&aacute;quina asignadas. Alternativamente, puede usar sliplogin, una utilidad procedente de BSD que proporciona un esquema de configuraci&oacute;n que le permite ejecutar shell scripts cuando las m&aacute;quinas se conectan y desconectan. Actualmente, su desarrollo esta en fase beta.</P>
<P>Ambos programas necesitan que se tenga una cuenta por cada cliente SLIP. Por ejemplo, si proporcion&aacute;ramos un servicio SLIP a Arthur Dent en dent.beta.com, deber&iacute;a crearse una cuenta dent a&ntilde;adiendo la siguiente l&iacute;nea al fichero /etc/passwd: </P><DIR>
<DIR>

<P>dent:*:501:60:Cuenta SLIP de Arthur Dent:/tmp:/usr/sbin/diplogin</P></DIR>
</DIR>

<P>Luego, se pondr&iacute;a la clave usando el programa passwd.</P>
<P>Ahora, cuando dent entre, dip entrar&aacute; en modo servidor. Para comprobar si est&aacute; autorizado para usar SLIP, buscar&aacute; su nombre de usuario en /etc/diphosts. Este fichero detalla derechos de acceso y par&aacute;metros de conexi&oacute;n para cada usuario. Una entrada de este fichero ser&aacute; tal como:</P><DIR>
<DIR>

<P>dent::dent.beta.com:Arthur Dent:SLIP,296</P></DIR>
</DIR>

<P>El primer campo de los separados por dos puntos, es el nombre de la cuenta. El segundo campo puede contener una clave adicional (vea mas adelante). El tercero es el nombre o direcci&oacute;n IP de la m&aacute;quina llamante. El siguiente es un campo informativo acerca del usuario, por el momento sin utilidad. Por ultimo, se describen separados por comas los par&aacute;metros de la conexi&oacute;n: el protocolo (SLIP o CSLIP) seguido del valor de MTU.</P>
<P>Cuando dent entra en su cuenta, diplogin extrae la informaci&oacute;n acerca de &eacute;l y si hay clave de acceso en la l&iacute;nea correspondiente de /etc/diphosts, la pedir&aacute; como "clave externa de seguridad", que se compara con la existente en el fichero (que no va encriptada). Si no coinciden, el intento de entrada ser&aacute; rechazado.</P>
<P>En otro caso, diplogin proceder&aacute; a cambiar el modo a SLIP o CSLIP, y preparar&aacute; la interfaz y el encaminamiento. Esta conexi&oacute;n permanecer&aacute; hasta que el m&oacute;dem opuesto cuelgue, momento en que diplogin dejar&aacute; la l&iacute;nea en modo normal y terminar&aacute;.</P>
<P>diplogin necesita privilegios de superusuario. Si no tiene puesto el bit setuid, deber&aacute; copiar el programa con el nombre diplogin y ponerle a &eacute;ste los privilegios. A diplogin se le pueden dar sin miedo, sin afectar al estado de dip en s&iacute; mismo.</P></FONT></BODY>
</HTML>

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
 <META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <META NAME="GENERATOR" CONTENT="lfparser_2.51">
 <META NAME="LFCATEGORY" CONTENT="SoftwareDevelopment">
 <link rel="icon" href="../../common/images/lf-16.png" type="image/png">
 <TITLE>lf350, SoftwareDevelopment: Sviluppo di software indipendente dalla piattaforma</TITLE>
<style type="text/css">
<!--
 td.top {font-family: Arial,Geneva,Verdana,Helvetica,sans-serif; font-size:12 }
 pre { font-family:monospace,Courier }
 pre.code { font-family:monospace,Courier;background-color:#aedbe8; }
 p.cl { color:#EE9500 }
 table.left { margin-right:0.3cm }
 a.nodec { text-decoration:none }
 p.trans { font-size:8pt; text-align:right }
 p.clbox { width:50%; alignment:center; background-color:#FFD700; 
           border-style:none; border-width:medium; border-color:#FFD700; 
           padding:0.5cm;  text-align:center }
 p.code { width:80%; alignment:center; background-color:#aedbe8; 
          border-style:none; border-width:medium; border-color:#aedbe8; 
          padding:0.1cm;  text-align:left }
 p.foot { background-color:#AAAAAA; color:#FFFFFF; border-style:none; 
          border-width:medium; border-color:#AAAAAA; padding:0.5cm ; 
          margin-top:0.1cm; margin-right:1cm; margin-left:1cm; 
          text-align:center }
 div.tbbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   margin: 2px 5px 2px 5px;
   text-align: center;
   width: 20em;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
 div.bbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   float: left;
   margin: 2px 5px 2px 5px;
   text-align: center;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
-->
</style>
 
</HEAD>
<BODY bgcolor="#ffffff" text="#000000">
 <!-- this is generated html code. NEVER use this file for your
 translation work. Instead get the file with the same article number
 and .meta.shtml in its name. Translate this meta file and then
 use lfparser program to generate the final article -->
 <!-- lfparser can be obtained from http://main.linuxfocus.org/~guido/dev/lfparser.html -->

<!-- this is used by a number of tools:
 =LF=AUTHOR: Michael     Tschater
 =LF=CAT___: SoftwareDevelopment
 =LF=TITLE_: Sviluppo di software indipendente dalla piattaforma
 =LF=NUMBER: 350
 =LF=ANAME_: article350.shtml
 =LF=PARSER: 2.51
 -->

<!-- 2pdaIgnoreStart -->

<!-- start navegation bar, current, style=2 -->
 <!-- top navegation bar -->
 <TABLE summary="topbar_1" cellspacing="0" cellpadding="0" border="0" align="center" width="90%">
   <TR bgcolor="#2e2292">
     <TD class="top"><TABLE summary="topbar_1_logo" cellspacing="0" cellpadding="0" border="0" width=
       "100%">
         <TR><TD width="319"><a href="../../index.shtml"><IMG src="../../common/images/logolftop_319x45.gif"
           alt="[LinuxFocus-icon]" width="319" height="45" align="left" 
           border="0"></a></TD>

           <TD class="top">
             <TABLE summary="topbar_1_links" width="100%">
               <TR align="right">
                 <TD class="top">
                 
                 <A class="nodec" href="../../index.shtml"><FONT color=
                 "#DDDDDD" size="2">&lt;--</FONT></A> &nbsp;| 
                 <A class="nodec" href="../map.html"><FONT color=
                 "#DDDDDD" size="2">Mappa</FONT></A> &nbsp;| 
                 <A class="nodec" href="../indice.html"><FONT color=
                 "#DDDDDD" size="2">Indice</FONT></A> &nbsp;| 
                 <A class="nodec" href="../Search/index.shtml"><FONT color=
                 "#DDDDDD" size="2">Cerca</FONT></A> </TD>
                 
               </TR>

               <TR align="right">
                 <TD class="top">
                   <HR width="100%" noshade size="1">
                 </TD>
               </TR>
             </TABLE>
           </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end top navegation bar -->
 <!-- blue bar -->
 <TABLE summary="topbar_2" cellspacing="0" cellpadding="0" border="0" align="center"
 width="90%">
   <TR bgcolor="#00ffff">
     <TD><IMG src="../../common/images/transpix.gif" width="1" height=
     "2" alt=""></TD>
   </TR>
 </TABLE>
 <!-- end blue bar -->
 <!-- bottom navegation bar -->
 <TABLE summary="topbar_3" cellspacing="0" cellpadding="0" border="0" align="center"
 width="94%">
   <TR bgcolor="#000000">
     <TD>
       <TABLE summary="topbar_3_links" cellspacing="0" cellpadding="1" border="0" width=
       "100%">
         <TR align="center">
           <TD WIDTH="20%"><A class="nodec" href="../News/index.shtml"><FONT color=
           "#FFFFFF">News</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Archives/index.html"><FONT color=
           "#FFFFFF">Archivo</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Links/index.html"><FONT color=
           "#FFFFFF">Link</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../aboutus.html"><FONT color=
           "#FFFFFF">Cose LF</FONT></A> </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end bottom navegation bar -->
<!-- stop navegation bar -->

<!-- SSI_INFO -->

<!-- tr_staticssi include virtual -->
<!-- tr_staticssi exec cmd -->
<!-- addedByLfdynahead ver 1.5 --><TABLE ALIGN="right" border=0><TR><TD ALIGN="right"><FONT SIZE="-1" FACE="Arial,Helvetica">Questo documento &egrave; disponibile in: <A href="../../English/October2004/article350.shtml">English</a> &nbsp;<A href="../../ChineseGB/October2004/article350.shtml">ChineseGB</a> &nbsp;<A href="../../Deutsch/October2004/article350.shtml">Deutsch</a> &nbsp;<A href="../../Francais/October2004/article350.shtml">Francais</a> &nbsp;<A href="../../Italiano/October2004/article350.shtml">Italiano</a> &nbsp;<A href="../../Russian/October2004/article350.shtml">Russian</a> &nbsp;</FONT></TD></TR></TABLE><br>
 


<!-- SSI_INFO STOP -->
<!-- 2pdaIgnoreStop -->

<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_START -->
<TABLE ALIGN="LEFT" BORDER="0" WIDTH="195" summary="about the author" class="left">
<TR>
<TD>

<img src="../../common/images2/MichaelTschater.jpg" alt="[Photo of the Author]" width="182" height="186">
<BR>   Michael Tschater <br> <small>&lt;tschater/at/web.de&gt;</small>
<BR><BR>
<I>L'autore:</I><BR>
<!-- aboutauthor_start -->
<p>Michael e' principalmente impegnato con lo sviluppo di software
    applicato all'hardware (firmware). Per quanto riguarda il suo progetto
    corrente deve essere ancora presa una decisione circa la strategia
    relativa all'ambiente di sviluppo - da utilizzarsi per la programmazione
    dell'interfaccia del suo firmware- .<br></p>
<!-- aboutauthor_stop -->
<!-- TRANSLATED_TO it -->
<!-- TRANSLATED_TO_STOP -->
<!-- INDEX_START -->
<BR><i>Contenuto</i>:
<UL>
  <LI><A HREF="#350lfindex0">Linguaggi di programmazione</A></LI>
  <LI><A HREF="#350lfindex1">Un'applicazione di esempio</A></LI>
  <LI><A HREF="#350lfindex2">Librerie C/C++ </A></LI>
  <LI><A HREF="#350lfindex3">Trolltech Qt</A></LI>
  <LI><A HREF="#350lfindex4">Qt: Riepilogo</A></LI>
  <LI><A HREF="#350lfindex5">wxWidgets</A></LI>
  <LI><A HREF="#350lfindex6">wxWidgets: riepilogo</A></LI>
  <LI><A HREF="#350lfindex7">GTK+ (con gtkmm)</A></LI>
  <LI><A HREF="#350lfindex8">Sguardo d'insieme di GTK+</A></LI>
  <LI><A HREF="#350lfindex9">FLTK</A></LI>
  <LI><A HREF="#350lfindex10">FLTK; Riepilogo</A></LI>
  <LI><A HREF="#350lfindex11">FOX Toolkit</A></LI>
  <LI><A HREF="#350lfindex12">FOX: rieplogo </A></LI>
  <LI><A HREF="#350lfindex13">Altre  possibilita'</A></LI>
  <LI><A HREF="#350lfindex14">JAVA</A></LI>
  <LI><A HREF="#350lfindex15">Indipendente dalla piattaforma (Platform-independent)</A></LI>
  <LI><A HREF="#350lfindex16">Orientato agli oggetti</A></LI>
  <LI><A HREF="#350lfindex17">Sintassi del linguaggio</A></LI>
  <LI><A HREF="#350lfindex18">Liberie di classi</A></LI>
  <LI><A HREF="#350lfindex19">Sicurezza</A></LI>
  <LI><A HREF="#350lfindex20">Idoneita' per i progetti
    </A></LI>
  <LI><A HREF="#350lfindex21">Java Development Kit (JDK)</A></LI>
  <LI><A HREF="#350lfindex22">JHelloWorld</A></LI>
  <LI><A HREF="#350lfindex23">JavaScript e Java</A></LI>
  <LI><A HREF="#350lfindex24">Tentativi di standardizzazione</A></LI>
  <LI><A HREF="#350lfindex25">Disassemblaggio</A></LI>
  <LI><A HREF="#350lfindex26">Linguaggio-miracolo o aspettativa presto delusa</A></LI>
  <LI><A HREF="#350lfindex27">GUIi (Interfacce grafiche utente)  con Java</A></LI>
  <LI><A HREF="#350lfindex28">SWT ed Eclipse
    </A></LI>
  <LI><A HREF="#350lfindex29">Abbreviazioni usate nel contesto con JAVA</A></LI>
  <LI><A HREF="#350lfindex30">Java: riepilogo</A></LI>
  <LI><A HREF="#350lfindex31">Kylix</A></LI>
  <LI><A HREF="#350lfindex32">Kylix: Riepilogo</A></LI>
  <LI><A HREF="#350lfindex33">Smalltalk</A></LI>
  <LI><A HREF="#350lfindex34">Smalltalk: riepilogo </A></LI>
  <LI><A HREF="#350lfindex35">Mozilla</A></LI>
  <LI><A HREF="#350lfindex36">Mozilla: riepilogo
    </A></LI>
  <LI><A HREF="#350lfindex37">La risposta di Microsoft</A></LI>
  <LI><A HREF="#350lfindex38">Cosa e' .NET ?</A></LI>
  <LI><A HREF="#350lfindex39">Cosa e'  Visual Studio .NET ?</A></LI>
  <LI><A HREF="#350lfindex40">Differenze tra  Visual Basic (VB) e VB .NET</A></LI>
  <LI><A HREF="#350lfindex41">Quale linguaggio di programmazione e' piu' indicato?</A></LI>
  <LI><A HREF="#350lfindex42">.NET e Linux</A></LI>
  <LI><A HREF="#350lfindex43">.NET: riepilogo</A></LI>
  <LI><A HREF="#350lfindex44"> Conclusioni</A></LI>
  <LI><A HREF="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=350">Discussioni su quest'articolo</A></LI>
</UL>

</TD></TR></TABLE>
<!-- INDEX_STOP -->
<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_STOP -->
<!-- HEAD_OF_THE_ARTICLE_START -->
<br>&nbsp;
<table border="0"><tr><td>
<H2>Sviluppo di software indipendente dalla piattaforma</H2>
 <img hspace="10" alt="[Illustration]" src="../../common/images2/article350/osindep.gif" width="269" height="240">
<!-- ABSTRACT OF THE ARTICLE -->
<P><i>Premessa</i>:
<P>
<!-- articleabstract_start -->

    Quasi tutto l'equipaggiamento usato nell'industria potrebbe essere
    controllato tramite una rete. L'interfaccia utente gira sull'hardware
    e funziona come un semplice client, ricevendo ed inviando
    dati per i quali il tempo non sia un fattore (es. parametri di inizializzazione
    e risultati di misurazioni).

    Nel seguente diagramma viene evidenziato in verde:     <br><img alt="[gui frontend]" src="../../common/images2/article350/frontend_en.png" width="560" height="220"><br>

    I progetti di  software richiedono  spesso una risposta alla domanda su quali sistemi operativi
    debbano essere supportati. Mentre i lettori di questa rivista propendono per Linux, vengono richiesti
    anche altri sistemi operativi (quasi sempre Windows). In via di principio, il sistema operativo da
    adottare non costituisce una priorita' dominante per l'applicazione; l'utente deve essere capace di
    ottenere risultati intuitivamente.

    <br>

    Il seguente articolo dimostrera' che non e' richiesta una decisione su una specifica
    piattaforma da adottare visto che e' possibile scrivere software che puo' essere compilato
    per vari sistemi operativi.
    Questo articolo si limitera' ai PC con Linux e Windows. Dovrebbe essere possibile
    usare le applicazioni anche sui Mac e MacOSX, ma questo non si puo' dimostrare visto che
    manca l'hardware<br>
<!-- articleabstract_stop -->

<br><!-- HR divider --><center><font color="#8282e0"><b>_________________ _________________ _________________</b></font></center><br>
</td></tr></table>
<!-- HEAD_OF_THE_ARTICLE_STOP -->
<!-- BODY_OF_THE_ARTICLE_START -->

    Con librerie indipendenti dalla piattaforma differenziamo due approcci per produrre dei controlli
    per il dialogo con l'utente: <br>




    <ol>
      <li>
      Librerie native: Per la visualizzazione degli elementi vengono utilizzate le corrispondenti
      routine dei sistemi operativi.
      Questo assicura che tutti i controlli appaiano come le applicazioni standard del
      sistema operativo. Una libreria nativa presenta controlli diversi sotto Linux
      piuttosto che sotto Windows 2000 o XP.<br>
      </li>

      <li>
      La seconda possibilita' e' programmare un aspetto appropriato (look
      &amp; feel), volendo con questo dire che tutti i controlli devono essere visualizzati
      dalla libreria e devono  apparire identici su tutti i sistemi operativi.<br>
      </li>
    </ol>
    A parte le caratteristiche tecniche delle librerie, fattori operativi addizionali giocano un
    ruolo che deve essere anch'esso comparato: <br>


    <ul>
      <li>Ambiente di sviluppo: un ambiente di sviluppo integrato (es. costruttori di
      intefaccia grafiche - GUI Builder - e generatori di makefile) semplificano lo
      sviluppo del software.</li>

      <li>Documentazione e supporto: immediato aiuto in caso di problemi.</li>

      <li>Costi: Mentre molte librerie sono liberamente disponibili per uso privato, talvolta
      ci sono dei costi in caso di scrittura di applicazioni commerciali.
      Per prendere decisioni fondamentali sul progetto del software tali costi devono essere
      giustificati a chi deve decidere.</li>

      <li>Costi effettivi per il porting (l'adeguamento del codice per i vari sistemi operativi) tra i sistemi  </li>
    </ul>
    In un caso reale un altro aspetto deve essere preso in considerazione; questo comunque non si applica a
    tutti i progetti:
    <br>


    <ul>
      <li>Il software prodotto dovra' utilizzare controlli nativi da integrare perfettamente nella esistente
      architettura del sistema. L'utente non dovrebbe essere in grado di notare differenze tra il sotware
      esistente nel sistema ed il nuovo.<br>
      </li>
    </ul>
    Visualizzando le librerie in un modello a strati si sviluppa il seguente grafico:
    <br>


    <center>
      <img src="../../common/images2/article350/layer_en.gif" alt="layer-model" width="496" height="214">
    </center>

    <A NAME="350lfindex0">&nbsp;</A>
<H2>Linguaggi di programmazione</H2>

    Il primo criterio da decidere e' il linguaggio di programmazione.
    Ci sono diverse scelte, che discuteremo di seguito: <br>


    <ol>
      <li>Librerie C/C++ </li>

      <li>Java</li>

      <li>Kylix</li>

      <li>Smalltalk</li>

      <li>Mozilla</li>
    </ol>
    Le alternative tra C e C++ saranno spiegate piu' dettagliatamente visto
    che sono le meno provate tra gli sviluppatori. <br>
     <br>


    <A NAME="350lfindex1">&nbsp;</A>
<H2>Un'applicazione di esempio</H2>

    Per essere in grado di confrontare i vari pacchetti di software verra' generata una
    applicazione di esempio, usando tutte le librerie. L'implementazione dell'applicazione
    non possiede alcuna funzionalita' ma mostra tutti i controlli piu' importanti. Per il
    lato windows verra' creato puro software Windows (Visual C++ 6.0, MFC Class-Library),
    gli altri pacchetti verranno comparati in base all'aspetto (look &amp; feel). Come
    distro linux usero' una RedHat Fedora Core 2 e Debian 3.0. <br>


    <center>
      <table border="0">
        <tr>
          <td><a href=
          "../../common/images2/article350/msvc_win2000.jpg"><img alt="Windows 2000 Screenshot" src="../../common/images2/article350/msvc_win2000_th.jpg" border="0" width="280" height="210"></a></td>

          <td><a href=
          "../../common/images2/article350/msvc_winxp.jpg"><img alt="Windows XP Screenshot" src="../../common/images2/article350/msvc_winxp_th.jpg" border="0" width="280" height="210"></a></td>
        </tr>
      </table>
      <br>
      Videate da Windows 2000 e Windows XP (codice sorgente per Visual C++ <a href=
      "../../common/src2/article350/win32_src.zip">qui
      (win32_src.zip)</a>).<br>
    </center>

    <A NAME="350lfindex2">&nbsp;</A>
<H2>Librerie C/C++ </H2>


    <A NAME="350lfindex3">&nbsp;</A>
<H3>Trolltech Qt</H3>

    Qt &egrave; una libreria di classi della ditta norvegese Trolltech per una programmazione
    indipendente dalla piattaforma in C++. Il gestore di finestre di Linux KDE si basa
    sul pacchetto QT. In origine Qt era sotto un tipo di licenza inaccettabile da molti
    utenti Linux. Per questa ragione fu sviluppata la libreria GTK+, la quale costituisce
    la base per il gestore di finestre Gnome. Nel frattempo, la versione QT Linux, cosi' come
    quella MacOS e' stata resa disponibile sotto la licenza GPL, incluso tutto il codice sorgente.
    Qt per Windows, invece, e' ancora sotto licenza ad uso commerciale. Un versione di prova limitata
    nel tempo puo' essere scaricata dal loro sito - sara' differenziata dall'uso, che potra' essere
    commerciale o didattico. Qui viene spiegata la versione commerciale di prova. Questa versione
    richiede una registrazione. <br>
     <br>
     Oltre alla versione per Windows, Linux(Unix) e Mac  e' disponibile una versione "embedded",
    che gira su varianti di sistemi "embedded" Linux ed fornisce un'amministrazione piu' leggera
     delle finestre. <br>
    <br>
    Come previsto l'installazione sotto Linux si svolge semza problemi. Incluso vi e' il generatore di interfaccia
    grafica utente (GUI) Qt Designer. C'e' una dettagliata documentazione sui progetti di esempio,
    una guida di inizio rapido ed una visione d'insieme delle classi. Qt Designer genera come output
    una descrizione in formato XML della GUI. Usando lo strumento Qt qmake si puo' generare un
    Makefile funzionante ricavato dalla descrizione in XML.
    Questo Makefile poi genera del codice sorgente C++ dalla descrizione della GUI (Qt-Tool: uic) e
    chiama il compilatore Meta Object Compiler (Qt-Tool: moc). Quest'ultimo traduce le estensioni
    specifiche del linguaggio Qt in codice sorgente C++. Dopodiche' puo' essere usata una procedura
    standard di make per compilare l'eseguibile.
     <br>
    <br>
    La seguente sequenza e' necessaria per generare i file sorgente manualmente (Il file di input e'
    MyDialog.ui):

    <ul>
      <li>uic MyDialog.ui &gt; MyDialog.h</li>

      <li>uic -impl MyDialog.h MyDialog.ui &gt; MyDialog.cpp</li>

      <li>moc -o moc_MyDialog.cpp MyDialog.h</li>
    </ul>
    <br>

    <center>
      <table>
        <tr>
          <td><a href=
          "../../common/images2/article350/qt_linux.png"><img src="../../common/images2/article350/qt_linux_th.png" alt="qt linux"  width="280" height="210"></a></td>

          <td><a href=
          "../../common/images2/article350/qt_win.jpg"><img src="../../common/images2/article350/qt_win_th.jpg" alt="qt win"  width="280" height="210"></a></td>
        </tr>
      </table>
      <br>
      Videate di Linux e Windows 2000
      <a href="../../common/src2/article350/qt_src.tar.gz">qui
      (qt_src.tar.gz)</a> il codice sorgente per QtDesigner.
    </center>

    <A NAME="350lfindex4">&nbsp;</A>
<H3>Qt: Riepilogo</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tr>
        <td>Nome:<br>
        </td>

        <td>Trolltech Qt<br>
        </td>
      </tr>

      <tr>
        <td>Versione:<br>
        </td>

        <td>3.3.2<br>
        </td>
      </tr>

      <tr>
        <td>Sistemi operativi:<br>
        </td>

        <td>Linux, Win32, MacOS, Solaris, IRIX, AIX, HP-UX<br>
        </td>
      </tr>

      <tr>
        <td>Linguaggio di programmazione:<br>
        </td>

        <td>C++<br>
        </td>
      </tr>

      <tr>
        <td>Licenza:<br>
        </td>

        <td>GPL o Licenza proprietaria (commerciale)<br>
        </td>
      </tr>

      <tr>
        <td>Vantaggi:</td>

        <td>
          <ul>
            <li>Libreria base per KDE Windows Manager in Linux</li>

            <li>pacchetti di installazione su tutte le distribuzioni standard
            (installazione molto semplice)<br>
            </li>

            <li>Controlli generici sotto Windows</li>

            <li>potente ambiente(i) di sviluppo</li>

            <li>affidabile<br>
            </li>

            <li>il supporto per la migrazione delle applicazioni MFC per Win32
	    consente una conversione incrementale del codice sorgente MFC.<br>
            </li>
          </ul>
        </td>
      </tr>

      <tr>
        <td>Svantaggi:</td>

        <td>
          <ul>
            <li>possibili costi di licenza (esosi)</li>

            <li>La versione del software di prova genera errori durante l'installazione sotto Windows
		</li>
          </ul>
        </td>
      </tr>

      <tr>
        <td>Ambiente di sviluppo:<br>
        </td>

        <td>es. QtDesigner, KDevelop<br>
        </td>
      </tr>

      <tr>
        <td>WWW:</td>

        <td><a href=
        "http://www.trolltech.com/">http://www.trolltech.com</a></td>
      </tr>

      <tr>
        <td>Documentazione:<br>
        </td>

        <td>manuali, tutorials, mailing lists<br>
         es. <a href=
        "http://doc.trolltech.com/3.3/index.html">http://doc.trolltech.com/3.3/index.html</a><br>

        </td>
      </tr>

      <tr>
        <td>Progetti di riferimento:<br>
        </td>

        <td>
          <ul>
            <li>KDE Desktop (Default es. con SuSE)<br>
            </li>

            <li>Opera Browser</li>

            <li>Photoshop Album</li>
          </ul>
        </td>
      </tr>

      <tr>
        <td>Distribuzioni:<br>
        </td>

        <td>molto diffuso<br>
        </td>
      </tr>
    </table>

    <p><br>
    </p>

    <A NAME="350lfindex5">&nbsp;</A>
<H3>wxWidgets</H3>

    Il toolkit wxWidgets e' disponibile da 12 anni, ma solo pochi mesi
    fa il pacchetto ha assunto il suo nome attuale. Il nome wxWindows,
    usato fino ad allora, e' stato abbandonato dopo "contatti" con Microsoft.
    wxWidgets include un'enorme raccolta di classi per tutte le aree
    di applicazione. L'elenco delle applicazioni di riferimento dimostra
    la maturita' del pacchetto software.
     <br>
     <br>
    La programmazione viene svolta in C++, simile a Visual C++ sotto Windows. <br>
     <br>
    Uno svantaggio e' che riceverete degli errori con wxWindows2.4.2 sotto
    RedHat Fedora Core 2 quando compilerete i programmi di esempio. La causa e'
    che le chiamate a GTK+ sono dichiarate private nella versione modificata da RedHat
    di Gtk+. La chiamata a queste funzioni e' quindi non consentita. Comunque si
    tratta di problemi minori. Tutto funziona senza problemi quando viene usata la
    libreria standard GTK+. Sotto Debian tutto funziona bene da subito.
    <br>
    <br>
    L'installazione sotto Windows e' stata fatta senza problemi. <br>
    <br>


    <center>
      <table>
        <tr>
          <td><a href=
          "../../common/images2/article350/wx_linux.png"><img src="../../common/images2/article350/wx_linux_th.png" alt="wxWidgets on Linux screenshot" hspace="5"  width="280" height="224">
          </a></td>

          <td><a href=
          "../../common/images2/article350/wx_win32.jpg"><img src="../../common/images2/article350/wx_win32_th.jpg" alt="wxWidgets on Windows screenshot" hspace="5"  width="280" height="210">
          </a></td>
        </tr>
      </table>
      <br>
      Videate Linux  e Windows 2000  <a href=
      "../../common/src2/article350/wx_src.zip">qui (wx_src.zip)</a>
      il codice sorgente .
    </center>
    <br>


    <A NAME="350lfindex6">&nbsp;</A>
<H3>wxWidgets: riepilogo</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Nome:<br>
          </td>

          <td>wxWidgets<br>
          </td>
        </tr>

        <tr>
          <td>Versione:<br>
          </td>

          <td>2.4.2<br>
          </td>
        </tr>

        <tr>
          <td>Sistema operativo:<br>
          </td>

          <td>Linux, Win32, dispositivi embedded<br>
          </td>
        </tr>

        <tr>
          <td>Linguaggio di programmazione:<br>
          </td>

          <td>C++<br>
          </td>
        </tr>

        <tr>
          <td>Licenza:<br>
          </td>

          <td>LGPL
          </td>
        </tr>

        <tr>
          <td>Vantaggi:</td>

          <td>
            <ul>
              <li>semplice gestione (molti esempi).<br>
              </li>

              <li>documentazione molto buona.</li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Svantaggi:<br>
          </td>

          <td>
            <ul>
              <li>Problemi con la combinazione: Fedora Core 2 -
              wxWindows2.4.2</li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Ambiente di sviluppo:<br>
          </td>

          <td><br>
          </td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><a href=
          "http://www.wxwidgets.org/">http://www.wxwidgets.org</a><br>

          </td>
        </tr>

        <tr>
          <td>Documentazione:<br>
          </td>

          <td>manuali, tutorials, mailing lists, wiki<br>
           es. <a href=
          "http://wiki.wxwidgets.org/">http://wiki.wxwidgets.org</a></td>
        </tr>

        <tr>
          <td>Progetti di riferimento:<br>
          </td>

          <td>AOL Communicator</td>
        </tr>

        <tr>
          <td>Distribuzione:<br>
          </td>

          <td>non molto diffusa<br>
          </td>
        </tr>
      </tbody>
    </table>

    <p><br>
    </p>

    <A NAME="350lfindex7">&nbsp;</A>
<H3>GTK+ (con gtkmm)</H3>

    L'acronimo sta per "The GIMP Toolkit". I due ben noti progetti sono
    Gnome Windows Manger, parte di qualsiasi distribuzione standard di Linux
    e l'applicazione grafica GIMP. Gnome e' il secondo maggior ambiente desktop, KDE a parte
    (vedi QT)  sotto Linux. E' l'ambiente desktop di default di molte distribuzione. Con
    l'introduzione della versione 2 di GTK+ l'aspetto (look &amp; feel) e' stato
    sostanziosamente arricchito. <br>
     <br>
    Una particolarita' di GTK+ e' la sua completa implementazione in C.
    Di conseguenza il costruttore di interfaccia utente (GUI)  <i>glade2</i>
    produce codice C. Usando  <i>gtkmm</i> (precedentemente noto come  GTK--) si puo'
    programmare anche in C++. <br>
     <br>
    Al contrario dell'aspetto  professionale di GTK+ per Linux, "GTK+ per Win32" non
    e' altrettanto impressionante. Cliccando sul link della pagina principale di GTK+
    otteniamo immediatamente un avvertimento  "<b>The
    program(s) might crash unexpectedly or behave otherwise
    strangely ".</b> (I(l) programmi potrebbero terminare improvvisamente o comportarsi
    in modo strano) - ma naturalmente, cosi' fanno molti programmi commerciali in Windows-.
    La stabilita' sembra basarsi molto sulla macchina, sui driver dei dispositivi di visualizzazione,
    su altro software installato o meno (status al 6-9-2004). Il coraggioso sviluppatore
    clicca sulla pagina di download comunque ad affronta una lunga lista di singoli componenti da
    scaricare. La ricerca di un pacchetto onnicomprensivo sarebbe inutile. Invece si puo' leggere
    come installare i vari componenti del software, per poi tornare alla pagina di download qualora
    mancasse qualche componente. Nella pagina Web di "GTK+ per Windows" si legge :
     "You are expected to be quite experienced
    to be able to use GTK+ in your own programs. This isn't Visual
    Basic." (Dovete essere piuttosto esperti per potere usare GTK+ nei vostri programmi.
    Questo non e' Visual Basic).
    Dopo l'installazione dei componenti iniziali ed un mancato tentativo di far partire una delle
    applicazioni di esempio, la maggior parte degli sviluppatori potrebbe perdere la voglia
    di approfondire. La presentazione non professionale dei componenti "GTK+ per Windows" scoraggia
    l'uso del  pacchetto software  in una qualsiasi applicazione professionale. <br>
     <br>
     <br>


    <center>
      <a href="../../common/images2/article350/gtk.png"><img alt="GTK+ screenshot" src="../../common/images2/article350/gtk_th.png" width="280" height="210"></a><br><br>
       Videata di GTK+ per Linux  <a href=
      "../../common/src2/article350/gtk_src.tar.gz">
      qui (gtk_src.tar.gz)</a> il codice sorgente per glade2 )
    </center>

    <A NAME="350lfindex8">&nbsp;</A>
<H3>Sguardo d'insieme di GTK+</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Nome:<br>
          </td>

          <td>GTK+ - The GIMP Toolkit<br>
          </td>
        </tr>

        <tr>
          <td>Sistemi operativi:<br>
          </td>

          <td>Linux, Win32<br>
          </td>
        </tr>

        <tr>
          <td>Linguaggi di programmazione:<br>
          </td>

          <td>C (C++ con gtkmm)<br>
          </td>
        </tr>

        <tr>
          <td>Licenza<br>
          </td>

          <td>LGPL<br>
          </td>
        </tr>

        <tr>
          <td>Vantaggi:<br>
          </td>

          <td>
            <ul>
              <li>libreria base per Gnome Windows Manager sotto
              Linux</li>

              <li>pacchetto d'installazione incluso in tutte le distribuzioni
	      standard (installazione molto semplice)<br>
              </li>

              <li>controlli generici sotto Windows</li>

              <li>affidabile (sotto Linux)<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Svantaggi:<br>
          </td>

          <td>
            <ul>
              <li>Implementazione in Win32 pesante, non e' stabile (status 09-2004)
              <br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Ambiente di sviluppo:<br>
          </td>

          <td>es. <i>2glade</i> (GUI Builder), Anjuta</td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><a href=
          "http://www.gtk.org/">http://www.gtk.org</a></td>
        </tr>

        <tr>
          <td>Documentazione:<br>
          </td>

          <td>manuali, tutorials, mailing lists<br>
           e.g. <a href=
          "http://developer.gnome.org/doc/API/2.0/gtk/index.html">http://developer.gnome.org/doc/API/2.0/gtk/index.html</a><br>

          </td>
        </tr>

        <tr>
          <td>Progetti di riferimento:<br>
          </td>

          <td>
            <ul>
              <li>Gnome Desktop</li>

              <li>GIMP</li>

              <li>Gnumeric<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Distribuzione:<br>
          </td>

          <td>Linux: molto diffusa, Windows: marginale
         <br>
          </td>
        </tr>
      </tbody>
    </table>
    <br>
     <br>


    <A NAME="350lfindex9">&nbsp;</A>
<H3>FLTK</H3>

    FLTK Toolkit (Fast, Light Tool Kit) e' un pacchetto piuttosto
sconosciuto, e' stato implementato come successore di <a href=
    "http://freshmeat.net/projects/xforms/">XForms</a>. I sorgenti
    completi sono offerti per il download dal sito web del programma.
    La dimensione di 2.3MB (Linux) e 3MB (Windows) tiene fede al suo nome
(fast = leggero).
    L'installazione sotto Linux fila liscia, scompattate e lanciate '<i>make</i>' ed e' fatta .
    Quindi l'utente ha a disposizione librerie, applicazioni di esempio, il
costruttore di interfaccia grafica (GUI)
    "<i>fluid</i>" ed un manuale di programmazione.
Ovviamente il numero di classi disponibili e' piu' piccolo rispetto ai
pesi massimi come Qt e wxWindows. Le classi incluse comprendono il mondo
GUI, il che significa: finestre, menu, controlli,  OpenGL e visualizzazione di
immagini. Le classi per la comunicazione in rete e simili non sono incluse
. <br>
     <br>
    L'installazione sotto Windows e' stata molto piu' complicata. Quando si
usa l'ambiente di sviluppo Visual C++ occorre trascodificare solo il
progetto principale. Queso comunque causa problemi con le librerie
grafiche. Una semplice soluzione e' di decommentarle nel file di
configurazione config.h. Una specifica caratteristica sotto Windows e' che la
versione DEBUG della libreria FLTK apre sempre una finestra DOS in piu'.
Questo fa si' che i programmi che sono lanciati dalla riga comandi possono
scrivere verso stderr e stdout<br>
     <br>
    Nel suo insieme il FLTK Toolkit lascia l'inpressione di essere stato
    ben congegnato. La documentazione enfatizza la limitatezza
dell'eseguibile (80kb per un "ciao mondo") ed offre una veloce grafica
2D e 3D (OpenGL). In piu' occorre menzionare anche una buona portabilita'
. <br>


    <center>
      <table border="0" cellpadding="2" cellspacing="2">
        <tr>
          <td><a href=
          "../../common/images2/article350/fltk_linux.png"><img alt="Linux FLTK Screenshot" src="../../common/images2/article350/fltk_linux_th.png" width="280" height="210">
          </a><br>
          </td>

          <td><a href=
          "../../common/images2/article350/fltk_win32.jpg"><img alt="Windows FLTK Screenshot" src="../../common/images2/article350/fltk_win32_th.jpg" width="280" height="210">
          </a><br>
          </td>
        </tr>
      </table>
      <br>
       Videate di Linux e Windows 2000 (codice sorgente) <a href=
      "../../common/src2/article350/fltk_src.tar.gz">qui
      (fltk_src.tar.gz)</a> )<br>
    </center>
    <br>


    <A NAME="350lfindex10">&nbsp;</A>
<H3>FLTK; Riepilogo</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tr>
        <td>Nome:<br>
        </td>

        <td>Fast Light Tool Kit</td>
      </tr>

      <tr>
        <td>Versione<br>
        </td>

        <td>1.1.5rc2<br>
        </td>
      </tr>

      <tr>
        <td>Sistemi operativi:<br>
        </td>

        <td>Linux, Win32, MacOS<br>
        </td>
      </tr>

      <tr>
        <td>Linguaggio di programmazione:<br>
        </td>

        <td>C++<br>
        </td>
      </tr>

      <tr>
        <td>Licenza:<br>
        </td>

        <td>LGPL<br>
        </td>
      </tr>

      <tr>
        <td>Vantaggi</td>

        <td>
          <ul>
            <li>una libreria molto snella</li>

            <li>Il codice sorgente inclusa documentazione ed ambiente di
sviluppo "fluid".<br>
            </li>

            <li>buon supporto per OpenGL (che non e' stato testato)<br>

            </li>

            <li>controlli generici sotto Windows</li>
          </ul>
        </td>
      </tr>

      <tr>
        <td>Svantaggi<br>
        </td>

        <td>
          <ul>
            <li>installazione sotto Win32 (Visual C++) non senza
            problemi</li>

            <li>L' ambiente di sviluppo "fluid" non gira in modo stabile
sotto Windows.</li>
          </ul>
        </td>
      </tr>

      <tr>
        <td>Ambiente di sviluppo:<br>
        </td>

        <td>es.  fluid (GUI Builder)<br>
        </td>
      </tr>

      <tr>
        <td>WWW:</td>

        <td><a href="http://www.fltk.org/">http://www.fltk.org</a>,
        Download: <a href=
        "http://freshmeat.net/projects/fltk/">http://freshmeat.net/projects/fltk/</a><br>

        </td>
      </tr>

      <tr>
        <td>Documentazione:<br>
        </td>

        <td>Manuali, Tutorials, Mailing Lists<br>
         es. http://<br>
        </td>
      </tr>

      <tr>
        <td>Progetti di riferimento:<br>
        </td>

        <td>
          <ul>
            <li><a href=
            "http://vtkfltk.sourceforge.net/">http://vtkfltk.sourceforge.net/</a><br>

            </li>
          </ul>
        </td>
      </tr>

      <tr>
        <td>Distribuzione:<br>
        </td>

        <td>limitata, addirittura sconosciuta anche per la  maggior parte degli sviluppatori
        <br>
        </td>
      </tr>
    </table>
    <br>
     <br>


    <A NAME="350lfindex11">&nbsp;</A>
<H2>FOX Toolkit</H2>

    Il  Fox Toolkit si vanta di essere il toolkit piu' veloce
disponibilie. Offre un vasto numero di elementi GUI ed una interfaccia
OpenGL.

    <br>
    <br>
    L'installazione viene completata senza problemi sia sotto Windows che
sotto Linux. Sono disponibili una dettagliata documentazione e progetti di
esempio. Uno sguardo d'insieme delle classi non e' incluso nella versione
qui presentata ma e' disponibile online. <br>


    <center>
      <a href="../../common/images2/article350/fox_win.jpg"><img alt="FOX screenshot" src="../../common/images2/article350/fox_win_th.jpg" width="280" height="210"></a><br>
      <br>
      Videata di Windows 2000 (codice sorgente <a href=
      "../../common/src2/article350/fox_src.zip">qui
      (fox_src.zip)</a>)
    </center>

    <A NAME="350lfindex12">&nbsp;</A>
<H3>FOX: rieplogo </H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tr>
        <td>Nome:<br>
        </td>

        <td>FOX Toolkit</td>
      </tr>

      <tr>
        <td>Versione<br>
        </td>

        <td>1.2.9<br>
        </td>
      </tr>

      <tr>
        <td>Sistemi operativi:<br>
        </td>

        <td>Linux, Win32<br>
        </td>
      </tr>

      <tr>
        <td>Linguaggio di programmaziones:<br>
        </td>

        <td>C++<br>
        </td>
      </tr>

      <tr>
        <td>Licenza:<br>
        </td>

        <td>LGPL<br>
        </td>
      </tr>

      <tr>
        <td>Vantaggi</td>

        <td>
          <ul>
            <li>buona documentazione</li>
          </ul>
        </td>
      </tr>

      <tr>
        <td>Svantaggi<br>
        </td>

        <td>
        </td>
      </tr>

      <tr>
        <td>Ambiente di sviluppo:<br>
        </td>

        <td>
        </td>
      </tr>

      <tr>
        <td>WWW:</td>

        <td><a href=
        "http://www.fox-toolkit.org/">http://www.fox-toolkit.org</a><br>

        </td>
      </tr>

      <tr>
        <td>Documentazione:<br>
        </td>

        <td>Manuali, Tutorials, Mailinglist</td>
      </tr>

      <tr>
        <td>Progetti di riferimento:<br>
        </td>

        <td>
          <ul>
            <li>X File Explorer (Xfe)</li>
          </ul>
        </td>
      </tr>

      <tr>
        <td>Distribuzione:<br>
        </td>

        <td>scarsa distribuzione</td>
      </tr>
    </table>
    <br>


    <A NAME="350lfindex13">&nbsp;</A>
<H2>Altre  possibilita'</H2>

    In aggiunta alle librerie sopramenzionate vorrei anche citare i
seguenti progetti che comunque non esaminero' ulteriormente:

    <ul>
      <li>GNUstep [http://www.gnustep.org/]: Limitata usabilita'
      sotto windows</li>

      <li>Visual Component Framework [http://vcf.sourceforge.net/]:
      Non c'e una versione completa per Linux disponibile</li>
    </ul>

    <A NAME="350lfindex14">&nbsp;</A>
<H2>JAVA</H2>

    Nel 1995 la Sun introdusse una nuovo linguaggio di programmazione.
    Oltre che per gli abituali desktop-PC Java fu pianificato per prodotti
    industriali (macchine da caffe', tostapane etc.). La penetrazione nel mercatto
    avvenne inizialmente attraverso le applicazioni internet (applet) in
connessione con i browser web. Nel frattempo Java viene anche usato per
applicazioni a se' stanti, per le quali e' ben indicato per la varieta'
delle sue caratteristiche. <br>
     <br>

    Sotto elencheremo e spiegheremo in breve le caratteristiche piu'
importanti di Java. <br>
     <br>


    <A NAME="350lfindex15">&nbsp;</A>
<H3>Indipendente dalla piattaforma (Platform-independent)</H3>

    Java e' indipendente dalla piattaforma su cui gira. Le applicazioni Java consistono in
byte-code, che puo' essere interpretato da una macchina virtuale. Quindi
le applicazioni  sono in grado di girare su qualsiasi hardware per il quale
sia presente una macchina virtuale. L'interpretazione tramite la
macchina virtuale implica pero' una velocita' di elaborazione piu' bassa,
se confrontata con quella dei software compilati. Per controbilanciare
questo svantaggio, sono stati sviluppati dei miglioramenti tipo la
compilazione just-in-time (JIT) che traduce le istruzioni del programma
della macchina virtuale in istruzioni per la macchina fisica. Il risultato
in questo caso e' un programma caricato in memoria che puo' essere
eseguito rapidamente senza essere interpretato. Analisi addizionali del
comportamento in fase di esecuzione con la tecnologia Hotsport forniscono
ulteriori miglioramenti. <br>


    <A NAME="350lfindex16">&nbsp;</A>
<H3>Orientato agli oggetti</H3>

    Java e' orientato agli oggetti. Gli sviluppatori del linguaggio
orientato agli oggetti furono ispirati da Smalltalk. Ci sono ancora tipi
di dati primitivi che, presumibilmente per ragioni di efficienza, non sono
amministrati come oggetti. <br>
     <br>


    <A NAME="350lfindex17">&nbsp;</A>
<H3>Sintassi del linguaggio</H3>

    La sintassi del linguaggio e' simile quella di C e C++, anche se le
inconsistenze che in quei linguaggi portano a dei bug non sono state adottate. Un principio
degli sviluppatori del linguaggio era quello di combinare i migliori
concetti dei due linguaggi di programmazione
. <br>
     <br>
     Alcuni esempi:<br>


    <ul>
      <li>nessun  pre-processore. Il pre-processor ed i file  header non
      servono piu' visto che tutte le informazioni sono lette direttamente
dai file delle classi. .</li>

      <li>puntatori: Java non li usa, al loro posto sono usate delle references.
      Una reference rappresenta un oggetto .</li>

      <li>garbage-collector: per prevenire problemi derivanti dalla
creazione ed eliminazione degli oggetti, l'amministrazione dell'oggetto
viene gestita dall'ambiente Java in fase di esecuzione. Uscendo dall'array
attivo, gli oggetti sono automaticamente cancellati. Con questa tecnica gli oggetti o gli
array di memoria che non sono stati abilitati, cosi' come i falsi
distruttori sono evitati. </li>

      <li>eccezioni: al contrario della gestione delle eccezioni in  C++,
      in Java le eccezioni sono usate molto piu' frequentemente, spesso sono
obbligatorie<br>
      </li>
    </ul>

    <A NAME="350lfindex18">&nbsp;</A>
<H3>Liberie di classi</H3>

    Java include una vasta libreria di classi:
    JFC (Java Foundation Class) per la generazione di superfici.
    <i>Swing</i>  <br>


    <A NAME="350lfindex19">&nbsp;</A>
<H3>Sicurezza</H3>

    Il codice Java viene inizialmente controllato da un verificatore per
quanto riguarda la correttezza strutturale e la sicurezza dei tipi. Un
gestore di sicurezza verifica gli accessi alle periferiche. Qualsiasi
problema di sicurezza viene riportato come eccezione in fase di runtime.

    <A NAME="350lfindex20">&nbsp;</A>
<H3>Idoneita' per i progetti<br>
    </H3>

    I vantaggi summenzionati hanno l'effetto collaterale di rendere Java
non adatto a tutti i progetti. Queste proprieta' non sono state implementate  a ragion
veduta e non a causa di errori o manchevolezze, esse appartengono alla
filosofia del linguaggio. <br>
    Tra le altre ci sono ad esempio:

    <ul>
      <li>accessi alle periferiche specifici della piattaforma
</li>

      <li>accessi diretti all'hardware
</li>


      <li>ingerenze nel  sistema operativo
</li>

    </ul>

    <A NAME="350lfindex21">&nbsp;</A>
<H3>Java Development Kit (JDK)</H3>


    <p>Il Java Development Kit puo' essere scaricato dal sito internet di
Sun. Include un carnet base di applicazioni, classi java e documentazione
in linea. Le applicazioni sono un compilatore, un debugger, un
visualizzatore di applet ed una varieta' di programmi ausiliari necessari
per la generazione e la verifica della applicazioni Java e delle applet.
Questo kit offre solo l'essenziale, il compilatore deve essere lanciato da
riga comandi. In piu' il pacchetto contiene il  Java Runtime Environment
(JRE, che include la macchina virtuale), richiesto per eseguire il byte
code. La documentazione descrive interamente le API


<br>
    </p>

    <A NAME="350lfindex22">&nbsp;</A>
<H3>JHelloWorld</H3>

    Con l'aiuto del JDK la classica applicazione "hello world" verra'
implementata.
 <br>
    Passo 1: Generazione del codice sorgente.
<pre class="code">
sh&gt;vi Helloworld.java<br>
<br>
public class HelloWorld {<br> public static void main (String[] args) {<br> <br>
    System.out.println("Hello World!");<br>
  }<br>
}
</pre>
    Il nome del file ed il nome della classe devono corrispondere. <br>
    Passo 2: Trascodifica
<pre class="code">
sh&gt;javac Helloworld.java<br>
</pre>
    <br>
    Passo 3: Lancio dell'applicazione usando la macchina virtuale.
<pre class="code">
sh&gt;java Helloworld<br>
</pre>
    <br>


    <A NAME="350lfindex23">&nbsp;</A>
<H3>JavaScript e Java</H3>

    JavaScript e Java sono stati spesso accostati in quanto si pensa siano
simili. Sbagliato, JavaScript fu sviluppato originariamente da Netscape
come linguaggio di script da incorporare nell'HTML. Non e' un
linguaggio di programmazione autonomo, esso dipende dal browser. Il nome
JavaScript deve essere visto piu' come un trucco di marketing.

    <A NAME="350lfindex24">&nbsp;</A>
<H3>Tentativi di standardizzazione</H3>

    Fino a ora tutti i tentativi di standardizzare Java sono falliti.
    La ragione potrebbe essere la riluttanza di Sun a rinunciare al
controllo esclusivo sul successivo sviluppo degli standard Java.


    <A NAME="350lfindex25">&nbsp;</A>
<H3>Disassemblaggio</H3>

    Un problema potrebbe essere che le applicazioni possono essere
disassemblato. A dispetto della sicurezza attualmente e' possibile
riconvertire il Bytecode in codice sorgente. Questo e' possibile perche' il
Bytecode e' scritto per un processore virtuale e contiene, al contrario di
un tradizionale assemblatore, importanti informazioni addizionali. Esse
rendono molto piu' agevole il disassemblaggio del codice. Quindi non si
puo' nascondere una API proprietarie o speciali conoscenze nel codice.


    <A NAME="350lfindex26">&nbsp;</A>
<H3>Linguaggio-miracolo o aspettativa presto delusa</H3>

    Il concetto dietro Java fu visto all'inizio come la risposta
definitiva allo sviluppo di software indipendente dalla piattaforma.
Tuttavia le aspettative iniziali sono state disattese. Ci sono versioni
che sono in conflitto con le diverse macchine Java e la velocita' di
esecuzione rappresenta un problema. Molte compagnie, dopo i primi tentativi
tornarono alla programmazione standard C++. L'accresciuto numero di
download di wxWidgets e' una prova di questo.
 <br>
     <br>
    A questo proposito un sito interessante e': <a href=
    "http://www.internalmemos.com/memos/memodetails.php?memo_id=1321">
    http://www.internalmemos.com/memos/memodetails.php?memo_id=1321</a>
    dove impiegati della Sun forniscono argomenti contro Java.

    <A NAME="350lfindex27">&nbsp;</A>
<H2>GUIi (Interfacce grafiche utente)  con Java</H2>

    Java offre per default 2 possibilita' per programmare  interfacce grafiche
    :

    <ol>
      <li>Java ha una ricca libreria di classi (JFC, Swing). Qui non sono
usate funzioni del sistema operativo. Tutti i widget sono disegnati con
istruzioni Java. Questo fa si che si possa cambiare l'aspetto in fase di
esecuzione. Come potete vedere dalle videate qui sotto
.</li>

      <li>Le funzioni base di AWT. AWT non ha elementi complessi come le
strutture ad albero, quindi non e' adatto per la maggior parte delle
applicazioni.
.</li>
    </ol>
    <br>

    <center>
      <table border="0" cellpadding="2" cellspacing="2">
          <tr>
            <td><a href=
            "../../common/images2/article350/java_metal.jpg"><img alt="Java Metal screenshot" src="../../common/images2/article350/java_metal_th.jpg" width="280" height="210">
            </a>
            </td>

            <td><a href=
            "../../common/images2/article350/java_motif.jpg"><img alt="Java Motif screenshot" src="../../common/images2/article350/java_motif_th.jpg" width="280" height="210">
            </a>
            </td>
          </tr>
          <tr>

            <td colspan=2 align="center"><a href=
            "../../common/images2/article350/java_gtk.png"><img alt="Java Gtk screenshot" src="../../common/images2/article350/java_gtk_th.png" width="280" height="210">
            </a>
            </td>
          </tr>
      </table>
      <br>
      Videata di Java con l'aspetto Metal-, Motif- e GTK+
      (Quellcode <a href=
      "../../common/src2/article350/java_src.zip">qui il codice
      (java_src.zip)</a>)<br>
      <br>

      <table border="0" cellpadding="2" cellspacing="2">
        <tr>
          <td><a href=
          "../../common/images2/article350/java_win2000.jpg"><img alt="Java on Win2k here." src="../../common/images2/article350/java_win2000_th.jpg" width="280" height="210">
          </a><br>
          </td>

          <td><a href=
          "../../common/images2/article350/java_winxp.jpg"><img alt="Java on WinXP here." src="../../common/images2/article350/java_winxp_th.jpg" width="280" height="210">
          </a><br>
          </td>
        </tr>
      </table>
      <br>
     Videata di Java con l'aspetto di Windows sotto Windows 200 ed XP
      (identico codice sorgente)<br>
    </center>
    <br>
    Visto che tutti i browser piu' comuni supportano Java, tutte le
applicazioni possono essere scritte in modo che possano girare come applet
all'interno di un browser web. Questa caratteristica puo' essere sfruttata
ad esempio con le tecnologie embedded dove il Bytecode java viene
scaricato da un server web che e' integrato nell'applicazione.
    <br>
    Le seguenti videate mostrano la stessa applicazione sotto forma di
applet Java integrata in una pagina web
    <center>
      <br>
      <a href=
      "../../common/images2/article350/java_applet.jpg"><img alt="Java applet screenshot" src="../../common/images2/article350/java_applet_th.jpg" width="280" height="210"></a><br>
       Videata di Java con l'applicazione di esempio come Applet
      (code <a href=
      "../../common/src2/article350/java_applet.zip">here
      (java_applet.zip)</a>)<br>
    </center>

    <A NAME="350lfindex28">&nbsp;</A>
<H3>SWT ed Eclipse<br>
    </H3>

    Sebbene Java offra elementi GUI simili ad altri toolkit, gli
sviluppatori si lamentano di essi. I problemi maggiori sono
l'insufficiente velocita' di esecuzione e la mancanza di funzionalita'.
IBM ha sviluppato un'alternativa allo Standard Widget Toolkit (SWT) che
consente l'uso di elementi GUI nativi sotto Java. Un progetto di
riferimento e' l'ambiente integrato di sviluppo Eclipse che offre
strumenti di sviluppo indipendenti dalla piattaforma. Sia il toolkit che
l'ambiente di sviluppo sono software libero.
   <br>


    <A NAME="350lfindex29">&nbsp;</A>
<H3>Abbreviazioni usate nel contesto con JAVA</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>JDK (Java Development Kit)</td>

          <td>Il pacchetto Java completo per generare applicazioni Java,
comprende l'applicazione, le classi Java e la documentazione
<br>
          </td>
        </tr>

        <tr>
          <td>JRE (Java Runtime Environment)<br>
          </td>

          <td>comprende la macchina virtuale, obbligatorio per l'uso di
applicazioni Java.<br>
          </td>
        </tr>

        <tr>
          <td>J2ME (Java 2 Micro Edition)<br>
          </td>

          <td>Java per dispositivi con risorse limitate.<br>
          </td>
        </tr>

        <tr>
          <td>J2SE (Java 2 Standard Edition)<br>
          </td>

          <td>Java per il desktop (Linux, Windows, ...)<br>
          </td>
        </tr>

        <tr>
          <td>J2EE (Java 2 Enterprise Edition)<br>
          </td>

          <td>Java per la generazione di applicazioni client/server
multistrato cosi' come di Java servlets e  pagine Java-server
.<br>
          </td>
        </tr>

        <tr>
          <td>JFC (Java Foundation Class)</td>

          <td>Classi per lo svilppo di interfacce grafiche utente (-&gt;Swing)</td>
        </tr>
      </tbody>
    </table>
    <br>


    <A NAME="350lfindex30">&nbsp;</A>
<H3>Java: riepilogo</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Nome:<br>
          </td>

          <td>JAVA 2 PLATFORM STANDARD EDITION DEVELOPMENT KIT
          5.0</td>
        </tr>

        <tr>
          <td>Versione<br>
          </td>

          <td>5.0<br>
          </td>
        </tr>

        <tr>
          <td>Sistemi operativi:<br>
          </td>

          <td>
            <ul>
              <li>Linux, Windows, Solaris (SUN)</li>

              <li>Linux, Windows, AIX, Solaris (probabile MacOS,
              OS/2, FreeBSD, Amiga, BeOS) (Jikes -&gt; IBM)</li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Linguaggio di programmazione:<br>
          </td>

          <td>JAVA<br>
          </td>
        </tr>

        <tr>
          <td>Licenza:<br>
          </td>

          <td>licenza proprietaria (SUN)<br>
          </td>
        </tr>

        <tr>
          <td>Vantaggi</td>

          <td>
            <ul>
              <li>linguaggio robusto (molte fonti di errore sono eliminate
dalla concezione stessa del linguaggio).<br>
              </li>

              <li><br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Svantaggi<br>
          </td>

          <td>
            <ul>
              <li>inguaggio proprietario, controllato esclusivamente da  Sun</li>

              <li>Macchina virtuale, deve corrispondere esattamente alla
piattforma su cui gira <br>
              </li>

              <li>Lento in esecuzione</li>

              <li>La programmazione di SWT e' piu' complessa di  Swing<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Ambiente di sviluppo:<br>
          </td>

          <td>es. Eclipse<br>
          </td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><a href=
          "http://java.sun.com/">http://java.sun.com</a></td>
        </tr>

        <tr>
          <td>Documentazione:<br>
          </td>

          <td>manuali,  tutorials<br>
           in generale <a href=
          "http://java.sun.com/j2se/1.5.0/docs/">http://java.sun.com/j2se/1.5.0/docs/</a>,
          <a href=
          "http://www-e.uni-magdeburg.de/mayer/java.html">http://www-e.uni-magdeburg.de/mayer/java.html</a><br>

           SWT: <a href=
          "http://eclipse-wiki.info/SWT">http://eclipse-wiki.info/SWT</a>,
          <a href=
          "http://www.java-tutor.com/java/swtlinks.html">http://www.java-tutor.com/java/swtlinks.html</a><br>

          </td>
        </tr>

        <tr>
          <td>Progetti di riferimento:<br>
          </td>

          <td>
          </td>
        </tr>

        <tr>
          <td>Distribuziione:<br>
          </td>

          <td>molto vasta<br>
          </td>
        </tr>
      </tbody>
    </table>

    <A NAME="350lfindex31">&nbsp;</A>
<H2>Kylix</H2>

    Kxlix e' una piattaforma di sviluppo per Linux e Windows. Con l'aiuto
della libreria CLX di Borland (Component
    Library for Cross-platform) le applicazioni possono essere sviluppate
sotto Delphi e C++, e possono girare sotto entrambe le piattaforme.
Secondo quando riportato nella homepage di wikipedia
 (Link <a href=
    "http://de.wikipedia.org/wiki/Kylix">de.wikipedia.org/wiki/Kylix</a>)
  questa libreria e' solo un contenitore per la summenzionata libreria Qt.
Inoltre l'ambiente di sviluppo integrato (IDE) Kylix e' chiaramente
un'applicazione  non nativa Linux basata su <i>wine</i>.
 (Link <a href=
    "http://de.wikipedia.org/wiki/WINE_Is_Not_an_Emulator">de.wikipedia.org/wiki/WINE_Is_Not_an_Emulator</a>)
  i cui eseguibili devono essere linkati a
<i>libwine</i>. Considerando tutto cio',
    Kylix potrebbe non avere molto senso per sviluppatori  C++
visto che l'uso di Qt in un IDE libero e' molto piu' diretto.
    <br>
     <br>


    <A NAME="350lfindex32">&nbsp;</A>
<H3>Kylix: Riepilogo</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Nome:<br>
          </td>

          <td>Kylix<br>
          </td>
        </tr>

        <tr>
          <td>Versione<br>
          </td>

          <td>3<br>
          </td>
        </tr>

        <tr>
          <td>Sistemi operativi:<br>
          </td>

          <td>Windows, Linux<br>
          </td>
        </tr>

        <tr>
          <td>Linguaggio di programmazione:<br>
          </td>

          <td>Delphi, C++<br>
          </td>
        </tr>

        <tr>
          <td>Licenza:<br>
          </td>

          <td>Software proprietario<br>
          </td>
        </tr>

        <tr>
          <td>Vantaggi</td>

          <td>
            <ul>
              <li>sviluppo sotto Delphi e C++<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Svantaggi<br>
          </td>

          <td>
            <ul>
              <li>Costi di licenza<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Ambiente di sviluppo:<br>
          </td>

          <td>Kylix<br>
          </td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><a href=
          "http://www.borland.de/kylix">http://www.borland.de/kylix</a></td>
        </tr>

        <tr>
          <td>Documentazione:<br>
          </td>

          <td>&nbsp;<br>
          </td>
        </tr>

        <tr>
          <td>Progetti di riferimento:<br>
          </td>

          <td><br>
          </td>
        </tr>

        <tr>
          <td>Distribuzione:<br>
          </td>

          <td>non molto diffuso<br>
          </td>
        </tr>
      </tbody>
    </table>

    <p><br>
    </p>
    <br>
     <br>


    <A NAME="350lfindex33">&nbsp;</A>
<H2>Smalltalk</H2>

   Smalltalk e' un classico tra i linguaggi di programmazione. Fu
sviluppato nel 1969/70 da Xerox e fino ad oggi rappresenta un buon esempio
di linguaggio orientato agli oggetti. Tutto e' un oggetto in Smalltalk.
Non ci sono tipi di dati semplici, Smalltalk lavora come Java e .Net (vedi
sotto) in una macchina virtuale. La sintassi tenta di avvicinarsi
all'inglese parlato, ma e' totalmente diversa da qualsiasi altro
linguaggio di programmazione. Smalltalk naque gia' in un ambiente
grafico. Smalltalk era circa 10-15 anni avanti al suo tempo. Smalltalk
aveva un buon successo fino all'arrivo di Java.. <br>
     <br>
    Eccco il programma
    'Hello world !' sotto smalltalk:
<pre class="code">
Transcript show: 'Hello world !'; cr.
</pre>
    Smalltalk e' ancora usato oggi. La variante piu' diffusa e'
Smalltalk-80 (standardizzato nel 1980). Un ambiente di sviluppo potente e'
ad esempio Squeak.

    <A NAME="350lfindex34">&nbsp;</A>
<H3>Smalltalk: riepilogo </H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Nome:<br>
          </td>

          <td>Smalltalk (e.g. Squeak)<br>
          </td>
        </tr>

        <tr>
          <td>Versione<br>
          </td>

          <td>3.6<br>
          </td>
        </tr>

        <tr>
          <td>Sistemi operativi:<br>
          </td>

          <td>Windows, Linux, Solaris, MacOSX, Darwin<br>
          </td>
        </tr>

        <tr>
          <td>Linguaggio di programmazione:<br>
          </td>

          <td>Smalltalk<br>
          </td>
        </tr>

        <tr>
          <td>Licenza:<br>
          </td>

          <td>Open Source<br>
          </td>
        </tr>

        <tr>
          <td>Vantaggi:</td>

          <td>Totalmente orientato agli oggetti</td>
        </tr>

        <tr>
          <td>Svantaggi<br>
          </td>

          <td>Smalltalk e' messo da parte da Java ed ha un base utenti
significativamente minore.</td>
        </tr>

        <tr>
          <td>Ambiente di sviluppo:<br>
          </td>

          <td>es. Squeak<br>
          </td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><a href=
          "http://www.smalltalk.org/">http://www.smalltalk.org</a></td>
        </tr>

        <tr>
          <td>Documentazione:<br>
          </td>

          <td>&nbsp;<br>
          </td>
        </tr>

        <tr>
          <td>Progetti di riferimento:<br>
          </td>

          <td><br>
          </td>
        </tr>

        <tr>
          <td>Distribuzione:<br>
          </td>

          <td>non molto diffuso</td>
        </tr>
      </tbody>
    </table>

    <p><br>
    </p>
    <br>


    <A NAME="350lfindex35">&nbsp;</A>
<H2><a name="Mozilla"></a>Mozilla</H2>

    Mozilla? Un web browser? Come si puo' programmare con un web browser?
  Mozilla non e' solamente un browser, ma anche una piattaforma
indipendente che include diversi standard tipo  XUL (XML based interface language - linguaggio XML basato sull'interfaccia- ). XUL
viene usato per definire la struttura ed il contenuto di un'applicazione.
Tutti i file usati sono in testo semplice. Mozilla non fa differenza tra
programmi e pagine web.. <br>
    <br>
   Se digitate la seguente stringa nel campo dell'indirizzo in mozilla,
verra' mostrato il broswer stesso
<pre class="code">
chrome://navigator/content
</pre>
   Il codice seguente visualizza un bottone in Mozilla che aprira' una
finestra con il testo "Hello World" quando ci si clicca sopra
: <br>
<pre class="code">
&lt;?xml version="1.0"?&gt;
&lt;!-- Beispiel XUL Datei --&gt;
&lt;window
xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"&gt;
&lt;box align="center"&gt;
  &lt;button label="Push" onclick="alert('Hello World');" /&gt;
&lt;/box&gt;
&lt;/window&gt;
</pre>
    Sviluppare software con mozilla e' molto diverso dallo sviluppo di
    software classico. Mozilla ha diverse innovazioni tipo la separazione
    dell'applicazione dalla sua presentazione. Questo rende possibile
    cambiare l'aspetto dell'applicazione ("Temi"). Progetti di successo
    come il browser web firefox dimostrano che siamo di fronte ad un
    framework robusto
 . <br>

    <center>
      <table border="0" cellpadding="2" cellspacing="2">
          <tr>
            <td><a href=
            "../../common/images2/article350/moz_linux.png"><img alt="Mozilla on Linux Screenshot" src="../../common/images2/article350/moz_linux_th.png" width="280" height="210">
            </a><br>
            </td>

            <td><a href=
            "../../common/images2/article350/moz_win.jpg"><img alt="Mozilla on Win2k" src="../../common/images2/article350/moz_win_th.jpg" width="280" height="210">
            </a><br>
            </td>
          </tr>
      </table>
      Videate in Linux e Windows 2000  <a href=
      "../../common/src2/article350/moz_src.tar.gz">qui
      (moz_src.tar.gz)</a> )il codice sorgente.<br>
    </center>
    <br>


    <A NAME="350lfindex36">&nbsp;</A>
<H3>Mozilla: riepilogo<br>
    </H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Nome:<br>
          </td>

          <td>Mozilla<br>
          </td>
        </tr>

        <tr>
          <td>Versione<br>
          </td>

          <td>1.6<br>
          </td>
        </tr>

        <tr>
          <td>Sistemi operativi:<br>
          </td>

          <td>Windows, Linux,<br>
          </td>
        </tr>

        <tr>
          <td>Linguaggio di programmazione:<br>
          </td>

          <td>XUL<br>
          </td>
        </tr>

        <tr>
          <td>Licenza:<br>
          </td>

          <td>Mozilla Public License, Netscape Public License</td>
        </tr>

        <tr>
          <td>Vantaggi</td>

          <td>
            <ul>
              <li>concetti innovativi</li>

              <li>supporto per la maggior parte degli standard web (JavaScript,
              Stylesheets,...)</li>

              <li>le applicazioni girano nel browser o a se stanti
             </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Svantaggi<br>
          </td>

          <td><br>
          </td>
        </tr>

        <tr>
          <td>Ambiente di sviluppo:<br>
          </td>

          <td><br>
          </td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><a href=
          "http://www.mozilla.org/">http://www.mozilla.org</a><br>
          </td>
        </tr>

        <tr>
          <td>Documentazione:<br>
          </td>

          <td>Manuals, tutorials, mailing lists. Es.
          www.xulplanet.com</td>
        </tr>

        <tr>
          <td>Progetti di riferimento:<br>
          </td>

          <td>Mozilla firefox</td>
        </tr>

        <tr>
          <td>Distrubuzione:<br>
          </td>

          <td>largamente diffuso ma di rado usato per progetti software
          .<br>
          </td>
        </tr>
      </tbody>
    </table>

    <p><br>
    </p>
    <br>


    <A NAME="350lfindex37">&nbsp;</A>
<H2>La risposta di Microsoft</H2>

    Nel frattempo Microsoft ha naturalmente riconosciuto i segni del tempo
    ed ha proposto il proprio approccio. E' stata sviluppota una
    piattaforma chiamata .NET, che, ultimo ma non meno importante,
    dovrebbe ridurre la migrazione degli sviluppatori di software verso
    la concorrente piattaforma Java. Uno sguardo piu' approfondito rivela
    in effetti molti parallelismi tra i contendenti, anche se sotto forma
    di nomi diversi. L'equivalente del 'bytecode' di Java e' chiamato C#
    'Intermediate Language' MSIL). <br>
     <br>

    <A NAME="350lfindex38">&nbsp;</A>
<H3>Cosa e' .NET ?</H3>

    .NET e' una tecnoologia proprietaria di Microsoft, che sara' la base
    per tutti i futuri prodeotti Microsoft. Il supporto per quella che
    fino ad ora era la libreria preferita  "MFC per Visual C++" e' stato abbandonato con l'indroduzione di
    .NET. .NET dovrebbe semplificare lo sviluppo di applicazioni di rete
    ed internet; molti concetti di Java sono stati adottati. .NET supporta
    la programmazione orientata agli oggetti e viene fornito con una
    singola libreria di classi la quale potrebbe essere utilizzata da vari
    linguaggi di programmaziones (C#, VB.NET). Questo vuole dire che il "
    linguaggio intermedio" - che accede all'hardware - viene generato dal
    codice del programma (cosi' come il Java Sourcecode - -&gt; Java Bytecode -&gt; macchina virtuale  -&gt;
    hardware fisico).. <br>

     <br>
     Versioni future di Windows saranno distribuite con il framework .NET
. <br>
     <br>


    <A NAME="350lfindex39">&nbsp;</A>
<H3>Cosa e'  Visual Studio .NET ?</H3>

    Visual Studio .NET e' un ambiente di programmazione che semplifica lo
    sviluppo di software .NET, ma non e' obbligatorio averlo.
    <br>
     <br>


    <A NAME="350lfindex40">&nbsp;</A>
<H3>Differenze tra  Visual Basic (VB) e VB .NET</H3>

    Anche se VB.NET - per ragioni di compatibilita' - supporta molte
    funzioni originali di VB e la sintassi del linguaggio e' stata
    mantenuta, e' un linguaggio di programmazione completamente nuovo.
    <br>
     <br>


     <A NAME="350lfindex41">&nbsp;</A>
<H3>Quale linguaggio di programmazione e' piu' indicato?</H3>

     Visto che il codice sorgente di VB.NET e quello di C# vengono
     trascodificati in MSIL, il linguaggio di programmazione non fa alcuna
     differenza. Non ci sono, ad esempio, differenze di velocita' tra
     codice VB.NET e C#. Il compilatore C# dovrebbe essere piu' adatto
     visto che e' stato sviluppato specificatamente per il framework .NET <br>
     <br>


    <A NAME="350lfindex42">&nbsp;</A>
<H3>.NET e Linux</H3>

    Alla faccia dell'approccio indipendente dalla piattaforma, Microsoft probabilmente non sviluppera' una variante per Linux
    di .NET, e questa e' la ragione per la quale un gruppo di sviluppatori
    - vicino a Miguel de Icaza (Ximian. Evolution) - e' stato ingaggiato con
    questo compito. Il pacchetto open-source    <i>Mono</i>, versione 1.0,
    e' nel frattempo disponibile
    . <br>
     <br>
     <br>


     <A NAME="350lfindex43">&nbsp;</A>
<H3>.NET: riepilogo</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Nome:<br>
          </td>

          <td>Microsoft .NET-Framework<br>
          </td>
        </tr>

        <tr>
          <td>Versione<br>
          </td>

          <td><br>
          </td>
        </tr>

        <tr>
          <td>Sistemi operativi:<br>
          </td>

          <td>Windows, Linux<br>
          </td>
        </tr>

        <tr>
          <td>Linguaggio di programmazione:<br>
          </td>

          <td>C#, Windows: VB.NET<br>
          </td>
        </tr>

        <tr>
          <td>Licenza:<br>
          </td>

          <td>proprietaria<br>
          </td>
        </tr>

        <tr>
          <td>Vantaggi</td>

          <td>
            <ul>
              <li>parte dei futuri Windows<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Svantaggi<br>
          </td>

          <td>
            <ul>
              <li>software proprietario</li>

              <li>nessuna versione di .NET disponibile per Linuxe<br>
              </li>

              <li>API completamente nuove<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Ambiente di sviluppo:<br>
          </td>

          <td>Visual Studio .NET<br>
          </td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><br>
          </td>
        </tr>

        <tr>
          <td>Documentazione:<br>
          </td>

          <td>&nbsp;<br>
          </td>
        </tr>

        <tr>
          <td>Progetti di riferimento:<br>
          </td>

          <td><br>
          </td>
        </tr>

        <tr>
          <td>Distribuzione:<br>
          </td>

          <td>Limitata allo stato attuale<br>
          </td>
        </tr>
      </tbody>
    </table>

    <p><br>
    </p>
    <br>


    <A NAME="350lfindex44">&nbsp;</A>
<H2><a name="Zusammenfassung"></a> Conclusioni</H2>

    Prima della valutazione finale, ricordiamo il compito che dobbiamo
    svolgere: quello dello sviluppo di un front-end, che dovra' comunicare
    tramite rete con l'hardware connesso. Per questo il codice sorgente
    dovra' essere in grado di essere trascodificato nelle piattaforme
    Linux e Win32. L'applicazione non dovra' essere diversa dal software
    esistente nel sistema. Con questo compito da svolgere la vista dei
    pacchetti testati apparira' distorta e non puo' essere considerata
    come un valido giudizio a livello generale.. <br>
     <br>
    Il miglior esempio di questo concetto e' il toolkit FLTK. Con esso
    abbiamo un sistema molto capace e di dimensioni limitate. I punti di
    forza sono un codice sorgente ridotto, una buona interfaccia grafica
    ed una buona portabilita'. Queste caratteristiche rendono il toolkit
    adatto per progetti di applicazioni grafiche ed embedded. Per lo
    sviluppo dell'interfaccia il numero di classi disponibili, la gestione e
    l'aspetto delle applicazioni generate costituiscono un problema.
    Quindi FLTK e' meno indicato per questo tipo di applicazioni.
 <br>
     <br>
    Una grossa delusione per lo sviluppatore di software puo' essere
    rappresentata dal progetto GTK+ sotto Windows. La comunita' Linux
    potrebbe dimostrare molto piu' coinvolgimento. Gli avvertimenti
    piazzati nel sito web non sono certi messi per aumentare la confidenza.
    La cosa e' ancor piu' disdicevole visto che il pacchetto GTK+ in se'
    sembra piuttosto valido. Il potenziale e' molto ampio;
    l'implementazione verso la piattaforma Windows e' ancora in
    divenire.

<br>
     <br>
    L'utilizzo degli outsider Smalltalk e Mozilla costituisce la mia
    preferenza personale. Una ditta, che genera i propri profitti con lo
    sviluppo interno dell'hardware, dovrebbe tenere in scarsa
    considerazione gli aspetti filosofici. Sebbene Smalltalk sia un
    linguaggio meglio orientato alla programmazione ad oggetti e la
    programmazione XUL di Mozilla accresca di importanza il browser
    incluso, questi pacchetti non sono prodotti "tipo" per lo sviluppo di
    software. <br>
     <br>
    In questa recensione Kylix, cosi' come GTK+ PER Win32 hanno lasciato
    un'impressione negativa. Rimane ben poco della gloria del prodotto
    originale: Turbo Pascal. Negli anni 80 Borland forniva un potente IDE
    per questo progetto, che girava sia sugli home computers che sui primi
    PC. Era conosciuto per il suo prezzo ragionevole ed il codice veloce.
    Nel frattempo molto e' cambiato. Borland e' diventata Inprise, quindi
    e' ritornata Borland. Turbo Pascal e' cambiato in Object Pascal, poi
    in Delphi ed in ultimo in Kylix (naturalmente con modifiche ed
    espansioni). Il suo uso non ha senso attualmente - almeno per nuovi
    progetti. <br>
     <br>
    In questo ambiente Microsoft dimostra che ha individuato quello che il
    nostro tempo richiede. Inizialmente, la compagnia ha tentato di
    accrescere gli standard Java con Visual++. A parte i comandi standard
    di Java veniva consentito anche l'accesso alle API Win32 ed anche al
    registro di Windows (il che era l'esatto contrario della filosofia del
    linguaggio). Inoltre  gli eseguibili Win32 erano generati
    automaticamente. Dopo alcune battaglie legali con Sun, si dovette
    esporre un'avvertenza relativa al fatto che l'applicazione poteva non
    girare su altri sistemi operativi. Alla fine della fiera Microsoft ha
    interrotto i contatti con Java. E' stata sviluppata una strategia
    completamente nuova. Con .NET e C# e' stato generato un nuovo standard.
    La combinazione di Windows, .NET e C# costituisce sicuramente un buon
    pacchetto,  ma si era detto lo stesso anche con la combinazione di
    Windows, Visual++ e la libreria di classi MFC. Lo svantaggio e' che si
    e' completamente alla merce' di un fornitore che vuole imporre i
    "propri" standard (Windows). E' molto probabile che per l'immediato
    futuro Microsoft non voglia pianificare alcuna implementazione di .NET
    verso altri sistemi operativi. La conversione free Mono deve ancora
    dimostrare di avere una reale capacita', A scapito dei primi successi,
    ad oggi nessuna conclusione puo' essere tratta
    <br>
     <br>
    Senza remore sono consiglabili i pacchetti Qt, wxWindows e Java. La
    scelta finale e' difficile visto che tutti e  tre i prodotti sono in
    grado di generare complicate interfacce software. Si possono qui
    sviluppare diverse opinioni, a seconda dell'adeguatezza del supposto,
    dei costi, della prontezza, della filosofia di programmazione, etc. Le
    distinzioni si possono cercare nei dettagli; la filosofia Java, in
    effetti, non consente l'accesso diretto all'hardware, ma puo'
    risultare vantaggiosa in altri aspetti. Da un punto di vista tecnico i
    3 contendenti possono gestire il compito richiesto senza problemi <br>
     <br>
    Questa e' una conclusione soggettiva dell'autore: il tifoso dell'Open
    Source potrebbe propendere verso wxWindows per il lavoro da svolgere.
    A parte una concezione gradevole ed un buon supporto e' disponibile
    una documentazione sufficiente. <br>
     <br>
     <!-- vim: set sw=2 ts=2 et tw=74: -->
  



<!-- BODY_OF_THE_ARTICLE_STOP -->
<!-- 2pdaIgnoreStart -->
<A NAME="talkback">&nbsp;</a>
<h2>Discussioni su quest'articolo</h2>
ogni articolo possiede una sua pagina di discussione, da questa pagina puoi inviare un commento o leggere quelli degli altri lettori:
<center>
    <table width="250" border=0><tr><td>
    <div class="tbbutton"><A class="nodec" href="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=350">&nbsp;pagina di discussione&nbsp;</a></div>
    </td></tr></table>
</center>

<br clear="all">
<HR size="2" noshade>
<table width="250" border=0><tr><td>
<div class="bbutton"><a class="nodec" href="../../index.shtml">&lt;--, LF Home</a></div>
</td><td>
<div class="bbutton"><a class="nodec" href="index.shtml">Indice di questo numero</a></div>
</td></tr></table>
<br clear="all">
<HR size="2" noshade>
<!-- ARTICLE FOOT -->
<CENTER><TABLE WIDTH="98%" summary="footer">
<TR><TD ALIGN=CENTER BGCOLOR="#bdc6d5" WIDTH="50%">
<A HREF="../../common/lfteam.html">Webpages maintained by the LinuxFocus Editor team</A>
<BR><FONT COLOR="#1111aa"><a href="../../common/copy.html">&copy; Michael     Tschater</a><br>&quot;some rights reserved&quot; see <a href="../../license/index.shtml">linuxfocus.org/license/</a><br><a href="http://www.linuxfocus.org">http://www.LinuxFocus.org</a></FONT>
</TD>
<TD BGCOLOR="#bdc6d5">
<!-- TRANSLATION INFO -->
<font size=2>Translation information:</font>
<TABLE summary="translators">
  <tr><td><font size="2">de --&gt; -- : Michael Tschater <small>&lt;tschater/at/web.de&gt;</small></font></td></tr>
  <tr><td><font size="2">de --&gt; en: J&uuml;rgen Pohl &lt;sept.sapins/at/verizon.net&gt;</font></td></tr>
  <tr><td><font size="2">en --&gt; ita: Roberto Pauletto &lt;neverquit/at/cwazy.co.uk&gt;</font></td></tr>
</TABLE>
</TD>
</TR></TABLE></CENTER>
<p><font size=1>2004-12-03, generated by lfparser version 2.51</font></p>
<!-- 2pdaIgnoreStop -->
</BODY>
</HTML>

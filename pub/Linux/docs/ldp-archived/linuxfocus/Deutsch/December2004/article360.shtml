<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
 <META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <META NAME="GENERATOR" CONTENT="lfparser_2.51">
 <META NAME="LFCATEGORY" CONTENT="SystemAdministration">
 <link rel="icon" href="../../common/images/lf-16.png" type="image/png">
 <TITLE>lf360, SystemAdministration: CheckInstall</TITLE>
<style type="text/css">
<!--
 td.top {font-family: Arial,Geneva,Verdana,Helvetica,sans-serif; font-size:12 }
 pre { font-family:monospace,Courier }
 pre.code { font-family:monospace,Courier;background-color:#aedbe8; }
 p.cl { color:#EE9500 }
 table.left { margin-right:0.3cm }
 a.nodec { text-decoration:none }
 p.trans { font-size:8pt; text-align:right }
 p.clbox { width:50%; alignment:center; background-color:#FFD700; 
           border-style:none; border-width:medium; border-color:#FFD700; 
           padding:0.5cm;  text-align:center }
 p.code { width:80%; alignment:center; background-color:#aedbe8; 
          border-style:none; border-width:medium; border-color:#aedbe8; 
          padding:0.1cm;  text-align:left }
 p.foot { background-color:#AAAAAA; color:#FFFFFF; border-style:none; 
          border-width:medium; border-color:#AAAAAA; padding:0.5cm ; 
          margin-top:0.1cm; margin-right:1cm; margin-left:1cm; 
          text-align:center }
 div.tbbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   margin: 2px 5px 2px 5px;
   text-align: center;
   width: 20em;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
 div.bbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   float: left;
   margin: 2px 5px 2px 5px;
   text-align: center;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
-->
</style>
 
</HEAD>
<BODY bgcolor="#ffffff" text="#000000">
 <!-- this is generated html code. NEVER use this file for your
 translation work. Instead get the file with the same article number
 and .meta.shtml in its name. Translate this meta file and then
 use lfparser program to generate the final article -->
 <!-- lfparser can be obtained from http://main.linuxfocus.org/~guido/dev/lfparser.html -->

<!-- this is used by a number of tools:
 =LF=AUTHOR: Mario M. Knopf
 =LF=CAT___: SystemAdministration
 =LF=TITLE_: CheckInstall
 =LF=NUMBER: 360
 =LF=ANAME_: article360.shtml
 =LF=PARSER: 2.51
 -->

<!-- 2pdaIgnoreStart -->

<!-- start navegation bar, current, style=2 -->
 <!-- top navegation bar -->
 <TABLE summary="topbar_1" cellspacing="0" cellpadding="0" border="0" align="center" width="90%">
   <TR bgcolor="#2e2292">
     <TD class="top"><TABLE summary="topbar_1_logo" cellspacing="0" cellpadding="0" border="0" width=
       "100%">
         <TR><TD width="319"><a href="../../index.shtml"><IMG src="../../common/images/logolftop_319x45.gif"
           alt="[LinuxFocus-icon]" width="319" height="45" align="left" 
           border="0"></a></TD>

           <TD class="top">
             <TABLE summary="topbar_1_links" width="100%">
               <TR align="right">
                 <TD class="top">
                 
                 <A class="nodec" href="../../index.shtml"><FONT color=
                 "#DDDDDD" size="2">&lt;--</FONT></A> &nbsp;| 
                 <A class="nodec" href="../map.html"><FONT color=
                 "#DDDDDD" size="2">Plan</FONT></A> &nbsp;| 
                 <A class="nodec" href="../indice.html"><FONT color=
                 "#DDDDDD" size="2">Index</FONT></A> &nbsp;| 
                 <A class="nodec" href="../Search/index.html"><FONT color=
                 "#DDDDDD" size="2">Suchen</FONT></A> </TD>
                 
               </TR>

               <TR align="right">
                 <TD class="top">
                   <HR width="100%" noshade size="1">
                 </TD>
               </TR>
             </TABLE>
           </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end top navegation bar -->
 <!-- blue bar -->
 <TABLE summary="topbar_2" cellspacing="0" cellpadding="0" border="0" align="center"
 width="90%">
   <TR bgcolor="#00ffff">
     <TD><IMG src="../../common/images/transpix.gif" width="1" height=
     "2" alt=""></TD>
   </TR>
 </TABLE>
 <!-- end blue bar -->
 <!-- bottom navegation bar -->
 <TABLE summary="topbar_3" cellspacing="0" cellpadding="0" border="0" align="center"
 width="94%">
   <TR bgcolor="#000000">
     <TD>
       <TABLE summary="topbar_3_links" cellspacing="0" cellpadding="1" border="0" width=
       "100%">
         <TR align="center">
           <TD WIDTH="20%"><A class="nodec" href="../News/index.shtml"><FONT color=
           "#FFFFFF">Nachrichten</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Archives/index.html"><FONT color=
           "#FFFFFF">Archiv</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Links/index.shtml"><FONT color=
           "#FFFFFF">Links</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../aboutus.html"><FONT color=
           "#FFFFFF">&Uuml;ber uns</FONT></A> </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end bottom navegation bar -->
<!-- stop navegation bar -->

<!-- SSI_INFO -->

<!-- tr_staticssi include virtual -->
<!-- tr_staticssi exec cmd -->
<!-- addedByLfdynahead ver 1.5 --><TABLE ALIGN="right" border=0><TR><TD ALIGN="right"><FONT SIZE="-1" FACE="Arial,Helvetica">Dieses Dokument ist verf&uuml;bar auf: <A href="../../English/December2004/article360.shtml">English</a> &nbsp;<A href="../../Castellano/December2004/article360.shtml">Castellano</a> &nbsp;<A href="../../ChineseGB/December2004/article360.shtml">ChineseGB</a> &nbsp;<A href="../../Deutsch/December2004/article360.shtml">Deutsch</a> &nbsp;<A href="../../Francais/December2004/article360.shtml">Francais</a> &nbsp;<A href="../../Italiano/December2004/article360.shtml">Italiano</a> &nbsp;<A href="../../Nederlands/December2004/article360.shtml">Nederlands</a> &nbsp;<A href="../../Turkce/December2004/article360.shtml">Turkce</a> &nbsp;<A href="../../Polish/December2004/article360.shtml">Polish</a> &nbsp;</FONT></TD></TR></TABLE><br>
 


<!-- SSI_INFO STOP -->
<!-- 2pdaIgnoreStop -->

<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_START -->
<TABLE ALIGN="LEFT" BORDER="0" WIDTH="195" summary="about the author" class="left">
<TR>
<TD>

<IMG SRC="../../common/images2/MarioMKnopf.jpg" ALT="[Photo of the Author]" width="150" height="130">
<BR>von  Mario M. Knopf <a href="http://www.neo5k.de/"><font size="1">(homepage)</font></a>
<BR><BR>
<I>&Uuml;ber den Autor:</I><BR>
<!-- aboutauthor_start -->
<P>Mario besch&auml;ftigt sich leidenschaftlich gerne mit Linux, Netzwerken und sicherheitsrelevanten Themen.
</P>
<!-- aboutauthor_stop -->
<!-- TRANSLATED_TO de -->
<!-- TRANSLATED_TO_STOP -->
<!-- INDEX_START -->
<BR><i>Inhalt</i>:
<UL>
  <LI><A HREF="#360lfindex0">Einleitung</A></LI>
  <LI><A HREF="#360lfindex1">CheckInstall</A></LI>
  <LI><A HREF="#360lfindex2">Installation</A></LI>
  <LI><A HREF="#360lfindex3">Konfiguration</A></LI>
  <LI><A HREF="#360lfindex4">Fazit</A></LI>
  <LI><A HREF="#360lfindex5">Links</A></LI>
  <LI><A HREF="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=360">Talkback f&uuml;r diesen Artikel</A></LI>
</UL>

</TD></TR></TABLE>
<!-- INDEX_STOP -->
<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_STOP -->
<!-- HEAD_OF_THE_ARTICLE_START -->
<br>&nbsp;
<table border="0"><tr><td>
<H2>CheckInstall</H2>
 <IMG SRC="../../common/images2/article360.png" ALT="[CheckInstall Title]" HSPACE=10 width="525" height="158">
<!-- ABSTRACT OF THE ARTICLE -->
<P><i>Zusammenfassung</i>:
<P>
<!-- articleabstract_start -->

Dieser Artikel behandelt die saubere Installation/Deinstallation von manuell aus dem Quellcode kompilierten Programmen unter Benutzung des Tools <i>CheckInstall</i>.


<!-- articleabstract_stop -->

<br><!-- HR divider --><center><font color="#8282e0"><b>_________________ _________________ _________________</b></font></center><br>
</td></tr></table>
<!-- HEAD_OF_THE_ARTICLE_STOP -->
<!-- BODY_OF_THE_ARTICLE_START -->


<A NAME="360lfindex0">&nbsp;</A>
<H2>Einleitung</H2>

<p>Oft kommt es vor, da&szlig; das ein oder andere Programm, welches man unbedingt testen m&ouml;chte, nur im Quellcode vorliegt (kein rpm und kein src.rpm). In einem solchen Fall l&auml;dt man sich das passende Archiv herunter, entpackt es und &uuml;bersetzt es anschlie&szlig;end manuell. So weit, so gut. Was aber geschieht, wenn man das Programm wieder deinstallieren m&ouml;chte?</p>
<p>Eine ad&auml;quate Routine zur sauberen Deinstallation des Pakets ist nur in den seltensten F&auml;llen im <i>Makefile</i> enthalten. Nat&uuml;rlich best&uuml;nde noch die M&ouml;glichkeit, das Programm in ein tempor&auml;res Verzeichnis zu installieren und sich die neu erstellten Dateien und Verzeichnisse f&uuml;r ein sp&auml;teres Entfernen zu notieren. Diese Vorgehensweise ist allerdings m&uuml;hsam und aufwendig, wenn h&auml;ufig Programme aus den Quellen kompiliert werden. Abhilfe schafft das von Felipe Eduardo S&aacute;nchez D&iacute;az Dur&aacute;n geschriebene Tool <i>CheckInstall</i> [1].</p>
<p>Im Regelfall wird ein <i>GNU Autoconf</i> konformes Programm unter Verwendung der allseits bekannten Befehlsfolge <i>./configure &amp;&amp; make &amp;&amp; make install</i> kompiliert und installiert. Dabei versucht das <i>configure</i>-Shellskript geeignete Werte f&uuml;r diverse systemabh&auml;ngige Variablen abzusch&auml;tzen, die dann w&auml;hrend der sp&auml;teren Kompilierung verwendet werden und pr&uuml;ft somit, ob alle diesbez&uuml;glichen Voraussetzungen f&uuml;r einen erfolgreichen Durchlauf erf&uuml;llt werden. Jene Werte werden auch zur Erstellung eines oder mehrerer <i>Makefiles</i> benutzt. Weiterhin erzeugt das <i>configure</i>-Skript zus&auml;tzliche Dateien. Zusammenfassend lauten diese:</p>
<ul>
<li>ein oder mehrere <i>Makefile(s)</i> in jedem Verzeichnis respektive Unterverzeichnis</li>
<li>ein Shellskript namens <i>config.status</i></li>
<li>eine Textdatei <i>config.log</i></li>
<li>ein weiteres Shellskript <i>config.cache</i> (optional)</li>
<li>verschiedene C-Header-Dateien (*.h) mit systemspezifischen Definitionen (optional)</li>
</ul>
<p>Nachdem das <i>configure</i>-Skript erfolgreich beendet wurde, wird der Befehl <i>make</i> aufgerufen. Dieser st&ouml;&szlig;t die eigentliche Kompilierung an und erzeugt schlie&szlig;lich die entsprechenden Binaries, also ausf&uuml;hrbaren Programmcode. Unter Umst&auml;nden besteht unmittelbar nach dem Aufruf von <i>make</i> die M&ouml;glichkeit, mittels <i>make check</i> noch diverse Selbsttests zu fahren. Dies ist allerdings ein optionaler Schritt, da das Paket diesen Vorgang auch hinreichend unterst&uuml;tzen muss. Wenn <i>make</i> seine Arbeit erfolgreich verrichtet und die jeweiligen Binaries erstellt hat, kann das kompilierte Programm durch den Befehl <i>make install</i> ins System eingebunden werden - dazu sind aus naheliegenden Gr&uuml;nden jedoch privilegierte Benutzerrechte erforderlich. Da das Programm nun erfolgreich installiert wurde, k&ouml;nnen die durch die Kompilierung erzeugten Binaries durch den Befehl <i>make clean</i> bedenkenlos aus dem Quellverzeichnis gel&ouml;scht werden. Um auch die vom <i>configure</i>-Skript erstellten Dateien zu l&ouml;schen, bedarf es eines Aufrufs von <i>make distclean</i>. Die beiden letztgenannten Schritte sind aber, ebenso wie der Aufruf von <i>make check</i>, optional und werden in der Regel nur dazu benutzt, um Festplattenkapazit&auml;t zu sparen und die Verzeichnisstruktur &uuml;bersichtlich zu halten. Ferner erm&ouml;glicht der Aufruf von <i>make distclean</i> die Kompilierung des Programms f&uuml;r andere Systeme.</p>
<p>Weiterf&uuml;hrende Informationen zu <i>GNU Autoconf</i> lassen sich im Online-Manual unter [2] finden. Neben einer grundlegenden Einf&uuml;hrung erf&auml;hrt man mehr &uuml;ber das <i>GNU Build System</i>, die Erstellung von eigenen <i>configure</i>-Skripten, zur Programmierung in <i>M4</i> und der Erstellung eigener Makros, portabler Shell-Programmierung et cetera. </p>

<A NAME="360lfindex1">&nbsp;</A>
<H2>CheckInstall</H2>

<p>Wie eingangs bereits erw&auml;hnt, lautet die Befehlsfolge zur manuellen &Uuml;bersetzung und Installation eines <i>GNU Autoconf</i> konformen Programms aus dem Quellcode folgenderma&szlig;en:</p>
<p class="code">
./configure &amp;&amp; make &amp;&amp; make install
</p>
<p>An dieser Stelle kommt nun <i>CheckInstall</i> ins Spiel und ersetzt <i>make install</i> durch den Befehl <i>checkinstall</i>. Die beiden anderen Kommandos bleiben davon unber&uuml;hrt und werden, ihrem Zweck entsprechend, weiterhin wie gewohnt genutzt. Die Befehlsfolge unter Verwendung des Tools <i>CheckInstall</i> lautet also wie folgt:</p>
<p class="code">
./configure &amp;&amp; make &amp;&amp; checkinstall
</p>
<p>Das Kommando <i>checkinstall</i> startet aber per Default trotzdem <i>make install</i> und beobachtet daraufhin s&auml;mtliche Schreibvorg&auml;nge, die durch die Installation get&auml;tigt werden. Zu diesem Zweck verwendet <i>CheckInstall</i> das Programm <i>Installwatch</i> [3], welches urspr&uuml;nglich von Pancrazio de Mauro geschrieben wurde. Nachdem <i>make install</i> seinen Durchlauf erfolgreich beendet hat, generiert <i>CheckInstall</i> wahlweise ein Slackware-, Debian- oder RPM-Paket, installiert dieses &uuml;ber den jeweils eingesetzten Paketmanager und hinterl&auml;&szlig;t eine Kopie des Pakets im aktuellen Quellverzeichnis oder am standardm&auml;&szlig;igen Speicherort der benutzten Distribution. Zudem ist es auch m&ouml;glich, den Speicherort mittels der Variable <i>PAK_DIR</i> innerhalb der Konfigurationsdatei selbst zu bestimmen. Die besagte Kopie l&auml;&szlig;t sich dann in der Regel auch, unter Ber&uuml;cksichtigung etwaiger Paketabh&auml;ngigkeiten, auf anderen Maschinen im Netzwerk installieren, ohne jedesmal aufs Neue kompilieren zu m&uuml;ssen.</p>
<p><i>CheckInstall</i> macht jedoch nicht zwingend von <i>make install</i> Gebrauch, sondern arbeitet auch problemlos mit anderen Installationsbefehlen zusammen. Lautet das Installationsskript beispielsweise <i>setup.sh</i> sieht der Befehlssatz so aus:</p>
<p class="code">
./configure &amp;&amp; make &amp;&amp; checkinstall setup.sh
</p>
<p>Des weiteren besteht die M&ouml;glichkeit, <i>CheckInstall</i> mit diversen Optionen zu starten. Das nachfolgende Kommando liefert eine komplette &Uuml;bersicht aller verf&uuml;gbarer Optionen, welche wiederum in die Sektionen <i>Install options</i>, <i>Scripting options</i>, <i>Info display options</i>, <i>Package tuning options</i>, <i>Cleanup options</i> und <i>About CheckInstall</i> untergliedert sind:</p>
<p class="code">
# checkinstall -h
</p>
<p>Wird <i>CheckInstall</i> mit einer dieser Optionen aufgerufen, werden diese vorrangig zu den in der Konfigurationsdatei <i>checkinstallrc</i> definierten Werten behandelt.</p>
<p>Allerdings st&ouml;&szlig;t <i>CheckInstall</i> bei Programmen, welche statisch gegen Bibliotheken gelinkt sind, an seine Grenzen, da es <i>Installwatch</i> dadurch nicht m&ouml;glich ist, die durch die Installation modifizierten Dateien zu &uuml;berwachen beziehungsweise aufzulisten und an <i>CheckInstall</i> zu &uuml;bergeben. Grunds&auml;tzlich werden zwei Arten von Programmbibliotheken unterschieden: statisch oder dynamisch gelinkte Bibliotheken. Diese werden durch eine <i>include</i>-Anweisung in ein Programm eingebunden und k&ouml;nnen dann beliebig aufgerufen werden. Im Gegensatz zu dynamisch gelinkten Programmen besitzen statisch gelinkte bereits alle ben&ouml;tigten Bibliotheksfunktionen und m&uuml;ssen diese nicht mehr zur Laufzeit in den Arbeitsspeicher laden. Weiterhin sind sie unabh&auml;ngig von den tats&auml;chlich auf dem Zielsystem installierten Bibliotheken, da ein sogenannter <i>Linker</i> die Funktionen der Bibliothek beim Kompiliervorgang mit dem ausf&uuml;hrbaren Programm verbindet.</p>

<A NAME="360lfindex2">&nbsp;</A>
<H2>Installation</H2>

<p><i>CheckInstall</i> ist schon seit l&auml;ngerer Zeit fester Bestandteil des Softwarepools gr&ouml;&szlig;erer Distributionen und kann &uuml;ber deren jeweiliges Paketmanagementsystem problemlos installiert werden. Sollte dies wider Erwarten einmal nicht so sein, stellt die Projektseite auf [4] geeignete Quellarchive und vorgefertigte Bin&auml;r-Pakete f&uuml;r unterschiedliche Distributionen zum Download bereit.</p>
<p>Die Installation von <i>CheckInstall</i> gestaltet sich denkbar einfach und verl&auml;uft in wenigen Schritten - paradoxerweise ist f&uuml;r eine erfolgreiche Installation aber <i>CheckInstall</i> notwendig. Nach dem obligatorischen Aufruf von <i>make install</i> erfolgt die Eingabe des Befehls <i>checkinstall</i>, welcher aus dem soeben kompilierten Programm ein geeignetes Bin&auml;r-Paket generiert, was sich wiederum ohne Probleme &uuml;ber das eingesetzte Paketmanagementsystem installieren und vor allem wieder sauber deinstallieren l&auml;&szlig;t. Allerdings gilt es - bevor das Paket durch <i>CheckInstall</i> erzeugt wird - noch eine Frage zum eingesetzten Paketmanager zu beantworten und die von <i>CheckInstall</i> bereits mit durchaus sinnvollen vorbelegten Informationsfelder auf Richtigkeit zu &uuml;berpr&uuml;fen. Jene erscheinen sp&auml;ter auch im Header des Pakets.</p>
<p>Nachfolgend wird die Vorgehensweise zur Installation der neuen Beta-Version <i>checkinstall-1.6.0beta4.tgz</i> demonstriert. Dadurch werden sowohl <i>CheckInstall</i> als auch <i>Installwatch</i> und <i>makepak</i>, eine modifizierte Version von <i>makepkg</i>, installiert. Wer sich f&uuml;r die &Auml;nderungen in der neuen Version interessiert, sollte einen Blick in die <i>Release Notes</i> beziehungsweise in den <i>Changelog</i> auf [5] und [6] werfen.</p>
<pre class="code">
$ tar xzf checkinstall-1.6.0beta4.tgz
$ cd checkinstall-1.6.0beta4
checkinstall-1.6.0beta4 $ make
[...]
checkinstall-1.6.0beta4 $ su
Password:
checkinstall-1.6.0beta4 # make install
[...]
checkinstall-1.6.0beta4 # checkinstall

checkinstall 1.6.0beta4, Copyright 2002 Felipe Eduardo Sanchez Diaz Duran
This software is released under the GNU GPL.

Please choose the packaging method you want to use.
Slackware [S], RPM [R] or Debian [D]? R

*************************************
*** RPM package creation selected ***
*************************************

This package will be built according to these values:

1 -  Summary:  [ CheckInstall installations tracker, version 1.6.0beta4 ]
2 -  Name:     [ checkinstall ]
3 -  Version:  [ 1.6.0beta4 ]
4 -  Release:  [ 1 ]
5 -  License:  [ GPL ]
6 -  Group:    [ Applications/System ]
7 -  Architecture: [ i386 ]
8 -  Source location: [ checkinstall-1.6.0beta4 ]
9 -  Alternate source location: [  ]
10 - Provides: [ checkinstall ]
11 - Requires: [  ]

Enter a number to change any of them or press ENTER to continue:

Installing with make install...

========================= Installation results =========================
[...]



========================= Installation successful ======================

Copying documentation directory...
./
./NLS_SUPPORT
./README
./FAQ
./TODO
./CREDITS
./INSTALL
./Changelog
./BUGS
./installwatch-0.7.0beta4/
./installwatch-0.7.0beta4/README
./installwatch-0.7.0beta4/TODO
./installwatch-0.7.0beta4/VERSION
./installwatch-0.7.0beta4/INSTALL
./installwatch-0.7.0beta4/CHANGELOG
./installwatch-0.7.0beta4/BUGS
./installwatch-0.7.0beta4/COPYING
./RELNOTES
./COPYING

Copying files to the temporary directory...OK

Striping ELF binaries and libraries...OK

Compressing man pages...OK

Building file list...OK

Building RPM package...OK

NOTE: The package will not be installed

Erasing temporary files...OK

Writing backup package...OK

Deleting temp dir...OK

****************************************************************

Done. The new package has been saved to

/usr/src/redhat/RPMS/i386/checkinstall-1.6.0beta4-1.i386.rpm
You can install it in your system anytime using:

        rpm -i checkinstall-1.6.0beta4-1.i386.rpm

****************************************************************

checkinstall-1.6.0beta4 # cd /usr/src/redhat/RPMS/i386/
i386 # rpm -i checkinstall-1.6.0beta4-1.i386.rpm
i386 #
</pre>
<p>Unter Debian-basierten Distributionen kann das soeben erzeugte Paket mit <i>dpkg -i</i> installiert werden. Unter Slackware wird f&uuml;r gew&ouml;hnlich <i>installpkg</i> zu diesem Zweck benutzt.</p>
<p>Durch eine Abfrage des jeweils eingesetzten Paketmanagers, in diesem Fall RPM, l&auml;&szlig;t sich kontrollieren, ob das Programm sauber in die Datenbank integriert wurde. Nebenbei lassen sich auch gleich die generierten Informationen des Paketheaders auslesen und auf Richtigkeit &uuml;berpr&uuml;fen.</p>
<pre class="code">
$ rpm -qi checkinstall
Name        : checkinstall            Relocations: (not relocatable)
Version     : 1.6.0beta4              Vendor     : (none)
Release     : 1                       Build Date : Mo 06 Dez 2004 17:05:45 CET
Install Date: Di 07 Dez 2004 01:41:49 Build Host : deimos.neo5k.lan
Group       : Applications/System     Source RPM : checkinstall-1.6.0beta4-1.src.rpm
Size        : 264621                  License    : GPL
Signature   : (none)
Packager    : checkinstall-1.6.0beta4
Summary     : CheckInstall installations tracker, version 1.6.0beta4
Description :
CheckInstall installations tracker, version 1.6.0beta4

CheckInstall  keeps  track of all the files created  or
modified  by your installation  script  ("make install"
"make install_modules",  "setup",   etc),   builds    a
standard   binary   package and  installs  it  in  your
system giving you the ability to uninstall it with your
distribution's  standard package management  utilities.
</pre>

<A NAME="360lfindex3">&nbsp;</A>
<H2>Konfiguration</H2>

<p>Zur grundlegenden Konfiguration dient die Textdatei <i>checkinstallrc</i>, welche im Verzeichnis <i>/usr/lib/local/checkinstall/</i> zu finden ist. Diese l&auml;&szlig;t sich beliebig an die eigenen Pr&auml;ferenzen anpassen und ist zudem gut kommentiert. Wie sich unschwer am Anfang der Datei erkennen l&auml;&szlig;t, ist es wichtig zu wissen, da&szlig; manuell &uuml;bergebene Parameter vorrangig zu den hier definierten behandelt werden.</p>
<p>Da <i>CheckInstall</i> bei jedem Start erneut nachfragt, welcher Pakettyp erzeugt werden soll, ist es sinnvoll, den gew&uuml;nschten Wert fest bei <i>INSTYPE</i> einzutragen. Ebenfalls eine genauere Betrachtung wert sind die Variablen <i>INSTALL</i>, <i>PAK_DIR</i> und <i>RPM_FLAGS</i> beziehungsweise <i>DPKG_FLAGS</i>. Mit letzteren lassen sich spezifische Optionen der verschiedenen Paketmanager definieren, <i>PAK_DIR</i> wurde weiter oben bereits kurz erw&auml;hnt und &auml;ndert den standardm&auml;&szlig;igen Speicherort f&uuml;r die Paketkopie, und durch <i>INSTALL</i> kann angegeben werden, ob die Pakete nur generiert oder auch gleich installiert werden sollen.</p>
<pre class="code">
$ cat /usr/lib/local/checkinstall/checkinstallrc

####################################################################
                 #    CheckInstall configuration file   #
                 ########################################

####################################################################
# These are default settings for CheckInstall, modify them as you  #
# need. Remember that command line switches will override them.    #
####################################################################

# Debug level
#   0: No debug
#   1: Keep all temp files except the package's files
#   2: Keep the package's files too

DEBUG=0

# Location of the "installwatch" program
INSTALLWATCH_PREFIX="/usr/local"
INSTALLWATCH=${INSTALLWATCH_PREFIX}/bin/installwatch

# Location of the makepkg program. "makepak" is the default, and is
# included with checkinstall. If you want to use Slackware's native "makepkg"
# then set this to "makepkg"

MAKEPKG=/sbin/makepkg

# makepkg optional flags. These are recommended if running a newer Slackware
# version: "-l y -c n"

MAKEPKG_FLAGS="-l y -c n"

# Is MAKEPKG running interactively? If so, you might want
# to see what it's doing:

SHOW_MAKEPKG=0

# Where will we keep our temp files?
BASE_TMP_DIR=/var/tmp   ##  Don't set this to /tmp or / !!

# Where to place the installed document files
DOC_DIR=""

# Default architecture type (Leave it empty to allow auto-guessing)
ARCHITECTURE=""

# Default package type. Leave it empty to enable asking everytime
#   S : Slackware
#   R : RPM
#   D : Debian

INSTYPE="R"

# Storage directory for newly created packages
# By default they will be stored at the default
# location defined for the package type

PAK_DIR=""

# RPM optional flags
RPM_FLAGS=" --force --nodeps --replacepkgs "

# dpkg optional flags
DPKG_FLAGS=""


## These are boolean. Set them to 1 or 0

# Interactively show the results of the install command (i.e. "make install")?
# This is useful for interactive installation commands
SHOW_INSTALL=1

# Show Slackware package installation script while it runs? Again, useful if
# it's an interactive script
SHOW_SLACK_INSTALL=0

# Automatic deletion of "doc-pak" upon termination?
DEL_DOCPAK=1

# Automatic deletion of the spec file?
DEL_SPEC=1

# Automatic deletion of "description-pak"?
DEL_DESC=1

# Automatically strip all ELF binaries?
STRIP_ELF=1

# Automatically strip all ELF shared libraries?
# Note: this setting will automatically be set to "0" if STRIP_ELF=0
STRIP_SO_ELF=1

# Automatically search for shared libraries and add them to /etc/ld.so.conf?
# This is experimental and could mess up your dynamic loader configuration.
# Use it only if you know what you are doing.
ADD_SO=0

# Automatically compress all man pages?
COMPRESS_MAN=1

# Set the umask to this value
CKUMASK=0022

# Backup files overwritten or modified by your install command?
BACKUP=1

# Write a doinst.sh file that installs your description (Slackware)?
AUTODOINST=1

# Are we going to use filesystem translation?
TRANSLATE=1

# Reset the owner/group of all files to root.root?
RESET_UIDS=0

# Use the new (8.1+) Slackware description file format?
NEW_SLACK=1

# Comma delimited list of files/directories to be ignored
EXCLUDE=""

# Accept default values for all questions?
ACCEPT_DEFAULT=0

# Use "-U" flag in rpm by default when installing a rpm package
# This tells rpm to (U)pdate the package instead of (i)nstalling it.
RPM_IU=U

# Inspect the file list before creating the package
CK_INSPECT=0

# Review the .spec file before creating a .rpm
REVIEW_SPEC=0

# Review the control file before creating a .deb
REVIEW_CONTROL=0

# Install the package or just create it?
INSTALL=0
</pre>

<A NAME="360lfindex4">&nbsp;</A>
<H2>Fazit</H2>

<p><i>CheckInstall</i> ist ein geniales Tool, welches die Administration einer Linux-Box ungemein erleichtern kann. Wenn Programme des &ouml;fteren manuell &uuml;bersetzt werden m&uuml;ssen, wird es durch <i>CheckInstall</i> m&ouml;glich, jene wieder sauber zu deinstallieren, ohne aber einen inkonsistenten Zustand des Systems zu riskieren. Zudem lassen sich die mit <i>CheckInstall</i> erzeugten Pakete auch auf anderen Maschinen installieren, ohne jedesmal neu kompilieren zu m&uuml;ssen - nat&uuml;rlich vorausgesetzt, da&szlig; die Paketabh&auml;ngigkeiten erf&uuml;llt werden. Dies stellt aber in der Regel bei identischen Distributionen kein allzu gro&szlig;es Problem dar.</p>

<A NAME="360lfindex5">&nbsp;</A>
<H2>Links</H2>

<p>
[1] <a href="http://asic-linux.com.mx/~izto/checkinstall/" >http://asic-linux.com.mx/~izto/checkinstall/</a> [Home of CheckInstall]<br>
[2] <a href="http://www.gnu.org/software/autoconf/manual/autoconf-2.57/autoconf.html" >http://www.gnu.org/software/autoconf/manual/autoconf-2.57/autoconf.html</a> [GNU Autoconf Online Manual]<br>
[3] <a href="http://asic-linux.com.mx/~izto/checkinstall/installwatch.html" >http://asic-linux.com.mx/~izto/checkinstall/installwatch.html</a> [Installwatch]<br>
[4] <a href="http://asic-linux.com.mx/~izto/checkinstall/download.php" >http://asic-linux.com.mx/~izto/checkinstall/download.php</a> [CheckInstall Downloads]<br>
[5] <a href="http://asic-linux.com.mx/~izto/checkinstall/docs/RELNOTES" >http://asic-linux.com.mx/~izto/checkinstall/docs/RELNOTES</a> [Release Notes]<br>
[6] <a href="http://asic-linux.com.mx/~izto/checkinstall/docs/Changelog" >http://asic-linux.com.mx/~izto/checkinstall/docs/Changelog</a> [Changelog]
</p>



<!-- vim: set sw=2 ts=2 et tw=74: -->

<!-- BODY_OF_THE_ARTICLE_STOP -->
<!-- 2pdaIgnoreStart -->
<A NAME="talkback">&nbsp;</a>
<h2>Talkback f&uuml;r diesen Artikel</h2>
Jeder Artikel hat seine eigene Seite f&uuml;r Kommentare und R&uuml;ckmeldungen. Auf dieser Seite kann jeder eigene Kommentare abgeben und die Kommentare anderer Leser sehen:
<center>
    <table width="250" border=0><tr><td>
    <div class="tbbutton"><A class="nodec" href="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=360">&nbsp;Talkback Seite&nbsp;</a></div>
    </td></tr></table>
</center>

<br clear="all">
<HR size="2" noshade>
<table width="250" border=0><tr><td>
<div class="bbutton"><a class="nodec" href="../../index.shtml">&lt;--, LF Home</a></div>
</td><td>
<div class="bbutton"><a class="nodec" href="index.shtml">Zum index dieser Ausgabe</a></div>
</td></tr></table>
<br clear="all">
<HR size="2" noshade>
<!-- ARTICLE FOOT -->
<CENTER><TABLE WIDTH="98%" summary="footer">
<TR><TD ALIGN=CENTER BGCOLOR="#bdc6d5" WIDTH="50%">
<A HREF="../../common/lfteam.html">Der LinuxFocus Redaktion schreiben</A>
<BR><FONT COLOR="#1111aa"><a href="../../common/copy.html">&copy; Mario M. Knopf</a><br>&quot;some rights reserved&quot; see <a href="../../license/index.shtml">linuxfocus.org/license/</a><br><a href="http://www.linuxfocus.org">http://www.LinuxFocus.org</a></FONT>
</TD>
<TD BGCOLOR="#bdc6d5">
<!-- TRANSLATION INFO -->
<font size=2>Autoren und &Uuml;bersetzer:</font>
<TABLE summary="translators">
  <tr><td><font size="2">de --&gt; -- : Mario M. Knopf (<a href="http://www.neo5k.de/"><font size="1">homepage</font></a>)</font></td></tr>
</TABLE>
</TD>
</TR></TABLE></CENTER>
<p><font size=1>2004-12-12, generated by lfparser version 2.51</font></p>
<!-- 2pdaIgnoreStop -->
</BODY>
</HTML>

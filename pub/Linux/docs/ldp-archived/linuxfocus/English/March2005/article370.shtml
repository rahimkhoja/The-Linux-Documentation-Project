<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
 <META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <META NAME="GENERATOR" CONTENT="lfparser_2.52">
 <META NAME="LFCATEGORY" CONTENT="UNIXBasics">
 <link rel="icon" href="../../common/images/lf-16.png" type="image/png">
 <TITLE>lf370, UNIXBasics: LF Tip:Cloning entire PCs over the network</TITLE>
<style type="text/css">
<!--
 td.top {font-family: Arial,Geneva,Verdana,Helvetica,sans-serif; font-size:12 }
 pre { font-family:monospace,Courier }
 pre.code { font-family:monospace,Courier;background-color:#aedbe8; }
 p.cl { color:#EE9500 }
 table.left { margin-right:0.3cm }
 a.nodec { text-decoration:none }
 p.trans { font-size:8pt; text-align:right }
 p.clbox { width:50%; alignment:center; background-color:#FFD700; 
           border-style:none; border-width:medium; border-color:#FFD700; 
           padding:0.5cm;  text-align:center }
 p.code { width:80%; alignment:center; background-color:#aedbe8; 
          border-style:none; border-width:medium; border-color:#aedbe8; 
          padding:0.1cm;  text-align:left }
 p.foot { background-color:#AAAAAA; color:#FFFFFF; border-style:none; 
          border-width:medium; border-color:#AAAAAA; padding:0.5cm ; 
          margin-top:0.1cm; margin-right:1cm; margin-left:1cm; 
          text-align:center }
 div.tbbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   margin: 2px 5px 2px 5px;
   text-align: center;
   width: 20em;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
 div.bbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   float: left;
   margin: 2px 5px 2px 5px;
   text-align: center;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
-->
</style>
 
</HEAD>
<BODY bgcolor="#ffffff" text="#000000">
 <!-- this is generated html code. NEVER use this file for your
 translation work. Instead get the file with the same article number
 and .meta.shtml in its name. Translate this meta file and then
 use lfparser program to generate the final article -->
 <!-- lfparser can be obtained from http://main.linuxfocus.org/~guido/dev/lfparser.html -->

<!-- this is used by a number of tools:
 =LF=AUTHOR: Gerrit Renker
 =LF=CAT___: UNIXBasics
 =LF=TITLE_: LF Tip:Cloning entire PCs over the network
 =LF=NUMBER: 370
 =LF=ANAME_: article370.shtml
 =LF=PARSER: 2.52
 -->

<!-- 2pdaIgnoreStart -->

<!-- start navegation bar, current, style=2 -->
 <!-- top navegation bar -->
 <TABLE summary="topbar_1" cellspacing="0" cellpadding="0" border="0" align="center" width="90%">
   <TR bgcolor="#2e2292">
     <TD class="top"><TABLE summary="topbar_1_logo" cellspacing="0" cellpadding="0" border="0" width=
       "100%">
         <TR><TD width="319"><a href="../../index.shtml"><IMG src="../../common/images/logolftop_319x45.gif"
           alt="[LinuxFocus-icon]" width="319" height="45" align="left" 
           border="0"></a></TD>

           <TD class="top">
             <TABLE summary="topbar_1_links" width="100%">
               <TR align="right">
                 <TD class="top">
                 
                 <A class="nodec" href="../../index.shtml"><FONT color=
                 "#DDDDDD" size="2">&lt;--</FONT></A> &nbsp;| 
                 <A class="nodec" href="../map.html"><FONT color=
                 "#DDDDDD" size="2">Map</FONT></A> &nbsp;| 
                 <A class="nodec" href="../indice.html"><FONT color=
                 "#DDDDDD" size="2">Index</FONT></A> &nbsp;| 
                 <A class="nodec" href="../Search/index.html"><FONT color=
                 "#DDDDDD" size="2">Search</FONT></A> </TD>
                 
               </TR>

               <TR align="right">
                 <TD class="top">
                   <HR width="100%" noshade size="1">
                 </TD>
               </TR>
             </TABLE>
           </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end top navegation bar -->
 <!-- blue bar -->
 <TABLE summary="topbar_2" cellspacing="0" cellpadding="0" border="0" align="center"
 width="90%">
   <TR bgcolor="#00ffff">
     <TD><IMG src="../../common/images/transpix.gif" width="1" height=
     "2" alt=""></TD>
   </TR>
 </TABLE>
 <!-- end blue bar -->
 <!-- bottom navegation bar -->
 <TABLE summary="topbar_3" cellspacing="0" cellpadding="0" border="0" align="center"
 width="94%">
   <TR bgcolor="#000000">
     <TD>
       <TABLE summary="topbar_3_links" cellspacing="0" cellpadding="1" border="0" width=
       "100%">
         <TR align="center">
           <TD WIDTH="20%"><A class="nodec" href="../News/index.html"><FONT color=
           "#FFFFFF">News</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Archives/index.html"><FONT color=
           "#FFFFFF">Archives</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Links/index.html"><FONT color=
           "#FFFFFF">Links</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../aboutus.html"><FONT color=
           "#FFFFFF">About LF</FONT></A> </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end bottom navegation bar -->
<!-- stop navegation bar -->

<!-- SSI_INFO -->

<!-- tr_staticssi include virtual -->
<!-- tr_staticssi exec cmd -->
<!-- addedByLfdynahead ver 1.5 --><TABLE ALIGN="right" border=0><TR><TD ALIGN="right"><FONT SIZE="-1" FACE="Arial,Helvetica">This document is available in: <A href="../../English/March2005/article370.shtml">English</a> &nbsp;<A href="../../Castellano/March2005/article370.shtml">Castellano</a> &nbsp;<A href="../../ChineseGB/March2005/article370.shtml">ChineseGB</a> &nbsp;<A href="../../Francais/March2005/article370.shtml">Francais</a> &nbsp;<A href="../../Indonesian/March2005/article370.shtml">Indonesian</a> &nbsp;<A href="../../Turkce/March2005/article370.shtml">Turkce</a> &nbsp;</FONT></TD></TR></TABLE><br>
 


<!-- SSI_INFO STOP -->
<!-- 2pdaIgnoreStop -->

<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_START -->
<TABLE ALIGN="LEFT" BORDER="0" WIDTH="195" summary="about the author" class="left">
<TR>
<TD>

<img alt="this is me" src="../../common/images2/GerritRenker.jpg" width="175" height="213">
<BR>by  Gerrit Renker <br> <small>&lt;gerrit.renker(at)gmx.de&gt;</small>
<BR><BR>
<I>About the author:</I><BR>
<!-- aboutauthor_start -->

Obtained a computer science degree in 2001.


<!-- aboutauthor_stop -->
<!-- TRANSLATED_TO en -->
<!-- TRANSLATED_TO_STOP -->
<!-- INDEX_START -->
<BR><i>Content</i>:
<UL>
  <LI><A HREF="#370lfindex0">Scenario</A></LI>
  <LI><A HREF="#370lfindex1">Possible methods </A></LI>
  <LI><A HREF="#370lfindex2">Setting up ssh</A></LI>
  <LI><A HREF="#370lfindex3"> Creating a file system on the target PC </A></LI>
  <LI><A HREF="#370lfindex4">Other systems</A></LI>
  <LI><A HREF="#370lfindex5">References </A></LI>
  <LI><A HREF="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=370">Talkback form for this article</A></LI>
</UL>

</TD></TR></TABLE>
<!-- INDEX_STOP -->
<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_STOP -->
<!-- HEAD_OF_THE_ARTICLE_START -->
<br>&nbsp;
<table border="0"><tr><td>
<!-- tr_staticssi include virtual -->
<!-- tr_staticssi exec cmd -->
<!-- addedByLfPdf ver 0.1 -->
<TABLE style="border-style:outset; border-width:1px" align="right" bgcolor="#ff9616" cellspacing="1"><TR><TD bgcolor="#ff9616">
        <a href="../Archives/lf-2005_03-0370.pdf"><small>PDF</small></a>
        </TD></TR></TABLE>
         

<H2>LF Tip:Cloning entire PCs over the network</H2>
 <img src="../../common/images2/article370.png" alt="[Illustration]" hspace="10"  width="136" height="150">
<!-- ABSTRACT OF THE ARTICLE -->
<P><i>Abstract</i>:
<P>
<!-- articleabstract_start -->


Often the problem arises that you have to replicate data from one computer
to
another. A safe, easy-to-do and effective method is to
use network-based cloning as described in this howto.


<!-- articleabstract_stop -->

<br><!-- HR divider --><center><font color="#8282e0"><b>_________________ _________________ _________________</b></font></center><br>
</td></tr></table>
<!-- HEAD_OF_THE_ARTICLE_STOP -->
<!-- BODY_OF_THE_ARTICLE_START -->



<A NAME="370lfindex0">&nbsp;</A>
<H2>Scenario</H2>


While cloning of animals (''Dolly the sheep'') and even human
embryos is a much-debated and dubious research area,
there is no doubt that some knowledge in cloning computer machines
is not only less harmful (if done properly) but also useful for the
evolution of one's carefully written configuration scripts and settings.
Due to Moore's Law and the fast progress in computer manufacturing,
one is almost certain to encounter at least one cloning scenario during
the lifetime of using a distribution - be it that the home PC is
to be replaced by a laptop or just that a faster processor is on the
market and there is enough money to buy a new computer. The task is
to <i>take the entire filesystem</i> of computer A and put it to work on
computer B. There are two ways of doing it; the one which is not
described in this howto is to open the cases, physically swap hard drives
among computers and do the copying locally on one machine. This
is often not possible - opening the case cover often will result
in losing the warranty - and also has dangers, since an inexperienced
person can physicall and electrically damage the hardware. Even more so, I once lost disk data
this way due to a buggy low-level program. The other approach requires
that both PCs have network cards (which even in home systems is now frequently
the case), is much safer and described here.


<p>
The underlying idea common to all methods described below is to establish
a network connection between the ''<i>source</i>'' computer (which is
to be cloned) and the ''<i>target</i>'' computer (the clone). This is
straightforward if both are plugged into a hub, otherwise you can
connect the network cards via a <i>crossover cable</i> (normal straight
cables can not be used).
For the target PC, a Live-CD (such as Knoppix or LNX-BBC) or a
minimalist installation is needed such that the network
card is operable and <tt>ssh</tt> and/or <tt>netcat</tt>
can be used. There are even some floppies which allow this (although
in my case <tt>tomsrtb</tt> hung on initialising the network
card). If you intend to install another (fresh) distribution anyway,
this is an easy alternative. Both computers need to be configured with
IP addresses on the same network such that they can ''talk'' to
each other, as shown in the above picture.

</p>


<A NAME="370lfindex1">&nbsp;</A>
<H2>Possible methods </H2>




<p>
With given basic set-up there are several ways of performing
the act of cloning:
</p>


<ul>
<li>binary copy via <tt>dd</tt></li>
<li><tt>tar / cpio</tt> pipes</li>
<li><tt>rsync </tt> </li>
<li><tt>dump</tt> and <tt>restore</tt></li>
</ul>


The first is complicated if not impossible if your hard drives are
not exactly of the same type and geometry. It is great for things such
as copying iso images (<tt>dd if=/dev/cdrom of=the.iso</tt>), or floppies -
<a href="../../common/src2/article370/diskcopy.txt">here (diskcopy shell script)</a> is an example of a <tt>diskcopy</tt>
script using <tt>dd</tt>. The other disadvantage of the <tt>dd</tt>-based
approach is that the unoccupied space is also copied, thus taking needless time.
The <tt>tar</tt> and <tt>cpio</tt>
pipes take a very long time (up to several hours) and have several problems. For
instance, there are restrictions on the filenames and use of symlinks,
choking on files in <tt>/dev</tt>, and the like. I would generally
not recommend this approach for cloning. If you do have different
filesystems on the source and the target, <b><tt>rsync(1)</tt></b>
is probably the best choice. It merely requires that <tt>ssh</tt> is running
and effectively transmits files due to an efficient, built-in protocol.
It does even have a <tt>-D</tt> switch for device files, as
well as many more options to cater to most practical scenarios. It is a
very useful tool for daily backups, mirroring and the like, the man-page
with its many examples is well-worth studying. An example of cloning
via <tt>rsync</tt> is presented in [<a href="#key-2">1</a>].<br><br> Here, we
use the method via <tt>dump</tt> and <tt>restore</tt>
which amounts to re-creating the entire filesystem. It is fast, effective
and delivers the desired results with minimal effort, hence ideal
for full cloning.
I actually had to do the entire cloning procedure twice, since the target
PC was called back and replaced. In both cases absolutely no problems
were encountered and lead out a functional, bootable clone within
roughly one hour of copying gigabytes.
This approach requires that both target and source PC feature the
same filesystem. We assume that this is <tt>ext2</tt> or <tt>ext3</tt>,
since it is currently the most widely used kind (see notes <a href="#sec:Other-systems">below</a>).


<A NAME="370lfindex2">&nbsp;</A>
<H2>Setting up ssh</H2>


Once you have configured a system with a minimal installation or have a
Live-CD running, the next step is to set up <tt>ssh</tt>
(if you are not using <tt>netcat</tt> for the transfer as detailed
further below). This requires that the source PC has <tt>sshd</tt>
(the secure shell daemon) running. Check <tt>/etc/init.d/</tt>
if unsure. On the target PC, type (as root)

<pre class="code">ssh-keygen -t rsa</pre>

To keep things simple, do not enter a passphrase. The public
key is now in the file <tt>/root/.ssh/id_rsa.pub</tt>. Copy
this file to your source PC via


<pre class="code">scp /root/.ssh/id_rsa   SourcePC:/tmp</pre>


where <tt>SourcePC</tt> is the IP address of the
source PC. When asked whether you are sure, enter a full ''<tt>yes</tt>''
(''<tt>y</tt>'' alone sometimes does not work). You are still being prompted
for the root password on the source PC. Now add the target PC as a
trustworthy network node by issuing


<pre class="code">cat /tmp/id_rsa.pub &gt;&gt; /root/.ssh/authorized_keys</pre>



on the source PC. To check whether everything is ok, repeat
the above copy command on the target PC. You should no longer be prompted
for a password.


<A NAME="370lfindex3">&nbsp;</A>
<H2> Creating a file system on the target PC </H2>




<p>
The first step is always to partition the hard drive on the target
system and then to create the <tt>ext2/ext3</tt> filesystem.
The latter is the preferable journalling variant and is enabled simply
by setting the <tt>-j</tt> (journalling) option in <tt>mke2fs</tt> (requires
to have <tt>ext3</tt> support in the kernel). You can even convert an <tt>ext2</tt>
system to <tt>ext3</tt>, see <b><tt>tune2fs(8</tt>)</b>.
So let's say on the source PC we have the following configuration:

</p>

<table align="center" bgcolor="#000000" border="0" cellpadding="2" cellspacing="2" width="56%">
  <tbody>
    <tr>
      <th bgcolor="#ffffff" valign="top">Filesystem</th>
      <th bgcolor="#ffffff" valign="top">Size</th>
      <th bgcolor="#ffffff" valign="top">Used</th>
      <th bgcolor="#ffffff" valign="top">Use%</th>
      <th bgcolor="#ffffff" valign="top">Mounted on</th>

    </tr>
    <tr>
      <td bgcolor="#ffffff" valign="top">/dev/hda3
      </td>
      <td bgcolor="#ffffff" valign="top">2.7G</td>
      <td bgcolor="#ffffff" valign="top">552M</td>
      <td bgcolor="#ffffff" valign="top">22%</td>
      <td bgcolor="#ffffff" valign="top">/</td>
    </tr>
    <tr>
      <td bgcolor="#ffffff" valign="top">/dev/hda5
      </td>
      <td bgcolor="#ffffff" valign="top">7.8G <br>
      </td>
      <td bgcolor="#ffffff" valign="top">1.6G</td>
      <td bgcolor="#ffffff" valign="top">22%</td>
      <td bgcolor="#ffffff" valign="top">/usr</td>
    </tr>
    <tr>
      <td bgcolor="#ffffff" valign="top">/dev/hda7
      </td>
      <td bgcolor="#ffffff" valign="top">6.3G</td>
      <td bgcolor="#ffffff" valign="top">1.7G</td>
      <td bgcolor="#ffffff" valign="top">28%</td>
      <td bgcolor="#ffffff" valign="top">/usr/share</td>
    </tr>
    <tr>
      <td bgcolor="#ffffff" valign="top">/dev/hda8
      </td>
      <td bgcolor="#ffffff" valign="top">3.4G</td>
      <td bgcolor="#ffffff" valign="top">601M</td>
      <td bgcolor="#ffffff" valign="top">19%</td>
      <td bgcolor="#ffffff" valign="top">/home</td>
    </tr>
    <tr>
      <td bgcolor="#ffffff" valign="top">/dev/hda12
      </td>
      <td bgcolor="#ffffff" valign="top">5.3G</td>
      <td bgcolor="#ffffff" valign="top">1.9G</td>
      <td bgcolor="#ffffff" valign="top">37%</td>
      <td bgcolor="#ffffff" valign="top"> /opt</td>
    </tr>
    <tr>
      <td bgcolor="#ffffff" valign="top">/dev/hda1
      </td>
      <td bgcolor="#ffffff" valign="top">587M</td>
      <td bgcolor="#ffffff" valign="top">70M</td>
      <td bgcolor="#ffffff" valign="top">13% <br>
      </td>
      <td bgcolor="#ffffff" valign="top">/var/backup</td>
    </tr>
  </tbody>
</table>


<p>
I recommend to always do some kind of partitioning. If
not, then any failure in using the filesystem or a hard-drive knock-out
of just some sectors will destroy <em>all</em> your data. And according to
Murphy's law, this is sure to happen if no precautions are taken in
form of using different partitions instead of a single monolithic
one. I had such a case recently with a funny kernel and had I not
partitioned the drive, I would have lost all my data along with the
munched root file system. The above actually shows that
<tt>/usr</tt> was growing too big, therefore <tt>/usr/share</tt> had been
added. Time for a bigger hard drive.

</p>

On the target PC, fire up <tt>parted</tt> (recommendable) or your
favourite partitioning program (Qtparted is a nice GUI-variant, said
to be a Partition Magic clone). Create partitions which are all at
least as big as the ones on the source PC. Don't forget the swap partition.
After saving the partition table, put a filesystem on all newly created partitions, using

<pre class="code">mke2fs -j -L &lt;label&gt; /dev/xxx</pre>


where <tt>xxx</tt> is the partition name and <tt>&lt;label&gt;</tt>
a label string. I usually just use things like ''<tt>/usr</tt>''
as labels (you will see that at boot-time). You can set various things
via <tt><b>tune2fs(8)</b></tt>, such as the regular file system check interval.


<h1>Transfer the filesystem </h1>



First you need to mount all the newly created partitions. We start
with the root filesystem (''/'') and mount the remaining directories
as we go along. It is perfectly possible to condense two partitions
of the source PC into a single one on the target, in fact this is
what we are going to do with <tt>/usr/</tt> and <tt>/usr/share</tt>
in the above example. So mount your future root filesystem using
<pre class="code">mount /dev/xxx   /mnt</pre>
When cloning, it is necessary to chdir into the target directory
<pre class="code">cd /mnt</pre>
Now the network bit, on the target PC type
<pre class="code">ssh sourcePC 'dump -0 -f - /' | restore -r -f -</pre>
where <tt>targetPC</tt> is the IP address of the
target PC. The options mean ''<tt>-0</tt>'' for a full
backup, ''<tt>-f -</tt>'' tells it to use <tt>stdin</tt>/<tt>stdout</tt>
as file descriptors and ''<tt>-r</tt>'' instructs restore
to re-create the filesystem being piped over the network on the target
PC. For more options see <b><tt>dump(8)</tt></b> and <b><tt>restore(8)</tt></b>.
Below you see the output for transferring the root filesystem.<br>



<pre class="code">$ ssh 10.42.3.42 'dump -0 -f - /' | restore -r -f -
DUMP: Date of this level 0 dump: Tue Feb 22 15:50:12 2005
DUMP: Dumping /dev/hda3 (/) to standard output
DUMP: Label: debian
DUMP: Writing 10 Kilobyte records
DUMP: mapping (Pass I) [regular files]
DUMP: mapping (Pass II) [directories]
DUMP: estimated 547312 blocks.
DUMP: Volume 1 started with block 1 at: Tue Feb 22 15:50:14 2005
DUMP: dumping (Pass III) [directories]
DUMP: dumping (Pass IV) [regular files]
DUMP: Volume 1 completed at: Tue Feb 22 15:51:43 2005
DUMP: Volume 1 546590 blocks (533.78MB)
DUMP: Volume 1 took 0:01:29
DUMP: Volume 1 transfer rate: 6141 kB/s
DUMP: 546590 blocks (533.78MB)
DUMP: finished in 89 seconds, throughput 6141 kBytes/sec
DUMP: Date of this level 0 dump: Tue Feb 22 15:50:12 2005
DUMP: Date this dump completed: Tue Feb 22 15:51:43 2005
DUMP: Average transfer rate: 6141 kB/s
DUMP: DUMP IS DONE
</pre>
Restore always creates a file <tt>restoresymtable</tt>
which can be removed once you are certain that no errors occurred
during the file system restoration.

When done with the root filesystem, we now proceed with each mounted
sub-filesystem, starting with <tt>/usr</tt> (assuming your current work
directory is the root of the future filesystem).

<pre class="code">mount /dev/xxx  ./usr

cd ./usr

ssh targetPC 'dump -0 -f - /usr' | restore -r -f -
</pre>

The mount-cd-dump/restore cycle is now repeated for all
the directories you may have. With regard to <tt>/usr/share</tt>
(which on the source PC had its own partition), you can, after the
above step, simple chdir into <tt>./usr/share</tt> (note the ".") and then
repeat

<pre class="code">ssh targetPC 'dump -0 -f - /usr/share' | restore -r -f -</pre>


Restore only complains if files already exist in the
filesystem being restored, so when putting two different partitions of the source
PC into a single one on the target PC there is no problem. Cloning an entire
PC took just about one hour with ssh and 100MB network cards (crossover
cable a bonus).

<p>
<strong>Note: </strong>To dump a filesystem, it need not necessarily be mounted.
You can also pass a <i>partition name</i>, such as <big><tt>/dev/hda6</tt></big>,
instead of the directory name of a mounted partition.
</p>




<h1>Alternative: &nbsp;<tt>netcat</tt> </h1>


<p>
An alternative to use instead of ssh is <tt>netcat(1)</tt>, which is abbreviated
as nc. Netcat is a simple-to-use TCP/IP client-server swiss army knife
which allows to create a pipe over the network. The above examples
are then merely modified as follows. We assume that the partition
mounted under <big><tt>/var/backup</tt></big> is to be transferred via
<big><tt>dump/restore</tt></big> from the source PC to the target PC.

</p>

On the receiving end (<em>target PC</em>) create a listening instance of <tt>netcat</tt>
via <tt>-l</tt> which pipes its output to <tt>restore</tt>.


<pre class="code">nc -l -p 2000 -q 1 | restore -r -f -</pre>


On the <em>source PC</em>, create another instance of <tt>netcat</tt>
which takes its input from a pipe where <tt>target-IP</tt>
is the IP address of the target PC.

<pre class="code">dump -0 -f - /var/backup | nc &lt;target-ip&gt;   2000</pre>

The <tt>-q</tt> option is supposed to stop <tt>nc</tt>
after receiving end-of-file, but I had to terminate it manually in
my case. Would recommend using <tt>ssh</tt> anyway.




<h1> Cleaning up </h1>


Congratulations, if thus far successful you basically have a cloned
system. Now it remains to turn this clone into a workable PC. The
first thing to do is to update <tt>/etc/fstab</tt> with the
new settings, otherwise you will not be able to use the cloned partitions.
If the IP address changes, this also needs to be updated (<tt>/etc/hosts</tt>,
<tt>/etc/network/interfaces</tt> under debian). Next important
thing is the <i>boot configuration</i> which in almost all cases will
want updating. With <tt>lilo</tt>, edit <tt>/etc/lilo.conf</tt>
(in particular the <tt>root=...</tt> option) and then
run <tt>lilo -v</tt>. Under grub, edit <tt>/boot/grub/menu.lst</tt>
(or <tt>/boot/grub/grub.conf</tt> depending on which one is the symlink)
and then enter <tt>grub</tt>,

<pre class="code">grub&gt; root (hd0,xxx)

... filesystem is ...

grub&gt; setup (hd0)

... lots of output here

grub&gt; quit
</pre>

or run <tt>grub-install /dev/xxx</tt> where <tt>xxx</tt>
is your hard drive. Here, check both for the <tt>root (hdn,xx)</tt>
and the appended <tt>root=/dev/xxx</tt> settings.

<p>
In the likely case of now having better hardware in the
newly cloned PC, you may want to update the <i>settings for your
custom-kernel.</i> If you are using systems which come with lots of pre-configured
modules (such as RedHat, SuSe, Mandrake, Fedora ...) don't worry,
it is quite likely that there will be a suitable module. If not, <tt>lspci -vv</tt>
and kernel compilation as usual and described elsewhere. If your
video card is different now, update <tt>/etc/X11/XF86Config-4</tt>
(or <tt>xorg.conf</tt> under RH/Fedora) to reflect this, otherwise
you will get no output. If possible use the graphical tools for setting
up X by booting in runlevel 3 if you have such tools. Under debian,
some investigation is necessary, I was lucky to find out that the
driver changed from <tt>r128</tt> to
<tt>radeon</tt>
and that did it.

</p>

<a name="sec:Other-systems"></a>
<A NAME="370lfindex4">&nbsp;</A>
<H2>Other systems</H2>



<p>
This howto explained the cloning procedure for <tt>ext2/ext3</tt>
filesystems. Much similar commands can be found on many other Lunix
systems.
For instance, several Unices such as FreeBSD, HP-UX, IRIX also provide
<tt>dump/restore</tt> commands; in Solaris this is called <tt>ufsdump/ufsrestore</tt>.
There are filesystems which do not offer filesystem dump functionality,
e.g. ReiserFS. Here it would suggest itself to use <tt>rsync.</tt> See [<a href="#key-2">1</a>]
for a report of successfully using <tt>rsync</tt> to clone a Linux system.

</p>


<A NAME="370lfindex5">&nbsp;</A>
<H2>References </H2>


<dl compact="compact">
<dt><a name="key-2">[1]</a>
<i>''<a href="http://www.linuxgazette.com/issue83/okopnik.html">Replicating a Linux System - Yet Another Method</a></i>.'' Ben Okopnik, Linux Gazette Issue 83, October 2002.
</dt>
</dl>


<!-- vim: set sw=2 ts=2 et tw=74: -->


<!-- BODY_OF_THE_ARTICLE_STOP -->
<!-- 2pdaIgnoreStart -->
<A NAME="talkback">&nbsp;</a>
<h2>Talkback form for this article</h2>
Every article has its own talkback page. On this page you can submit a comment or look at comments from other readers:
<center>
    <table width="250" border=0><tr><td>
    <div class="tbbutton"><A class="nodec" href="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=370">&nbsp;talkback page&nbsp;</a></div>
    </td></tr></table>
</center>

<br clear="all">
<HR size="2" noshade>
<table width="250" border=0><tr><td>
<div class="bbutton"><a class="nodec" href="../../index.shtml">&lt;--, LF Home</a></div>
</td><td>
<div class="bbutton"><a class="nodec" href="index.shtml">Go to the index of this issue</a></div>
</td></tr></table>
<br clear="all">
<HR size="2" noshade>
<!-- ARTICLE FOOT -->
<CENTER><TABLE WIDTH="98%" summary="footer">
<TR><TD ALIGN=CENTER BGCOLOR="#bdc6d5" WIDTH="50%">
<A HREF="../../common/lfteam.html">Webpages maintained by the LinuxFocus Editor team</A>
<BR><FONT COLOR="#1111aa"><a href="../../common/copy.html">&copy; Gerrit Renker</a><br>&quot;some rights reserved&quot; see <a href="../../license/index.shtml">linuxfocus.org/license/</a><br><a href="http://www.linuxfocus.org">http://www.LinuxFocus.org</a></FONT>
</TD>
<TD BGCOLOR="#bdc6d5">
<!-- TRANSLATION INFO -->
<font size=2>Translation information:</font>
<TABLE summary="translators">
  <tr><td><font size="2">en --&gt; -- : Gerrit Renker <small>&lt;gerrit.renker(at)gmx.de&gt;</small></font></td></tr>
</TABLE>
</TD>
</TR></TABLE></CENTER>
<p><font size=1>2005-03-27, generated by lfparser version 2.52</font></p>
<!-- 2pdaIgnoreStop -->
</BODY>
</HTML>

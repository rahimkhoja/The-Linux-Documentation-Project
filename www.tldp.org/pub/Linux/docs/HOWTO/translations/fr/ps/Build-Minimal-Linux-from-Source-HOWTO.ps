%!PS-Adobe-3.0
%%BoundingBox: 0 0 595 842
%%LanguageLevel: 2
%%Creator: htmldoc 1.8.22 Copyright 1997-2002 Easy Software Products, All Rights Reserved.
%%CreationDate: D:20030421004258-0200
%%Title: Construire un système Linux minimum à partir du code source
%%Generator: Modular DocBook HTML Stylesheet Version 1.7
%%Pages: 10
%%DocumentNeededResources:
%%+ font Courier
%%+ font Courier-BoldOblique
%%+ font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-BoldItalic
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Symbol
%%DocumentData: Clean7bit
%%EndComments
%%BeginProlog
%%BeginResource: procset htmldoc-page 1.8 22
/BD{bind def}bind def/B{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto
closepath stroke}BD/C{setrgbcolor}BD
/CM{concat}BD/DF{findfont dup length dict begin{1 index/FID ne{def}{pop pop}
ifelse}forall/Encoding fontencoding def currentdict end definefont pop}BD
/F{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto closepath fill}BD
/FS{/hdFontSize exch def}BD/GS{gsave}BD/GR{grestore}BD/J{0 exch ashow}BD
/L{0 rlineto stroke}BD/M{moveto}BD/RO{rotate}BD/S{show}BD/SC{dup scale}BD
/SF{findfont hdFontSize scalefont setfont}BD/SP{showpage}BD/T{translate}BD
%%EndResource
/fontencoding[
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent/ampersand
/quotesingle/parenleft/parenright/asterisk/plus/comma/minus/period/slash/zero
/one/two/three/four/five/six/seven/eight/nine/colon/semicolon/less/equal/greater
/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft
/backslash/bracketright/asciicircum/underscore/grave/a/b/c/d/e/f/g/h/i/j/k/l/m/n
/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde/.notdef/Euro
/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex
/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef/.notdef/.notdef/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/.notdef/.notdef/Ydieresis/space/exclamdown/cent
/sterling/Euro/yen/Scaron/section/scaron/copyright/ordfeminine/guillemotleft
/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/Zcaron/mu/paragraph/periodcentered/zcaron/onesuperior/ordmasculine
/guillemotright/OE/oe/Ydieresis/questiondown/Agrave/Aacute/Acircumflex/Atilde
/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def
/F0/Courier DF
/F3/Courier-BoldOblique DF
/F4/Times-Roman DF
/F5/Times-Bold DF
/F6/Times-Italic DF
/F7/Times-BoldItalic DF
/F8/Helvetica DF
/F9/Helvetica-Bold DF
/Fa/Helvetica-Oblique DF
/Fc/Symbol findfont definefont pop
%%EndProlog
%%Page: 1 1
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0 453.541 M 487.0 2.0 F
19 FS/F9 SF 0 728.992 M(Construire un syst\350me Linux minimum \340 partir du)S
0 706.182 M(code source)S
13.2 FS/F9 SF 0 675.981 M(Greg O'Keefe)S
11 FS/F0 SF 27.5 649.141 M(<gcokeefe@postoffice.utas.edu.au>)S
/F5 SF 0 609.541 M(Dominique van den Broeck -)S
/F4 SF ( Traduction fran\347aise)S
/F5 SF 0 583.141 M(Jean-Philippe Gu\351rard -)S
/F4 SF ( Relecture de la version fran\347aise)S
0 556.741 M(v0.9, novembre 2000)S
0 517.141 M(Voici les instructions pour construire un syst\350me Linux minimum \340 partir du code source. Ce document faisait)S
0 503.941 M(partie du guide pratique \253 De la mise sous tension \340 l'invite de commande de Bash \273, mais j'ai choisi d'en faire)S
0 490.741 M(un document ind\351pendant, afin que chacun de ces 2 documents restent courts et concentr\351s. Le syst\350me que)S
0 477.541 M(nous construisons ici est r\351duit au minimum et n'est pas apte \340 r\351aliser un vrai travail. Si vous voulez monter)S
0 464.341 M(un vrai syst\350me, lisez plut\364t le Comment faire un syst\350me Linux \340 partir de z\351ro \()S
/F6 SF (Linux from scratch - LFS)S
/F4 SF (\).)S
/F7 SF 0 422.741 M(Table des mati\350res)S
/F6 SF 0 409.541 M(1. Ce qu'il vous faut)S
0 396.341 M(2. Le syst\350me de fichier)S
0 383.141 M(3. MAKEDEV)S
0 369.941 M(4. Le noyau)S
0 356.741 M(5. Lilo)S
0 343.541 M(6. Glibc)S
0 330.341 M(7. SysVinit)S
0 317.141 M(8. Ncurses)S
0 303.94 M(9. Bash)S
0 290.74 M(10. Util-linux \(getty et login\))S
0 277.54 M(11. Sh-utils)S
0 264.34 M(12. Rendre le syst\350me plus utilisable)S
0 251.14 M(13. Informations compl\351mentaires)S
36 237.94 M(13.1. Astuces diverses)S
36 224.74 M(13.2. Liens)S
0 211.54 M(14. Section administrative)S
36 198.34 M(14.1. Copyright)S
36 185.14 M(14.2. Page principale)S
36 171.94 M(14.3. R\351actions)S
36 158.74 M(14.4. R\351f\351rences et remerciements)S
36 145.54 M(14.5. Historique des changements)S
36 132.34 M(14.6. Am\351liorations pr\351vues)S
36 119.14 M(14.7. Adaptation fran\347aise)S
15.8 FS/F9 SF 0 87.9 M(1. Ce qu'il vous faut)S
11 FS/F4 SF 0 60.532 M(Nous installerons une distribution de Linux telle que Red Hat sur une partition, et l'utiliserons pour construire)S
0 47.332 M(un nouveau syst\350me Linux sur une autre partition. Je nommerai par la suite \253 cible \273 le syst\350me que nous)S
0 34.132 M(construisons, et \253 source \273 le syst\350me que nous utilisons pour construire le syst\350me cible \(\340 ne pas confondre)S
/F8 SF 92.201 759 M(Construire un syst\350me Linux minimum \340 partir du code source)S
0 0 M(Construire un syst\350me Linux minimum \340 partir du code source)S
480.884 0 M(1)S
GR
SP
%%Page: 2 2
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
11 FS/F4 SF 0 737 M(avec)S
/F6 SF ( code source)S
/F4 SF ( que nous utiliserons aussi\).)S
0 710.6 M(Vous allez donc avoir besoin d'une machine avec deux partitions libres. Si vous le pouvez, utilisez une)S
0 697.4 M(machine qui ne contienne rien d'important. Vous pouvez utiliser un syst\350me Linux d\351j\340 existant comme)S
0 684.2 M(syst\350me source, mais je le d\351conseille. Si vous oubliez un des param\350tres des commandes que nous allons)S
0 671 M(saisir, vous pourriez accidentellement r\351installer des choses sur votre syst\350me source. Cela peut mener \340 des)S
0 657.8 M(incompatibilit\351s, et des conflits.)S
0 631.4 M(Les BIOS des PC dont l'architecture est ancienne, pour la plupart des 486 et des machines ant\351rieures, ont une)S
0 618.2 M(limitation ennuyeuse. Ils ne peuvent lire les disques durs au-del\340 des 512 premiers m\351ga-octets. Ce n'est pas)S
0 605 M(vraiment un probl\350me pour Linux, qui g\350re lui-m\352me les disques une fois lanc\351. Mais pour que Linux soit)S
0 591.8 M(charg\351 sur ces vieilles machines, le noyau doit r\351sider quelque part en-dessous de 512 m\351ga-octets. Si vous)S
0 578.6 M(utilisez une de ces machines, vous devrez cr\351er une partition distincte en-dessous de 512 Mo, \340 monter sur)S
/F0 SF 0 565.4 M(/boot)S
/F4 SF ( pour chaque syst\350me dont la partition racine se situe au-dessus de la limite des 512 Mo.)S
0 539 M(La derni\350re fois que je l'ai fait, j'ai utilis\351 Red Hat 6.1 comme syst\350me source. J'ai install\351 le syst\350me de base)S
0 525.8 M(plus :)S
36 499.4 M(cpp)S
/Fc SF 28.19 499.4 M(\267 )S
/F4 SF 36 486.2 M(egcs)S
/Fc SF 28.19 486.2 M(\267 )S
/F4 SF 36 473 M(egcs-c++)S
/Fc SF 28.19 473 M(\267 )S
/F4 SF 36 459.8 M(patch)S
/Fc SF 28.19 459.8 M(\267 )S
/F4 SF 36 446.6 M(make)S
/Fc SF 28.19 446.6 M(\267 )S
/F4 SF 36 433.4 M(dev86)S
/Fc SF 28.19 433.4 M(\267 )S
/F4 SF 36 420.2 M(ncurses-devel)S
/Fc SF 28.19 420.2 M(\267 )S
/F4 SF 36 407 M(glibc-devel)S
/Fc SF 28.19 407 M(\267 )S
/F4 SF 36 393.8 M(kernel-headers)S
/Fc SF 28.19 393.8 M(\267 )S
/F4 SF 0 367.4 M(J'ai aussi install\351 X-Window et Mozilla pour pouvoir lire la documentation facilement, mais ce n'est pas)S
0 354.2 M(vraiment n\351cessaire. \300 la fin de mon travail, celui-ci avait pris environ 350 Mo d'espace disque \(cela semble)S
0 341 M(un peu \351lev\351, je me demande pourquoi\).)S
0 314.6 M(Le syst\350me cible achev\351 prenait 650 Mo, mais comprenait tout le code source et les fichiers interm\351diaires. Si)S
0 301.4 M(l'espace est limit\351, je vous conseille de faire un)S
/F5 SF ( make clean)S
/F4 SF ( apr\350s la construction de chaque paquet. Cela dit,)S
0 288.2 M(cette taille surprenante est un peu inqui\351tante.)S
0 261.8 M(Enfin, vous allez avoir besoin du code source du syst\350me que vous allez construire. Ce sont les paquets dont)S
0 248.6 M(nous avons parl\351 dans le guide pratique \253 De la mise sous tension \340 l'invite de commande de Bash \273. On peut)S
0 235.4 M(les obtenir depuis un CD, ou par l'Internet. Je donnerai les url de leurs sites am\351ricains et des miroirs fran\347ais.)S
36 209 M(MAKEDEV : ftp://sunsite.unc.edu/pub/Linux/system/admin/ \(USA\),)S
36 195.8 M(ftp://ftp.lip6.fr/pub/linux/sunsite/system/admin/ \(France\).)S
/Fc SF 28.19 209 M(\267 )S
/F4 SF 36 182.6 M(Lilo : ftp://lrcftp.epfl.ch/pub/linux/local/lilo/ \(Suisse\),)S
36 169.4 M(ftp://ftp.lip6.fr/pub/linux/sunsite/system/boot/lilo/ \(France\).)S
/Fc SF 28.19 182.6 M(\267 )S
/F4 SF 36 156.2 M(Noyau Linux : utilisez un des miroirs list\351s sur http://www.kernel.org plut\364t que)S
36 143 M(ftp://ftp.kernel.org/pub/linux/kernel/ \(USA\) car ils sont toujours en surcharge ;)S
36 129.8 M(ftp://ftp.fr.kernel.org/pub/linux/kernel/ \(France\).)S
/Fc SF 28.19 156.2 M(\267 )S
/F4 SF 36 116.6 M(GNU libc : la biblioth\350que elle-m\352me, ainsi que les extensions linuxthreads sont sur)S
36 103.4 M(ftp://ftp.gnu.org/pub/gnu/glibc/ \(USA\), ftp://ftp.lip6.fr/pub/gnu/glibc/ \(France\).)S
/Fc SF 28.19 116.6 M(\267 )S
/F4 SF 36 90.2 M(Extensions de la libc GNU : vous aurez aussi besoin des linuxthreads et des extensions libcrypt. Si)S
36 77 M(libcrypt est absente du fait des lois am\351ricaines sur l'exportation, vous pouvez la r\351cup\351rer sur)S
36 63.8 M(ftp://ftp.gwdg.de/pub/gnu/glibc les extensions linuxthreads sont au m\352me endroit que la libc)S
36 50.6 M(proprement dite.)S
/Fc SF 28.19 90.2 M(\267 )S
/F4 SF 36 37.4 M(GNU ncurses : ftp://ftp.gnu.org/gnu/ncurses \(USA\), ftp://ftp.lip6.fr/pub/gnu/ncurses \(France\).)S
/Fc SF 28.19 37.4 M(\267 )S
/F8 SF 92.201 759 M(Construire un syst\350me Linux minimum \340 partir du code source)S
0 0 M(Construire un syst\350me Linux minimum \340 partir du code source)S
480.884 0 M(2)S
GR
SP
%%Page: 3 3
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0 409.4 M 487.0 2.0 F
0.88 0.88 0.88 C 0 141.127 M 487.0 57.9 F
0 74.462 M 487.0 13.9 F
0.00 0.00 0.00 C 0 65.862 M 487.0 2.0 F
11 FS/F4 SF 36 737 M(SysVinit : ftp://sunsite.unc.edu/pub/Linux/system/daemons/init/ \(USA\),)S
36 723.8 M(ftp://ftp.lip6.fr/pub/linux/sunsite/system/daemons/init/ \(France\).)S
/Fc SF 28.19 737 M(\267 )S
/F4 SF 36 710.6 M(GNU Bash : ftp://ftp.gnu.org/gnu/bash/ \(USA\), ftp://ftp.lip6.fr/pub/gnu/bash/ \(France\).)S
/Fc SF 28.19 710.6 M(\267 )S
/F4 SF 36 697.4 M(GNU sh-utils : ftp://ftp.gnu.org/gnu/sh-utils/ \(USA\), ftp://ftp.lip6.fr/pub/gnu/sh-utils/ \(France\).)S
/Fc SF 28.19 697.4 M(\267 )S
/F4 SF 36 684.2 M(util-linux : ftp://ftp.win.tue.nl/pub/linux/utils/util-linux/ \(Pays-Bas\),)S
36 671 M(ftp://ftp.lip6.fr/pub/linux/sunsite/system/misc/ \(France\). Ce paquet contient agetty et login.)S
/Fc SF 28.19 684.2 M(\267 )S
/F4 SF 0 644.6 M(Pour r\351sumer, il vous faut :)S
36 618.2 M(Une machine avec deux partitions distinctes d'environ 400 Mo et 700 Mo respectivement, bien que)S
36 605 M(vous puissiez s\373rement vous en tirer avec un espace plus restreint.)S
/Fc SF 28.19 618.2 M(\267 )S
/F4 SF 36 591.8 M(Une distribution de Linux \(par exemple, un CD Red Hat\), et de quoi l'installer \(par exemple, un)S
36 578.6 M(lecteur de CD\).)S
/Fc SF 28.19 591.8 M(\267 )S
/F4 SF 36 565.4 M(Les archives tar de code source list\351es ci-dessus. \(Le format tar permet de regrouper plusieurs fichiers)S
36 552.2 M(en un seul. Un fichier tar peut \352tre compress\351.\))S
/Fc SF 28.19 565.4 M(\267 )S
/F4 SF 0 525.8 M(Je pars du principe que vous pouvez installer le syst\350me source vous-m\352me, sans aide de ma part. \300 partir de)S
0 512.6 M(maintenant, je consid\350re que c'est fait.)S
0 486.2 M(Les premiers pas de ce projet consistent \340 faire d\351marrer le noyau, et \340 le laisser \253 paniquer \273 \(panic\) car il ne)S
0 473 M(trouve pas le programme init. Cela signifie que nous allons devoir installer un noyau, et installer Lilo. Pour)S
0 459.8 M(que Lilo s'installe facilement, nous aurons besoin des fichiers sp\351ciaux du r\351pertoire )S
/F0 SF (/dev)S
/F4 SF ( du syst\350me cible.)S
0 446.6 M(Lilo en a besoin pour effectuer les acc\350s bas niveau au disque, n\351cessaire pour \351crire le secteur d'amor\347age.)S
/F5 SF 0 433.4 M(MAKEDEV)S
/F4 SF ( est le script qui cr\351e ces fichiers sp\351ciaux \(vous pourriez bien s\373r les recopier depuis le syst\350me)S
0 420.2 M(source, mais ce serait tricher !\). Mais d'abord, il nous faut un syst\350me de fichiers dans lequel les mettre.)S
15.8 FS/F9 SF 0 386.96 M(2. Le syst\350me de fichier)S
11 FS/F4 SF 0 359.592 M(Notre nouveau syst\350me a besoin d'un syst\350me de fichiers pour vivre. Donc, il nous faut tout d'abord cr\351er ce)S
0 346.392 M(syst\350me de fichiers en utilisant)S
/F5 SF ( mke2fs)S
/F4 SF (. Ensuite il faut le monter quelque part. Je vous sugg\350re)S
/F0 SF 0 333.192 M(/mnt/cible)S
/F4 SF (. Dans ce qui va suivre, je consid\350re que votre syst\350me cible se trouve \340 cet endroit. Vous)S
0 319.992 M(pouvez gagner un peu de temps en ajoutant une entr\351e dans )S
/F0 SF (/etc/fstab)S
/F4 SF ( de fa\347on \340 ce que le montage de)S
0 306.792 M(votre syst\350me de destination se fasse automatique lors du d\351marrage de votre syst\350me source.)S
0 280.392 M(Lorsque nous d\351marrerons le syst\350me cible, ce qui se trouve dans )S
/F0 SF (/mnt/cible)S
/F4 SF ( se trouvera alors dans )S
/F0 SF (/)S
/F4 SF ( \(la)S
0 267.192 M(racine\).)S
0 240.792 M(Nous avons besoin d'une structure de sous-r\351pertoires sur la cible. Jetez un Sil au standard de hi\351rarchie des)S
0 227.592 M(fichiers \()S
/F6 SF (File Hierarchy Standard - FHS)S
/F4 SF (, voir la section liens\) pour trouver vous-m\352me ce qu'elle devrait)S
0 214.392 M(\352tre, ou faites simplement un)S
/F5 SF ( cd)S
/F4 SF ( vers l'endroit o\371 la cible est mont\351e et tapez aveugl\351ment :)S
9.2 FS/F0 SF 1.432 188.393 M(mkdir bin boot dev etc home lib mnt root sbin tmp usr var)S
1.432 177.393 M(cd var; mkdir lock log run spool  )S
1.432 166.393 M(cd ../usr; mkdir bin include lib local sbin share src)S
1.432 155.393 M(cd share/; mkdir man; cd man )S
1.432 144.393 M(mkdir man1 man2 man3 man4 man5 man6 man7 man8 man9)S
11 FS/F4 SF 0 116.927 M(Comme le standard de hi\351rarchie des fichiers et la plupart des paquets se contredisent en ce qui concerne)S
0 103.727 M(l'endroit o\371 les pages de manuel doivent se trouver, nous avons besoin d'un lien symbolique :)S
9.2 FS/F0 SF 1.432 77.728 M(cd ..; ln -s share/man man)S
11 FS/F8 SF 92.201 759 M(Construire un syst\350me Linux minimum \340 partir du code source)S
0 0 M(2. Le syst\350me de fichier)S
480.884 0 M(3)S
GR
SP
%%Page: 4 4
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.88 0.88 0.88 C 0 651.327 M 487.0 24.9 F
0 531.862 M 487.0 13.9 F
0.00 0.00 0.00 C 0 417.662 M 487.0 2.0 F
0 211.854 M 487.0 2.0 F
0.88 0.88 0.88 C 0 27.181 M 487.7 14.6 F
0.00 0.00 0.00 C 0 41.046 M 487.7 0.7 F
0 27.181 M 0.7 14.6 F
487 27.181 M 0.7 14.6 F
0 27.181 M 487.7 0.7 F
15.8 FS/F9 SF 0 732.16 M(3. MAKEDEV)S
11 FS/F4 SF 0 704.792 M(Nous mettrons le code source dans le r\351pertoire )S
/F0 SF (/usr/src)S
/F4 SF ( cible. Ainsi si votre syst\350me de fichiers cible est)S
0 691.592 M(mont\351 sur )S
/F0 SF (/mnt/cible)S
/F4 SF (, et que vos archives tar sont dans )S
/F0 SF (/root)S
/F4 SF (, il faudra faire :)S
9.2 FS/F0 SF 1.432 665.593 M(cd /mnt/cible/usr/src)S
1.432 654.593 M(tar -xzvf /root/MAKEDEV-2.5.tar.gz)S
11 FS/F4 SF 0 627.127 M(Ne vous comportez pas en amateur fini en copiant les archives \340 l'endroit o\371 vous allez les d\351compresser ;-\))S
0 600.727 M(En principe, lorsque vous installez un logiciel, vous l'installez sur le syst\350me en fonctionnement. En)S
0 587.527 M(l'occurrence, ce n'est pas notre intention, nous souhaitons l'installer comme si /mnt/cible \351tait la racine du)S
0 574.327 M(syst\350me de fichiers. Les diff\351rents paquets ont diff\351rentes mani\350res de vous laisser faire cela. Pour)S
0 561.127 M(MAKEDEV, vous devez faire :)S
9.2 FS/F0 SF 1.432 535.128 M(ROOT=/mnt/cible make install)S
11 FS/F4 SF 0 507.662 M(Vous devez rechercher ces options dans les fichiers README et INSTALL ou faire un)S
/F5 SF ( ./configure --help)S
/F4 SF (.)S
0 481.262 M(Explorez le )S
/F0 SF (Makefile)S
/F4 SF ( de MAKEDEV pour voir l'usage qu'il fait de la variable)S
/Fa SF ( ROOT)S
/F4 SF (, que nous avons)S
0 468.062 M(d\351finie dans cette commande. Ensuite jetez un Sil \340 la page de manuel en faisant un)S
/F5 SF ( man ./MAKEDEV.man)S
/F4 SF 0 454.862 M(pour voir comment il fonctionne. Vous d\351couvrirez que la m\351thode que nous devons utiliser pour cr\351er ces)S
0 441.662 M(fichiers sp\351ciaux consiste \340 faire un)S
/F5 SF ( cd /mnt/cible/dev)S
/F4 SF ( puis un)S
/F5 SF ( ./MAKEDEV generic)S
/F4 SF (. Faites un)S
/F5 SF ( ls)S
/F4 SF ( pour)S
0 428.462 M(d\351couvrir tous les merveilleux fichiers sp\351ciaux qu'il a cr\351\351 pour vous !)S
15.8 FS/F9 SF 0 395.222 M(4. Le noyau)S
11 FS/F4 SF 0 367.854 M(Ensuite, nous devons fabriquer un noyau. Je consid\350re que vous l'avez d\351j\340 fait, aussi serai-je bref. Il est plus)S
0 354.654 M(facile d'installer Lilo si le noyau cens\351 \352tre mont\351 est d\351j\340 l\340. Retournez dans le r\351pertoire )S
/F0 SF (usr/src)S
/F4 SF ( de la)S
0 341.454 M(cible, et extrayez-y les sources du noyau Linux. Entrez dans l'arborescence des sources \()S
/F5 SF (cd linux)S
/F4 SF (\) et)S
0 328.254 M(configurez le noyau, en utilisant votre m\351thode pr\351f\351r\351e, par exemple)S
/F5 SF ( make menuconfig)S
/F4 SF (. Vous vous)S
0 315.054 M(faciliterez grandement la vie si vous configurez un noyau sans module. Si vous choisissez d'avoir des)S
0 301.854 M(modules, vous devrez \351diter le fichier )S
/F0 SF (Makefile)S
/F4 SF (, trouver)S
/Fa SF ( INSTALL_MOD_PATH)S
/F4 SF (, et lui affecter la valeur)S
/F0 SF 0 288.654 M(/mnt/cible)S
/F4 SF (.)S
0 262.254 M(Vous pouvez maintenant taper)S
/F5 SF ( make dep)S
/F4 SF (,)S
/F5 SF ( make bzImage)S
/F4 SF (, et si vous avez configur\351 des modules :)S
/F5 SF ( make)S
0 249.054 M(modules)S
/F4 SF (,)S
/F5 SF ( make modules_install)S
/F4 SF (. Copiez le noyau )S
/F0 SF (arch/i386/boot/bzImage)S
/F4 SF ( et le plan syst\350me)S
/F0 SF 0 235.854 M(System.map)S
/F4 SF ( vers le r\351pertoire d'amor\347age de la cible )S
/F0 SF (/mnt/cible/boot)S
/F4 SF (, et nous seront pr\352ts \340 installer)S
0 222.654 M(Lilo.)S
15.8 FS/F9 SF 0 189.414 M(5. Lilo)S
11 FS/F4 SF 0 162.046 M(Lilo est livr\351 avec un script tr\350s bien con\347u nomm\351)S
/F5 SF ( QuickInst)S
/F4 SF (. D\351compressez les sources de Lilo dans le)S
0 148.846 M(r\351pertoire des sources du syst\350me cible, lancez ce script par la commande)S
/F5 SF ( ROOT=/mnt/cible ./QuickInst)S
/F4 SF (. Il)S
0 135.646 M(vous posera plusieurs questions concernant la mani\350re dont vous souhaitez que Lilo soit install\351.)S
0 109.246 M(Puisque nous avons affect\351 \340 la variable)S
/Fa SF ( ROOT)S
/F4 SF ( la partition cible, les noms des fichiers que nous lui indiquons)S
0 96.046 M(doivent \352tre relatifs \340 cette partition. Donc, \340 la question du nom du noyau \340 lancer par d\351faut, r\351pondez)S
/F0 SF 0 82.846 M(/boot/bzImage)S
/F4 SF (, et)S
/F6 SF ( non)S
/F0 SF 121.242 82.846 M(/mnt/cible/boot/bzImage)S
/F4 SF (.)S
0 56.446 M(J'ai trouv\351 une erreur mineure dans le script, qui lui fait dire :)S
9.2 FS/F0 SF 1.432 30.447 M(./QuickInst: /boot/bzImage: no such file )S
11 FS/F8 SF 92.201 759 M(Construire un syst\350me Linux minimum \340 partir du code source)S
0 0 M(3. MAKEDEV)S
480.884 0 M(4)S
GR
SP
%%Page: 5 5
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.88 0.88 0.88 C 0 505.335 M 487.0 123.9 F
0 269.27 M 487.0 24.9 F
0.00 0.00 0.00 C 0 234.27 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(Mais si vous vous contentez de l'ignorer, cela passe quand m\352me.)S
0 710.6 M(Comment doit-on s'y prendre pour expliquer \340)S
/F5 SF ( QuickInst)S
/F4 SF ( o\371 installer le secteur d'amor\347age ? Quand nous)S
0 697.4 M(red\351marrerons, nous voulons avoir le choix de d\351marrer le syst\350me source ou le syst\350me cible, ou encore)S
0 684.2 M(n'importe quel autre syst\350me pr\351sent sur la machine. Et nous souhaitons que l'instance de Lilo que nous)S
0 671 M(mettons en place maintenant lance le noyau de notre nouveau syst\350me. Comment r\351aliser ces deux choses ?)S
0 657.8 M(\311cartons-nous un moment du sujet et \351tudions la fa\347on dont Lilo d\351marre DOS sur un syst\350me Linux en)S
0 644.6 M(double-amor\347age. Le fichier )S
/F0 SF (lilo.conf)S
/F4 SF ( d'un tel syst\350me doit s\373rement ressembler \340 \347a.)S
9.2 FS/F0 SF 1.432 618.601 M(prompt  )S
1.432 607.601 M(timeout = 50)S
1.432 596.601 M(default = linux)S
1.432 574.601 M(image = /boot/bzImage )S
1.432 563.601 M(        label  = linux)S
1.432 552.601 M(        root   = /dev/hda1)S
1.432 541.601 M(        read-only)S
1.432 519.601 M(other = /dev/hda2)S
1.432 508.601 M(        label = dos)S
11 FS/F4 SF 0 481.135 M(Si la machine est configur\351e de cette fa\347on, alors le bloc de d\351marrage \()S
/F6 SF (Master Boot Record - MBR)S
/F4 SF (\) est lu et)S
0 467.935 M(charg\351 par le Bios, et lance le chargeur d'amor\347age de Lilo \()S
/F6 SF (bootloader)S
/F4 SF (\), qui affiche une invite de commande.)S
0 454.735 M(Si vous tapez)S
/Fa SF ( dos)S
/F4 SF ( \340 cette invite, Lilo chargera le secteur d'amor\347age de hda2, qui lancera DOS.)S
0 428.335 M(Ce que nous allons faire est exactement la m\352me chose, \340 une diff\351rence pr\350s : le secteur d'amor\347age de hda2)S
0 415.135 M(sera un autre secteur d'amor\347age Lilo - celui-l\340 m\352me que)S
/F5 SF ( QuickInst)S
/F4 SF ( va installer. Donc le Lilo de la)S
0 401.935 M(distribution Linux chargera le Lilo que nous avons construit, qui chargera le noyau que nous avons b\342ti. Vous)S
0 388.735 M(verrez alors deux invites Lilo au red\351marrage.)S
0 362.335 M(Pour raccourcir une longue histoire, lorsque)S
/F5 SF ( QuickInst)S
/F4 SF ( vous demande o\371 placer le secteur de boot,)S
0 349.135 M(indiquez-lui l'endroit o\371 se trouve votre syst\350me de fichiers cible, par exemple )S
/F0 SF (/dev/hda2)S
/F4 SF (.)S
0 322.735 M(Maintenant modifiez le fichier )S
/F0 SF (lilo.conf)S
/F4 SF ( de votre syst\350me source, de fa\347on \340 ce qu'il comprenne une ligne)S
0 309.535 M(ressemblant \340 :)S
9.2 FS/F0 SF 1.432 283.536 M(other = /dev/hda2)S
1.432 272.536 M(        label = cible)S
11 FS/F4 SF 0 245.07 M(Lancez)S
/F5 SF ( lilo)S
/F4 SF (, et nous devrions \352tre capables de faire notre premier d\351marrage sur le syst\350me cible.)S
15.8 FS/F9 SF 0 211.83 M(6. Glibc)S
11 FS/F4 SF 0 184.462 M(L'\351tape suivante consiste \340 installer init, mais comme la plupart des programmes qui tournent sous Linux, init)S
0 171.262 M(utilise des fonctions issues de la biblioth\350que standard C GNU, glibc. Aussi l'installerons-nous en premier.)S
0 144.862 M(Glibc est un paquet tr\350s gros et tr\350s complexe. Il faut 90 heures pour le construire sur mon vieux 386sx / 16)S
0 131.662 M(avec 8 Mo de m\351moire. Mais cela ne prend que 33 minutes sur mon Celeron 433 avec 64 Mo de m\351moire. Je)S
0 118.462 M(pense que la quantit\351 de m\351moire est le principal crit\350re dans notre cas. Si vous n'avez que 8 Mo de m\351moire)S
0 105.262 M(\(ou - j'en tremble - encore moins !\), pr\351parez vous \340 une tr\350s longue compilation.)S
0 78.862 M(La documentation d'installation de glibc recommande une construction dans un r\351pertoire distinct. Cela vous)S
0 65.662 M(permettra de recommencer facilement, en supprimant simplement ce r\351pertoire. Cela vous permet aussi)S
0 52.462 M(d'\351conomiser 265 Mo d'espace disque.)S
/F8 SF 92.201 759 M(Construire un syst\350me Linux minimum \340 partir du code source)S
0 0 M(6. Glibc)S
480.884 0 M(5)S
GR
SP
%%Page: 6 6
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.88 0.88 0.88 C 0 544.935 M 487.0 57.9 F
0.00 0.00 0.00 C 0 509.935 M 487.0 2.0 F
0.88 0.88 0.88 C 0 404.462 M 487.0 13.9 F
0 350.998 M 487.0 13.9 F
0 207.333 M 487.0 24.9 F
0.00 0.00 0.00 C 0 53.533 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(Comme d'habitude, d\351compressez l'archive )S
/F0 SF (glibc-2.1.3.tar.gz)S
/F4 SF ( \(ou n'importe quelle autre version\))S
0 723.8 M(dans )S
/F0 SF (/mnt/cible/usr/src)S
/F4 SF (. \300 pr\351sent, nous devons d\351compresser les extensions dans le r\351pertoire de)S
0 710.6 M(glibc. Donc, faites un)S
/F5 SF ( cd glibc-2.1.3)S
/F4 SF (, puis d\351compressez \340 cet endroit les archives)S
/F0 SF 0 697.4 M(glibc-crypt-2.1.3.tar.gz)S
/F4 SF ( et )S
/F0 SF (glibc-linuxthreads-2.1.3.tar.gz)S
/F4 SF (.)S
0 671 M(Maintenant, nous pouvons cr\351er le r\351pertoire de construction, configurer, construire et installer glibc. Voici les)S
0 657.8 M(commandes que j'ai utilis\351es, mais relisez vous-m\352me la documentation et assurez-vous de faire ce qui est le)S
0 644.6 M(plus appropri\351 dans votre environnement. Toutefois, avant de faire tout cela, vous voudrez sans doute)S
0 631.4 M(conna\356tre l'espace disque qu'il vous reste en faisant un)S
/F5 SF ( df)S
/F4 SF (. Vous pourrez en faire un autre apr\350s avoir construit)S
0 618.2 M(et install\351 glibc pour en d\351duire son volume.)S
9.2 FS/F0 SF 1.432 592.201 M(cd ..)S
1.432 581.201 M(mkdir glibc-build)S
1.432 570.201 M(../glibc-2.1.3/configure --enable-add-ons --prefix=/usr)S
1.432 559.201 M(make)S
1.432 548.201 M(make install_root=/mnt/cible install)S
11 FS/F4 SF 0 520.735 M(Remarquez que nous avons ici encore une autre fa\347on de dire au paquet l'endroit o\371 s'installer.)S
15.8 FS/F9 SF 0 487.495 M(7. SysVinit)S
11 FS/F4 SF 0 460.127 M(Fabriquer et installer les binaires de SysVinit est assez simple. Il y a juste une petit manipulation \340 faire dans)S
0 446.927 M(le fichier )S
/F0 SF (Makefile)S
/F4 SF (, situ\351 dans le sous-r\351pertoire )S
/F0 SF (src/)S
/F4 SF (. Dans les 4 derni\350res lignes, vous devez placer)S
/Fa SF 0 433.727 M($\(ROOT\))S
/F4 SF ( juste devant)S
/Fa SF ( /dev/initctl)S
/F4 SF (. Par exemple :)S
9.2 FS/F0 SF 1.432 407.728 M(@ if [ ! -p /dev/initctl ]; then \\)S
11 FS/F4 SF 0 380.262 M(devient :)S
9.2 FS/F0 SF 1.432 354.263 M(@ if [ ! -p )S
/F3 SF ($\(ROOT\))S
/F0 SF (/dev/initctl ]; then \\)S
11 FS/F4 SF 0 326.798 M(Le fichier sp\351cial )S
/F0 SF (initctl)S
/F4 SF ( est un moyen de communication avec init. Par exemple, la page de manuel d'init)S
0 313.598 M(indique que ce fichier doit \352tre utilis\351 de pr\351f\351rence au signal)S
/Fa SF ( SIGPWR)S
/F4 SF ( pour demander \340 init d'arr\352ter le)S
0 300.398 M(syst\350me lorsque l'alimentation \351lectrique \340 bascul\351 sur batterie suite \340 une panne de courant. Cette)S
0 287.198 M(manipulation permet de s'assurer que ce fichier se trouvera dans le syst\350me cible, et non dans le syst\350me)S
0 273.998 M(source.)S
0 247.598 M(Une fois que c'est fait, placez-vous dans le sous-r\351pertoire )S
/F0 SF (src)S
/F4 SF (, et entrez :)S
9.2 FS/F0 SF 1.432 221.599 M(make)S
1.432 210.599 M(ROOT=/mnt/cible make install)S
11 FS/F4 SF 0 183.133 M(Il existe aussi beaucoup de scripts associ\351s \340 init. Il y a des scripts d'exemple fournis dans le paquet SysVinit,)S
0 169.933 M(qui fonctionnent bien. Mais vous devez les installer manuellement. Ils sont rang\351s hi\351rarchiquement sous)S
/F0 SF 0 156.733 M(debian/etc)S
/F4 SF ( dans l'arborescence du code source. Vous pouvez recopier toute cette hi\351rarchie dans le)S
0 143.533 M(r\351pertoire )S
/F0 SF (etc)S
/F4 SF ( du syst\350me cible, avec une commande du style)S
/F5 SF ( cd ../debian/etc; cp -r * /mnt/cible/etc)S
/F4 SF (.)S
0 130.333 M(\311videment, vous voudrez les examiner avant de les recopier.)S
0 103.933 M(Tout est d\351sormais en place pour permettre au noyau cible de lancer init au red\351marrage. Le probl\350me, cette)S
0 90.733 M(fois, viendra des scripts qui ne pourront \352tre ex\351cut\351s car bash ne sera pas l\340 pour les interpr\351ter. init tentera)S
0 77.533 M(\351galement de lancer des getty, qui sont eux aussi inexistants. Red\351marrez le syst\350me, et assurez-vous que tout)S
0 64.333 M(le reste fonctionne correctement.)S
/F8 SF 92.201 759 M(Construire un syst\350me Linux minimum \340 partir du code source)S
0 0 M(7. SysVinit)S
480.884 0 M(6)S
GR
SP
%%Page: 7 7
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.88 0.88 0.88 C 0 547.927 M 498.9 35.9 F
0.00 0.00 0.00 C 0 539.327 M 487.0 2.0 F
0.88 0.88 0.88 C 0 436.054 M 487.0 24.9 F
0 356.19 M 487.0 13.9 F
0.00 0.00 0.00 C 0 255.189 M 487.0 2.0 F
15.8 FS/F9 SF 0 732.16 M(8. Ncurses)S
11 FS/F4 SF 0 704.792 M(L'\351tape suivante consiste \340 mettre Bash en place, mais bash a besoin de ncurses, aussi devons-nous installer)S
0 691.592 M(celui-ci en premier. Ncurses remplace termcap dans la mani\350re de g\351rer les \351crans texte, mais apporte)S
0 678.392 M(\351galement une compatibilit\351 descendante en prenant en charge les appels termcap. Dans l'objectif d'avoir un)S
0 665.192 M(syst\350me moderne, simple et propre, je pense que le mieux est de d\351sactiver l'ancienne m\351thode termcap. Vous)S
0 651.992 M(pourriez par la suite rencontrer des probl\350mes avec des applications utilisant termcap, mais au moins vous)S
0 638.792 M(conna\356trez les \351l\351ments qui l'utilisent. Si vous en avez besoin, vous pourrez recompiler ncurses avec prise en)S
0 625.592 M(charge de termcap.)S
0 599.192 M(Les commandes que j'ai utilis\351es sont :)S
9.2 FS/F0 SF 1.432 573.193 M(./configure --prefix=/usr --with-install-prefix=/mnt/cible --with-shared --disable-termcap)S
1.432 562.193 M(make)S
1.432 551.193 M(make install)S
15.8 FS/F9 SF 0 516.887 M(9. Bash)S
11 FS/F4 SF 0 489.519 M(Il m'a fallu beaucoup de lecture, de r\351flexion, de tests, et d'erreurs pour que Bash s'installe l\340 o\371 je pensais)S
0 476.319 M(qu'il devait aller. Les options de configuration que j'ai utilis\351es sont :)S
9.2 FS/F0 SF 1.432 450.32 M(./configure --prefix=/mnt/cible/usr/local --exec-prefix=/mnt/cible \\)S
1.432 439.32 M(            --with-curses )S
11 FS/F4 SF 0 411.854 M(Une fois que vous aurez construit et install\351 Bash, vous devrez cr\351er un lien symbolique comme ceci :)S
/F5 SF ( cd)S
0 398.654 M(/mnt/cible/bin; ln -s bash sh)S
/F4 SF (. Cela est d\373 au fait que les scripts d\351butent g\351n\351ralement par une ligne comme)S
0 385.454 M(celle-ci :)S
9.2 FS/F0 SF 1.432 359.455 M(#!/bin/sh)S
11 FS/F4 SF 0 331.99 M(Si vous n'avez ce lien symbolique, les scripts ne fonctionneront pas, car ils chercheront)S
/Fa SF ( /bin/sh)S
/F4 SF ( et non)S
/Fa SF 0 318.789 M(/bin/bash)S
/F4 SF (.)S
0 292.389 M(Arriv\351 \340 ce point, vous pouvez red\351marrer si vous le souhaitez. Lors du red\351marrage, vous devriez remarquer)S
0 279.189 M(que, maintenant, les scripts s'ex\351cutent. Cependant, vous ne pourrez pas vous connecter, car il n'y pas encore)S
0 265.989 M(de programmes getty ou login.)S
15.8 FS/F9 SF 0 232.749 M(10. Util-linux \(getty et login\))S
11 FS/F4 SF 0 205.381 M(Le paquet util-linux contient agetty et login. Nous avons besoin des deux pour pouvoir nous connecter et)S
0 192.181 M(obtenir l'invite de commande de bash. Apr\350s l'avoir install\351, faites un lien symbolique depuis )S
/F0 SF (agetty)S
/F4 SF ( vers)S
/F0 SF 0 178.981 M(getty)S
/F4 SF ( dans le r\351pertoire )S
/F0 SF (/sbin)S
/F4 SF ( du syst\350me cible. getty est un des programmes cens\351s se trouver sur tous les)S
0 165.781 M(syst\350mes de type Unix, donc faire un lien est une meilleure id\351e que de modifier )S
/F0 SF (inittab)S
/F4 SF ( pour qu'il lance)S
0 152.581 M(agetty.)S
0 126.181 M(Il me reste un probl\350me avec la compilation d'util-linux. Le paquet contient \351galement le programme)S
/Fa SF ( more)S
/F4 SF (,)S
0 112.981 M(et, pour ce programme, je n'ai pas \351t\351 capable de persuader)S
/Fa SF ( make)S
/F4 SF ( de r\351aliser l'\351dition de liens avec le ncurses)S
0 99.781 M(5 du syst\350me cible au lieu du ncurses 4 du syst\350me source.)S
0 73.381 M(Vous aurez aussi besoin d'un fichier )S
/F0 SF (/etc/passwd)S
/F4 SF ( sur le syst\350me cible. C'est l'endroit o\371 le programme)S
0 60.181 M(login ira v\351rifier si vous avez le droit de vous connecter. Comme il ne s'agit que d'un syst\350me jouet, vous)S
0 46.981 M(pouvez vous permettre \340 ce niveau des choses scandaleuses, comme de ne d\351finir que l'utilisateur root, sans)S
0 33.781 M(mot de passe ! Mettez le simplement dans le fichier )S
/F0 SF (/etc/passwd)S
/F4 SF ( du syst\350me cible :)S
/F8 SF 92.201 759 M(Construire un syst\350me Linux minimum \340 partir du code source)S
0 0 M(8. Ncurses)S
480.884 0 M(7)S
GR
SP
%%Page: 8 8
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.88 0.88 0.88 C 0 734.135 M 487.0 13.9 F
0.00 0.00 0.00 C 0 672.735 M 487.0 2.0 F
0 493.327 M 487.0 2.0 F
0 155.519 M 487.0 2.0 F
0.88 0.88 0.88 C 0 34.206 M 487.0 13.9 F
0.00 0.00 0.00 C 9.2 FS/F0 SF 1.432 737.401 M(root::0:0:root:/root:/bin/bash)S
11 FS/F4 SF 0 709.935 M(Les champs sont s\351par\351s par des deux-points, et correspondent, de gauche \340 droite, \340 l'identifiant de)S
0 696.735 M(l'utilisateur, \340 son mot de passe \(chiffr\351\), \340 son num\351ro d'utilisateur, \340 son num\351ro de groupe, \340 son nom)S
0 683.535 M(complet, \340 son r\351pertoire personnel, et \340 son interpr\351teur de commandes par d\351faut.)S
15.8 FS/F9 SF 0 650.295 M(11. Sh-utils)S
11 FS/F4 SF 0 622.927 M(Le dernier paquet dont nous ayons besoin est le sh-utils GNU. Le seul programme n\351cessaire \340 ce niveau est)S
/Fa SF 0 609.727 M(stty)S
/F4 SF (, qui est utilis\351 dans )S
/F0 SF (/etc/init.d/rc)S
/F4 SF (, lui-m\352me utilis\351 pour changer de niveau d'ex\351cution et entrer)S
0 596.527 M(dans le niveau initial. En fait, je poss\350de et ai utilis\351 un paquet qui ne contient que)S
/Fa SF ( stty)S
/F4 SF ( mais je ne peux me)S
0 583.327 M(souvenir d'o\371 il vient. Il vaut mieux utiliser le paquet GNU, car il contient d'autres choses dont vous aurez)S
0 570.127 M(besoin si vous voulez les ajouter au syst\350me pour le rendre vraiment utilisable.)S
0 543.727 M(Bien, \347a y est. Vous devriez maintenant avoir un syst\350me qui va d\351marrer et vous donner l'invite de)S
0 530.527 M(connexion. Saisissez-y)S
/Fa SF ( root)S
/F4 SF (, et vous devriez acc\351der \340 l'interpr\351teur de commandes. Vous ne pourrez pas faire)S
0 517.327 M(grand chose avec, il n'y a m\352me pas la commande)S
/F5 SF ( ls)S
/F4 SF ( pour voir votre travail. Tapez deux fois sur la touche)S
/F5 SF ( Tab)S
/F4 SF 0 504.127 M(pour voir les commandes disponibles. C'est la chose la plus int\351ressante que j'ai trouv\351e \340 faire avec.)S
15.8 FS/F9 SF 0 470.887 M(12. Rendre le syst\350me plus utilisable)S
11 FS/F4 SF 0 443.519 M(Il semblerait que nous ayons l\340 un syst\350me plut\364t inutilisable. Mais en r\351alit\351, nous ne sommes pas tr\350s loin de)S
0 430.319 M(pouvoir commencer \340 travailler avec. L'une des premi\350res choses \340 faire est de rendre le syst\350me de fichiers)S
0 417.119 M(racine accessible en lecture et en \351criture. Il y a un script issu du paquet SysVinit, /etc/init.d/mountall.sh qui)S
0 403.919 M(s'occupe de cela, et effectue un)S
/F5 SF ( mount -a)S
/F4 SF ( pour monter automatiquement tout ce qui est sp\351cifi\351 dans le fichier)S
/F0 SF 0 390.719 M(/etc/fstab)S
/F4 SF (. Mettez un lien symbolique du genre )S
/F0 SF (S05mountall)S
/F4 SF ( vers lui dans le r\351pertoire )S
/F0 SF (etc/rc2.d)S
/F4 SF 0 377.519 M(du syst\350me cible.)S
0 351.119 M(Il se peut que ce script utilise des commandes que vous n'avez pas encore install\351es. Si c'est le cas, trouvez le)S
0 337.919 M(paquet qui contient ces commandes et installez-le. Voyez la section astuces diverses pour avoir des)S
0 324.719 M(indications sur la marche \340 suivre pour trouver ces paquets.)S
0 298.319 M(Regardez les autres scripts de )S
/F0 SF (/etc/init.d)S
/F4 SF (. La plupart d'entre-eux doit \352tre incluse dans tout syst\350me)S
0 285.119 M(s\351rieux. Ajoutez-les un \340 un, et assurez-vous que tout se lance en douceur avant d'en ajouter d'autres.)S
0 258.719 M(Lisez le standard de hi\351rarchie des fichiers \(voir section liens\). Il contient une liste des commandes qui)S
0 245.519 M(devraient \352tre dans )S
/F0 SF (/bin)S
/F4 SF ( et )S
/F0 SF (/sbin)S
/F4 SF (. Assurez-vous que toutes ces commandes sont install\351es sur votre)S
0 232.319 M(syst\350me. Mieux encore, trouvez la documentation Posix qui sp\351cifie tout cela.)S
0 205.919 M(\300 partir de maintenant, il n'est plus question que d'ajouter de plus en plus de paquets, jusqu'\340 ce que tout ce)S
0 192.719 M(que vous souhaitez avoir se trouve sur votre syst\350me. Installez les outils de construction comme)S
/Fa SF ( make)S
/F4 SF ( et)S
/Fa SF ( gcc)S
/F4 SF 0 179.519 M(le plus t\364t possible. Une fois que cela sera fait, vous pourrez faire construire le syst\350me cible par lui-m\352me,)S
0 166.319 M(ce qui est bien moins complexe.)S
15.8 FS/F9 SF 0 133.079 M(13. Informations compl\351mentaires)S
13.2 FS/F9 SF 0 103.511 M(13.1. Astuces diverses)S
11 FS/F4 SF 0 76.671 M(Si vous avez une commande appel\351e)S
/F5 SF ( machin)S
/F4 SF ( sur un syst\350me Linux avec RPM, et souhaitez avoir des)S
0 63.471 M(indications sur l'endroit o\371 trouver les sources, vous pouvez utiliser la commande :)S
9.2 FS/F0 SF 1.432 37.472 M(rpm -qif `which machin`)S
11 FS/F8 SF 92.201 759 M(Construire un syst\350me Linux minimum \340 partir du code source)S
0 0 M(11. Sh-utils)S
480.884 0 M(8)S
GR
SP
%%Page: 9 9
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.88 0.88 0.88 C 0 707.735 M 487.0 13.9 F
0.00 0.00 0.00 C 0 672.735 M 487.0 2.0 F
0 509.695 M 487.0 2.0 F
0 393.647 M 487.0 2.0 F
0 336.207 M 487.0 2.0 F
0 265.567 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(Et si vous avez un CD de sources Red Hat, vous pouvez installer le code source avec)S
9.2 FS/F0 SF 1.432 711.001 M(rpm -i /mnt/cdrom/SRPMS/)S
/Fa SF (ce.qu.il.vient.de.dire-1.2.srpm)S
11 FS/F4 SF 0 683.535 M(Ceci mettra l'archive, avec les patches Redhats \351ventuels dans )S
/F0 SF (/usr/src/redhat/SOURCES)S
/F4 SF (.)S
13.2 FS/F9 SF 0 652.935 M(13.2. Liens)S
11 FS/F4 SF 36 626.095 M(Il existe un guide pratique sur la mani\350re de construire des logiciels \340 partir de leurs sources, le)S
36 612.895 M(Software Building HOWTO.)S
/Fc SF 28.19 626.095 M(\267 )S
/F4 SF 36 599.695 M(Il existe aussi un guide pratique sur la mani\350re de construire un syst\350me Linux \340 partir de z\351ro. Il met)S
36 586.495 M(l'accent sur la construction d'un syst\350me r\351ellement utilisable, plut\364t que d'\352tre un simple exercice :)S
36 573.295 M(Comment faire un syst\350me Linux \340 partir de z\351ro \()S
/F6 SF (Linux from scratch - LFS)S
/F4 SF (\).)S
/Fc SF 28.19 599.695 M(\267 )S
/F4 SF 36 560.095 M(Le standard de hi\351rarchie du syst\350me de fichier Unix \(FHS\). Ce standard d\351crit quels \351l\351ments)S
36 546.895 M(doivent aller \340 quels endroits dans un syst\350me de fichier Unix, et pourquoi. Il indique \351galement le)S
36 533.695 M(contenu minimum requis des r\351pertoires )S
/F0 SF (/bin)S
/F4 SF (, )S
/F0 SF (/sbin)S
/F4 SF (, et c\346tera. C'est une bonne r\351f\351rence si votre)S
36 520.495 M(but est de r\351aliser un syst\350me minimal, mais fonctionnel. Il en existe une version fran\347aise.)S
/Fc SF 28.19 560.095 M(\267 )S
15.8 FS/F9 SF 0 487.255 M(14. Section administrative)S
13.2 FS/F9 SF 0 457.687 M(14.1. Copyright)S
11 FS/F4 SF 0 430.847 M(Copyright \251 1999, 2000 Greg O'Keefe. Vous \352tes libre de l'utiliser, le copier, le distribuer ou le modifier, sans)S
0 417.647 M(obligation, selon les termes de la licence publique g\351n\351rale GNU \(GPL : GNU General Public Licence\). Merci)S
0 404.447 M(de citer l'auteur si vous utilisez tout ou partie de ce document dans un autre.)S
13.2 FS/F9 SF 0 373.847 M(14.2. Page principale)S
11 FS/F4 SF 0 347.007 M(Les mises \340 jour de ce document \351voluent sur From Powerup To Bash Prompt.)S
13.2 FS/F9 SF 0 316.407 M(14.3. R\351actions)S
11 FS/F4 SF 0 289.567 M(J'aimerais recevoir vos commentaires, critiques et suggestions. Veuillez s'il vous pla\356t me les envoyer en)S
0 276.367 M(anglais \340 Greg O'Keefe )S
/F0 SF (<gcokeefe@postoffice.utas.edu.au>)S
13.2 FS/F9 SF 0 245.767 M(14.4. R\351f\351rences et remerciements)S
11 FS/F4 SF 0 218.927 M(Les noms de produits cit\351s sont des marques d\351pos\351es par leurs propri\351taires respectifs, et consid\351r\351s par cette)S
0 205.727 M(note comme reconnus comme tels.)S
0 179.327 M(Il y a quelques personnes que je voudrais remercier, pour m'avoir aid\351 \340 r\351aliser tout ceci.)S
/F6 SF 0 152.927 M(Michael Emery)S
/F4 SF 36 139.727 M(Pour m'avoir rappel\351 Unios.)S
/F6 SF 0 126.527 M(Tim Little)S
/F4 SF 36 113.327 M(Pour de bonnes indications concernant )S
/F0 SF (/etc/passwd)S
/F6 SF 0 100.127 M(sPaKr dans #linux sur efnet)S
/F4 SF 36 86.927 M(Qui a soup\347onn\351 l'utilisation de )S
/F0 SF (/etc/services)S
/F4 SF ( par syslog, et m'a fait conna\356tre la phrase \253 rolling)S
36 73.727 M(your own \273 \(\253 fabriquez votre propre syst\350me \273\) pour d\351crire la construction d'un syst\350me \340 partir des)S
36 60.527 M(sources.)S
/F6 SF 0 47.327 M(Alex Aitkin)S
/F4 SF 36 34.127 M(Pour avoir port\351 Vico et son \253 verum ipsum factum \273 \(La compr\351hension d\351coule de l'exp\351rience\) \340)S
/F8 SF 92.201 759 M(Construire un syst\350me Linux minimum \340 partir du code source)S
0 0 M(13.2. Liens)S
480.884 0 M(9)S
GR
SP
%%Page: 10 10
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0 673.4 M 487.0 2.0 F
0 563.16 M 487.0 2.0 F
0 505.72 M 487.0 2.0 F
0 408.68 M 487.0 2.0 F
11 FS/F4 SF 36 737 M(mon attention.)S
/F6 SF 0 723.8 M(Dennis Scott)S
/F4 SF 36 710.6 M(Pour avoir corrig\351 mon arithm\351tique hexad\351cimale.)S
/F6 SF 0 697.4 M(jdd)S
/F4 SF 36 684.2 M(Pour avoir mis en \351vidence quelques erreurs typographiques.)S
13.2 FS/F9 SF 0 653.6 M(14.5. Historique des changements)S
11 FS/F6 SF 0 626.76 M(0.8 -> 0.9)S
/F4 SF 36 613.56 M(Ajout de la manipulation du fichier )S
/F0 SF (makefile)S
/F4 SF ( de sysvinit. Cette information est due \340 Gerard)S
36 600.36 M(Beekmans, connu pour le \253 Linux From Scratch \273.)S
/F6 SF 0 587.16 M(0.8)S
/F4 SF 36 573.96 M(Version initiale. S\351paration de ce HOWTO du \253 From PowerUp to Bash Prompt \273.)S
13.2 FS/F9 SF 0 543.36 M(14.6. Am\351liorations pr\351vues)S
11 FS/F4 SF 36 516.52 M(Conversion au format DocBook.)S
/Fc SF 28.19 516.52 M(\267 )S
13.2 FS/F9 SF 0 485.92 M(14.7. Adaptation fran\347aise)S
11 FS/F9 SF 0 459.08 M(14.7.1. Traduction)S
/F4 SF 0 432.68 M(La traduction fran\347aise de ce document a \351t\351 r\351alis\351e par Dominique van den Broeck)S
/F0 SF 0 419.48 M(<dvandenbroeck@free.fr>)S
/F4 SF (, d\351cembre 2000 \(v0.9\).)S
/F9 SF 0 391.08 M(14.7.2. Relecture)S
/F4 SF 0 364.68 M(La relecture de ce document a \351t\351 r\351alis\351e par Jean-Philippe Gu\351rard)S
/F0 SF 0 351.48 M(<jean-philippe.guerard@laposte.net>)S
/F4 SF (. Les version pr\351c\351dentes ont \351t\351 relues par Guillaume)S
0 338.28 M(All\350gre et Anthony Boureux.)S
/F8 SF 92.201 759 M(Construire un syst\350me Linux minimum \340 partir du code source)S
0 0 M(14.5. Historique des changements)S
474.768 0 M(10)S
GR
SP
%%Trailer
%%EOF

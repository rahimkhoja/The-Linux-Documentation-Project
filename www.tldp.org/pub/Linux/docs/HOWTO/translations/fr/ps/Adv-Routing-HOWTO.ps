%!PS-Adobe-3.0
%%BoundingBox: 0 0 595 842
%%LanguageLevel: 2
%%Creator: htmldoc 1.8.27 Copyright 1997-2006 Easy Software Products, All Rights Reserved.
%%CreationDate: D:20090308215420-0100
%%Title: HOWTO du routage avancé et du contrôle de trafic sous Linux
%%Generator: Modular DocBook HTML Stylesheet Version 1.79
%%Pages: 118
%%DocumentNeededResources:
%%+ font Courier
%%+ font Courier-Bold
%%+ font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-BoldOblique
%%+ font Symbol
%%DocumentProvidedResources:
%%DocumentData: Clean7bit
%%EndComments
%%BeginProlog
%%BeginResource: procset htmldoc-page 1.8 25
/BD{bind def}bind def/B{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto
closepath stroke}BD/C{setrgbcolor}BD
/CM{concat}BD/DF{findfont dup length dict begin{1 index/FID ne{def}{pop pop}
ifelse}forall/Encoding fontencoding def currentdict end definefont pop}BD
/F{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto closepath fill}BD
/FS{/hdFontSize exch def}BD/G{setgray}BD
/GS{gsave}BD/GR{grestore}BD/J{0 exch ashow}BD
/L{0 rlineto stroke}BD/M{moveto}BD/re{4 2 roll moveto 1 index 0 rlineto 0 exch rlineto neg 0 rlineto closepath}BD
/RO{rotate}BD/S{show}BD/SC{dup scale}BD
/SF{findfont hdFontSize scalefont setfont}BD/SP{showpage}BD/T{translate}BD
%%EndResource
/fontencoding[
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent/ampersand
/quotesingle/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash/zero
/one/two/three/four/five/six/seven/eight/nine/colon/semicolon/less/equal/greater
/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft
/backslash/bracketright/asciicircum/underscore/grave/a/b/c/d/e/f/g/h/i/j/k/l/m/n
/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde/.notdef/circumflex
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/space/exclamdown/cent/sterling/Euro/yen/Scaron/section/scaron/copyright
/ordfeminine/guillemotleft/logicalnot/minus/registered/macron/degree/plusminus
/twosuperior/threesuperior/Zcaron/mu/paragraph/periodcentered/zcaron/onesuperior
/ordmasculine/guillemotright/OE/oe/Ydieresis/questiondown/Agrave/Aacute
/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex
/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute
/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex
/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex
/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/F0/Courier DF
/F1/Courier-Bold DF
/F4/Times-Roman DF
/F5/Times-Bold DF
/F6/Times-Italic DF
/F8/Helvetica DF
/F9/Helvetica-Bold DF
/Fb/Helvetica-BoldOblique DF
/F18/Symbol findfont definefont pop
%%EndProlog
%%Page: (1) 1
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 19 FS/F9 SF 0 728.992 M(HOWTO du routage avanc\351 et du contr\364le de trafic)S
0 706.182 M(sous Linux)S
13.2 FS/F9 SF 0 675.981 M(Bert Hubert)S
11 FS/F4 SF 0 649.141 M(Netherlabs BV)S
/F0 SF 0 622.741 M(<bert.hubert@netherlabs.nl>)S
/F4 SF 0 596.341 M(Thomas Graf \(Auteur d'une section\))S
/F0 SF 0 569.941 M(<tgraf%suug.ch>)S
/F4 SF 0 530.341 M(Gregory Maxwell \(Auteur d'une section\))S
0 517.141 M(Remco van Mook \(Auteur d'une section\))S
/F0 SF 0 490.741 M(<remco@virtu.nl>)S
/F4 SF 0 451.141 M(Martijn van Oosterhout \(Auteur d'une section\))S
/F0 SF 0 424.741 M(<kleptog@cupid.suninternet.com>)S
/F4 SF 0 385.141 M(Paul B. Schroeder \(Auteur d'une section\))S
/F0 SF 0 358.741 M(<paulsch@us.ibm.com>)S
/F4 SF 0 319.141 M(Jasper Spaans \(Auteur d'une section\))S
/F0 SF 0 292.74 M(<jasper@spaans.ds9a.nl>)S
/F4 SF 0 253.14 M(Pedro Larroy \(Auteur d'une section\))S
/F0 SF 0 226.74 M(<piotr%member.fsf.org>)S
13.2 FS/F9 SF 0 171.74 M(Laurent Foucher)S
11 FS/F4 SF 0 144.9 M(Traducteur)S
/F0 SF 0 118.5 M(<foucher@gch.iut-tlse3.fr>)S
/F4 SF 0 92.1 M(Philippe Latu)S
0 65.7 M(Traducteur/Relecteur)S
/F0 SF 0 39.3 M(<philippe.latu@linux-france.org>)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
480.884 0 M(1)S
GR
SP
%%Page: (2) 2
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 594.2 M 487.0 2.0 F
11 FS/F4 SF 0 723.8 M(Guillaume All\350gre)S
0 697.4 M(Relecteur)S
/F0 SF 0 671 M(<Guillaume.Allegre@imag.fr>)S
/F4 SF 0 605 M(Une approche pratique d'iproute2, de la mise en forme du trafic et un peu de netfilter.)S
/F5 SF 0 563.4 M(Table des mati\350res)S
/F4 SF 0 550.2 M(1. D\351dicace)S
0 537 M(2. Introduction)S
36 523.8 M(Conditions de distribution et Mise en garde)S
36 510.6 M(Connaissances pr\351alables)S
36 497.4 M(Ce que Linux peut faire pour vous)S
36 484.2 M(Notes diverses)S
36 471 M(Acc\350s, CVS et propositions de mises \340 jour)S
36 457.8 M(Liste de diffusion)S
36 444.6 M(Plan du document)S
0 431.4 M(3. Introduction \340 iproute2)S
36 418.2 M(Pourquoi iproute2 ?)S
36 405 M(Un tour d'horizon d'iproute2)S
36 391.8 M(Pr\351requis)S
36 378.6 M(Explorer votre configuration courante)S
/F5 SF 72 365.4 M(ip)S
/F4 SF ( nous montre nos liens)S
/F5 SF 72 352.2 M(ip)S
/F4 SF ( nous montre nos adresses IP)S
/F5 SF 72 339 M(ip)S
/F4 SF ( nous montre nos routes)S
36 325.8 M(ARP)S
0 312.6 M(4. R\350gles - bases de donn\351es des politiques de routage)S
36 299.4 M(Politique de routage simple par l'adresse source)S
36 286.2 M(Routage avec plusieurs acc\350s Internet/fournisseurs d'acc\350s)S
72 273 M(Acc\350s s\351par\351)S
72 259.8 M(Balance de charge)S
0 246.6 M(5. GRE et autres tunnels)S
36 233.4 M(Quelques remarques g\351n\351rales \340 propos des tunnels :)S
36 220.2 M(IP dans un tunnel IP)S
36 207 M(Le tunnel GRE)S
72 193.8 M(Le tunnel IPv4)S
72 180.6 M(Le tunnel IPv6)S
36 167.4 M(Tunnels dans l'espace utilisateur)S
0 154.2 M(6. Tunnel IPv6 avec Cisco et/ou une dorsale IPv6 \(6bone\))S
36 141 M(Tunnel IPv6)S
0 127.8 M(7. IPSEC: IP s\351curis\351 \340 travers Internet)S
36 114.6 M(Introduction sur la gestion manuelle des cl\351s)S
36 101.4 M(Gestion automatique des cl\351s)S
72 88.2 M(Th\351orie)S
72 75 M(Exemple)S
72 61.8 M(Gestion automatique des cl\351s en utilisant les certificats X.509)S
36 48.6 M(tunnels IPSEC)S
36 35.4 M(Autre logiciel IPSEC)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(2)S
406.293 0 M(Laurent Foucher)S
GR
SP
%%Page: (3) 3
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 11 FS/F4 SF 36 737 M(Interop\351rabilit\351 d'IPSEC avec d'autres syst\350mes)S
72 723.8 M(Windows)S
72 710.6 M(Check Point VPN-1 NG)S
0 697.4 M(8. Routage multidistribution \()S
/F6 SF (multicast)S
/F4 SF (\))S
0 684.2 M(9. Gestionnaires de mise en file d'attente pour l'administration de la bande passante)S
36 671 M(Explication sur les files d'attente et la gestion de la mise en file d'attente)S
36 657.8 M(Gestionnaires de mise en file d'attente simples, sans classes)S
/F0 SF 72 644.6 M(pfifo&lowbar;fast)S
/F4 SF 72 631.4 M(Filtre \340 seau de jetons \()S
/F6 SF (Token Bucket Filter)S
/F4 SF (\))S
72 618.2 M(Mise en file d'attente stochastiquement \351quitable \()S
/F6 SF (Stochastic Fairness Queueing)S
/F4 SF (\))S
36 605 M(Conseils pour le choix de la file d'attente)S
36 591.8 M(terminologie)S
36 578.6 M(Gestionnaires de file d'attente bas\351s sur les classes)S
72 565.4 M(Flux \340 l'int\351rieur des gestionnaires bas\351s sur des classes & \340 l'int\351rieur des classes)S
72 552.2 M(La famille des gestionnaires de mise en file d'attente : racines, descripteurs, descendances et)S
72 539 M(parents)S
72 525.8 M(Le gestionnaire de mise en file d'attente PRIO)S
72 512.6 M(Le c\351l\350bre gestionnaire de mise en file d'attente CBQ)S
72 499.4 M(Seau de jetons \340 contr\364le hi\351rarchique \()S
/F6 SF (Hierarchical Token Bucket)S
/F4 SF (\))S
36 486.2 M(Classifier des paquets avec des filtres)S
72 473 M(Quelques exemples simples de filtrage)S
72 459.8 M(Toutes les commandes de filtres dont vous aurez normalement besoin)S
36 446.6 M(Le p\351riph\351rique de file d'attente interm\351diaire \(The Intermediate queueing device \(IMQ\)\))S
72 433.4 M(Configuration simple)S
0 420.2 M(10. \311quilibrage de charge sur plusieurs interfaces)S
36 407 M(Avertissement)S
0 393.8 M(11. Netfilter et iproute - marquage de paquets)S
0 380.6 M(12. Filtres avanc\351s pour la \(re-\)classification des paquets)S
36 367.4 M(Le classificateur )S
/F0 SF (u32)S
/F4 SF 72 354.2 M(Le s\351lecteur U32)S
72 341 M(S\351lecteurs g\351n\351raux)S
72 327.8 M(Les s\351lecteurs sp\351cifiques)S
36 314.6 M(Le classificateur )S
/F0 SF (route)S
/F4 SF 36 301.4 M(Les filtres de r\351glementation \()S
/F6 SF (Policing filters)S
/F4 SF (\))S
72 288.2 M(Techniques de r\351glementation)S
72 275 M(Actions de d\351passement de limite \()S
/F6 SF (Overlimit actions)S
/F4 SF (\))S
72 261.8 M(Exemples)S
36 248.6 M(Filtres hach\351s pour un filtrage massif tr\350s rapide)S
36 235.4 M(Filtrer le trafic IPv6)S
72 222.2 M(Comment se fait-il que ces filtres tc IPv6 ne fonctionnent pas ?)S
72 209 M(Marquer les paquets IPv6 en utilisant ip6tables)S
72 195.8 M(Utiliser le s\351lecteur u32 pour rep\351rer le paquet IPv6)S
0 182.6 M(13. Param\350tres r\351seau du noyau)S
36 169.4 M(Filtrage de Chemin Inverse \()S
/F6 SF (Reverse Path Filtering)S
/F4 SF (\))S
36 156.2 M(Configurations obscures)S
72 143 M(ipv4 g\351n\351rique)S
72 129.8 M(Configuration des p\351riph\351riques)S
72 116.6 M(Politique de voisinage)S
72 103.4 M(Configuration du routage)S
0 90.2 M(14. Gestionnaires de mise en file d'attente avanc\351s & moins communs)S
/F0 SF 36 77 M(bfifo)S
/F4 SF (/)S
/F0 SF (pfifo)S
/F4 SF 72 63.8 M(Param\350tres & usage)S
36 50.6 M(Algorithme Clark-Shenker-Zhang \(CSZ\))S
/F0 SF 36 37.4 M(DSMARK)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Laurent Foucher)S
480.884 0 M(3)S
GR
SP
%%Page: (4) 4
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 53 M 487.0 2.0 F
11 FS/F4 SF 72 737 M(Introduction)S
72 723.8 M(A quoi )S
/F0 SF (DSMARK)S
/F4 SF ( est-il reli\351 ?)S
72 710.6 M(Guide des services diff\351renci\351s)S
72 697.4 M(Travailler avec )S
/F0 SF (DSMARK)S
/F4 SF 72 684.2 M(Comment )S
/F0 SF (SCH&lowbar;DSMARK)S
/F4 SF ( travaille.)S
72 671 M(Le filtre TC&lowbar;INDEX)S
36 657.8 M(Gestionnaire de mise en file d'attente d'entr\351e \()S
/F6 SF (Ingress qdisc)S
/F4 SF (\))S
72 644.6 M(Param\350tres & usage)S
/F6 SF 36 631.4 M(Random Early Detection)S
/F4 SF ( \(RED\))S
36 618.2 M(Generic Random Early Detection)S
36 605 M(Emulation VC/ATM)S
36 591.8 M(Weighted Round Robin \(WRR\))S
0 578.6 M(15. Recettes de cuisine)S
36 565.4 M(Faire tourner plusieurs sites avec diff\351rentes SLA \(autorisations\))S
36 552.2 M(Prot\351ger votre machine des inondations SYN)S
36 539 M(Limiter le d\351bit ICMP pour emp\352cher les d\351nis de service)S
36 525.8 M(Donner la priorit\351 au trafic interactif)S
36 512.6 M(Cache web transparent utilisant netfilter, iproute2, ipchains et squid)S
72 499.4 M(Sch\351ma du trafic apr\350s l'impl\351mentation)S
36 486.2 M(Circonvenir aux probl\350mes de la d\351couverte du MTU de chemin en configurant un MTU par routes)S
72 473 M(Solution)S
36 459.8 M(Circonvenir aux probl\350mes de la d\351couverte du MTU de chemin en imposant le MSS \(pour les)S
36 446.6 M(utilisateurs de l'ADSL, du c\342ble, de PPPoE & PPtP\))S
36 433.4 M(Le Conditionneur de Trafic Ultime : Faible temps de latence, T\351l\351chargement vers l'amont et l'aval)S
36 420.2 M(rapide)S
72 407 M(Pourquoi cela ne marche t-il pas bien par d\351faut ?)S
72 393.8 M(Le script \(CBQ\))S
72 380.6 M(Le script \(HTB\))S
36 367.4 M(Limitation du d\351bit pour un h\364te ou un masque de sous-r\351seau)S
36 354.2 M(Exemple d'une solution de translation d'adresse avec de la QoS)S
72 341 M(Commen\347ons l'optimisation de cette rare bande passante)S
72 327.8 M(Classification des paquets)S
72 314.6 M(Am\351liorer notre configuration)S
72 301.4 M(Rendre tout ceci actif au d\351marrage)S
0 288.2 M(16. Construire des ponts et des pseudo ponts avec du Proxy ARP)S
36 275 M(Etat des ponts et iptables)S
36 261.8 M(Pont et mise en forme)S
36 248.6 M(Pseudo-pont avec du Proxy-ARP)S
72 235.4 M(ARP & Proxy-ARP)S
72 222.2 M(Impl\351mentez-le)S
0 209 M(17. Routage Dynamique - OSPF et BGP)S
36 195.8 M(Configurer OSPF avec Zebra)S
72 182.6 M(Pr\351requis)S
72 169.4 M(Configurer Zebra)S
72 156.2 M(Ex\351cuter Zebra)S
36 143 M(Configurer BGP4 avec Zebra)S
72 129.8 M(sch\351ma r\351seau \(Exemple\))S
72 116.6 M(Configuration \(Exemple\))S
72 103.4 M(V\351rification de la configuration)S
0 90.2 M(18. Autres possibilit\351s)S
0 77 M(19. Lectures suppl\351mentaires)S
0 63.8 M(20. Remerciements)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(4)S
406.293 0 M(Laurent Foucher)S
GR
SP
%%Page: (5) 5
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 610.99 M 487.0 2.0 F
0 348.581 M 487.0 2.0 F
0 89.972 M 487.0 2.0 F
19 FS/F9 SF 0 728.992 M(Chapitre 1. D\351dicace)S
11 FS/F4 SF 0 700.99 M(Ce document est d\351di\351 \340 beaucoup de gens ; dans ma tentative de tous me les rappeler, je peux en citer)S
0 687.79 M(quelques-uns :)S
36 661.39 M(Rusty Russell)S
/F18 SF 28.19 661.39 M(\267 )S
/F4 SF 36 648.19 M(Alexey N. Kuznetsov)S
/F18 SF 28.19 648.19 M(\267 )S
/F4 SF 36 634.99 M(La fine \351quipe de Google)S
/F18 SF 28.19 634.99 M(\267 )S
/F4 SF 36 621.79 M(L'\351quipe de Casema Internet)S
/F18 SF 28.19 621.79 M(\267 )S
19 FS/F9 SF 0 585.382 M(Chapitre 2. Introduction)S
11 FS/F4 SF 0 557.381 M(Bienvenue, cher lecteur.)S
0 530.981 M(Ce document a pour but de vous \351clairer sur la mani\350re de faire du routage avanc\351 avec Linux 2.2/2.4.)S
0 517.781 M(M\351connus par les utilisateurs, les outils standard de ces noyaux permettent de faire des choses spectaculaires.)S
0 504.581 M(Les commandes comme)S
/F5 SF ( route)S
/F4 SF ( et)S
/F5 SF ( ifconfig)S
/F4 SF ( sont des interfaces vraiment pauvres par rapport \340 la grande)S
0 491.381 M(puissance potentielle d'iproute2.)S
0 464.981 M(J'esp\350re que ce HOWTO deviendra aussi lisible que ceux de Rusty Russell, tr\350s r\351put\351 \(parmi d'autres choses\))S
0 451.781 M(pour son netfilter.)S
0 425.381 M(Vous pouvez nous contacter en nous \351crivant \340 l'\351quipe HOWTO. Cependant, postez, s'il vous pla\356t, vos)S
0 412.181 M(questions sur la liste de diffusion \(voir la section correspondante\) pour celles qui ne sont pas directement li\351es)S
0 398.981 M(\340 ce HOWTO.)S
0 372.581 M(Avant de vous perdre dans ce HOWTO, si la seule chose que vous souhaitez faire est de la simple mise en)S
0 359.381 M(forme de trafic, allez directement au chapitre)S
/F6 SF ( Autres possibilit\351s>)S
/F4 SF (, et lisez ce qui concerne CBQ.init.)S
15.8 FS/F9 SF 0 326.141 M(Conditions de distribution et Mise en garde)S
11 FS/F4 SF 0 298.773 M(Ce document est distribu\351 dans l'espoir qu'il sera utile et utilis\351, mais SANS AUCUNE GARANTIE ; sans)S
0 285.573 M(m\352me une garantie implicite de qualit\351 l\351gale et marchande ni aptitude \340 un quelconque usage.)S
0 259.172 M(En un mot, si votre dorsale STM-64 est tomb\351e ou distribue de la pornographie \340 vos estim\351s clients, cela)S
0 245.972 M(n'est pas de notre faute. D\351sol\351.)S
0 219.572 M(Copyright \(c\) 2001 par Bert Hubert, Gregory Maxwell et Martijn van Oosterhout, Remco van Mook, Paul B.)S
0 206.372 M(Schroeder et autres. Ce document ne peut \352tre distribu\351 qu'en respectant les termes et les conditions expos\351s)S
0 193.172 M(dans la Open Publication License, v1.0 ou sup\351rieure \(la derni\350re version est actuellement disponible sur)S
0 179.972 M(http://www.opencontent.org/openpub/\).)S
0 153.572 M(Copiez et distribuez \(vendez ou donnez\) librement ce document, dans n'importe quel format. Les demandes de)S
0 140.372 M(corrections et/ou de commentaires sont \340 adresser \340 la personne qui maintient ce document.)S
0 113.973 M(Il est aussi demand\351 que, si vous publiez cet HOWTO sur un support papier, vous en envoyiez des)S
0 100.772 M(exemplaires aux auteurs pour une << relecture critique >> :-\))S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Chapitre 2. Introduction)S
480.884 0 M(5)S
GR
SP
%%Page: (6) 6
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 561.992 M 487.0 2.0 F
0 303.384 M 487.0 2.0 F
0 31.576 M 487.0 2.0 F
15.8 FS/F9 SF 0 732.16 M(Connaissances pr\351alables)S
11 FS/F4 SF 0 704.792 M(Comme le titre l'implique, ceci est un HOWTO << avanc\351 >>. Bien qu'il ne soit pas besoin d'\352tre un expert)S
0 691.592 M(r\351seau, certains pr\351-requis sont n\351cessaires.)S
0 665.192 M(Voici d'autres r\351f\351rences qui pourront vous aider \340 en apprendre plus :)S
0 638.792 M(Rusty Russell's networking-concepts-HOWTO)S
36 625.592 M(Tr\350s bonne introduction, expliquant ce qu'est un r\351seau, et comment on le connecte \340 d'autres r\351seaux.)S
0 612.392 M(Linux Networking-HOWTO \(ex Net-3 HOWTO\))S
36 599.192 M(Excellent document, bien que tr\350s bavard. Il vous apprendra beaucoup de choses qui sont d\351j\340)S
36 585.992 M(configur\351es si vous \352tes capable de vous connecter \340 Internet. Il peut \351ventuellement \352tre situ\351 \340)S
/F0 SF 36 572.792 M(/usr/doc/HOWTO/NET-HOWTO.txt)S
/F4 SF (, mais peut \351galement \352tre trouv\351 en ligne)S
15.8 FS/F9 SF 0 539.552 M(Ce que Linux peut faire pour vous)S
11 FS/F4 SF 0 512.184 M(Une petite liste des choses qui sont possibles :)S
36 485.784 M(Limiter la bande passante pour certains ordinateurs)S
/F18 SF 28.19 485.784 M(\267 )S
/F4 SF 36 472.584 M(Limiter la bande passante VERS certains ordinateurs)S
/F18 SF 28.19 472.584 M(\267 )S
/F4 SF 36 459.384 M(Vous aider \340 partager \351quitablement votre bande passante)S
/F18 SF 28.19 459.384 M(\267 )S
/F4 SF 36 446.184 M(Prot\351ger votre r\351seau des attaques de type D\351ni de Service)S
/F18 SF 28.19 446.184 M(\267 )S
/F4 SF 36 432.984 M(Prot\351ger Internet de vos clients)S
/F18 SF 28.19 432.984 M(\267 )S
/F4 SF 36 419.784 M(Multiplexer plusieurs serveurs en un seul, pour l'\351quilibrage de charge ou une disponibilit\351 am\351lior\351e)S
/F18 SF 28.19 419.784 M(\267 )S
/F4 SF 36 406.584 M(Restreindre l'acc\350s \340 vos ordinateurs)S
/F18 SF 28.19 406.584 M(\267 )S
/F4 SF 36 393.384 M(Limiter l'acc\350s de vos utilisateurs vers d'autres h\364tes)S
/F18 SF 28.19 393.384 M(\267 )S
/F4 SF 36 380.184 M(Faire du routage bas\351 sur l'ID utilisateur \(eh oui !\), l'adresse MAC, l'adresse IP source, le port, le type)S
36 366.984 M(de service, l'heure ou le contenu.)S
/F18 SF 28.19 380.184 M(\267 )S
/F4 SF 0 340.584 M(Peu de personnes utilisent couramment ces fonctionnalit\351s avanc\351es. Il y a plusieurs raisons \340 cela. Bien que)S
0 327.384 M(la documentation soit fournie, la prise en main est difficile. Les commandes de contr\364le du trafic ne sont)S
0 314.184 M(pratiquement pas document\351es.)S
15.8 FS/F9 SF 0 280.944 M(Notes diverses)S
11 FS/F4 SF 0 253.576 M(Il y a plusieurs choses qui doivent \352tre not\351es au sujet de ce document. Bien que j'en ai \351crit la majeure partie,)S
0 240.376 M(je ne veux vraiment pas qu'il reste tel quel. Je crois beaucoup \340 l'Open Source, je vous encourage donc \340)S
0 227.176 M(envoyer des remarques, des mises \340 jour, des corrections, etc. N'h\351sitez pas \340 m'avertir des coquilles ou)S
0 213.976 M(d'erreurs pures et simples. Si mon anglais vous para\356t parfois peu naturel, ayez en t\352te, s'il vous pla\356t, que)S
0 200.776 M(l'anglais n'est pas ma langue natale. N'h\351sitez pas \340 m'envoyer vos suggestions &lsqb;NdT : en anglais !])S
0 174.376 M(Si vous pensez que vous \352tes plus qualifi\351 que moi pour maintenir une section ou si vous pensez que vous)S
0 161.176 M(pouvez \351crire et maintenir de nouvelles sections, vous \352tes le bienvenu. La version SGML de ce HOWTO est)S
0 147.976 M(disponible via CVS. J'envisage que d'autres personnes puissent travailler dessus.)S
0 121.576 M(Pour vous aider, vous trouverez beaucoup de mentions FIXME \(NdT : A CORRIGER\). Les corrections sont)S
0 108.376 M(toujours les bienvenues. Si vous trouvez une mention FIXME, vous saurez que vous \352tes en territoire inconnu.)S
0 95.176 M(Cela ne veut pas dire qu'il n'y a pas d'erreurs ailleurs, faites donc tr\350s attention. Si vous avez valid\351 quelque)S
0 81.976 M(chose, faites-nous le savoir, ce qui nous permettra de retirer la mention FIXME.)S
0 55.576 M(Je prendrai quelques libert\351s tout au long de cet HOWTO. Par exemple, je pars de l'hypoth\350se d'une)S
0 42.376 M(connexion Internet \340 10 Mbits, bien que je sache tr\350s bien que cela ne soit pas vraiment courant.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(6)S
358.003 0 M(Connaissances pr\351alables)S
GR
SP
%%Page: (7) 7
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 377.192 M 487.0 2.0 F
0 237.384 M 487.0 2.0 F
0 57.976 M 487.0 2.0 F
15.8 FS/F9 SF 0 732.16 M(Acc\350s, CVS et propositions de mises \340 jour)S
11 FS/F4 SF 0 704.792 M(L'adresse canonique de cet HOWTO est Ici.)S
0 678.392 M(Nous avons maintenant un CVS en acc\350s anonyme disponible depuis le monde entier. Cela est int\351ressant)S
0 665.192 M(pour plusieurs raisons. Vous pouvez facilement t\351l\351charger les nouvelles versions de ce HOWTO et soumettre)S
0 651.992 M(des mises \340 jour.)S
0 625.592 M(En outre, cela permet aux auteurs de travailler sur la source de fa\347on ind\351pendante, ce qui est une bonne chose)S
0 612.392 M(aussi.)S
9.2 FS/F0 SF 0 587.825 M($ export CVSROOT=:pserver:anon@outpost.ds9a.nl:/var/cvsroot)S
0 576.825 M($ cvs login)S
0 565.825 M(CVS password: [enter 'cvs' \(sans les caract\350res '\)])S
0 554.825 M($ cvs co 2.4routing)S
0 543.825 M(cvs server: Updating 2.4routing)S
0 532.825 M(U 2.4routing/lartc.db)S
11 FS/F4 SF 0 506.792 M(Si vous avez fait des changements et que vous vouliez contribuer au HOWTO, ex\351cutez )S
/F1 SF (cvs -z3 diff)S
0 493.592 M(-uBb)S
/F4 SF (, et envoyez-nous le r\351sultat par courrier \351lectronique de fa\347on \340 pouvoir facilement int\351grer les)S
0 480.392 M(modifications. Merci ! Au fait, soyez s\373r que vous avez \351dit\351 le fichier .db, les autres documents \351tant g\351n\351r\351s)S
0 467.192 M(\340 partir de celui-ci.)S
0 440.792 M(Un fichier Makefile est fourni pour vous aider \340 cr\351er des fichiers PostScript, dvi, pdf, html et texte. Vous)S
0 427.592 M(pouvez avoir \340 installer les docbook, docbook-utils, ghostscript et tetex pour obtenir tous les formats de sortie.)S
0 401.192 M(Faites attention de ne pas \351diter le fichier 2.4routing.sgml ! Il contient une ancienne version du HOWTO. Le)S
0 387.992 M(bon fichier est lartc.db.)S
15.8 FS/F9 SF 0 354.752 M(Liste de diffusion)S
11 FS/F4 SF 0 327.384 M(Les auteurs re\347oivent de plus en plus de courriers \351lectroniques \340 propos de cet HOWTO. Vu l'int\351r\352t de la)S
0 314.184 M(communaut\351, il a \351t\351 d\351cid\351 la mise en place d'une liste de diffusion o\371 les personnes pourront discuter du)S
0 300.984 M(routage avanc\351 et du contr\364le de trafic. Vous pouvez vous abonner \340 la liste ici.)S
0 274.584 M(Il devra \352tre not\351 que les auteurs sont tr\350s h\351sitants \340 r\351pondre \340 des questions qui n'ont pas \351t\351 pos\351es sur la)S
0 261.384 M(liste. Nous aimerions que la liste devienne une sorte de base de connaissance. Si vous avez une question,)S
0 248.184 M(recherchez, s'il vous pla\356t, d'abord dans l'archive, et ensuite postez-l\340 dans la liste de diffusion.)S
15.8 FS/F9 SF 0 214.944 M(Plan du document)S
11 FS/F4 SF 0 187.576 M(Nous allons essayer de faire des manipulations int\351ressantes d\350s le d\351but, ce qui veut dire que tout ne sera pas)S
0 174.376 M(expliqu\351 en d\351tail tout de suite. Veuillez passer sur ces d\351tails, et accepter de consid\351rer qu'ils deviendront)S
0 161.176 M(clairs par la suite.)S
0 134.776 M(Le routage et le filtrage sont deux choses distinctes. Le filtrage est tr\350s bien document\351 dans le HOWTO de)S
0 121.576 M(Rusty, disponible ici :)S
36 95.176 M(Rusty's Remarkably Unreliable Guides)S
/F18 SF 28.19 95.176 M(\267 )S
/F4 SF 0 68.776 M(Nous nous focaliserons principalement sur ce qu'il est possible de faire en combinant netfilter et iproute2.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Acc\350s, CVS et propositions de mises \340 jour)S
480.884 0 M(7)S
GR
SP
%%Page: (8) 8
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 407.182 M 487.0 2.0 F
0 293.774 M 487.0 2.0 F
0 61.566 M 487.0 2.0 F
19 FS/F9 SF 0 728.992 M(Chapitre 3. Introduction \340 iproute2)S
15.8 FS/F9 SF 0 696.15 M(Pourquoi iproute2 ?)S
11 FS/F4 SF 0 668.782 M(La plupart des distributions Linux et des UNIX utilisent couramment les v\351n\351rables commandes)S
/F5 SF ( arp)S
/F4 SF (,)S
/F5 SF ( ifconfig)S
/F4 SF 0 655.582 M(et)S
/F5 SF ( route)S
/F4 SF (. Bien que ces outils fonctionnent, ils montrent quelques comportements inattendus avec les noyaux)S
0 642.382 M(Linux des s\351ries 2.2 et plus. Par exemple, les tunnels GRE font partie int\351grante du routage de nos jours, mais)S
0 629.182 M(ils n\351cessitent des outils compl\350tement diff\351rents.)S
0 602.782 M(Avec iproute2, les tunnels font partie int\351grante des outils.)S
0 576.382 M(Les noyaux Linux des s\351ries 2.2 et plus ont un sous-syst\350me r\351seau compl\350tement r\351\351crit. Ce nouveau codage)S
0 563.182 M(de la partie r\351seau apporte \340 Linux des performances et des fonctionnalit\351s qui n'ont pratiquement pas)S
0 549.982 M(d'\351quivalent parmi les autres syst\350mes d'exploitation. En fait, le nouveau logiciel de filtrage, routage et de)S
0 536.782 M(classification poss\350de plus de fonctionnalit\351s que les logiciels fournis sur beaucoup de routeurs d\351di\351s, de)S
0 523.582 M(pare-feu et de produits de mise en forme \()S
/F6 SF (shaping)S
/F4 SF (\) du trafic.)S
0 497.182 M(Dans les syst\350mes d'exploitation existants, au fur et \340 mesure que de nouveaux concepts r\351seau apparaissaient,)S
0 483.982 M(les d\351veloppeurs sont parvenus \340 les greffer sur les structures existantes. Ce travail constant d'empilage de)S
0 470.782 M(couches a conduit \340 des codes r\351seau aux comportements \351tranges, un peu comme les langues humaines. Dans)S
0 457.582 M(le pass\351, Linux \351mulait le mode de fonctionnement de SunOS, ce qui n'\351tait pas l'id\351al.)S
0 431.182 M(La nouvelle structure d'iproute2 a permis de formuler clairement des fonctionnalit\351s impossibles \340)S
0 417.982 M(impl\351menter dans le sous-syst\350me r\351seau pr\351c\351dent.)S
15.8 FS/F9 SF 0 384.742 M(Un tour d'horizon d'iproute2)S
11 FS/F4 SF 0 357.374 M(Linux poss\350de un syst\350me sophistiqu\351 d'allocation de bande passante appel\351 Contr\364le de trafic \()S
/F6 SF (Traffic)S
0 344.174 M(Control)S
/F4 SF (\). Ce syst\350me supporte diff\351rentes m\351thodes pour classer, ranger par ordre de priorit\351, partager et)S
0 330.974 M(limiter le trafic entrant et sortant.)S
0 304.574 M(Nous commencerons par un petit tour d'horizon des possibilit\351s d'iproute2.)S
15.8 FS/F9 SF 0 271.334 M(Pr\351requis)S
11 FS/F4 SF 0 243.966 M(Vous devez \352tre s\373r que vous avez install\351 les outils utilisateur \(NdT : userland tools, par opposition \340 la partie)S
0 230.766 M(<< noyau >> d'iproute2\). Le paquet concern\351 s'appelle iproute sur RedHat et Debian. Autrement, il peut \352tre)S
0 217.566 M(trouv\351 \340 )S
/F0 SF (ftp://ftp.inr.ac.ru/ip-routing/iproute2-2.2.4-now-ss??????.tar.gz)S
/F4 SF (.)S
0 191.166 M(Vous pouvez aussi essayer iproute2-current.tar.gz pour la derni\350re version.)S
0 164.766 M(Certains \351l\351ments d'iproute vous imposent l'activation de certaines options du noyau. Il devra \351galement \352tre)S
0 151.566 M(not\351 que toutes les versions de RedHat jusqu'\340 la version 6.2 incluse n'ont pas les fonctionnalit\351s du contr\364le)S
0 138.366 M(de trafic activ\351es dans le noyau fourni par d\351faut.)S
0 111.966 M(RedHat 7.2 contient tous les \351l\351ments par d\351faut.)S
0 85.566 M(Soyez \351galement s\373r que vous avez le support )S
/F0 SF (netlink)S
/F4 SF (, m\352me si vous devez choisir de compiler votre)S
0 72.366 M(propre noyau ; iproute2 en a besoin.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(8)S
320.691 0 M(Chapitre 3. Introduction \340 iproute2)S
GR
SP
%%Page: (9) 9
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 641.192 M 487.0 2.0 F
0 251.552 M 487.0 2.0 F
15.8 FS/F9 SF 0 732.16 M(Explorer votre configuration courante)S
11 FS/F4 SF 0 704.792 M(Cela peut vous para\356tre surprenant, mais iproute2 est d\351j\340 configur\351 ! Les commandes courantes)S
/F5 SF ( ifconfig)S
/F4 SF ( et)S
/F5 SF 0 691.592 M(route)S
/F4 SF ( utilisent d\351j\340 les appels syst\350me avanc\351s d'iproute2, mais essentiellement avec les options par d\351faut)S
0 678.392 M(\(c'est-\340-dire ennuyeuses\).)S
0 651.992 M(L'outil)S
/F5 SF ( ip)S
/F4 SF ( est central, et nous allons lui demander de nous montrer les interfaces.)S
13.2 FS/F9 SF 0 621.392 M(ip nous montre nos liens)S
9.2 FS/F0 SF 0 596.385 M([ahu@home ahu]$ ip link list)S
0 585.385 M(1: lo: <LOOPBACK,UP> mtu 3924 qdisc noqueue )S
0 574.385 M(    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00)S
0 563.385 M(2: dummy: <BROADCAST,NOARP> mtu 1500 qdisc noop )S
0 552.385 M(    link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff)S
0 541.385 M(3: eth0: <BROADCAST,MULTICAST,PROMISC,UP> mtu 1400 qdisc pfifo_fast qlen 100)S
0 530.385 M(    link/ether 48:54:e8:2a:47:16 brd ff:ff:ff:ff:ff:ff)S
0 519.385 M(4: eth1: <BROADCAST,MULTICAST,PROMISC,UP> mtu 1500 qdisc pfifo_fast qlen 100)S
0 508.385 M(    link/ether 00:e0:4c:39:24:78 brd ff:ff:ff:ff:ff:ff)S
0 497.385 M(3764: ppp0: <POINTOPOINT,MULTICAST,NOARP,UP> mtu 1492 qdisc pfifo_fast qlen 10)S
0 486.385 M(    link/ppp )S
11 FS/F4 SF 0 460.352 M(La sortie peut varier, mais voici ce qui est affich\351 pour mon routeur NAT \(NdT : translation d'adresse\) chez)S
0 447.152 M(moi. J'expliquerai seulement une partie de la sortie, dans la mesure o\371 tout n'est pas directement pertinent.)S
0 420.752 M(La premi\350re interface que nous voyons est l'interface )S
/F0 SF (loopback)S
/F4 SF (. Bien que votre ordinateur puisse)S
0 407.552 M(fonctionner sans, je vous le d\351conseille. La taille de MTU \(unit\351 maximum de transmission\) est de 3924)S
0 394.352 M(octets, et )S
/F0 SF (loopback)S
/F4 SF ( n'est pas suppos\351 \352tre mis en file d'attente, ce qui prend tout son sens dans la mesure o\371)S
0 381.152 M(cette interface est le fruit de l'imagination de votre noyau.)S
0 354.752 M(Je vais passer sur l'interface )S
/F0 SF (dummy)S
/F4 SF ( pour l'instant, et il se peut qu'elle ne soit pas pr\351sente sur votre ordinateur.)S
0 341.552 M(Il y a ensuite mes deux interfaces physiques, l'une du c\364t\351 de mon modem c\342ble, l'autre servant mon segment)S
0 328.352 M(ethernet \340 la maison. De plus, nous voyons une interface )S
/F0 SF (ppp0)S
/F4 SF (.)S
0 301.952 M(Notons l'absence d'adresses IP. Iproute d\351connecte les concepts de << liens >> et << d'adresses IP >>. Avec)S
0 288.752 M(l')S
/F6 SF (IP aliasing)S
/F4 SF (, le concept de l'adresse IP canonique est devenu, de toute fa\347on, sans signification.)S
/F5 SF 0 262.352 M(ip)S
/F4 SF ( nous montre bien, cependant, l'adresse MAC, l'identifiant mat\351riel de nos interfaces ethernet.)S
13.2 FS/F9 SF 0 231.752 M(ip nous montre nos adresses IP)S
9.2 FS/F0 SF 0 206.745 M([ahu@home ahu]$ ip address show        )S
0 195.745 M(1: lo: <LOOPBACK,UP> mtu 3924 qdisc noqueue )S
0 184.745 M(    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00)S
0 173.745 M(    inet 127.0.0.1/8 brd 127.255.255.255 scope host lo)S
0 162.745 M(2: dummy: <BROADCAST,NOARP> mtu 1500 qdisc noop )S
0 151.745 M(    link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff)S
0 140.745 M(3: eth0: <BROADCAST,MULTICAST,PROMISC,UP> mtu 1400 qdisc pfifo_fast qlen 100)S
0 129.745 M(    link/ether 48:54:e8:2a:47:16 brd ff:ff:ff:ff:ff:ff)S
0 118.745 M(    inet 10.0.0.1/8 brd 10.255.255.255 scope global eth0)S
0 107.745 M(4: eth1: <BROADCAST,MULTICAST,PROMISC,UP> mtu 1500 qdisc pfifo_fast qlen 100)S
0 96.745 M(    link/ether 00:e0:4c:39:24:78 brd ff:ff:ff:ff:ff:ff)S
0 85.745 M(3764: ppp0: <POINTOPOINT,MULTICAST,NOARP,UP> mtu 1492 qdisc pfifo_fast qlen 10)S
0 74.745 M(    link/ppp )S
0 63.745 M(    inet 212.64.94.251 peer 212.64.94.1/32 scope global ppp0)S
11 FS/F4 SF 0 37.712 M(Cela contient plus d'informations :)S
/F5 SF ( ip)S
/F4 SF ( montre toutes nos adresses, et \340 quelles cartes elles appartiennent. )S
/F0 SF (inet)S
/F4 SF 0 24.512 M(signifie Internet \(IPv4\). Il y a beaucoup d'autres familles d'adresses, mais elles ne nous concernent pas pour le)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Explorer votre configuration courante)S
480.884 0 M(9)S
GR
SP
%%Page: (10) 10
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 462.2 M 487.0 2.0 F
0 90.16 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(moment.)S
0 710.6 M(Examinons l'interface )S
/F0 SF (eth0)S
/F4 SF ( de plus pr\350s. Il est dit qu'elle est reli\351e \340 l'adresse internet )S
/F0 SF (10.0.0.1/8)S
/F4 SF (.)S
0 697.4 M(Qu'est-ce que cela signifie ? Le /8 d\351signe le nombre de bits r\351serv\351s \340 l'adresse r\351seau. Il y a 32 bits, donc il)S
0 684.2 M(reste 24 bits pour d\351signer une partie de notre r\351seau. Les 8 premiers bits de )S
/F0 SF (10.0.0.1)S
/F4 SF ( correspondent \340)S
/F0 SF 0 671 M(10.0.0.0)S
/F4 SF (, notre adresse r\351seau, et notre masque de sous-r\351seau est )S
/F0 SF (255.0.0.0)S
/F4 SF (.)S
0 644.6 M(Les autres bits rep\350rent des machines directement connect\351es \340 cette interface. Donc, )S
/F0 SF (10.250.3.13)S
/F4 SF ( est)S
0 631.4 M(directement disponible sur )S
/F0 SF (eth0)S
/F4 SF (, comme l'est )S
/F0 SF (10.0.0.1)S
/F4 SF ( dans notre exemple.)S
0 605 M(Avec )S
/F0 SF (ppp0)S
/F4 SF (, le m\352me concept existe, bien que les nombres soient diff\351rents. Son adresse est)S
/F0 SF 0 591.8 M(212.64.94.251)S
/F4 SF (, sans masque de sous-r\351seau. Cela signifie que vous avez une liaison point \340 point et que)S
0 578.6 M(toutes les adresses, \340 l'exception de )S
/F0 SF (212.64.94.251)S
/F4 SF (, sont distantes. Il y a cependant plus d'informations.)S
0 565.4 M(En effet, on nous dit que de l'autre c\364t\351 du lien, il n'y a encore qu'une seule adresse, )S
/F0 SF (212.64.94.1)S
/F4 SF (. Le /32)S
0 552.2 M(nous pr\351cise qu'il n'y a pas de << bits r\351seau >>.)S
0 525.8 M(Il est absolument vital que vous compreniez ces concepts. R\351f\351rez-vous \340 la documentation mentionn\351e au)S
0 512.6 M(d\351but de ce HOWTO si vous avez des doutes.)S
0 486.2 M(Vous pouvez aussi noter )S
/F0 SF (qdisc)S
/F4 SF (, qui d\351signe la gestion de la mise en file d'attente \()S
/F6 SF (Queueing Discipline)S
/F4 SF (\).)S
0 473 M(Cela deviendra vital plus tard.)S
13.2 FS/F9 SF 0 442.4 M(ip nous montre nos routes)S
11 FS/F4 SF 0 415.56 M(Nous savons maintenant comment trouver les adresses )S
/F0 SF (10.x.y.z)S
/F4 SF (, et nous sommes capables d'atteindre)S
/F0 SF 0 402.36 M(212.64.94.1)S
/F4 SF (. Cela n'est cependant pas suffisant, et nous avons besoin d'instructions pour atteindre le)S
0 389.16 M(monde. L'Internet est disponible via notre connexion PPP, et il se trouve que )S
/F0 SF (212.64.94.1)S
/F4 SF ( est pr\352t \340)S
0 375.96 M(propager nos paquets \340 travers le monde, et \340 nous renvoyer le r\351sultat.)S
9.2 FS/F0 SF 0 351.393 M([ahu@home ahu]$ ip route show)S
0 340.393 M(212.64.94.1 dev ppp0  proto kernel  scope link  src 212.64.94.251 )S
0 329.393 M(10.0.0.0/8 dev eth0  proto kernel  scope link  src 10.0.0.1 )S
0 318.393 M(127.0.0.0/8 dev lo  scope link )S
0 307.393 M(default via 212.64.94.1 dev ppp0 )S
11 FS/F4 SF 0 281.36 M(Cela se comprend de soi-m\352me. Les 4 premi\350res lignes donnent explicitement ce qui \351tait sous-entendu par)S
/F1 SF 0 268.16 M(ip address show)S
/F4 SF (, la derni\350re ligne nous indiquant que le reste du monde peut \352tre trouv\351 via)S
/F0 SF 0 254.96 M(212.64.94.1)S
/F4 SF (, notre passerelle par d\351faut. Nous pouvons voir que c'est une passerelle \340 cause du mot)S
0 241.76 M(<< via >>, qui nous indique que nous avons besoin d'envoyer les paquets vers )S
/F0 SF (212.64.94.1)S
/F4 SF (, et que c'est)S
0 228.56 M(elle qui se chargera de tout.)S
0 202.16 M(En r\351f\351rence, voici ce que l'ancien utilitaire)S
/F5 SF ( route)S
/F4 SF ( nous propose :)S
9.2 FS/F0 SF 0 177.593 M([ahu@home ahu]$ route -n)S
0 166.593 M(Kernel IP routing table)S
0 155.593 M(Destination     Gateway         Genmask         Flags Metric Ref    Use)S
0 144.593 M(Iface)S
0 133.593 M(212.64.94.1     0.0.0.0         255.255.255.255 UH    0      0        0 ppp0)S
0 122.593 M(10.0.0.0        0.0.0.0         255.0.0.0       U     0      0        0 eth0)S
0 111.593 M(127.0.0.0       0.0.0.0         255.0.0.0       U     0      0        0 lo)S
0 100.593 M(0.0.0.0         212.64.94.1     0.0.0.0         UG    0      0        0 ppp0)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(10)S
332.318 0 M(ip nous montre nos adresses IP)S
GR
SP
%%Page: (11) 11
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 15.8 FS/F9 SF 0 732.16 M(ARP)S
11 FS/F4 SF 0 704.792 M(ARP est le Protocole de R\351solution d'Adresse \()S
/F6 SF (Address Resolution Protocol)S
/F4 SF (\). Il est d\351crit dans le RFC 826.)S
0 691.592 M(ARP est utilis\351 par une machine d'un r\351seau local pour retrouver l'adresse mat\351rielle \(la localisation\) d'une)S
0 678.392 M(autre machine sur le m\352me r\351seau. Les machines sur Internet sont g\351n\351ralement connues par leur nom auquel)S
0 665.192 M(correspond une adresse IP. C'est ainsi qu'une machine sur le r\351seau )S
/F0 SF (foo.com)S
/F4 SF ( est capable de communiquer)S
0 651.992 M(avec une autre machine qui est sur le r\351seau )S
/F0 SF (bar.net)S
/F4 SF (. Une adresse IP, cependant, ne peut pas vous indiquer)S
0 638.792 M(la localisation physique de la machine. C'est ici que le protocole ARP entre en jeu.)S
0 612.392 M(Prenons un exemple tr\350s simple. Supposons que j'aie un r\351seau compos\351 de plusieurs machines, dont la)S
0 599.192 M(machine )S
/F0 SF (foo)S
/F4 SF ( d'adresse IP )S
/F0 SF (10.0.0.1)S
/F4 SF ( et la machine )S
/F0 SF (bar)S
/F4 SF ( qui a l'adresse IP )S
/F0 SF (10.0.0.2)S
/F4 SF (. Maintenant, )S
/F0 SF (foo)S
/F4 SF 0 585.992 M(veut envoyer un)S
/F5 SF ( ping)S
/F4 SF ( vers )S
/F0 SF (bar)S
/F4 SF ( pour voir s'il est actif, mais )S
/F0 SF (foo)S
/F4 SF ( n'a aucune indication sur la localisation de)S
/F0 SF 0 572.792 M(bar)S
/F4 SF (. Donc, si )S
/F0 SF (foo)S
/F4 SF ( d\351cide d'envoyer un)S
/F5 SF ( ping)S
/F4 SF ( vers )S
/F0 SF (bar)S
/F4 SF (, il a besoin d'envoyer une requ\352te ARP. Cette requ\352te)S
0 559.592 M(ARP est une fa\347on pour )S
/F0 SF (foo)S
/F4 SF ( de crier sur le r\351seau << Bar \(10.0.0.2\) ! O\371 es-tu ? >>. Par cons\351quent, toutes)S
0 546.392 M(les machines sur le r\351seau entendront )S
/F0 SF (foo)S
/F4 SF ( crier, mais seul )S
/F0 SF (bar)S
/F4 SF ( \()S
/F0 SF (10.0.0.2)S
/F4 SF (\) r\351pondra. )S
/F0 SF (Bar)S
/F4 SF ( enverra une)S
0 533.192 M(r\351ponse ARP directement \340 )S
/F0 SF (foo)S
/F4 SF ( ; ce qui revient \340 dire : << Foo \(10.0.0.1\) ! je suis ici, \340 l'adresse)S
0 519.992 M(00:60:94:E:08:12 >>. Apr\350s cette simple transaction utilis\351e pour localiser son ami sur le r\351seau, )S
/F0 SF (foo)S
/F4 SF ( est)S
0 506.792 M(capable de communiquer avec )S
/F0 SF (bar)S
/F4 SF ( jusqu'\340 ce qu'il \(le cache ARP de )S
/F0 SF (foo)S
/F4 SF (\) oublie o\371 bar est situ\351)S
0 493.592 M(\(typiquement au bout de 15 minutes sur Unix\).)S
0 467.192 M(Maintenant, voyons comment cela fonctionne. Vous pouvez consulter votre cache \(table\) ARP \()S
/F6 SF (neighbor)S
/F4 SF (\))S
0 453.992 M(comme ceci :)S
9.2 FS/F0 SF 0 429.425 M([root@espa041 /home/src/iputils]# ip neigh show)S
0 418.425 M(9.3.76.42 dev eth0 lladdr 00:60:08:3f:e9:f9 nud reachable)S
0 407.425 M(9.3.76.1 dev eth0 lladdr 00:06:29:21:73:c8 nud reachable)S
11 FS/F4 SF 0 381.392 M(Comme vous pouvez le voir, ma machine )S
/F0 SF (espa041)S
/F4 SF ( \()S
/F0 SF (9.3.76.41)S
/F4 SF (\) sait o\371 trouver )S
/F0 SF (espa042)S
/F4 SF ( \()S
/F0 SF (9.3.76.42)S
/F4 SF (\))S
0 368.192 M(et )S
/F0 SF (espagate)S
/F4 SF ( \()S
/F0 SF (9.3.76.1)S
/F4 SF (\). Maintenant, ajoutons une autre machine dans le cache ARP.)S
9.2 FS/F0 SF 0 343.625 M([root@espa041 /home/paulsch/.gnome-desktop]# ping -c 1 espa043)S
0 332.625 M(PING espa043.austin.ibm.com \(9.3.76.43\) from 9.3.76.41 : 56\(84\) bytes of data.)S
0 321.625 M(64 bytes from 9.3.76.43: icmp_seq=0 ttl=255 time=0.9 ms)S
0 299.625 M(1 packets transmitted, 1 packets received, 0% packet loss)S
0 288.625 M(round-trip min/avg/max = 0.9/0.9/0.9 ms)S
0 266.625 M([root@espa041 /home/src/iputils]# ip neigh show)S
0 255.625 M(9.3.76.43 dev eth0 lladdr 00:06:29:21:80:20 nud reachable)S
0 244.625 M(9.3.76.42 dev eth0 lladdr 00:60:08:3f:e9:f9 nud reachable)S
0 233.625 M(9.3.76.1 dev eth0 lladdr 00:06:29:21:73:c8 nud reachable)S
11 FS/F4 SF 0 207.592 M(Par cons\351quent, lorsque )S
/F0 SF (espa041)S
/F4 SF ( a essay\351 de contacter )S
/F0 SF (espa043)S
/F4 SF (, l'adresse mat\351rielle de )S
/F0 SF (espa043)S
/F4 SF ( \(sa)S
0 194.392 M(localisation\) a alors \351t\351 ajout\351e dans le cache ARP. Donc, tant que la dur\351e de vie de l'entr\351e correspondant \340)S
/F0 SF 0 181.192 M(espa043)S
/F4 SF ( dans le cache ARP n'est pas d\351pass\351e, )S
/F0 SF (espa041)S
/F4 SF ( sait localiser )S
/F0 SF (espa043)S
/F4 SF ( et n'a plus besoin)S
0 167.992 M(d'envoyer de requ\352te ARP.)S
0 141.592 M(Maintenant, effa\347ons )S
/F0 SF (espa043)S
/F4 SF ( de notre cache ARP.)S
9.2 FS/F0 SF 0 117.025 M([root@espa041 /home/src/iputils]# ip neigh delete 9.3.76.43 dev eth0)S
0 106.025 M([root@espa041 /home/src/iputils]# ip neigh show)S
0 95.025 M(9.3.76.43 dev eth0  nud failed)S
0 84.025 M(9.3.76.42 dev eth0 lladdr 00:60:08:3f:e9:f9 nud reachable)S
0 73.025 M(9.3.76.1 dev eth0 lladdr 00:06:29:21:73:c8 nud stale)S
11 FS/F4 SF 0 46.992 M(Maintenant, )S
/F0 SF (espa041)S
/F4 SF ( a \340 nouveau oubli\351 la localisation d')S
/F0 SF (espa043)S
/F4 SF ( et aura besoin d'envoyer une autre)S
0 33.792 M(requ\352te ARP la prochaine fois qu'il voudra communiquer avec lui. Vous pouvez aussi voir ci-dessus que l'\351tat)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(ARP)S
474.768 0 M(11)S
GR
SP
%%Page: (12) 12
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 713 M 487.0 2.0 F
0 291.381 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(d')S
/F0 SF (espagate)S
/F4 SF ( \()S
/F0 SF (9.3.76.1)S
/F4 SF (\) est pass\351 en)S
/F6 SF ( stale)S
/F4 SF (. Cela signifie que la localisation connue est encore valide, mais)S
0 723.8 M(qu'elle devra \352tre confirm\351e \340 la premi\350re transaction avec cette machine.)S
19 FS/F9 SF 0 687.392 M(Chapitre 4. R\350gles - bases de donn\351es des politiques)S
0 664.582 M(de routage)S
11 FS/F4 SF 0 636.581 M(Si vous avez un routeur important, il se peut que vous vouliez satisfaire les besoins de diff\351rentes personnes,)S
0 623.381 M(qui peuvent \352tre trait\351es diff\351remment. Les bases de donn\351es des politiques de routage vous aident \340 faire)S
0 610.181 M(cela, en g\351rant plusieurs ensembles de tables de routage.)S
0 583.781 M(Si vous voulez utiliser cette fonctionnalit\351, assurez-vous que le noyau est compil\351 avec les options )S
/F0 SF (IP :)S
0 570.581 M(Advanced router)S
/F4 SF ( et )S
/F0 SF (IP : policy routing)S
/F4 SF (.)S
0 544.181 M(Quand le noyau doit prendre une d\351cision de routage, il recherche quelle table consulter. Par d\351faut, il y a trois)S
0 530.981 M(tables. L'ancien outil)S
/F5 SF ( route)S
/F4 SF ( modifie les tables principale \()S
/F6 SF (main)S
/F4 SF (\) et locale \()S
/F6 SF (local)S
/F4 SF (\), comme le fait l'outil)S
/F5 SF ( ip)S
/F4 SF ( \(par)S
0 517.781 M(d\351faut\).)S
0 491.381 M(Les r\350gles par d\351faut :)S
9.2 FS/F0 SF 0 466.814 M([ahu@home ahu]$ ip rule list)S
0 455.814 M(0:      from all lookup local )S
0 444.814 M(32766:  from all lookup main )S
0 433.814 M(32767:  from all lookup default)S
11 FS/F4 SF 0 407.781 M(Ceci liste la priorit\351 de toutes les r\350gles. Nous voyons que toutes les r\350gles sont appliqu\351es \340 tous les paquets)S
0 394.581 M(\()S
/F6 SF (from all)S
/F4 SF (\). Nous avons vu la table)S
/F6 SF ( main)S
/F4 SF ( pr\351c\351demment, sa sortie s'effectuant avec )S
/F1 SF (ip route ls)S
/F4 SF (, mais les)S
0 381.381 M(tables )S
/F0 SF (local)S
/F4 SF ( et )S
/F0 SF (default)S
/F4 SF ( sont nouvelles.)S
0 354.981 M(Si nous voulons faire des choses fantaisistes, nous pouvons cr\351er des r\350gles qui pointent vers des tables)S
0 341.781 M(diff\351rentes et qui nous permettent de red\351finir les r\350gles de routage du syst\350me.)S
0 315.381 M(Pour savoir exactement ce que fait le noyau en pr\351sence d'un assortiment de r\350gles plus complet, r\351f\351rez-vous)S
0 302.181 M(\340 la documentation ip-cref d'Alexey &lsqb;NdT : dans le paquetage iproute2 de votre distribution].)S
15.8 FS/F9 SF 0 268.941 M(Politique de routage simple par l'adresse source)S
11 FS/F4 SF 0 241.573 M(Prenons encore une fois un exemple r\351el. J'ai 2 modems c\342ble, connect\351s \340 un routeur Linux NAT)S
0 228.373 M(\()S
/F6 SF (masquerading)S
/F4 SF (\). Les personnes habitant avec moi me paient pour avoir acc\350s \340 Internet. Supposons qu'un de)S
0 215.173 M(mes co-locataires consulte seulement hotmail et veuille payer moins. C'est d'accord pour moi, mais il utilisera)S
0 201.973 M(le modem le plus lent.)S
0 175.573 M(Le modem c\342ble << rapide >> est connu sous )S
/F0 SF (212.64.94.251)S
/F4 SF ( et est en liaison PPP avec )S
/F0 SF (212.64.94.1)S
/F4 SF (.)S
0 162.373 M(Le modem c\342ble << lent >> est connu sous diverses adresses IP : )S
/F0 SF (212.64.78.148)S
/F4 SF ( dans notre exemple avec)S
0 149.173 M(un lien vers )S
/F0 SF (195.96.98.253)S
/F4 SF (.)S
0 122.773 M(La table locale :)S
9.2 FS/F0 SF 0 98.206 M([ahu@home ahu]$ ip route list table local)S
0 87.206 M(broadcast 127.255.255.255 dev lo  proto kernel  scope link  src 127.0.0.1 )S
0 76.206 M(local 10.0.0.1 dev eth0  proto kernel  scope host  src 10.0.0.1 )S
0 65.206 M(broadcast 10.0.0.0 dev eth0  proto kernel  scope link  src 10.0.0.1 )S
0 54.206 M(local 212.64.94.251 dev ppp0  proto kernel  scope host  src 212.64.94.251 )S
0 43.206 M(broadcast 10.255.255.255 dev eth0  proto kernel  scope link  src 10.0.0.1 )S
0 32.206 M(broadcast 127.0.0.0 dev lo  proto kernel  scope link  src 127.0.0.1 )S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(12)S
170.277 0 M(Chapitre 4. R\350gles - bases de donn\351es des politiques de routage)S
GR
SP
%%Page: (13) 13
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 330.2 M 487.0 2.0 F
0 40.792 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(local 212.64.78.148 dev ppp2  proto kernel  scope host  src 212.64.78.148 )S
0 727.833 M(local 127.0.0.1 dev lo  proto kernel  scope host  src 127.0.0.1 )S
0 716.833 M(local 127.0.0.0/8 dev lo  proto kernel  scope host  src 127.0.0.1 )S
11 FS/F4 SF 0 690.8 M(Il y a beaucoup de choses \351videntes, mais aussi des choses qui ont besoin d'\352tre pr\351cis\351es quelque peu, ce que)S
0 677.6 M(nous allons faire. La table de routage par d\351faut est vide.)S
0 651.2 M(Regardons la table principale \()S
/F6 SF (main)S
/F4 SF (\) :)S
9.2 FS/F0 SF 0 626.633 M([ahu@home ahu]$ ip route list table main )S
0 615.633 M(195.96.98.253 dev ppp2  proto kernel  scope link  src 212.64.78.148 )S
0 604.633 M(212.64.94.1 dev ppp0  proto kernel  scope link  src 212.64.94.251 )S
0 593.633 M(10.0.0.0/8 dev eth0  proto kernel  scope link  src 10.0.0.1 )S
0 582.633 M(127.0.0.0/8 dev lo  scope link )S
0 571.633 M(default via 212.64.94.1 dev ppp0 )S
11 FS/F4 SF 0 545.6 M(Maintenant, nous g\351n\351rons une nouvelle r\350gle que nous appellerons )S
/F0 SF (John)S
/F4 SF (, pour notre hypoth\351tique)S
0 532.4 M(co-locataire. Bien que nous puissions travailler avec des nombres IP purs, il est plus facile d'ajouter notre table)S
0 519.2 M(dans le fichier )S
/F0 SF (/etc/iproute2/rt&lowbar;tables)S
/F4 SF (.)S
9.2 FS/F0 SF 0 494.633 M(# echo 200 John >> /etc/iproute2/rt_tables)S
0 483.633 M(# ip rule add from 10.0.0.10 table John)S
0 472.633 M(# ip rule ls)S
0 461.633 M(0:      from all lookup local )S
0 450.633 M(32765:  from 10.0.0.10 lookup John)S
0 439.633 M(32766:  from all lookup main )S
0 428.633 M(32767:  from all lookup default)S
11 FS/F4 SF 0 402.6 M(Maintenant, tout ce qu'il reste \340 faire est de g\351n\351rer la table )S
/F0 SF (John)S
/F4 SF (, et de vider le cache des routes :)S
9.2 FS/F0 SF 0 378.033 M(# ip route add default via 195.96.98.253 dev ppp2 table John)S
0 367.033 M(# ip route flush cache)S
11 FS/F4 SF 0 341 M(Et voil\340 qui est fait. Il ne reste plus, comme exercice laiss\351 au lecteur, qu'\340 impl\351menter cela dans)S
/F5 SF ( ip-up)S
/F4 SF (.)S
15.8 FS/F9 SF 0 307.76 M(Routage avec plusieurs acc\350s Internet/fournisseurs d'acc\350s)S
11 FS/F4 SF 0 280.392 M(Une configuration classique est la suivante, o\371 deux fournisseurs d'acc\350s permettent la connexion d'un r\351seau)S
0 267.192 M(local \(ou m\352me d'une simple machine\) \340 Internet.)S
9.2 FS/F0 SF 0 242.625 M(                                                                   ________)S
0 231.625 M(                                          +--------------+        /)S
0 220.625 M(                                          |              |       |)S
0 209.625 M(                            +-------------+ Fournisseur 1+-------)S
0 198.625 M(        __                  |             |              |     /)S
0 187.625 M(    ___/  \\_         +------+-------+     +--------------+    |)S
0 176.625 M(  _/        \\__      |     if1      |                        /)S
0 165.625 M( /             \\     |              |                        |)S
0 154.625 M(| R\351seau Local  -----+ Routeur Linux|                        |     Internet)S
0 143.625 M( \\_           __/    |              |                        |)S
0 132.625 M(   \\__     __/       |     if2      |                        \\)S
0 121.625 M(      \\___/          +------+-------+     +--------------+    |)S
0 110.625 M(                            |             |              |     \\)S
0 99.625 M(                            +-------------+ Fournisseur 2+-------)S
0 88.625 M(                                          |              |       |)S
0 77.625 M(                                          +--------------+        \\________)S
11 FS/F4 SF 0 51.592 M(Il y a g\351n\351ralement deux questions \340 se poser pour cette configuration.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Politique de routage simple par l'adresse source)S
474.768 0 M(13)S
GR
SP
%%Page: (14) 14
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 100.76 M 487.7 0.7 F
0 84.695 M 0.7 16.8 F
487 84.695 M 0.7 16.8 F
0 84.695 M 487.7 0.7 F
0 84.695 M 487.7 0.7 F
0 22 M 0.7 63.4 F
487 22 M 0.7 63.4 F
13.2 FS/F9 SF 0 734.8 M(Acc\350s s\351par\351)S
11 FS/F4 SF 0 707.96 M(La premi\350re est de savoir comment router les r\351ponses aux paquets entrants par un fournisseur particulier,)S
0 694.76 M(disons le Fournisseur 1, vers ce m\352me fournisseur.)S
0 668.36 M(Commen\347ons par d\351finir quelques symboles.)S
/F5 SF ( $IF1)S
/F4 SF ( sera le nom de la premi\350re interface \(if1 sur la figure)S
0 655.16 M(au-dessus\) et)S
/F5 SF ( $IF2)S
/F4 SF ( le nom de la deuxi\350me interface.)S
/F5 SF ( $IP1)S
/F4 SF ( sera alors l'adresse IP associ\351e \340)S
/F5 SF ( $IF1)S
/F4 SF ( et)S
/F5 SF ( $IP2)S
/F4 SF ( sera)S
0 641.96 M(l'adresse IP associ\351e \340)S
/F5 SF ( $IF2)S
/F4 SF (.)S
/F5 SF ( $P1)S
/F4 SF ( sera l'adresse IP de la passerelle du fournisseur d'acc\350s 1 et)S
/F5 SF ( $P2)S
/F4 SF ( sera)S
0 628.76 M(l'adresse IP de la passerelle du fournisseur d'acc\350s 2. Enfin,)S
/F5 SF ( $P1_NET)S
/F4 SF ( sera l'adresse r\351seau \340 l'int\351rieur duquel)S
0 615.56 M(se situe)S
/F5 SF ( $P1)S
/F4 SF ( et)S
/F5 SF ( $P2_NET)S
/F4 SF ( sera l'adresse r\351seau \340 l'int\351rieur duquel se situe)S
/F5 SF ( $P2)S
/F4 SF (.)S
0 589.16 M(Deux tables de routage suppl\351mentaires sont cr\351\351es, par exemple)S
/F5 SF ( T1)S
/F4 SF ( et)S
/F5 SF ( T2)S
/F4 SF (. Celles-ci sont ajout\351es dans)S
/F0 SF 0 575.96 M(/etc/iproute2/rt_tables)S
/F4 SF (. La configuration du routage dans ces tables s'effectue de la fa\347on)S
0 562.76 M(suivante :)S
9.2 FS/F0 SF 0 538.193 M(          ip route add $P1_NET dev $IF1 src $IP1 table T1)S
0 527.193 M(          ip route add default via $P1 table T1)S
0 516.193 M(          ip route add $P2_NET dev $IF2 src $IP2 table T2)S
0 505.193 M(          ip route add default via $P2 table T2)S
11 FS/F4 SF 0 468.16 M(Rien de vraiment spectaculaire. Une route est simplement positionn\351e vers la passerelle et une route par)S
0 454.96 M(d\351faut via cette passerelle est mise en place, comme nous le ferions dans le cas d'un seul fournisseur d'acc\350s.)S
0 441.76 M(Ici, les routes sont plac\351es dans des tables s\351par\351es, une par fournisseur d'acc\350s. Il est \340 noter que la route vers)S
0 428.56 M(le r\351seau suffit, dans la mesure o\371 elle indique comment trouver n'importe quel h\364te dans ce r\351seau, ce qui)S
0 415.36 M(inclut la passerelle.)S
0 388.96 M(La table de routage principale est maintenant configur\351e. C'est une bonne id\351e de router les \351l\351ments \340)S
0 375.76 M(destination d'un voisin direct \340 travers l'interface connect\351e \340 ce voisin. Notez les arguments "src" qui assurent)S
0 362.56 M(que la bonne adresse IP source sera choisie.)S
9.2 FS/F0 SF 0 337.993 M(            ip route add $P1_NET dev $IF1 src $IP1)S
0 326.993 M(            ip route add $P2_NET dev $IF2 src $IP2)S
11 FS/F4 SF 0 289.96 M(Indiquez maintenant votre pr\351f\351rence pour votre route par d\351faut :)S
9.2 FS/F0 SF 0 265.393 M(            ip route add default via $P1)S
11 FS/F4 SF 0 228.36 M(Vous configurez ensuite les r\350gles de routage. Celles-ci d\351finissent la table qui sera vraiment choisie pour le)S
0 215.16 M(routage. Il faut s'assurer que le routage s'effectue \340 travers une interface donn\351e si vous avez l'adresse source)S
0 201.96 M(correspondante :)S
9.2 FS/F0 SF 0 177.393 M(            ip rule add from $IP1 table T1)S
0 166.393 M(            ip rule add from $IP2 table T2)S
11 FS/F4 SF 0 129.36 M(Cet ensemble de commandes vous assure que toutes les r\351ponses au trafic entrant sur une interface particuli\350re)S
0 116.16 M(seront envoy\351es par cette interface.)S
/F5 SF 209.9 88.327 M(Avertissement)S
/F4 SF 1.432 72.263 M(Notes d'un lecteur : si $P0_NET est le r\351seau local et $IF0 est son interface, alors les entr\351es suivantes sont)S
1.432 59.063 M(d\351sirables :)S
9.2 FS/F0 SF 1.432 34.496 M( ip route add $P0_NET     dev $IF0 table T1)S
1.432 23.496 M( ip route add $P2_NET     dev $IF2 table T1)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(14)S
420.362 0 M(Acc\350s s\351par\351)S
GR
SP
%%Page: (15) 15
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 663.735 M 0.7 84.3 F
487 663.735 M 0.7 84.3 F
0 663.735 M 487.7 0.7 F
0 575.935 M 487.0 2.0 F
0 274.295 M 487.0 2.0 F
0 196.685 M 487.0 2.0 F
9.2 FS/F0 SF 1.432 737.401 M( ip route add 127.0.0.0/8 dev lo   table T1)S
1.432 726.401 M( ip route add $P0_NET     dev $IF0 table T2)S
1.432 715.401 M( ip route add $P1_NET     dev $IF1 table T2)S
1.432 704.401 M( ip route add 127.0.0.0/8 dev lo   table T2                                      )S
11 FS/F4 SF 1.432 667.368 M(')S
0 639.535 M(Nous avons maintenant une configuration tr\350s basique. Elle marchera pour tous les processus ex\351cut\351s sur le)S
0 626.335 M(routeur lui-m\352me, ainsi que pour le r\351seau local si celui-ci est masqu\351. Si ce n'est pas le cas, soit vous avez)S
0 613.135 M(une plage d'adresses IP pour chaque fournisseur d'acc\350s, soit vous masquez vers l'un des deux fournisseurs)S
0 599.935 M(d'acc\350s. Dans les deux cas, vous ajouterez des r\350gles indiquant, en fonction de l'adresse IP de la machine du)S
0 586.735 M(r\351seau local, vers quel fournisseur vous allez router.)S
13.2 FS/F9 SF 0 556.135 M(Balance de charge)S
11 FS/F4 SF 0 529.295 M(La seconde question concerne la balance de charge du trafic sortant vers les deux fournisseurs d'acc\350s. Ceci)S
0 516.095 M(n'est pas vraiment tr\350s dur si vous avez d\351j\340 configur\351 l'acc\350s s\351par\351 comme d\351crit ci-dessus.)S
0 489.695 M(Au lieu de choisir l'un des deux fournisseurs d'acc\350s comme route par d\351faut, celle-ci peut \352tre une route)S
0 476.495 M(multi-chemin. Par d\351faut, le noyau r\351partira les routes vers les deux fournisseurs d'acc\350s. Ceci est r\351alis\351 de la)S
0 463.295 M(fa\347on suivante \(construit \351galement sur l'exemple de la section de l'acc\350s s\351par\351\) :)S
9.2 FS/F0 SF 0 438.728 M(            ip route add default scope global nexthop via $P1 dev $IF1 weight 1 \\)S
0 427.728 M(            nexthop via $P2 dev $IF2 weight 1)S
11 FS/F4 SF 0 390.695 M(Ceci r\351alisera la balance des routes vers les deux fournisseurs. Les param\350tres)S
/F5 SF ( weight)S
/F4 SF ( peuvent permettre de)S
0 377.495 M(favoriser un fournisseur par rapport \340 un autre.)S
0 351.095 M(Il est \340 noter que la balance de charge ne sera pas parfaite dans la mesure o\371 elle est bas\351e sur les routes et que)S
0 337.895 M(celles-ci sont mises dans des caches. Ceci signifie que les routes vers les sites les plus souvent utilis\351s)S
0 324.695 M(passeront toujours par le m\352me fournisseur d'acc\350s.)S
0 298.295 M(De plus, si vous voulez vraiment mettre en oeuvre ceci, vous devriez \351galement aller consulter les mises \340 jour)S
0 285.095 M(de Julien Anastasov \340 http://www.ssi.bg/~ja/#routes Elles rendront le travail plus facile.)S
19 FS/F9 SF 0 248.687 M(Chapitre 5. GRE et autres tunnels)S
11 FS/F4 SF 0 220.685 M(Il y a trois sortes de tunnels sous Linux : l'IP dans un tunnel IP, le tunnel GRE et les tunnels qui existent en)S
0 207.485 M(dehors du noyau \(comme PPTP, par exemple\).)S
15.8 FS/F9 SF 0 174.245 M(Quelques remarques g\351n\351rales \340 propos des tunnels :)S
11 FS/F4 SF 0 146.877 M(Les tunnels peuvent faire des choses tr\350s inhabituelles et vraiment sympas. Ils peuvent aussi absolument tout)S
0 133.677 M(d\351traquer si vous ne les avez pas configur\351s correctement. Ne d\351finissez pas votre route par d\351faut sur un)S
0 120.477 M(tunnel, \340 moins que vous ne sachiez)S
/F6 SF ( EXACTEMENT)S
/F4 SF ( ce que vous faites.)S
0 94.077 M(De plus, le passage par un tunnel augmente le poids des en-t\352tes \()S
/F6 SF (overhead)S
/F4 SF (\), puisqu'un en-t\352te IP)S
0 80.877 M(suppl\351mentaire est n\351cessaire. Typiquement, ce surco\373t est de 20 octets par paquet. Donc, si la taille)S
0 67.677 M(maximum de votre paquet sur votre r\351seau \(MTU\) est de 1500 octets, un paquet qui est envoy\351 \340 travers un)S
0 54.477 M(tunnel sera limit\351 \340 une taille de 1480 octets. Ce n'est pas n\351cessairement un probl\350me, mais soyez s\373r d'avoir)S
0 41.277 M(bien \351tudi\351 la fragmentation et le r\351assemblage des paquets IP quand vous pr\351voyez de relier des r\351seaux de)S
0 28.077 M(grande taille par des tunnels. Et bien s\373r, la mani\350re la plus rapide de creuser un tunnel est de creuser des deux)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Chapitre 5. GRE et autres tunnels)S
474.768 0 M(15)S
GR
SP
%%Page: (16) 16
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 726.2 M 487.0 2.0 F
0 47.392 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(c\364t\351s.)S
15.8 FS/F9 SF 0 703.76 M(IP dans un tunnel IP)S
11 FS/F4 SF 0 676.392 M(Ce type de tunnel est disponible dans Linux depuis un long moment. Il n\351cessite deux modules,)S
/F5 SF ( ipip.o)S
/F4 SF ( et)S
/F5 SF 0 663.192 M(new&lowbar;tunnel.o)S
/F4 SF (.)S
0 636.792 M(Disons que vous avez trois r\351seaux : 2 r\351seaux internes A et B, et un r\351seau interm\351diaire C \(ou disons)S
0 623.592 M(Internet\). Les caract\351ristiques du r\351seau A sont :)S
9.2 FS/F0 SF 0 599.025 M(r\351seau 10.0.1.0)S
0 588.025 M(masque de sous-r\351seau 255.255.255.0)S
0 577.025 M(routeur  10.0.1.1)S
11 FS/F4 SF 0 550.992 M(Le routeur a l'adresse )S
/F0 SF (172.16.17.18)S
/F4 SF ( sur le r\351seau C.)S
0 524.592 M(et le r\351seau B :)S
9.2 FS/F0 SF 0 500.025 M(r\351seau 10.0.2.0)S
0 489.025 M(masque de sous-r\351seau 255.255.255.0)S
0 478.025 M(routeur  10.0.2.1)S
11 FS/F4 SF 0 451.992 M(Le routeur a l'adresse )S
/F0 SF (172.19.20.21)S
/F4 SF ( sur le r\351seau C.)S
0 425.592 M(En ce qui concerne le r\351seau C, nous supposerons qu'il transmettra n'importe quel paquet de A vers B et)S
0 412.392 M(vice-versa. Il est \351galement possible d'utiliser l'Internet pour cela.)S
0 385.992 M(Voici ce qu'il faut faire :)S
0 359.592 M(Premi\350rement, assurez-vous que les modules soient install\351s :)S
9.2 FS/F0 SF 0 335.025 M(insmod ipip.o)S
0 324.025 M(insmod new_tunnel.o)S
11 FS/F4 SF 0 297.992 M(Ensuite, sur le routeur du r\351seau A, faites la chose suivante :)S
9.2 FS/F0 SF 0 273.425 M(ifconfig tunl0 10.0.1.1 pointopoint 172.19.20.21)S
0 262.425 M(route add -net 10.0.2.0 netmask 255.255.255.0 dev tunl0)S
11 FS/F4 SF 0 236.392 M(et sur le routeur du r\351seau B :)S
9.2 FS/F0 SF 0 211.825 M(ifconfig tunl0 10.0.2.1 pointopoint 172.16.17.18)S
0 200.825 M(route add -net 10.0.1.0 netmask 255.255.255.0 dev tunl0)S
11 FS/F4 SF 0 174.792 M(Et quand vous aurez termin\351 avec votre tunnel :)S
9.2 FS/F0 SF 0 150.225 M(ifconfig tunl0 down)S
11 FS/F4 SF 0 124.192 M(Vite fait, bien fait. Vous ne pouvez pas transmettre les paquets de diffusion \()S
/F6 SF (broadcast)S
/F4 SF (\), ni le trafic IPv6 \340)S
0 110.992 M(travers un tunnel IP-IP. Vous ne pouvez connecter que deux r\351seaux IPv4 qui, normalement, ne seraient pas)S
0 97.792 M(capables de se << parler >>, c'est tout. Dans la mesure o\371 la compatibilit\351 a \351t\351 conserv\351e, ce code tourne)S
0 84.592 M(depuis un bon moment, et il reste compatible depuis les noyaux 1.3. Le tunnel Linux IP dans IP ne fonctionne)S
0 71.392 M(pas avec d'autres syst\350mes d'exploitation ou routeurs, pour autant que je sache. C'est simple, \347a marche.)S
0 58.192 M(Utilisez-le si vous le pouvez, autrement utilisez GRE.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(16)S
221.647 0 M(Quelques remarques g\351n\351rales \340 propos des tunnels :)S
GR
SP
%%Page: (17) 17
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 641.192 M 487.0 2.0 F
15.8 FS/F9 SF 0 732.16 M(Le tunnel GRE)S
11 FS/F4 SF 0 704.792 M(GRE est un protocole de tunnel qui a \351t\351 \340 l'origine d\351velopp\351 par Cisco, et qui peut r\351aliser plus de choses)S
0 691.592 M(que le tunnel IP dans IP. Par exemple, vous pouvez aussi transporter du trafic multi-diffusion \()S
/F6 SF (multicast)S
/F4 SF (\) et de)S
0 678.392 M(l'IPv6 \340 travers un tunnel GRE.)S
0 651.992 M(Dans Linux, vous aurez besoin du module ip&lowbar;gre.o.)S
13.2 FS/F9 SF 0 621.392 M(Le tunnel IPv4)S
11 FS/F4 SF 0 594.552 M(Dans un premier temps, int\351ressons-nous au tunnel IPv4 :)S
0 568.152 M(Disons que vous avez trois r\351seaux : 2 r\351seaux internes A et B, et un r\351seau interm\351diaire C \(ou disons)S
0 554.952 M(internet\).)S
0 528.552 M(Les caract\351ristiques du r\351seau A sont :)S
9.2 FS/F0 SF 0 503.985 M(r\351seau 10.0.1.0)S
0 492.985 M(masque de sous-r\351seau 255.255.255.0)S
0 481.985 M(routeur  10.0.1.1)S
11 FS/F4 SF 0 455.952 M(Le routeur a l'adresse )S
/F0 SF (172.16.17.18)S
/F4 SF ( sur le r\351seau C. Appelons ce r\351seau )S
/F0 SF (neta)S
/F4 SF (.)S
0 429.552 M(Et pour le r\351seau B :)S
9.2 FS/F0 SF 0 404.985 M(r\351seau 10.0.2.0)S
0 393.985 M(masque de sous-r\351seau 255.255.255.0)S
0 382.985 M(routeur  10.0.2.1)S
11 FS/F4 SF 0 356.952 M(Le routeur a l'adresse )S
/F0 SF (172.19.20.21)S
/F4 SF ( sur le r\351seau C. Appelons ce r\351seau )S
/F0 SF (netb)S
/F4 SF (.)S
0 330.552 M(En ce qui concerne le r\351seau C, nous supposerons qu'il transmettra n'importe quels paquets de A vers B et)S
0 317.352 M(vice-versa. Comment et pourquoi, on s'en moque.)S
0 290.952 M(Sur le routeur du r\351seau A, nous faisons la chose suivante :)S
9.2 FS/F0 SF 0 266.385 M(ip tunnel add netb mode gre remote 172.19.20.21 local 172.16.17.18 ttl 255)S
0 255.385 M(ip link set netb up)S
0 244.385 M(ip addr add 10.0.1.1 dev netb)S
0 233.385 M(ip route add 10.0.2.0/24 dev netb)S
11 FS/F4 SF 0 207.352 M(Discutons un peu de cela. Sur la ligne 1, nous avons ajout\351 un p\351riph\351rique tunnel, que nous avons appel\351)S
/F0 SF 0 194.152 M(netb)S
/F4 SF ( \(ce qui est \351vident, dans la mesure o\371 c'est l\340 que nous voulons aller\). De plus, nous lui avons dit)S
0 180.952 M(d'utiliser le protocole GRE \()S
/F0 SF (mode gre)S
/F4 SF (\), que l'adresse distante est )S
/F0 SF (172.19.20.21)S
/F4 SF ( \(le routeur de l'autre)S
0 167.752 M(c\364t\351\), que nos paquets << tunnel\351s >> devront \352tre g\351n\351r\351s \340 partir de )S
/F0 SF (172.16.17.18)S
/F4 SF ( \(ce qui autorise votre)S
0 154.552 M(serveur \340 avoir plusieurs adresses IP sur le r\351seau C et ainsi vous permet de choisir laquelle sera utilis\351e pour)S
0 141.352 M(votre tunnel\) et que le champ TTL de vos paquets sera fix\351 \340 255 \()S
/F0 SF (ttl 255)S
/F4 SF (\).)S
0 114.952 M(La deuxi\350me ligne active le p\351riph\351rique.)S
0 88.552 M(Sur la troisi\350me ligne, nous avons donn\351 \340 cette nouvelle interface l'adresse )S
/F0 SF (10.0.1.1)S
/F4 SF (. C'est bon pour de)S
0 75.352 M(petits r\351seaux, mais quand vous commencez une exploitation mini\350re \()S
/F6 SF (BEAUCOUP)S
/F4 SF ( de tunnels !\), vous)S
0 62.152 M(pouvez utiliser une autre gamme d'adresses IP pour vos interfaces << tunnel >> \(dans cet exemple, vous)S
0 48.952 M(pourriez utiliser )S
/F0 SF (10.0.3.0)S
/F4 SF (\).)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Le tunnel GRE)S
474.768 0 M(17)S
GR
SP
%%Page: (18) 18
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 501.8 M 487.0 2.0 F
0 151.76 M 487.0 2.0 F
0 64.752 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(Sur la quatri\350me ligne, nous positionnons une route pour le r\351seau B. Notez la notation diff\351rente pour le)S
0 723.8 M(masque de sous-r\351seau. Si vous n'\352tes pas familiaris\351 avec cette notation, voici comment \347a marche : vous)S
0 710.6 M(\351crivez le masque de sous-r\351seau sous sa forme binaire, et vous comptez tous les 1. Si vous ne savez pas)S
0 697.4 M(comment faire cela, rappelez-vous juste que )S
/F0 SF (255.0.0.0)S
/F4 SF ( est /8, )S
/F0 SF (255.255.0.0)S
/F4 SF ( est /16 et)S
/F0 SF 0 684.2 M(255.255.255.0)S
/F4 SF ( est /24. Et )S
/F0 SF (255.255.254.0)S
/F4 SF ( est /23, au cas o\371 \347a vous int\351resserait.)S
0 657.8 M(Mais arr\352tons ici, et continuons avec le routeur du r\351seau B.)S
9.2 FS/F0 SF 0 633.233 M(ip tunnel add neta mode gre remote 172.16.17.18 local 172.19.20.21 ttl 255)S
0 622.233 M(ip link set neta up)S
0 611.233 M(ip addr add 10.0.2.1 dev neta)S
0 600.233 M(ip route add 10.0.1.0/24 dev neta)S
11 FS/F4 SF 0 574.2 M(Et quand vous voudrez retirer le tunnel sur le routeur A :)S
9.2 FS/F0 SF 0 549.633 M(ip link set netb down)S
0 538.633 M(ip tunnel del netb)S
11 FS/F4 SF 0 512.6 M(Bien s\373r, vous pouvez remplacer )S
/F0 SF (netb)S
/F4 SF ( par )S
/F0 SF (neta)S
/F4 SF ( pour le routeur B.)S
13.2 FS/F9 SF 0 482 M(Le tunnel IPv6)S
11 FS/F4 SF 0 455.16 M(Voir la section 6 pour une courte description des adresses IPv6.)S
0 428.76 M(\300 propos des tunnels.)S
0 402.36 M(Supposons que vous ayez le r\351seau IPv6 suivant, et que vous vouliez le connecter \340 une dorsale IPv6 \(6bone\))S
0 389.16 M(ou \340 un ami.)S
9.2 FS/F0 SF 0 364.593 M(R\351seau 3ffe:406:5:1:5:a:2:1/96)S
11 FS/F4 SF 0 338.56 M(Votre adresse IPv4 est )S
/F0 SF (172.16.17.18)S
/F4 SF (, et le routeur 6bone a une adresse IPv4 )S
/F0 SF (172.22.23.24)S
/F4 SF (.)S
9.2 FS/F0 SF 0 313.993 M(ip tunnel add sixbone mode sit remote 172.22.23.24 local 172.16.17.18 ttl 255)S
0 302.993 M(ip link set sixbone up)S
0 291.993 M(ip addr add 3ffe:406:5:1:5:a:2:1/96 dev sixbone)S
0 280.993 M(ip route add 3ffe::/15 dev sixbone )S
11 FS/F4 SF 0 254.96 M(Voyons cela de plus pr\350s. Sur la premi\350re ligne, nous avons cr\351\351 un p\351riph\351rique tunnel appel\351 )S
/F0 SF (sixbone)S
/F4 SF (.)S
0 241.76 M(Nous lui avons affect\351 le mode )S
/F0 SF (sit)S
/F4 SF ( \(qui est le tunnel IPv6 sur IPv4\) et lui avons dit o\371 l'on va \()S
/F0 SF (remote)S
/F4 SF (\) et)S
0 228.56 M(d'o\371 l'on vient \()S
/F0 SF (local)S
/F4 SF (\). )S
/F0 SF (TTL)S
/F4 SF ( est configur\351 \340 son maximum : )S
/F0 SF (255)S
/F4 SF (. Ensuite, nous avons rendu le p\351riph\351rique)S
0 215.36 M(actif \()S
/F0 SF (up)S
/F4 SF (\). Puis, nous avons ajout\351 notre propre adresse r\351seau et configur\351 une route pour )S
/F0 SF (3ffe::/15)S
/F4 SF ( \340)S
0 202.16 M(travers le tunnel.)S
0 175.76 M(Les tunnels GRE constituent actuellement le type de tunnel pr\351f\351r\351. C'est un standard qui est largement)S
0 162.56 M(adopt\351, m\352me \340 l'ext\351rieur de la communaut\351 Linux, ce qui constitue une bonne raison de l'utiliser.)S
15.8 FS/F9 SF 0 129.32 M(Tunnels dans l'espace utilisateur)S
11 FS/F4 SF 0 101.952 M(Il y a des dizaines d'impl\351mentations de tunnels \340 l'ext\351rieur du noyau. Les plus connues sont bien s\373r PPP et)S
0 88.752 M(PPTP, mais il y en a bien plus \(certaines propri\351taires, certaines s\351curis\351s, d'autres qui n'utilisent pas IP\), qui)S
0 75.552 M(d\351passent le cadre de ce HOWTO.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(18)S
416.677 0 M(Le tunnel IPv4)S
GR
SP
%%Page: (19) 19
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 574.981 M 487.0 2.0 F
19 FS/F9 SF 0 728.992 M(Chapitre 6. Tunnel IPv6 avec Cisco et/ou une dorsale)S
0 706.182 M(IPv6 \(6bone\))S
11 FS/F4 SF 0 678.181 M(Par Marco Davids <marco@sara.nl>)S
0 651.781 M(NOTE au mainteneur :)S
0 625.381 M(En ce qui me concerne, ce tunnel IPv6-IPv4 n'est pas, par d\351finition, un tunnel GRE. Vous pouvez r\351aliser un)S
0 612.181 M(tunnel IPv6 sur IPv4 au moyen des p\351riph\351riques tunnels GRE \(tunnels GRE)S
/F6 SF ( N'IMPORTE QUOI)S
/F4 SF ( vers IPv4\),)S
0 598.981 M(mais le p\351riph\351rique utilis\351 ici \()S
/F0 SF (sit)S
/F4 SF (\) ne permet que des tunnels IPv6 sur IPv4, ce qui est quelque chose de)S
0 585.781 M(diff\351rent.)S
15.8 FS/F9 SF 0 552.541 M(Tunnel IPv6)S
11 FS/F4 SF 0 525.173 M(Voici une autre application des possibilit\351s de tunnels de Linux. Celle-ci est populaire parmi les premiers)S
0 511.973 M(adeptes d'IPv6 ou les pionniers si vous pr\351f\351rez. L'exemple pratique d\351crit ci-dessous n'est certainement pas la)S
0 498.773 M(seule mani\350re de r\351aliser un tunnel IPv6. Cependant, c'est la m\351thode qui est souvent utilis\351e pour r\351aliser un)S
0 485.573 M(tunnel entre Linux et un routeur Cisco IPv6 et l'exp\351rience m'a appris que c'est ce type d'\351quipement que)S
0 472.373 M(beaucoup de personnes ont. Dix contre un que ceci s'appliquera aussi pour vous ;-\).)S
0 445.973 M(De petites choses \340 propos des adresses IPv6 :)S
0 419.573 M(Les adresses IPv6 sont, en comparaison avec les adresses IPv4, vraiment grandes : 128 bits contre 32 bits. Et)S
0 406.373 M(ceci nous fournit la chose dont nous avons besoin : beaucoup, beaucoup d'adresses IP :)S
0 393.173 M(340,282,266,920,938,463,463,374,607,431,768,211,465 pour \352tre pr\351cis. A part ceci, IPv6 \(ou IPng)S
0 379.973 M(g\351n\351ration suivante \()S
/F6 SF (Next Generation)S
/F4 SF (\)\) est suppos\351 fournir des tables de routage plus petites sur les routeurs)S
0 366.773 M(des dorsales Internet, une configuration plus simple des \351quipements, une meilleure s\351curit\351 au niveau IP et)S
0 353.573 M(un meilleur support pour la Qualit\351 de Service \(QoS\).)S
0 327.172 M(Un exemple : )S
/F0 SF (2002:836b:9820:0000:0000:0000:836b:9886)S
/F4 SF 0 300.772 M(Ecrire les adresses IPv6 peut \352tre un peu lourd. Il existe donc des r\350gles qui rendent la vie plus facile :)S
36 274.372 M(Ne pas utiliser les z\351ros de t\352te, comme dans IPv4 ;)S
/F18 SF 28.19 274.372 M(\267 )S
/F4 SF 36 261.172 M(Utiliser des double-points de s\351paration tous les 16 bits ou 2 octets ;)S
/F18 SF 28.19 261.172 M(\267 )S
/F4 SF 36 247.972 M(Quand vous avez beaucoup de z\351ros cons\351cutifs, vous pouvez \351crire )S
/F0 SF (::)S
/F4 SF (. Vous ne pouvez, cependant,)S
36 234.772 M(faire cela qu'une seule fois par adresse et seulement pour une longueur de 16 bits.)S
/F18 SF 28.19 247.972 M(\267 )S
/F4 SF 0 208.372 M(L'adresse )S
/F0 SF (2002:836b:9820:0000:0000:0000:836b:9886)S
/F4 SF ( peut \352tre \351crite)S
/F0 SF 0 195.172 M(2002:836b:9820::836b:9886)S
/F4 SF (, ce qui est plus amical.)S
0 168.772 M(Un autre exemple : l'adresse )S
/F0 SF (3ffe:0000:0000:0000:0000:0000:34A1:F32C)S
/F4 SF ( peut \352tre \351crite)S
/F0 SF 0 155.572 M(3ffe::20:34A1:F32C)S
/F4 SF (, ce qui est beaucoup plus court.)S
0 129.172 M(IPv6 a pour but d'\352tre le successeur de l'actuel IPv4. Dans la mesure o\371 cette technologie est relativement)S
0 115.972 M(r\351cente, il n'y a pas encore de r\351seau natif IPv6 \340 l'\351chelle mondiale. Pour permettre un d\351veloppement rapide,)S
0 102.772 M(la dorsale IPv6 \(6bone\) a \351t\351 introduite.)S
0 76.372 M(Les r\351seaux natifs IPv6 sont interconnect\351s gr\342ce \340 l'encapsulation du protocole IPv6 dans des paquets IPv4,)S
0 63.172 M(qui sont envoy\351s \340 travers l'infrastructure IPv4 existante, d'un site IPv6 \340 un autre.)S
0 36.772 M(C'est dans cette situation que l'on monte un tunnel.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Chapitre 6. Tunnel IPv6 avec Cisco et/ou une dorsale IPv6 \(6bone\))S
474.768 0 M(19)S
GR
SP
%%Page: (20) 20
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 11 FS/F4 SF 0 737 M(Pour \352tre capable d'utiliser IPv6, vous devrez avoir un noyau qui le supporte. Il y a beaucoup de bons)S
0 723.8 M(documents qui expliquent la mani\350re de r\351aliser cela. Mais, tout se r\351sume \340 quelques \351tapes :)S
36 697.4 M(R\351cup\351rer une distribution Linux r\351cente, avec une glibc convenable.)S
/F18 SF 28.19 697.4 M(\267 )S
/F4 SF 36 684.2 M(R\351cup\351rer alors les sources \340 jour du noyau.)S
/F18 SF 28.19 684.2 M(\267 )S
/F4 SF 0 657.8 M(Si tout cela est fait, vous pouvez alors poursuivre en compilant un noyau supportant l'IPv6 :)S
36 631.4 M(Aller dans )S
/F0 SF (/usr/src/linux)S
/F4 SF ( et tapez :)S
/F18 SF 28.19 631.4 M(\267 )S
/F1 SF 36 618.2 M(make menuconfig)S
/F18 SF 28.19 618.2 M(\267 )S
/F4 SF 36 605 M(Choisir )S
/F0 SF (Networking Options)S
/F18 SF 28.19 605 M(\267 )S
/F4 SF 36 591.8 M(S\351lectionner )S
/F0 SF (The IPv6 protocol)S
/F4 SF (, )S
/F0 SF (IPv6: enable EUI-64 token format)S
/F4 SF (, )S
/F0 SF (IPv6:)S
36 578.6 M(disable provider based addresses)S
/F18 SF 28.19 591.8 M(\267 )S
/F4 SF 0 525.8 M(ASTUCE :Ne compiler pas ces options en tant que module. Ceci ne marchera souvent pas bien.)S
0 499.4 M(En d'autres termes, compilez IPv6 directement dans votre noyau. Vous pouvez alors sauvegarder votre)S
0 486.2 M(configuration comme d'habitude et entreprendre la compilation de votre noyau.)S
0 459.8 M(ASTUCE: Avant de faire cela, modifier votre Makefile comme suit : )S
/F0 SF (EXTRAVERSION = -x ; --> ;)S
0 446.6 M(EXTRAVERSION = -x-IPv6)S
/F4 SF 0 420.2 M(Il y a beaucoup de bonnes documentations sur la compilation et l'installation d'un noyau. Cependant, ce)S
0 407 M(document ne traite pas de ce sujet. Si vous rencontrez des probl\350mes \340 ce niveau, allez et recherchez dans la)S
0 393.8 M(documentation des renseignements sur la compilation du noyau Linux correspondant \340 vos propres)S
0 380.6 M(sp\351cifications.)S
0 354.2 M(Le fichier )S
/F0 SF (/usr/src/linux/README)S
/F4 SF ( peut constituer un bon d\351part. Apr\350s avoir r\351alis\351 tout ceci, et)S
0 341 M(red\351marr\351 avec votre nouveau noyau flambant neuf, vous pouvez lancer la commande)S
/F5 SF ( /sbin/ifconfig -a)S
/F4 SF ( et)S
0 327.8 M(noter un nouveau p\351riph\351rique )S
/F0 SF (sit0)S
/F4 SF (. SIT signifie Transition Simple d'Internet \()S
/F6 SF (Simple Internet Transition)S
/F4 SF (\).)S
0 314.6 M(Vous pouvez vous auto complimenter : vous avez maintenant franchi une \351tape importante vers IP, la)S
0 301.4 M(prochaine g\351n\351ration ;-\))S
0 275 M(Passons maintenant \340 l'\351tape suivante. Vous voulez connecter votre h\364te ou peut-\352tre m\352me tout votre r\351seau)S
0 261.8 M(LAN \340 d'autres r\351seaux IPv6. Cela pourrait \352tre la dorsale IPv6 << 6bone >> qui a \351t\351 sp\351cialement mise en)S
0 248.6 M(place dans ce but particulier.)S
0 222.2 M(Supposons que vous avez le r\351seau IPv6 suivant : )S
/F0 SF (3ffe:604:6:8::/64)S
/F4 SF ( et que vous vouliez le connecter \340)S
0 209 M(une dorsale IPv6 ou \340 un ami. Notez, s'il vous pla\356t, que la notation sous-r\351seau )S
/F0 SF (/64)S
/F4 SF ( est similaire \340 celle des)S
0 195.8 M(adresses IPv4.)S
0 169.4 M(Votre adresse IPv4 est )S
/F0 SF (145.100.24.181)S
/F4 SF ( et le routeur 6bone a l'adresse IPv4 )S
/F0 SF (145.100.1.5)S
/F4 SF (.)S
9.2 FS/F0 SF 0 144.833 M(# ip tunnel add sixbone mode sit remote 145.100.1.5 [local 145.100.24.181 ttl 225])S
0 133.833 M(# ip link set sixbone up)S
0 122.833 M(# ip addr add 3FFE:604:6:7::2/96 dev sixbone)S
0 111.833 M(# ip route add 3ffe::0/15 dev sixbone)S
11 FS/F4 SF 0 85.8 M(Discutons de ceci. Dans la premi\350re ligne, nous avons cr\351\351 un p\351riph\351rique appel\351 )S
/F0 SF (sixbone)S
/F4 SF (. Nous lui avons)S
0 72.6 M(donn\351 l'attribut )S
/F0 SF (sit)S
/F4 SF ( \()S
/F0 SF (mode sit)S
/F4 SF (\) \(qui est le tunnel IPv6 dans IPv4\) et nous lui avons dit o\371 aller \()S
/F0 SF (remote)S
/F4 SF (\))S
0 59.4 M(et d'o\371 nous venions \()S
/F0 SF (local)S
/F4 SF (\). )S
/F0 SF (TTL)S
/F4 SF ( est configur\351 \340 son maximum, 255.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(20)S
428.304 0 M(Tunnel IPv6)S
GR
SP
%%Page: (21) 21
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 125.6 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(Ensuite, nous avons rendu le p\351riph\351rique actif \()S
/F0 SF (up)S
/F4 SF (\). Apr\350s cela, nous avons ajout\351 notre propre adresse)S
0 723.8 M(r\351seau et configur\351 une route pour )S
/F0 SF (3ffe::/15)S
/F4 SF ( \(qui est actuellement la totalit\351 du 6bone\) \340 travers le tunnel.)S
0 710.6 M(Si la machine sur laquelle vous mettez en place tout ceci est votre passerelle IPv6, ajoutez alors les lignes)S
0 697.4 M(suivantes :)S
9.2 FS/F0 SF 0 672.833 M(# echo 1 >/proc/sys/net/ipv6/conf/all/forwarding)S
0 661.833 M(# /usr/local/sbin/radvd)S
11 FS/F4 SF 0 635.8 M(En derni\350re instruction, radvd est un d\351mon d'annonce comme zebra qui permet de supporter les)S
0 622.6 M(fonctionnalit\351s d'autoconfiguration d'IPv6. Recherchez le avec votre moteur de recherche favori. Vous pouvez)S
0 609.4 M(v\351rifier les choses comme ceci :)S
9.2 FS/F0 SF 0 584.833 M(# /sbin/ip -f inet6 addr)S
11 FS/F4 SF 0 558.8 M(Si vous arrivez \340 avoir radvd tournant sur votre passerelle IPv6 et que vous d\351marrez une machine avec IPv6)S
0 545.6 M(sur votre r\351seau local, vous serez ravi de voir les b\351n\351fices de l'autoconfiguration IPv6 :)S
9.2 FS/F0 SF 0 521.033 M(# /sbin/ip -f inet6 addr)S
0 510.033 M(1: lo: <LOOPBACK,UP> mtu 3924 qdisc noqueue inet6 ::1/128 scope host)S
0 488.033 M(3: eth0: <BROADCAST,MULTICAST,UP> mtu 1500 qdisc pfifo_fast qlen 100)S
0 477.033 M(inet6 3ffe:604:6:8:5054:4cff:fe01:e3d6/64 scope global dynamic)S
0 466.033 M(valid_lft forever preferred_lft 604646sec inet6 fe80::5054:4cff:fe01:e3d6/10 )S
0 455.033 M(scope link)S
11 FS/F4 SF 0 429 M(Vous pouvez maintenant configurer votre serveur de noms pour les adresses IPv6. Le type )S
/F0 SF (A)S
/F4 SF ( a un \351quivalent)S
0 415.8 M(pour IPv6 : )S
/F0 SF (AAAA)S
/F4 SF (. L'\351quivalent de )S
/F0 SF (in-addr.arpa)S
/F4 SF ( est : )S
/F0 SF (ip6.int)S
/F4 SF (. Il y a beaucoup d'informations)S
0 402.6 M(disponibles sur ce sujet.)S
0 376.2 M(Il y a un nombre croissant d'applications IPv6 disponibles, comme le shell s\351curis\351, telnet, inetd, le navigateur)S
0 363 M(Mozilla, le serveur web Apache et beaucoup d'autres. Mais ceci est en dehors du sujet de ce document de)S
0 349.8 M(routage ;-\).)S
0 323.4 M(Du c\364t\351 Cisco, la configuration ressemblera \340 ceci :)S
9.2 FS/F0 SF 0 298.833 M(!)S
0 287.833 M(interface Tunnel1)S
0 276.833 M(description IPv6 tunnel)S
0 265.833 M(no ip address)S
0 254.833 M(no ip directed-broadcast)S
0 243.833 M(ipv6 address 3FFE:604:6:7::1/96)S
0 232.833 M(tunnel source Serial0)S
0 221.833 M(tunnel destination 145.100.24.181)S
0 210.833 M(tunnel mode ipv6ip)S
0 199.833 M(!)S
0 188.833 M(ipv6 route 3FFE:604:6:8::/64 Tunnel1)S
11 FS/F4 SF 0 162.8 M(Si vous n'avez pas un Cisco \340 votre disposition, essayez un des prestataires de tunnel IPv6 disponible sur)S
0 149.6 M(Internet. Ils sont pr\352ts \340 configurer leur Cisco avec un tunnel suppl\351mentaire pour vous, le plus souvent au)S
0 136.4 M(moyen d'une agr\351able interface web. Cherchez)S
/F6 SF ( ipv6 tunnel broker)S
/F4 SF ( avec votre moteur de recherche favori.)S
19 FS/F9 SF 0 99.992 M(Chapitre 7. IPSEC: IP s\351curis\351 \340 travers Internet)S
11 FS/F4 SF 0 71.99 M(A ce jour, deux versions d'IPSEC sont disponibles pour Linux. FreeS/WAN, qui f\373t la premi\350re)S
0 58.79 M(impl\351mentation majeure, existe pour les noyaux Linux 2.2 et 2.4. Ce projet a un site officiel et \351galement un)S
0 45.59 M(site non officiel, qui est bien maintenu. FreeS/WAN n'a jamais \351t\351 int\351gr\351 dans le noyau pour un certain)S
0 32.39 M(nombre de raisons. Celle qui est la plus souvent mentionn\351e concerne un probl\350me "politique" avec les)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Chapitre 7. IPSEC: IP s\351curis\351 \340 travers Internet)S
474.768 0 M(21)S
GR
SP
%%Page: (22) 22
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 431.2 M 487.7 0.7 F
0 415.135 M 0.7 16.8 F
487 415.135 M 0.7 16.8 F
0 415.135 M 487.7 0.7 F
0 415.135 M 487.7 0.7 F
0 385.87 M 0.7 30.0 F
487 385.87 M 0.7 30.0 F
0 385.87 M 487.7 0.7 F
0 284.87 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(am\351ricains travaillant sur la cryptographie qui freinent son exportabilit\351. De plus, la mise en place de)S
0 723.8 M(FreeS/WAN dans le noyau Linux est d\351licate, ce qui n'en fait pas un bon candidat pour une r\351elle int\351gration.)S
0 697.4 M(De plus, des personnes se sont inqui\351t\351es de la qualit\351 du code. Pour configurer FreeS/WAN, de nombreuses)S
0 684.2 M(documentations sont disponibles.)S
0 657.8 M(Une impl\351mentation native d'IPSEC est pr\351sente dans le noyau \340 partir de la version Linux 2.5.47. Elle a \351t\351)S
0 644.6 M(\351crite par Alexey Kuznetsov et Dave Miller, qui se sont inspir\351s des travaux du groupe USAGI IPv6. Avec)S
0 631.4 M(cette fusion, les CryptoAPI de James Morris deviennent \351galement une partie du noyau, qui fait ainsi vraiment)S
0 618.2 M(du cryptage.)S
0 591.8 M(Ce HOWTO ne documente que la version 2.5 d'IPSEC. FreeS/WAN est recommand\351 pour l'instant pour les)S
0 578.6 M(utilisateurs de Linux 2.4. Fa\356tes cependant attention, dans la mesure o\371 sa configuration est diff\351rente de)S
0 565.4 M(l'IPSEC natif. Il y a maintenant une mise \340 jour qui permet au code FreeS/WAN de l'espace utilisateur de)S
0 552.2 M(fonctionner avec l'IPSEC natif de Linux.)S
0 525.8 M(A partir du noyau 2.5.49, IPSEC fonctionne sans l'ajout de mises \340 jour suppl\351mentaires.)S
/F5 SF 36 499.4 M(Note :)S
/F4 SF ( Les outils de l'espace utilisateur sont disponibles ici. Il y a plusieurs programmes)S
36 486.2 M(disponibles ; celui qui est propos\351 dans le lien est bas\351 sur Racoon.)S
36 459.8 M(Lors de la compilation du noyau, soyez s\373r d'activer 'PF_KEY', 'AH' et tous les \351l\351ments de)S
36 446.6 M(CryptoAPI !)S
/F5 SF 209.9 418.767 M(Avertissement)S
/F4 SF 1.432 402.703 M(L'auteur de ce chapitre est un complet nigaud en ce qui concerne IPSEC ! Si vous trouvez les in\351vitables)S
1.432 389.503 M(erreurs, envoyez un courrier \351lectronique \340 Bert Hubert )S
/F0 SF (<ahu@ds9a.nl>)S
/F4 SF (.)S
0 361.67 M(Tout d'abord, nous montrerons comment configurer manuellement une communication s\351curis\351e entre deux)S
0 348.47 M(h\364tes. Une grande partie de ce processus peut \352tre automatis\351e, mais nous le ferons ici \340 la main afin de)S
0 335.27 M(comprendre ce qui se passe "sous le capot".)S
0 308.87 M(Passez \340 la section suivante si la seule gestion automatique des cl\351s vous int\351resse. Soyez cependant conscient)S
0 295.67 M(que la compr\351hension de la gestion manuelle des cl\351s est utile.)S
15.8 FS/F9 SF 0 262.43 M(Introduction sur la gestion manuelle des cl\351s)S
11 FS/F4 SF 0 235.062 M(IPSEC est un sujet compliqu\351. De nombreuses informations sont disponibles en ligne. Ce HOWTO se)S
0 221.862 M(concentrera sur la mise en place et \340 l'explication des principes de base. Tous les exemples sont bas\351s sur)S
0 208.662 M(Racoon dont le lien est donn\351 au-dessus.)S
/F5 SF 36 182.262 M(Note :)S
/F4 SF ( Certaines configurations iptables rejettent les paquets IPSEC ! Pour transmettre)S
36 169.062 M(IPSEC, utilisez :)S
/F5 SF ( iptables -A xxx -p 50 -j ACCEPT)S
/F4 SF ( et)S
/F5 SF ( 'iptables -A xxx -p 51 -j ACCEPT)S
/F4 SF (.)S
0 142.662 M(IPSEC offre une version s\351curis\351e de la couche IP \(Internet Protocol\). La s\351curit\351 dans ce contexte prend deux)S
0 129.462 M(formes : l'encryptage et l'authentification. Une vision na\357ve de la s\351curit\351 ne propose que le cryptage. On peut)S
0 116.262 M(cependant montrer facilement que c'est insuffisant : il se peut que vous ayez une communication crypt\351e, mais)S
0 103.062 M(vous n'avez aucune garantie que l'h\364te distant est bien celui auquel vous pensez.)S
0 76.662 M(IPSEC supporte 'Encapsulated Security Payload' \(Encapsulation S\351curis\351e de la Charge utile\) \(ESP\) pour le)S
0 63.462 M(cryptage et 'Authentication Header' \(Ent\352te d'Authentification\) \(AH\) pour authentifier le partenaire distant.)S
0 50.262 M(Vous pouvez configurer les deux, ou d\351cider de ne faire que l'un des deux.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(22)S
269.959 0 M(Introduction sur la gestion manuelle des cl\351s)S
GR
SP
%%Page: (23) 23
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 11 FS/F4 SF 0 737 M(ESP et AH s'appuient tous les deux sur des Associations de S\351curit\351 \(Security Associations \(SA\)\). Une)S
0 723.8 M(Association de S\351curit\351 \(SA\) consiste en une source, une destination et une instruction. Un exemple simple)S
0 710.6 M(d'Association de S\351curit\351 \(SA\) pour l'authentification peut ressembler \340 ceci :)S
9.2 FS/F0 SF 0 686.033 M(add 10.0.0.11 10.0.0.216 ah 15700 -A hmac-md5 "1234567890123456";)S
11 FS/F4 SF 0 649 M(Ceci indique que le trafic allant de )S
/F0 SF (10.0.0.11)S
/F4 SF ( vers )S
/F0 SF (10.0.0.216)S
/F4 SF ( a besoin d'un En-t\352te d'Authentification)S
0 635.8 M(\(AH\) qui peut \352tre sign\351 en utilisant HMAC-MD et le secret )S
/F0 SF (1234567890123456)S
/F4 SF (. Cette instruction est)S
0 622.6 M(rep\351r\351e par l'identificateur SPI \()S
/F6 SF (Security Parameter Index\))S
/F0 SF 260.095 622.6 M(15700)S
/F4 SF (, dont nous parlerons plus par la suite. Le)S
0 609.4 M(point int\351ressant \340 propos des Associations de S\351curit\351 \(SA\) est qu'elles sont sym\351triques. Les deux cot\351s de)S
0 596.2 M(la conversation partagent exactement la m\352me Association de S\351curit\351 \(SA\), qui n'est pas recopi\351e sur l'h\364te)S
0 583 M(distant. Notez cependant qu'il n'y a pas de r\350gles "d'inversion automatique". Cette Association de S\351curit\351)S
0 569.8 M(\(SA\) d\351crit une authentification possible de )S
/F0 SF (10.0.0.11)S
/F4 SF ( vers )S
/F0 SF (10.0.0.216)S
/F4 SF (. Pour un trafic bidirectionnel,)S
0 556.6 M(deux Associations de S\351curit\351 \(SA\) sont n\351cessaires.)S
0 530.2 M(Un exemple d'Association de S\351curit\351 \(SA\) pour le cryptage ESP :)S
9.2 FS/F0 SF 0 505.633 M(add 10.0.0.11 10.0.0.216 esp 15701 -E 3des-cbc "123456789012123456789012";)S
11 FS/F4 SF 0 468.6 M(Ceci signifie que le trafic allant de )S
/F0 SF (10.0.0.11)S
/F4 SF ( vers )S
/F0 SF (10.0.0.216)S
/F4 SF ( est chiffr\351 en utilisant 3des-cbc avec la)S
0 455.4 M(cl\351 )S
/F0 SF (123456789012123456789012)S
/F4 SF (. L'identificateur SPI est )S
/F0 SF (15701)S
/F4 SF (.)S
0 429 M(Jusqu'ici, nous avons vu que les Associations de S\351curit\351 \(SA\) d\351crivent les instructions possibles, mais pas la)S
0 415.8 M(politique qui indique quand ces SA doivent \352tre utilis\351es. En fait, il pourrait y avoir un nombre arbitraire de)S
0 402.6 M(SA presques identiques ne se diff\351renciant que par les identificateurs SPI. Entre parenth\350ses, SPI signifie)S
/F6 SF 0 389.4 M(Security Parameter Index)S
/F4 SF (, ou Index du Param\350tre de S\351curit\351 en fran\347ais. Pour faire vraiment du cryptage,)S
0 376.2 M(nous devons d\351crire une politique. Cette politique peut inclure des choses comme "utiliser ipsec s'il est)S
0 363 M(disponible" ou "rejeter le trafic \340 moins que vous ayez ipsec".)S
0 336.6 M(Une "Politique de S\351curit\351" \(Security Policy \(SP\)\) typique ressemble \340 ceci :)S
9.2 FS/F0 SF 0 312.033 M(spdadd 10.0.0.216 10.0.0.11 any -P out ipsec)S
0 301.033 M(   esp/transport//require)S
0 290.033 M(   ah/transport//require;)S
11 FS/F4 SF 0 253 M(Si cette configuration est appliqu\351e sur l'h\364te )S
/F0 SF (10.0.0.216)S
/F4 SF (, cela signifie que tout le trafic allant vers)S
/F0 SF 0 239.8 M(10.0.0.11)S
/F4 SF ( doit \352tre encrypt\351 et encapsul\351 dans un en-t\352te d'authentification AH. Notez que ceci ne d\351crit)S
0 226.6 M(pas quelle SA sera utilis\351e. Cette d\351termination est un exercice laiss\351 \340 la charge du noyau.)S
0 200.2 M(En d'autres termes, une Politique de S\351curit\351 sp\351cifie CE QUE nous voulons ; une Association de S\351curit\351)S
0 187 M(d\351crit COMMENT nous le voulons.)S
0 160.6 M(Les paquets sortants sont \351tiquet\351s avec le SPI SA \('le comment'\) que le noyau utilise pour l'encryptage et)S
0 147.4 M(l'authentification et l'h\364te distant peut consulter les instructions de v\351rification et de d\351cryptage)S
0 134.2 M(correspondantes.)S
0 107.8 M(Ce qui suit est une configuration tr\350s simple permettant le dialogue de l'h\364te )S
/F0 SF (10.0.0.216)S
/F4 SF ( vers l'h\364te)S
/F0 SF 0 94.6 M(10.0.0.11)S
/F4 SF ( en utilisant l'encryptage et l'authentification. Notez que le trafic de retour de cette premi\350re)S
0 81.4 M(version est en clair et que cette configuration ne doit pas \352tre d\351ploy\351e.)S
0 55 M(Sur l'h\364te )S
/F0 SF (10.0.0.216)S
/F4 SF ( :)S
9.2 FS/F0 SF 0 30.433 M(#!/sbin/setkey -f)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Introduction sur la gestion manuelle des cl\351s)S
474.768 0 M(23)S
GR
SP
%%Page: (24) 24
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 9.2 FS/F0 SF 0 738.833 M(add 10.0.0.216 10.0.0.11 ah 24500 -A hmac-md5 "1234567890123456";          )S
0 727.833 M(add 10.0.0.216 10.0.0.11 esp 24501 -E 3des-cbc "123456789012123456789012";)S
0 705.833 M(spdadd 10.0.0.216 10.0.0.11 any -P out ipsec)S
0 694.833 M(   esp/transport//require)S
0 683.833 M(   ah/transport//require;)S
11 FS/F4 SF 0 646.8 M(Sur l'h\364te 10.0.0.11, nous donnons les m\352mes Associations de S\351curit\351 \(SA\). Nous ne donnons pas de)S
0 633.6 M(Politique de S\351curit\351 :)S
9.2 FS/F0 SF 0 609.033 M(#!/sbin/setkey -f)S
0 598.033 M(add 10.0.0.216 10.0.0.11 ah 24500 -A hmac-md5 "1234567890123456";)S
0 587.033 M(add 10.0.0.216 10.0.0.11 esp 24501 -E 3des-cbc "123456789012123456789012";)S
11 FS/F4 SF 0 550 M(Avec la mise en place de la configuration ci-dessus \(ces fichiers peuvent \352tre ex\351cut\351s si 'setkey' est install\351)S
0 536.8 M(dans /sbin\), la commande)S
/F5 SF ( ping 10.0.0.11)S
/F4 SF ( ex\351cut\351e sur 10.0.0.216 va donner la sortie suivante avec tcpdump :)S
9.2 FS/F0 SF 0 512.233 M(22:37:52 10.0.0.216 > 10.0.0.11: AH\(spi=0x00005fb4,seq=0xa\): ESP\(spi=0x00005fb5,seq=0xa\) \(DF\))S
0 501.233 M(22:37:52 10.0.0.11 > 10.0.0.216: icmp: echo reply)S
11 FS/F4 SF 0 464.2 M(Notez que le paquet de retour provenant de 10.0.0.11 est en effet compl\350tement visible. Le paquet ping \351mis)S
0 451 M(par 10.0.0.216 ne peut \351videmment pas \352tre lu par tcpdump, mais celui-ci montre l'Index du Param\350tre de)S
0 437.8 M(S\351curit\351 \(SPI\) de l'AH, ainsi que l'ESP, qui indique \340 10.0.0.11 comment v\351rifier l'authenticit\351 de notre paquet)S
0 424.6 M(et comment le d\351crypter.)S
0 398.2 M(Quelques \351l\351ments doivent \352tre mentionn\351s. La configuration ci-dessus est propos\351e dans de nombreux)S
0 385 M(exemples d'IPSEC, mais elle est tr\350s dangereuse. Le probl\350me est qu'elle contient la politique indiquant \340)S
0 371.8 M(10.0.0.216 comment traiter les paquets allant vers 10.0.0.11 et comment 10.0.0.11 doit traiter ces paquets,)S
0 358.6 M(mais ceci n'INDIQUE pas \340 10.0.0.11 de rejeter le trafic non authentifi\351 et non encrypt\351 !)S
0 332.2 M(N'importe qui peut maintenant ins\351rer des donn\351es "spoof\351es" \(NdT : usurp\351es\) et enti\350rement non crypt\351es)S
0 319 M(que 10.0.0.1 acceptera. Pour rem\351dier \340 ceci, nous devons avoir sur 10.0.0.11 une Politique de S\351curit\351 pour)S
0 305.8 M(le trafic entrant :)S
9.2 FS/F0 SF 0 281.233 M(#!/sbin/setkey -f )S
0 270.233 M(spdadd 10.0.0.216 10.0.0.11 any -P IN ipsec)S
0 259.233 M(   esp/transport//require)S
0 248.233 M(   ah/transport//require;)S
11 FS/F4 SF 0 211.2 M(Ceci indique \340 10.0.0.11 que tout le trafic venant de 10.0.0.216 n\351cessite d'avoir un ESP et AH valide.)S
0 184.8 M(Maintenant, pour compl\351ter cette configuration, nous devons \351galement renvoyer un trafic encrypt\351 et)S
0 171.6 M(authentifi\351. La configuration compl\350te sur 10.0.0.216 est la suivante :)S
9.2 FS/F0 SF 0 147.033 M(#!/sbin/setkey -f)S
0 136.033 M(flush;)S
0 125.033 M(spdflush;)S
0 103.033 M(# AH)S
0 92.033 M(add 10.0.0.11 10.0.0.216 ah 15700 -A hmac-md5 "1234567890123456";)S
0 81.033 M(add 10.0.0.216 10.0.0.11 ah 24500 -A hmac-md5 "1234567890123456";)S
0 59.033 M(# ESP)S
0 48.033 M(add 10.0.0.11 10.0.0.216 esp 15701 -E 3des-cbc "123456789012123456789012";)S
0 37.033 M(add 10.0.0.216 10.0.0.11 esp 24501 -E 3des-cbc "123456789012123456789012";)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(24)S
269.959 0 M(Introduction sur la gestion manuelle des cl\351s)S
GR
SP
%%Page: (25) 25
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 279.6 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(spdadd 10.0.0.216 10.0.0.11 any -P out ipsec)S
0 727.833 M(           esp/transport//require)S
0 716.833 M(           ah/transport//require;)S
0 694.833 M(spdadd 10.0.0.11 10.0.0.216 any -P in ipsec)S
0 683.833 M(           esp/transport//require)S
0 672.833 M(           ah/transport//require;)S
11 FS/F4 SF 0 624.8 M(Et sur 10.0.0.11 :)S
9.2 FS/F0 SF 0 600.233 M(#!/sbin/setkey -f)S
0 589.233 M(flush;)S
0 578.233 M(spdflush;)S
0 556.233 M(# AH)S
0 545.233 M(add 10.0.0.11 10.0.0.216 ah 15700 -A hmac-md5 "1234567890123456";)S
0 534.233 M(add 10.0.0.216 10.0.0.11 ah 24500 -A hmac-md5 "1234567890123456";)S
0 512.233 M(# ESP)S
0 501.233 M(add 10.0.0.11 10.0.0.216 esp 15701 -E 3des-cbc "123456789012123456789012";)S
0 490.233 M(add 10.0.0.216 10.0.0.11 esp 24501 -E 3des-cbc "123456789012123456789012";)S
0 457.233 M(spdadd 10.0.0.11 10.0.0.216 any -P out ipsec)S
0 446.233 M(           esp/transport//require)S
0 435.233 M(           ah/transport//require;)S
0 413.233 M(spdadd 10.0.0.216 10.0.0.11 any -P in ipsec)S
0 402.233 M(           esp/transport//require)S
0 391.233 M(           ah/transport//require;)S
11 FS/F4 SF 0 343.2 M(Notez que, dans cet exemple, nous avons utilis\351 des cl\351s identiques pour les deux directions du trafic. Ceci)S
0 330 M(n'est cependant en aucun cas exig\351.)S
0 303.6 M(Pour examiner la configuration que nous venons de cr\351er, ex\351cuter)S
/F5 SF ( setkey -D)S
/F4 SF (, qui montre les SA ou)S
/F5 SF ( setkey)S
0 290.4 M(-DP)S
/F4 SF ( qui montre les politiques configur\351es.)S
15.8 FS/F9 SF 0 257.16 M(Gestion automatique des cl\351s)S
11 FS/F4 SF 0 229.792 M(Dans la section pr\351c\351dente, l'encryptage \351tait configur\351 pour utiliser simplement le partage de secrets. En)S
0 216.592 M(d'autres termes, pour rester s\351curis\351, nous devons transf\351rer la configuration de notre encryptage \340 travers un)S
0 203.392 M(tunnel s\351curis\351. Si nous avons configur\351 l'h\364te distant par telnet, n'importe quel tiers pourrait avoir pris)S
0 190.192 M(connaissance de notre secret partag\351 et, ainsi, notre configuration ne serait plus s\373re.)S
0 163.792 M(De plus, puisque le secret est partag\351, ce n'est pas un secret. L'h\364te distant ne peut pas en faire grand chose,)S
0 150.592 M(mais nous devons \352tre s\373rs d'utiliser un secret diff\351rent pour les communications avec tous nos partenaires.)S
0 137.392 M(Ceci n\351cessite un grand nombre de cl\351s. Pour 10 partenaires, nous devrions avoir au moins 50 secrets)S
0 124.192 M(diff\351rents.)S
0 97.792 M(En plus du probl\350me des cl\351s sym\351triques, le renouvellement des cl\351s est \351galement n\351cessaire. Si un tiers)S
0 84.592 M(\351coute suffisamment le trafic, il peut \352tre en position de retrouver la cl\351 par r\351tro ing\351nierie. On peut s'en)S
0 71.392 M(pr\351munir en modifiant la cl\351 de temps en temps, mais ce processus a besoin d'\352tre automatis\351.)S
0 44.992 M(Un autre probl\350me est que la gestion manuelle des cl\351s d\351crite au-dessus impose de d\351finir pr\351cis\351ment les)S
0 31.792 M(algorithmes et les longueurs de cl\351s utilis\351es, ce qui n\351cessite une grande coordination avec l'h\364te distant. Il)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Gestion automatique des cl\351s)S
474.768 0 M(25)S
GR
SP
%%Page: (26) 26
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 567.8 M 487.0 2.0 F
0 378.36 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(serait pr\351f\351rable d'avoir la capacit\351 \340 d\351crire une politique des cl\351s plus large comme par exemple "Nous)S
0 723.8 M(pouvons faire du 3DES et du Blowfish avec les longueurs de cl\351s suivantes".)S
0 697.4 M(Pour r\351soudre ces probl\350mes, IPSEC fournit l'Echange de Cl\351 sur Internet \(Internet Key Echange \(IKE\)\))S
0 684.2 M(permettant d'automatiser l'\351change de cl\351s g\351n\351r\351es al\351atoirement. Ces cl\351s sont transmises en utilisant une)S
0 671 M(technologie d'encryptage asym\351trique n\351goci\351e.)S
0 644.6 M(L'impl\351mentation IPSEC de Linux 2.5 fonctionne avec le d\351mon IKE "KAME racoon". Depuis le 9)S
0 631.4 M(novembre, la version de racoon pr\351sente la distribution iptools d'Alexey peut \352tre compil\351e en supprimant, au)S
0 618.2 M(pr\351alable #include <net/route.h> dans deux fichiers. Je fournis une version pr\351compil\351e.)S
/F5 SF 36 591.8 M(Note :)S
/F4 SF ( L'Echange de Cl\351 sur Internet \(IKE\) doit avoir acc\350s au port UDP 500. Soyez s\373r que)S
36 578.6 M(iptables ne le bloque pas.)S
13.2 FS/F9 SF 0 548 M(Th\351orie)S
11 FS/F4 SF 0 521.16 M(Comme expliqu\351 avant, la gestion automatique des cl\351s r\351alise beaucoup d'op\351rations pour nous.)S
0 507.96 M(Sp\351cifiquement, il cr\351e \340 la vol\351e les Associations de S\351curit\351. Il ne configure cependant pas la politique pour)S
0 494.76 M(nous, ce qui est le fonctionnement attendu.)S
0 468.36 M(Donc, pour b\351n\351ficier de IKE, configurez une politique, mais ne fournissez aucune Association de S\351curit\351. Si)S
0 455.16 M(le noyau d\351couvre qu'il y a une politique IPSEC, mais pas d'Association de S\351curit\351, il va le notifier au d\351mon)S
0 441.96 M(IKE qui va chercher \340 en n\351gocier une.)S
0 415.56 M(De nouveau, rappelons que la Politique de S\351curit\351 sp\351cifie CE QUE nous voulons tandis que l'Association de)S
0 402.36 M(S\351curit\351 d\351crit COMMENT nous le voulons. L'utilisation de la gestion automatique des cl\351s nous permet de)S
0 389.16 M(ne sp\351cifier que ce que nous voulons.)S
13.2 FS/F9 SF 0 358.56 M(Exemple)S
11 FS/F4 SF 0 331.72 M(Kame racoon poss\350de un grand nombre d'options dont la plupart des valeurs par d\351faut sont corrects ; nous)S
0 318.52 M(n'avons donc pas besoin de les modifier. Comme nous l'avons dit auparavant, l'op\351rateur doit d\351finir une)S
0 305.32 M(Politique de S\351curit\351, mais pas d'Associations de S\351curit\351. Nous laissons cette n\351gociation au d\351mon IKE.)S
0 278.92 M(Dans cet exemple, 10.0.0.1 et 10.0.0.216 sont encore une fois sur le point d'\351tablir des communications)S
0 265.72 M(s\351curis\351es mais, cette fois, avec l'aide du d\351mon racoon. Par soucis de simplification, cette configuration)S
0 252.52 M(utilisera des cl\351s pr\351-partag\351es, les redout\351s 'secrets partag\351s'. Nous discuterons des certificats X.509 dans une)S
0 239.32 M(section \340 part. Voir la section intitul\351e)S
/F6 SF ( Gestion automatique des cl\351s en utilisant les certificats X.509)S
/F4 SF (>.)S
0 212.92 M(Nous allons \340 peu pr\350s rester fid\350le \340 la configuration par d\351faut, qui est identique sur les deux h\364tes :)S
9.2 FS/F0 SF 0 188.353 M(path pre_shared_key "/usr/local/etc/racoon/psk.txt";)S
0 166.353 M(remote anonymous)S
0 155.353 M({)S
0 144.353 M(        exchange_mode aggressive,main;)S
0 133.353 M(        doi ipsec_doi;)S
0 122.353 M(        situation identity_only;)S
0 100.353 M(        my_identifier address;)S
0 78.353 M(        lifetime time 2 min;   # sec,min,hour)S
0 67.353 M(        initial_contact on;)S
0 56.353 M(        proposal_check obey;    # obey, strict or claim)S
0 34.353 M(        proposal {)S
0 23.353 M(                encryption_algorithm 3des;)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(26)S
449.71 0 M(Th\351orie)S
GR
SP
%%Page: (27) 27
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 9.2 FS/F0 SF 0 738.833 M(                hash_algorithm sha1;)S
0 727.833 M(                authentication_method pre_shared_key;)S
0 716.833 M(                dh_group 2 ;)S
0 705.833 M(        })S
0 694.833 M(})S
0 672.833 M(sainfo anonymous)S
0 661.833 M({)S
0 650.833 M(        pfs_group 1;)S
0 639.833 M(        lifetime time 2 min;)S
0 628.833 M(        encryption_algorithm 3des ;)S
0 617.833 M(        authentication_algorithm hmac_sha1;)S
0 606.833 M(                compression_algorithm deflate ;)S
0 595.833 M(})S
11 FS/F4 SF 0 569.8 M(Beaucoup de param\350tres. Je pense que l'on peut encore en supprimer pour se rapprocher de la configuration)S
0 556.6 M(par d\351faut. Remarquons ici quelques \351l\351ments notables. Nous avons configur\351 deux sections "anonymous", ce)S
0 543.4 M(qui convient pour tous les h\364tes distants. Ceci va ainsi faciliter les configurations suppl\351mentaires. Il n'est pas)S
0 530.2 M(n\351cessaire d'avoir de sections sp\351cifiques \340 une machine particuli\350re, \340 moins que vous ne le vouliez vraiment.)S
0 503.8 M(De plus, la configuration pr\351cise que nous nous identifions gr\342ce \340 notre adresse IP \('my_identifier address'\) et)S
0 490.6 M(que nous pouvons faire du 3des, sha1 et que nous utiliserons une cl\351 "pr\351-partag\351e" se trouvant dans psk.txt.)S
0 464.2 M(Dans le fichier psk.txt, nous avons configur\351 deux entr\351es qui sont diff\351rentes suivant les h\364tes. Sur)S
0 451 M(10.0.0.11 :)S
9.2 FS/F0 SF 0 426.433 M(10.0.0.216      password2)S
11 FS/F4 SF 0 400.4 M(Sur 10.0.0.216 :)S
9.2 FS/F0 SF 0 375.833 M(10.0.0.11       password2)S
11 FS/F4 SF 0 349.8 M(Soyez s\373r que ces fichiers sont la propri\351t\351 de root, et qu'ils ont le mode 0600. Dans le cas contraire, racoon)S
0 336.6 M(ne pourra faire confiance \340 leur contenu. Notez que ces fichiers sont sym\351triques l'un de l'autre.)S
0 310.2 M(Nous sommes maintenant pr\352t \340 configurer notre politique qui est assez simple. Sur l'h\364te 10.0.0.216 :)S
9.2 FS/F0 SF 0 285.633 M(#!/sbin/setkey -f)S
0 274.633 M(flush;)S
0 263.633 M(spdflush;)S
0 241.633 M(spdadd 10.0.0.216 10.0.0.11 any -P out ipsec)S
0 230.633 M(        esp/transport//require;)S
0 208.633 M(spdadd 10.0.0.11 10.0.0.216 any -P in ipsec)S
0 197.633 M(        esp/transport//require;)S
11 FS/F4 SF 0 171.6 M(Et sur 10.0.0.11 :)S
9.2 FS/F0 SF 0 147.033 M(#!/sbin/setkey -f)S
0 136.033 M(flush;)S
0 125.033 M(spdflush;)S
0 103.033 M(spdadd 10.0.0.11 10.0.0.216 any -P out ipsec)S
0 92.033 M(        esp/transport//require;)S
0 70.033 M(spdadd 10.0.0.216 10.0.0.11 any -P in ipsec)S
0 59.033 M(        esp/transport//require;)S
11 FS/F4 SF 0 33 M(Noter que ces politiques sont encore une fois sym\351triques.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Exemple)S
474.768 0 M(27)S
GR
SP
%%Page: (28) 28
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 11 FS/F4 SF 0 737 M(Nous sommes maintenant pr\352t \340 lancer racoon ! Une fois lanc\351, au moment o\371 nous essayons une connexion)S
0 723.8 M(un telnet depuis 10.0.0.11 vers 10.0.0.216, ou l'inverse, racoon aura d\351marr\351 la n\351gociation :)S
9.2 FS/F0 SF 0 699.233 M(12:18:44: INFO: isakmp.c:1689:isakmp_post_acquire\(\): IPsec-SA)S
0 688.233 M(  request for 10.0.0.11 queued due to no phase1 found.)S
0 677.233 M(12:18:44: INFO: isakmp.c:794:isakmp_ph1begin_i\(\): initiate new)S
0 666.233 M(  phase 1 negotiation: 10.0.0.216[500]<=>10.0.0.11[500])S
0 655.233 M(12:18:44: INFO: isakmp.c:799:isakmp_ph1begin_i\(\): begin Aggressive mode.)S
0 644.233 M(12:18:44: INFO: vendorid.c:128:check_vendorid\(\): received Vendor ID: )S
0 633.233 M(  KAME/racoon)S
0 622.233 M(12:18:44: NOTIFY: oakley.c:2037:oakley_skeyid\(\): couldn't find)S
0 611.233 M(  the proper pskey, try to get one by the peer's address.)S
0 600.233 M(12:18:44: INFO: isakmp.c:2417:log_ph1established\(\): ISAKMP-SA)S
0 589.233 M(  established 10.0.0.216[500]-10.0.0.11[500] spi:044d25dede78a4d1:ff01e5b4804f0680)S
0 578.233 M(12:18:45: INFO: isakmp.c:938:isakmp_ph2begin_i\(\): initiate new phase 2 )S
0 567.233 M(  negotiation: 10.0.0.216[0]<=>10.0.0.11[0])S
0 556.233 M(12:18:45: INFO: pfkey.c:1106:pk_recvupdate\(\): IPsec-SA established: )S
0 545.233 M(  ESP/Transport 10.0.0.11->10.0.0.216 spi=44556347\(0x2a7e03b\))S
0 534.233 M(12:18:45: INFO: pfkey.c:1318:pk_recvadd\(\): IPsec-SA established:)S
0 523.233 M(  ESP/Transport 10.0.0.216->10.0.0.11 spi=15863890\(0xf21052\))S
11 FS/F4 SF 0 497.2 M(L'ex\351cution de la commande)S
/F5 SF ( setkey -D)S
/F4 SF (, qui nous montre les Associations de S\351curit\351, nous indique qu'elles)S
0 484 M(sont en effet pr\351sentes :)S
9.2 FS/F0 SF 0 459.433 M(10.0.0.216 10.0.0.11 )S
0 448.433 M(        esp mode=transport spi=224162611\(0x0d5c7333\) reqid=0\(0x00000000\))S
0 437.433 M(        E: 3des-cbc  5d421c1b d33b2a9f 4e9055e3 857db9fc 211d9c95 ebaead04)S
0 426.433 M(        A: hmac-sha1  c5537d66 f3c5d869 bd736ae2 08d22133 27f7aa99)S
0 415.433 M(        seq=0x00000000 replay=4 flags=0x00000000 state=mature )S
0 404.433 M(        created: Nov 11 12:28:45 2002   current: Nov 11 12:29:16 2002)S
0 393.433 M(        diff: 31\(s\)     hard: 600\(s\)    soft: 480\(s\))S
0 382.433 M(        last: Nov 11 12:29:12 2002      hard: 0\(s\)      soft: 0\(s\))S
0 371.433 M(        current: 304\(bytes\)     hard: 0\(bytes\)  soft: 0\(bytes\))S
0 360.433 M(        allocated: 3    hard: 0 soft: 0)S
0 349.433 M(        sadb_seq=1 pid=17112 refcnt=0)S
0 338.433 M(10.0.0.11 10.0.0.216 )S
0 327.433 M(        esp mode=transport spi=165123736\(0x09d79698\) reqid=0\(0x00000000\))S
0 316.433 M(        E: 3des-cbc  d7af8466 acd4f14c 872c5443 ec45a719 d4b3fde1 8d239d6a)S
0 305.433 M(        A: hmac-sha1  41ccc388 4568ac49 19e4e024 628e240c 141ffe2f)S
0 294.433 M(        seq=0x00000000 replay=4 flags=0x00000000 state=mature )S
0 283.433 M(        created: Nov 11 12:28:45 2002   current: Nov 11 12:29:16 2002)S
0 272.433 M(        diff: 31\(s\)     hard: 600\(s\)    soft: 480\(s\))S
0 261.433 M(        last:                           hard: 0\(s\)      soft: 0\(s\))S
0 250.433 M(        current: 231\(bytes\)     hard: 0\(bytes\)  soft: 0\(bytes\))S
0 239.433 M(        allocated: 2    hard: 0 soft: 0)S
0 228.433 M(        sadb_seq=0 pid=17112 refcnt=0)S
11 FS/F4 SF 0 202.4 M(Nous avons les Politiques de S\351curit\351 que nous avons nous-m\352me configur\351es :)S
9.2 FS/F0 SF 0 177.833 M(10.0.0.11[any] 10.0.0.216[any] tcp)S
0 166.833 M(        in ipsec)S
0 155.833 M(        esp/transport//require)S
0 144.833 M(        created:Nov 11 12:28:28 2002 lastused:Nov 11 12:29:12 2002)S
0 133.833 M(        lifetime:0\(s\) validtime:0\(s\))S
0 122.833 M(        spid=3616 seq=5 pid=17134)S
0 111.833 M(        refcnt=3)S
0 100.833 M(10.0.0.216[any] 10.0.0.11[any] tcp)S
0 89.833 M(        out ipsec)S
0 78.833 M(        esp/transport//require)S
0 67.833 M(        created:Nov 11 12:28:28 2002 lastused:Nov 11 12:28:44 2002)S
0 56.833 M(        lifetime:0\(s\) validtime:0\(s\))S
0 45.833 M(        spid=3609 seq=4 pid=17134)S
0 34.833 M(        refcnt=3)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(28)S
444.21 0 M(Exemple)S
GR
SP
%%Page: (29) 29
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 739.4 M 487.0 2.0 F
0 645 M 487.0 2.0 F
0 481.96 M 487.0 2.0 F
11 FS/F9 SF 0 721.8 M(Probl\350mes et d\351fauts connus)S
/F4 SF 0 695.4 M(Si cela ne marche pas, v\351rifiez que tous les fichiers de configuration sont la propri\351t\351 de root et qu'ils ne)S
0 682.2 M(peuvent \352tre lus que par celui-ci. Pour d\351marrer racoon en avant-plan, utilisez '-F'. Pour le forcer \340 lire un)S
0 669 M(fichier de configuration \340 la place de celui pr\351cis\351 lors de la compilation, utilisez '-f'. Pour obtenir de)S
0 655.8 M(nombreux d\351tails, ajouter l'option 'log debug' dans le fichier racoon.conf.)S
13.2 FS/F9 SF 0 625.2 M(Gestion automatique des cl\351s en utilisant les certificats X.509)S
11 FS/F4 SF 0 598.36 M(Comme nous l'avons dit avant, l'utilisation de secrets partag\351s est compliqu\351e car ils ne peuvent pas \352tre)S
0 585.16 M(facilement partag\351s et, une fois qu'ils le sont, ils ne sont plus secrets. Heureusement, nous avons la)S
0 571.96 M(technologie d'encryptage asymm\351trique pour nous aider \340 r\351soudre ce probl\350me.)S
0 545.56 M(Si chaque participant d'une liaison IPSEC cr\351e une cl\351 publique et priv\351e, des communications s\351curis\351es)S
0 532.36 M(peuvent \352tre mises en place par les deux parties en publiant leur cl\351 publique et en configurant leur politique.)S
0 505.96 M(Cr\351er une cl\351 est relativement facile, bien que cela exige un peu de travail. Ce qui suit est bas\351 sur l'outil)S
0 492.76 M('openssl'.)S
/F9 SF 0 464.36 M(Construire un certificat X.509 pour votre h\364te)S
/F4 SF 0 437.96 M(OpenSSL dispose d'une importante infrastructure de gestions des clefs, capable de g\351rer des clefs sign\351es ou)S
0 424.76 M(non par une autorit\351 de certification. Pour l'instant, nous avons besoin de court-circuiter toute cette)S
0 411.56 M(infrastructure et de mettre en place une s\351curit\351 de charlatan, et de travailler sans autorit\351 de certification.)S
0 385.16 M(Nous allons tout d'abord cr\351er une requ\352te de certificat \(certificate request\) pour notre h\364te, appel\351 'laptop' :)S
9.2 FS/F0 SF 0 360.593 M($ openssl req -new -nodes -newkey rsa:1024 -sha1 -keyform PEM -keyout \\)S
0 349.593 M(  laptop.private -outform PEM -out request.pem)S
11 FS/F4 SF 0 323.56 M(Des questions nous sont pos\351es :)S
9.2 FS/F0 SF 0 298.993 M(Country Name \(2 letter code\) [AU]:NL)S
0 287.993 M(State or Province Name \(full name\) [Some-State]:.)S
0 276.993 M(Locality Name \(eg, city\) []:Delft)S
0 265.993 M(Organization Name \(eg, company\) [Internet Widgits Pty Ltd]:Linux Advanced)S
0 254.993 M(Routing & Traffic Control)S
0 243.993 M(Organizational Unit Name \(eg, section\) []:laptop)S
0 232.993 M(Common Name \(eg, YOUR name\) []:bert hubert)S
0 221.993 M(Email Address []:ahu@ds9a.nl)S
0 199.993 M(Please enter the following 'extra' attributes)S
0 188.993 M(to be sent with your certificate request)S
0 177.993 M(A challenge password []:)S
0 166.993 M(An optional company name []:)S
11 FS/F4 SF 0 140.96 M(Vous avez toute libert\351 quant aux r\351ponses. Vous pouvez ou non mettre le nom d'h\364te, en fonction de vos)S
0 127.76 M(besoins de s\351curit\351. C'est ce que nous avons fait dans cet exemple.)S
0 101.36 M(Nous allons maintenant "auto signer" cette requ\352te :)S
9.2 FS/F0 SF 0 76.793 M($ openssl x509 -req -in request.pem -signkey laptop.private -out \\)S
0 65.793 M(  laptop.public)S
0 54.793 M(Signature ok)S
0 43.793 M(subject=/C=NL/L=Delft/O=Linux Advanced Routing & Traffic \\)S
0 32.793 M(  Control/OU=laptop/CN=bert hubert/Email=ahu@ds9a.nl)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Probl\350mes et d\351fauts connus)S
474.768 0 M(29)S
GR
SP
%%Page: (30) 30
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 662.4 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(Getting Private key)S
11 FS/F4 SF 0 712.8 M(Le fichier "request.pem" peut maintenant \352tre \351limin\351.)S
0 686.4 M(R\351p\351tez cette proc\351dure pour tous les h\364tes qui ont besoin d'une cl\351. Vous pouvez distribuer le fichier '.public')S
0 673.2 M(en toute impunit\351, mais garder le fichier '.private' priv\351 !)S
/F9 SF 0 644.8 M(Configuration et lancement)S
/F4 SF 0 618.4 M(Une fois que nous avons les cl\351s publiques et priv\351es pour nos h\364tes, nous pouvons indiquer \340 racoon de les)S
0 605.2 M(utiliser.)S
0 578.8 M(Reprenons notre configuration pr\351c\351dente et les deux h\364tes 10.0.0.11 \('upstairs'\) et 10.0.0.216 \('laptop'\).)S
0 552.4 M(Dans le fichier )S
/F0 SF (racoon.conf)S
/F4 SF ( pr\351sent sur 10.0.0.11, nous ajoutons :)S
9.2 FS/F0 SF 0 527.833 M(path certificate "/usr/local/etc/racoon/certs";)S
0 505.833 M(remote 10.0.0.216)S
0 494.833 M({)S
0 483.833 M(        exchange_mode aggressive,main;)S
0 472.833 M(        my_identifier asn1dn;)S
0 461.833 M(        peers_identifier asn1dn;)S
0 439.833 M(        certificate_type x509 "upstairs.public" "upstairs.private";)S
0 417.833 M(        peers_certfile "laptop.public";)S
0 406.833 M(        proposal {)S
0 395.833 M(                encryption_algorithm 3des;)S
0 384.833 M(                hash_algorithm sha1;)S
0 373.833 M(                authentication_method rsasig;)S
0 362.833 M(                dh_group 2 ;)S
0 351.833 M(        })S
0 340.833 M(})S
11 FS/F4 SF 0 314.8 M(Ceci indique \340 racoon que les certificats se trouvent dans )S
/F0 SF (/usr/local/etc/racoon/certs/)S
/F4 SF (. De plus,)S
0 301.6 M(il contient des \351l\351ments sp\351cifiques pour l'h\364te distant 10.0.0.216.)S
0 275.2 M(La ligne 'asn1dn' indique \340 racoon que l'identification pour l'h\364te local et distant doit \352tre extraite des cl\351s)S
0 262 M(publiques. Ceci correspond \340 la ligne 'subject=/C=NL/L=Delft/O=Linux Advanced Routing & Traffic)S
0 248.8 M(Control/OU=laptop/CN=bert hubert/Email=ahu@ds9a.nl' donn\351 au-dessus.)S
0 222.4 M(La ligne)S
/F5 SF ( certificate_type)S
/F4 SF ( pr\351cise l'emplacement des cl\351s publiques et priv\351es locales. La d\351claration)S
/F5 SF 0 209.2 M(peers_certfile)S
/F4 SF ( pr\351cise \340 racoon que la cl\351 publique de l'h\364te distant se trouve dans le fichier)S
/F0 SF 0 196 M(laptop.public)S
/F4 SF (.)S
0 169.6 M(La section)S
/F5 SF ( proposal)S
/F4 SF ( reste inchang\351e par rapport \340 ce que nous avons vu plus t\364t, \340 l'exception de)S
/F5 SF 0 156.4 M(authentification_method)S
/F4 SF ( qui est maintenant)S
/F5 SF ( rsasig)S
/F4 SF (, ce qui indique l'utilisation de cl\351 RSA publique/priv\351e)S
0 143.2 M(pour l'authentification.)S
0 116.8 M(La configuration ajout\351e sur 10.0.0.216 est presque identique, exception faite de l'habituelle sym\351trie :)S
9.2 FS/F0 SF 0 92.233 M(path certificate "/usr/local/etc/racoon/certs";)S
0 70.233 M(remote 10.0.0.11)S
0 59.233 M({)S
0 48.233 M(        exchange_mode aggressive,main;)S
0 37.233 M(        my_identifier asn1dn;)S
0 26.233 M(        peers_identifier asn1dn;)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(30)S
268.122 0 M(Construire un certificat X.509 pour votre h\364te)S
GR
SP
%%Page: (31) 31
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 435.8 M 487.0 2.0 F
0 161 M 487.0 2.0 F
9.2 FS/F0 SF 0 727.833 M(        certificate_type x509 "laptop.public" "laptop.private";)S
0 705.833 M(        peers_certfile "upstairs.public";)S
0 683.833 M(        proposal {)S
0 672.833 M(                encryption_algorithm 3des;)S
0 661.833 M(                hash_algorithm sha1;)S
0 650.833 M(                authentication_method rsasig;)S
0 639.833 M(                dh_group 2 ;)S
0 628.833 M(        })S
0 617.833 M(})S
11 FS/F4 SF 0 591.8 M(Maintenant que nous avons ajout\351 ces \351l\351ments sur les deux h\364tes, la seule chose qui reste \340 faire est de mettre)S
0 578.6 M(en place les fichiers contenant les cl\351s. La machine 'upstairs' doit avoir les fichiers )S
/F0 SF (upstairs.private)S
/F4 SF (,)S
/F0 SF 0 565.4 M(upstairs.public)S
/F4 SF (, et )S
/F0 SF (laptop.public)S
/F4 SF ( plac\351s dans )S
/F0 SF (/usr/local/etc/racoon/certs)S
/F4 SF (. Soyez s\373r)S
0 552.2 M(que le r\351pertoire est la propri\351t\351 de root et qu'il poss\350de les droits 0700. Dans le cas contraire, racoon pourrait)S
0 539 M(refuser de lire le contenu de ce r\351pertoire.)S
0 512.6 M(La machine 'laptop' doit avoir les fichiers )S
/F0 SF (upstairs.private)S
/F4 SF (, )S
/F0 SF (upstairs.public)S
/F4 SF (, et)S
/F0 SF 0 499.4 M(laptop.public)S
/F4 SF ( plac\351s dans )S
/F0 SF (/usr/local/etc/racoon/certs)S
/F4 SF (. Autrement dit, chaque h\364te doit)S
0 486.2 M(avoir ses propres cl\351s publique et priv\351e et, de plus, la cl\351 publique de l'h\364te distant.)S
0 459.8 M(V\351rifiez que la Politique de S\351curit\351 est en place \(ex\351cutez la commande 'spdadd' vue dans la section intitul\351e)S
/F6 SF 0 446.6 M(Exemple)S
/F4 SF (>\). Lancez alors racoon et tout devrait fonctionner.)S
/F9 SF 0 418.2 M(Comment configurer des tunnels s\351curis\351s)S
/F4 SF 0 391.8 M(Pour configurer des communications s\351curis\351es avec un h\364te distant, nous devons \351changer des cl\351s)S
0 378.6 M(publiques. Bien qu'il ne soit pas n\351cessaire que la cl\351 publique reste secr\350te, il est important d'\352tre s\373r que)S
0 365.4 M(cette cl\351 n'a pas \351t\351 modifi\351e. En d'autres termes, vous devez \352tre certain qu'il n'y a pas de 'man in the middle'.)S
0 352.2 M([NdT : 'man in the middle' est le nom d'une attaque qui consiste \340 se placer entre l'h\364te \351metteur et l'h\364te de)S
0 339 M(destination])S
0 312.6 M(Pour faciliter ceci, OpenSSL propose la commande 'digest' :)S
9.2 FS/F0 SF 0 288.033 M($ openssl dgst upstairs.public )S
0 277.033 M(MD5\(upstairs.public\)= 78a3bddafb4d681c1ca8ed4d23da4ff1)S
11 FS/F4 SF 0 251 M(La seule chose que nous devons faire est de v\351rifier que notre partenaire distant voit la m\352me empreinte. Ceci)S
0 237.8 M(peut \352tre effectu\351 en se rencontrant physiquement, ou par t\351l\351phone, en s'assurant que le num\351ro de t\351l\351phone)S
0 224.6 M(de l'h\364te distant n'a pas \351t\351 envoy\351 dans le m\352me courrier \351lectronique que celui qui contenait la cl\351 !)S
0 198.2 M(Une autre mani\350re de faire ceci est d'utiliser un tiers de confiance qui ex\351cute le service d'autorit\351 de)S
0 185 M(certification \()S
/F6 SF (Certificate Authority)S
/F4 SF (\). Cette autorit\351 de certification \(CA\) peut alors signer votre cl\351 ; celle que)S
0 171.8 M(nous avons nous-m\352me cr\351\351 au-dessus.)S
15.8 FS/F9 SF 0 138.56 M(tunnels IPSEC)S
11 FS/F4 SF 0 111.192 M(Jusqu'ici, nous n'avons seulement consid\351r\351 IPSEC dans le mode appel\351 'transport' o\371 les points terminaux)S
0 97.992 M(comprennent directement IPSEC. Comme ceci n'est pas souvent le cas, il peut \352tre n\351cessaire d'avoir des)S
0 84.792 M(routeurs qui, eux seuls, comprennent IPSEC et qui r\351alisent le travail pour les h\364tes se trouvant derri\350re eux.)S
0 71.592 M(Ceci est appel\351 le mode tunnel.)S
0 45.192 M(Configurer ceci est tr\350s rapide. Pour tunneler tout le trafic vers 130.161.0.0/16 \340 partir de 10.0.0.216 via)S
0 31.992 M(10.0.0.11, nous \351ditons ce qui suit sur 10.0.0.216 :)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Configuration et lancement)S
474.768 0 M(31)S
GR
SP
%%Page: (32) 32
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 295 M 487.0 2.0 F
0 115.592 M 487.0 2.0 F
0 54.984 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(#!/sbin/setkey -f)S
0 727.833 M(flush;)S
0 716.833 M(spdflush;)S
0 694.833 M(add 10.0.0.216 10.0.0.11 esp 34501)S
0 683.833 M(        -m tunnel)S
0 672.833 M(        -E 3des-cbc "123456789012123456789012";)S
0 650.833 M(spdadd 10.0.0.0/24 130.161.0.0/16 any -P out ipsec)S
0 639.833 M(           esp/tunnel/10.0.0.216-10.0.0.11/require;)S
11 FS/F4 SF 0 613.8 M(Notez que l'option '-m tunnel' est vitale ! Ceci configure tout d'abord une Association de S\351curit\351 ESP entre)S
0 600.6 M(les points terminaux de notre tunnel, \340 savoir 10.0.0.216 et 10.0.0.11.)S
0 574.2 M(Nous allons ensuite r\351ellement configurer le tunnel. On doit indiquer au noyau d'encrypter tout le trafic de)S
0 561 M(10.0.0.0/24 vers 130.161.0.0. De plus, ce trafic doit \352tre envoy\351 vers 10.0.0.11.)S
0 534.6 M(10.0.0.11 a \351galement besoin d'\352tre configur\351 :)S
9.2 FS/F0 SF 0 510.033 M(#!/sbin/setkey -f)S
0 499.033 M(flush;)S
0 488.033 M(spdflush;)S
0 466.033 M(add 10.0.0.216 10.0.0.11 esp 34501)S
0 455.033 M(        -m tunnel)S
0 444.033 M(        -E 3des-cbc "123456789012123456789012";)S
0 422.033 M(spdadd 10.0.0.0/24 130.161.0.0/16 any -P in ipsec)S
0 411.033 M(           esp/tunnel/10.0.0.216-10.0.0.11/require;)S
11 FS/F4 SF 0 385 M(Notez que ceci est exactement identique, \340 l'exception du changement de '-P out' en '-P in'. Les exemples)S
0 371.8 M(pr\351c\351dents n'ont configur\351 le trafic que dans un seul sens. Il est laiss\351 comme exercice au lecteur le soin de)S
0 358.6 M(compl\351ter l'autre moiti\351 du tunnel.)S
0 332.2 M(Le nom de 'proxy ESP' est \351galement donn\351 pour cette configuration, ce qui est un peu plus clair.)S
/F5 SF 36 305.8 M(Note :)S
/F4 SF ( Le tunnel IPSEC a besoin d'avoir la transmission IP activ\351e dans le noyau !)S
15.8 FS/F9 SF 0 272.56 M(Autre logiciel IPSEC)S
11 FS/F4 SF 0 245.192 M(Thomas Walpuski pr\351cise qu'il a \351crit une mise \340 jour pour que OpenBSD isakpmd puisse fonctionner avec)S
0 231.992 M(Linux 2.5 IPSEC. De plus, la repository principale CVS de isakpmd contient maintenant le code ! Des notes)S
0 218.792 M(sont disponibles sur cette page.)S
0 192.392 M(isakpmd est diff\351rent de racoon mentionn\351 au-dessus, mais de nombreuses personnes l'appr\351cient. Il peut \352tre)S
0 179.192 M(trouv\351 ici. D'autres \351l\351ments de lecture sur le CVS d'OpenBSD ici. Thomas a \351galement cr\351\351 un tarball pour)S
0 165.992 M(ceux qui ne sont pas habitu\351s \340 CVS ou patch.)S
0 139.592 M(De plus, des mises \340 jour sont disponibles pour permettre aux outils FreeS/WAN de l'espace utilisateur de)S
0 126.392 M(fonctionner avec l'IPSEC natif de Linux 2.5. Vous pourrez les trouver ici.)S
15.8 FS/F9 SF 0 93.152 M(Interop\351rabilit\351 d'IPSEC avec d'autres syst\350mes)S
11 FS/F4 SF 0 65.784 M(FIXME: Ecrire ceci)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(32)S
415.467 0 M(tunnels IPSEC)S
GR
SP
%%Page: (33) 33
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 670.76 M 487.0 2.0 F
0 452.72 M 487.0 2.0 F
13.2 FS/F9 SF 0 734.8 M(Windows)S
11 FS/F4 SF 0 707.96 M(Andreas Jellinghaus <aj@dungeon.inka.de> rapporte : "win2k: cela marche. pr\351-partage de cl\351 et l'adresse ip)S
0 694.76 M(pour l'authentification \(je ne pense pas que windows supporte fdqn ou userfdqn\). Les certificats devraient)S
0 681.56 M(\351galement marcher, mais cela n'a pas \351t\351 essay\351.)S
13.2 FS/F9 SF 0 650.96 M(Check Point VPN-1 NG)S
11 FS/F4 SF 0 624.12 M(Peter Bieringer rapporte :)S
9.2 FS/F0 SF 0 599.553 M(         Voici des r\351sultats \(seul le mode tunnel a \351t\351 test\351,)S
0 588.553 M(         auth=SHA1\) :)S
0 577.553 M( DES:     ok )S
0 566.553 M( 3DES:    ok )S
0 555.553 M( AES-128: ok )S
0 544.553 M( AES-192: non support\351 par CP VPN-1)S
0 533.553 M( AES-256: ok )S
0 522.553 M( CAST* :  non support\351 par le noyau Linux utilis\351)S
0 500.553 M( Version Test\351e : FP4 aka R54 aka w/AI)S
11 FS/F4 SF 0 463.52 M(Plus d'informations ici.)S
19 FS/F9 SF 0 427.112 M(Chapitre 8. Routage multidistribution \()S
/Fb SF (multicast)S
/F9 SF (\))S
11 FS/F4 SF 0 399.11 M(FIXME: Pas de r\351dacteur !)S
0 372.71 M(Le Multicast-HOWTO est \(relativement\) ancien. De ce fait, il peut \352tre impr\351cis ou induire en erreur \340)S
0 359.51 M(certains endroits.)S
0 333.11 M(Avant que vous ne puissiez faire du routage multidistribution, le noyau Linux a besoin d'\352tre configur\351 pour)S
0 319.91 M(supporter le type de routage multidistribution que vous voulez faire. Ceci, \340 son tour, exige une d\351cision quant)S
0 306.71 M(au choix du protocole de routage multidistribution que vous vous pr\351parez \340 utiliser. Il y a essentiellement)S
0 293.51 M(quatre types << communs >> de protocoles : DVMRP \(la version multidistribution du protocole RIP unicast\),)S
0 280.31 M(MOSPF \(la m\352me chose, mais pour OSPF\), PIM-SM \()S
/F6 SF (Protocol Independant Multicasting - Sparse Mode)S
/F4 SF (\) qui)S
0 267.11 M(suppose que les utilisateurs de n'importe quel groupe de multidistribution sont dispers\351s plut\364t que regroup\351s\))S
0 253.91 M(et PIM-DM \(le m\352me, mais)S
/F6 SF ( Dense Mode)S
/F4 SF (\) qui suppose qu'il y aura un regroupement significatif des utilisateurs)S
0 240.71 M(d'un m\352me groupe de multidistribution.)S
0 214.31 M(On pourra noter que ces options n'apparaissent pas dans le noyau Linux. Ceci s'explique par le fait que le)S
0 201.11 M(protocole lui-m\352me est g\351r\351 par une application de routage, comme Zebra, mrouted ou pind. Cependant, vous)S
0 187.91 M(devez avoir une bonne id\351e de ce que vous allez utiliser, de mani\350re \340 s\351lectionner les bonnes options dans le)S
0 174.71 M(noyau.)S
0 148.31 M(Pour tout routage multidistribution, vous avez forc\351ment besoin de s\351lectionner les options )S
/F0 SF (multicasting)S
/F4 SF 0 135.11 M(et )S
/F0 SF (multicasting routing)S
/F4 SF (. Ceci est suffisant pour DVMRP et MOSPF. Dans le cas de PIM, vous devez)S
0 121.91 M(\351galement valider les options )S
/F0 SF (PIMv1)S
/F4 SF ( ou )S
/F0 SF (PIMv2)S
/F4 SF ( suivant que le r\351seau que vous connectez utilise la version 1)S
0 108.71 M(ou 2 du protocole PIM.)S
0 82.31 M(Une fois que tout cela a \351t\351 r\351alis\351, et que votre nouveau noyau a \351t\351 compil\351, vous verrez au d\351marrage que)S
0 69.11 M(IGMP est inclus dans la liste des protocoles IP. Celui-ci est un protocole permettant de g\351rer les groupes)S
0 55.91 M(multidistribution. Au moment de la r\351daction, Linux ne supportait que les versions 1 et 2 de IGMP, bien que)S
0 42.71 M(la version 3 existe et ait \351t\351 document\351e. Ceci ne va pas vraiment nous affecter dans la mesure o\371 IGMPv3 est)S
0 29.51 M(encore trop r\351cent pour que ses fonctionnalit\351s suppl\351mentaires soient largement utilis\351es. Puisque IGMP)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Chapitre 8. Routage multidistribution \(multicast\))S
474.768 0 M(33)S
GR
SP
%%Page: (34) 34
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 350 M 487.0 2.0 F
0 62.58 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(s'occupe des groupes, seules les fonctionnalit\351s pr\351sentes dans la plus simple version de IGMP g\351rant un)S
0 723.8 M(groupe entier seront utilis\351es. IGMPv2 sera utilis\351 dans la plupart des cas, bien que IGMPv1 puisse encore)S
0 710.6 M(\352tre rencontr\351.)S
0 684.2 M(Jusque-l\340, c'est bon. Nous avons activ\351 la multidistribution. Nous devons dire au noyau de l'utiliser)S
0 671 M(concr\350tement. Nous allons donc d\351marrer le routage. Ceci signifie que nous ajoutons un r\351seau virtuel de)S
0 657.8 M(multidistribution \340 la table du routeur :)S
9.2 FS/F0 SF 0 633.233 M(ip route add 224.0.0.0/4 dev eth0)S
11 FS/F4 SF 0 607.2 M(\(En supposant bien s\373r, que vous diffusez \340 travers eth0 ! Remplacez-le par le p\351riph\351rique de votre choix, si)S
0 594 M(n\351cessaire.\))S
0 567.6 M(Maintenant, dire \340 Linux de transmettre les paquets...)S
9.2 FS/F0 SF 0 543.033 M(echo 1 > /proc/sys/net/ipv4/ip&lowbar;forward)S
11 FS/F4 SF 0 517 M(Arriv\351 ici, il se peut que vous vous demandiez si ceci va faire quelque chose. Donc, pour tester notre)S
0 503.8 M(connexion, nous pinguons le groupe par d\351faut, )S
/F0 SF (224.0.0.1)S
/F4 SF (, pour voir si des machines sont pr\351sentes.)S
0 490.6 M(Toutes les machines du r\351seau local avec la multidistribution activ\351e)S
/F6 SF ( DEVRAIENT)S
/F4 SF ( r\351pondre, et aucune autre.)S
0 477.4 M(Vous remarquerez qu'aucune des machines qui r\351pondent ne le fait avec l'adresse IP )S
/F0 SF (224.0.0.1)S
/F4 SF (. Quelle)S
0 464.2 M(surprise ! :\) Ceci est une adresse de groupe \(une << diffusion >> pour les abonn\351s\) et tous les membres du)S
0 451 M(groupe r\351pondront avec leur propre adresse, et non celle du groupe.)S
9.2 FS/F0 SF 0 426.433 M(ping -c 2 224.0.0.1)S
11 FS/F4 SF 0 400.4 M(Maintenant, vous \352tes pr\352t \340 faire du vrai routage multidistribution. Bien, en supposant que vous ayez deux)S
0 387.2 M(r\351seaux \340 router l'un vers l'autre.)S
0 360.8 M(\(A continuer !\))S
19 FS/F9 SF 0 324.392 M(Chapitre 9. Gestionnaires de mise en file d'attente)S
0 301.582 M(pour l'administration de la bande passante)S
11 FS/F4 SF 0 273.58 M(Quand je l'ai d\351couvert, cela m'a)S
/F6 SF ( VRAIMENT)S
/F4 SF ( souffl\351. Linux 2.2 contient toutes les fonctionnalit\351s pour la)S
0 260.38 M(gestion de la bande passante, de mani\350re comparable \340 un syst\350me d\351di\351 de haut niveau.)S
0 233.98 M(Linux d\351passe m\352me ce que l'ATM et le Frame peuvent fournir.)S
0 207.58 M(Afin d'\351viter toute confusion, voici les r\350gles utilis\351es par)S
/F5 SF ( tc)S
/F4 SF ( pour la sp\351cification de la bande passante :)S
9.2 FS/F0 SF 0 183.014 M(mbps = 1024 kbps = 1024 * 1024 bps => byte/s \(octets/s\))S
0 172.014 M(mbit = 1024 kbit => kilo bit/s.)S
0 161.014 M(mb = 1024 kb = 1024 * 1024 b => byte \(octet\))S
0 150.014 M(mbit = 1024 kbit => kilo bit.)S
11 FS/F4 SF 0 123.98 M(En interne, les nombres sont stock\351s en bps \(octet/s\) et b \(octet\).)S
0 97.58 M(Mais)S
/F5 SF ( tc)S
/F4 SF ( utilise l'unit\351 suivante lors de l'affichage des d\351bits :)S
9.2 FS/F0 SF 0 73.014 M(1Mbit = 1024 Kbit = 1024 * 1024 bps => octets/s)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(34)S
34.02 0 M(Chapitre 9. Gestionnaires de mise en file d'attente pour l'administration de la bande passante)S
GR
SP
%%Page: (35) 35
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 358.184 M 487.0 2.0 F
0 139.176 M 487.0 2.0 F
15.8 FS/F9 SF 0 732.16 M(Explication sur les files d'attente et la gestion de la mise en file)S
0 713.152 M(d'attente)S
11 FS/F4 SF 0 685.784 M(Avec la mise en file d'attente, nous d\351terminons la mani\350re dont les donn\351es sont)S
/F6 SF ( ENVOYEES)S
/F4 SF (. Il est important)S
0 672.584 M(de comprendre que nous ne pouvons mettre en forme que les donn\351es que nous transmettons.)S
0 646.184 M(Avec la mani\350re dont Internet travaille, nous n'avons pas de contr\364le direct sur ce que les personnes nous)S
0 632.984 M(envoient. C'est un peu comme votre bo\356te aux lettres \(physique !\) chez vous. Il n'y a pas de fa\347on d'influencer)S
0 619.784 M(le nombre de lettres que vous recevez, \340 moins de contacter tout le monde.)S
0 593.384 M(Cependant, l'Internet est principalement bas\351 sur TCP/IP qui poss\350de quelques fonctionnalit\351s qui vont)S
0 580.184 M(pouvoir nous aider. TCP/IP n'a pas d'aptitude \340 conna\356tre les performances d'un r\351seau entre deux h\364tes. Il)S
0 566.984 M(envoie donc simplement des paquets de plus en plus rapidement \(<< )S
/F6 SF (slow start)S
/F4 SF ( >>\) et quand des paquets)S
0 553.784 M(commencent \340 se perdre, il ralentit car il n'a plus la possibilit\351 de les envoyer. En fait, c'est un peu plus \351l\351gant)S
0 540.584 M(que cela, mais nous en dirons plus par la suite.)S
0 514.184 M(C'est comme si vous ne lisiez que la moiti\351 de votre courrier en esp\351rant que vos correspondants arr\352teront de)S
0 500.984 M(vous en envoyer. \300 la diff\351rence que \347a marche sur Internet :-\))S
0 474.584 M(Si vous avez un routeur et que vous souhaitez \351viter que certains h\364tes de votre r\351seau aient des vitesses de)S
0 461.384 M(t\351l\351chargement trop grandes, vous aurez besoin de mettre en place de la mise en forme de trafic sur l'interface)S
/F6 SF 0 448.184 M(INTERNE)S
/F4 SF ( de votre routeur, celle qui envoie les donn\351es vers vos propres ordinateurs.)S
0 421.784 M(Vous devez \351galement \352tre s\373r que vous contr\364lez le goulot d'\351tranglement de la liaison. Si vous avez une)S
0 408.584 M(carte r\351seau \340 100Mbit et un routeur avec un lien \340 256kbit, vous devez vous assurer que vous n'envoyez pas)S
0 395.384 M(plus de donn\351es que ce que le routeur peut manipuler. Autrement, ce sera le routeur qui contr\364lera le lien et)S
0 382.184 M(qui mettra en forme la bande passante disponible. Nous devons pour ainsi dire << \352tre le propri\351taire de la file)S
0 368.984 M(d'attente >> et \352tre le lien le plus lent de la cha\356ne. Heureusement, c'est facilement r\351alisable.)S
15.8 FS/F9 SF 0 335.744 M(Gestionnaires de mise en file d'attente simples, sans classes)S
11 FS/F4 SF 0 308.376 M(Comme nous l'avons d\351j\340 dit, la gestion de mise en file d'attente permet de modifier la fa\347on dont les donn\351es)S
0 295.176 M(sont envoy\351es. Les gestionnaires de mise en file d'attente sans classes sont ceux qui, en gros, acceptent les)S
0 281.976 M(donn\351es et qui ne font que les r\351ordonner, les retarder ou les jeter.)S
0 255.576 M(Ils peuvent \352tre utilis\351s pour mettre en forme le trafic d'une interface sans aucune subdivision. Il est)S
0 242.376 M(primordial que vous compreniez cet aspect de la mise en file d'attente avant de continuer sur les gestionnaires)S
0 229.176 M(de mise en files d'attente bas\351s sur des classes contenant d'autres gestionnaires de mise en file d'attente.)S
0 202.776 M(Le gestionnaire le plus largement utilis\351 est de loin )S
/F0 SF (pfifo&lowbar;fast)S
/F4 SF (, qui est celui par d\351faut. Ceci)S
0 189.576 M(explique aussi pourquoi ces fonctionnalit\351s avanc\351es sont si robustes. Elles ne sont rien de plus << qu'une)S
0 176.376 M(autre file d'attente >>.)S
0 149.976 M(Chacune de ces files d'attente a ses forces et ses faiblesses. Toutes n'ont peut-\352tre pas \351t\351 bien test\351es.)S
13.2 FS/F1 SF 0 119.376 M(pfifo&lowbar;fast)S
11 FS/F4 SF 0 92.536 M(Cette file d'attente, comme son nom l'indique : premier entr\351, premier sorti \()S
/F6 SF (First In First Out)S
/F4 SF (\), signifie que)S
0 79.336 M(les paquets ne subissent pas de traitements sp\351ciaux. En fait, ce n'est pas tout \340 fait vrai. Cette file d'attente a)S
0 66.136 M(trois << bandes >>. A l'int\351rieur de chacune de ces bandes, des r\350gles FIFO s'appliquent. Cependant, tant qu'il)S
0 52.936 M(y a un paquet en attente dans la bande 0, la bande 1 ne sera pas trait\351e. Il en va de m\352me pour la bande 1 et la)S
0 39.736 M(bande 2.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Explication sur les files d'attente et la gestion de la mise en file d'attente)S
474.768 0 M(35)S
GR
SP
%%Page: (36) 36
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 660.2 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(Le noyau prend en compte la valeur du champ Type de Service des paquets et prend soin d'ins\351rer dans la)S
0 723.8 M(bande 0 les paquets ayant le bit << d\351lai minimum >> activ\351.)S
0 697.4 M(Ne pas confondre ce gestionnaire de mise en file d'attente sans classes avec celui bas\351 sur des classes PRIO !)S
0 684.2 M(Bien qu'ils aient des comportements similaires, )S
/F0 SF (pfifo&lowbar;fast)S
/F4 SF ( ne poss\350de pas de classes et vous ne)S
0 671 M(pourrez pas y ajouter de nouveaux gestionnaires avec la commande)S
/F5 SF ( tc)S
/F4 SF (.)S
/F9 SF 0 642.6 M(Param\350tres & usage)S
/F4 SF 0 616.2 M(Vous ne pouvez pas configurer le gestionnaire )S
/F0 SF (pfifo&lowbar;fast)S
/F4 SF (, dans la mesure o\371 c'est celui par)S
0 603 M(d\351faut. Voici sa configuration par d\351faut :)S
/F0 SF 0 576.6 M(priomap)S
/F4 SF 36 563.4 M(D\351termine comment les priorit\351s des paquets sont reli\351es aux bandes, telles que d\351finies par le noyau.)S
36 550.2 M(La relation est \351tablie en se basant sur l'octet TOS du paquet, qui ressemble \340 ceci :)S
9.2 FS/F0 SF 36 525.633 M(   0     1     2     3     4     5     6     7)S
36 514.633 M(+-----+-----+-----+-----+-----+-----+-----+-----+)S
36 503.633 M(|                 |                       |     |)S
36 492.633 M(|   PRECEDENCE    |          TOS          | MBZ |)S
36 481.633 M(|                 |                       |     |)S
36 470.633 M(+-----+-----+-----+-----+-----+-----+-----+-----+)S
11 FS/F4 SF 36 444.6 M(Les quatre bits TOS \(le champ TOS\) sont d\351finis comme suit :)S
9.2 FS/F0 SF 36 420.033 M(Binaire D\351cimal   Signification)S
36 409.033 M(-----------------------------------------)S
36 398.033 M(1000    8         Minimise le D\351lai \(Minimize delay\) \(md\))S
36 387.033 M(0100    4         Maximalise le D\351bit \(Maximize throughput\) \(mt\))S
36 376.033 M(0010    2         Maximalise la Fiabilit\351 \(Maximize reliability\) \(mr\))S
36 365.033 M(0001    1         Minimalise le Co\373t Mon\351taire \(Minimize monetary cost\) \(mmc\))S
36 354.033 M(0000    0         Service Normal)S
11 FS/F4 SF 36 328 M(Comme il y a 1 bit sur la droite de ces quatre bits, la valeur r\351elle du champ TOS est le double de la)S
36 314.8 M(valeur des bits TOS. )S
/F1 SF (tcpdump -v -v)S
/F4 SF ( fournit la valeur de tout le champ TOS, et non pas seulement)S
36 301.6 M(la valeur des quatre bits. C'est la valeur que l'on peut voir dans la premi\350re colonne du tableau)S
36 288.4 M(suivant :)S
9.2 FS/F0 SF 36 263.833 M(TOS     Bits  Signification                     Priorit\351 Linux    Bande)S
36 252.833 M(------------------------------------------------------------------------)S
36 241.833 M(0x0     0     Service Normal                    0 Best Effort     1)S
36 230.833 M(0x2     1     Minimise le Co\373t Mon\351taire \(mmc\)  1 Filler          2)S
36 219.833 M(0x4     2     Maximalise la Fiabilit\351 \(mr\)      0 Best Effort     1)S
36 208.833 M(0x6     3     mmc+mr                            0 Best Effort     1)S
36 197.833 M(0x8     4     Maximalise le D\351bit \(mt\)          2 Masse           2)S
36 186.833 M(0xa     5     mmc+mt                            2 Masse           2)S
36 175.833 M(0xc     6     mr+mt                             2 Masse           2)S
36 164.833 M(0xe     7     mmc+mr+mt                         2 Masse           2)S
36 153.833 M(0x10    8     Minimise le D\351lai \(md\)            6 Interactive     0)S
36 142.833 M(0x12    9     mmc+md                            6 Interactive     0)S
36 131.833 M(0x14    10    mr+md                             6 Interactive     0)S
36 120.833 M(0x16    11    mmc+mr+md                         6 Interactive     0)S
36 109.833 M(0x18    12    mt+md                             4 Int. Masse      1)S
36 98.833 M(0x1a    13    mmc+mt+md                         4 Int. Masse      1)S
36 87.833 M(0x1c    14    mr+mt+md                          4 Int. Masse      1)S
36 76.833 M(0x1e    15    mmc+mr+mt+md                      4 Int. Masse      1)S
11 FS/F4 SF 36 50.8 M(&lsqb;NdT : par flux de masse \()S
/F6 SF (bulk flow)S
/F4 SF (\), il faut entendre << gros flot de donn\351es transmises en)S
36 37.6 M(continu >> comme un transfert FTP. A l'oppos\351, un flux interactif \()S
/F6 SF (interactive flow)S
/F4 SF (\), correspond \340)S
36 24.4 M(celui g\351n\351r\351 par des requ\352tes SSH].)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(36)S
405.688 0 M(pfifo&lowbar;fast)S
GR
SP
%%Page: (37) 37
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 156.4 M 487.0 2.0 F
11 FS/F4 SF 36 737 M(Beaucoup de nombres. La seconde colonne contient la valeur correspondante des quatre bits TOS,)S
36 723.8 M(suivi de leur signification. Par exemple, 15 repr\351sente un paquet voulant un co\373t mon\351taire minimal,)S
36 710.6 M(une fiabilit\351 maximum, un d\351bit maximum)S
/F6 SF ( ET)S
/F4 SF ( un d\351lai minimum. J'appellerai ceci un << paquet)S
36 697.4 M(Hollandais >>.)S
36 671 M(La quatri\350me colonne liste la mani\350re dont le noyau Linux interpr\350te les bits TOS, en indiquant \340)S
36 657.8 M(quelle priorit\351 ils sont reli\351s.)S
36 631.4 M(La derni\350re colonne montre la carte des priorit\351s par d\351faut. Sur la ligne de commande, la carte des)S
36 618.2 M(priorit\351s ressemble \340 ceci :)S
9.2 FS/F0 SF 36 593.633 M(1, 2, 2, 2, 1, 2, 0, 0 , 1, 1, 1, 1, 1, 1, 1, 1)S
11 FS/F4 SF 36 567.6 M(Ceci signifie , par exemple, que la priorit\351 4 sera reli\351e \340 la bande num\351ro 1. La carte des priorit\351s)S
36 554.4 M(vous permet \351galement de lister des priorit\351s plus grandes \(> 7\) qui ne correspondent pas \340 une)S
36 541.2 M(relation avec le champ TOS, mais qui sont configur\351es par d'autres moyens.)S
36 514.8 M(Le tableau suivant provenant de la RFC 1349 \(\340 lire pour plus de d\351tails\) indique comment les)S
36 501.6 M(applications devraient configurer leurs bits TOS pour fonctionner correctement :)S
9.2 FS/F0 SF 36 477.033 M(TELNET                    1000           \(minimise le d\351lai\))S
36 466.033 M(FTP)S
36 455.033 M(        Contr\364le          1000           \(minimise le d\351lai\))S
36 444.033 M(        Donn\351es           0100           \(maximalise le d\351bit\))S
36 422.033 M(TFTP                      1000           \(minimise le d\351lai\))S
36 400.033 M(SMTP )S
36 389.033 M(        phase de commande 1000           \(minimise le d\351lai\))S
36 378.033 M(        phase DATA        0100           \(maximalise le d\351bit\))S
36 356.033 M(Domain Name Service)S
36 345.033 M(        requ\352te UDP       1000           \(minimise le d\351lai\))S
36 334.033 M(        requ\352te TCP       0000)S
36 323.033 M(        Transfert de Zone 0100           \(maximalise le d\351bit\))S
36 301.033 M(NNTP                      0001           \(minimise le co\373t mon\351taire\))S
36 279.033 M(ICMP)S
36 268.033 M(        Erreurs           0000)S
36 257.033 M(        Requ\352tes          0000 \(presque\))S
36 246.033 M(        R\351ponses         <m\352me chose que requ\352te> \(presque\))S
11 FS/F0 SF 0 233.2 M(txqueuelen)S
/F4 SF 36 220 M(La longueur de cette file d'attente est fournie par la configuration de l'interface, que vous pouvez voir)S
36 206.8 M(et configurer avec)S
/F5 SF ( ifconfig)S
/F4 SF ( et)S
/F5 SF ( ip)S
/F4 SF (. Pour configurer la longueur de la file d'attente \340 )S
/F0 SF (10)S
/F4 SF (, ex\351cuter :)S
/F1 SF 36 193.6 M(ifconfig eth0 txqueuelen 10)S
/F4 SF 36 167.2 M(Vous ne pouvez pas configurer ce param\350tre avec)S
/F5 SF ( tc)S
/F4 SF ( !)S
13.2 FS/F9 SF 0 136.6 M(Filtre \340 seau de jetons \()S
/Fb SF (Token Bucket Filter)S
/F9 SF (\))S
11 FS/F4 SF 0 109.76 M(Le)S
/F6 SF ( Token Bucket Filter)S
/F4 SF ( \(TBF\) est un gestionnaire de mise en file d'attente simple. Il ne fait que laisser passer)S
0 96.56 M(les paquets entrants avec un d\351bit n'exc\351dant pas une limite fix\351e administrativement. L'envoi de courtes)S
0 83.36 M(rafales de donn\351es avec un d\351bit d\351passant cette limite est cependant possible.)S
0 56.96 M(TBF est tr\350s pr\351cis, et peu gourmand du point de vue r\351seau et processeur. Consid\351rez-le en premier si vous)S
0 43.76 M(voulez simplement ralentir une interface !)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Param\350tres & usage)S
474.768 0 M(37)S
GR
SP
%%Page: (38) 38
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 369.8 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(L'impl\351mentation TBF consiste en un tampon \(seau\), constamment rempli par des \351l\351ments virtuels)S
0 723.8 M(d'information appel\351s jetons, avec un d\351bit sp\351cifique \(d\351bit de jeton\). Le param\350tre le plus important du)S
0 710.6 M(tampon est sa taille, qui correspond au nombre de jetons qu'il peut stocker.)S
0 684.2 M(Chaque jeton entrant laisse sortir un paquet de donn\351es de la file d'attente de donn\351es et ce jeton est alors)S
0 671 M(supprim\351 du seau. L'association de cet algorithme avec les deux flux de jetons et de donn\351es, nous conduit \340)S
0 657.8 M(trois sc\351narios possibles :)S
36 631.4 M(Les donn\351es arrivent dans TBF avec un d\351bit)S
/F6 SF ( EGAL)S
/F4 SF ( au d\351bit des jetons entrants. Dans ce cas, chaque)S
36 618.2 M(paquet entrant a son jeton correspondant et passe la file d'attente sans d\351lai.)S
/F18 SF 28.19 631.4 M(\267 )S
/F4 SF 36 605 M(Les donn\351es arrivent dans TBF avec un d\351bit)S
/F6 SF ( PLUS PETIT)S
/F4 SF ( que le d\351bit des jetons. Seule une partie)S
36 591.8 M(des jetons est supprim\351e au moment o\371 les paquets de donn\351es sortent de la file d'attente, de sorte que)S
36 578.6 M(les jetons s'accumulent jusqu'\340 atteindre la taille du tampon. Les jetons libres peuvent \352tre utilis\351s)S
36 565.4 M(pour envoyer des donn\351es avec un d\351bit sup\351rieur au d\351bit des jetons standard, si de courtes rafales de)S
36 552.2 M(donn\351es arrivent.)S
/F18 SF 28.19 605 M(\267 )S
/F4 SF 36 539 M(Les donn\351es arrivent dans TBF avec un d\351bit)S
/F6 SF ( PLUS GRAND)S
/F4 SF ( que le d\351bit des jetons. Ceci signifie que)S
36 525.8 M(le seau sera bient\364t d\351pourvu de jetons, ce qui provoque l'arr\352t de TBF pendant un moment. Ceci)S
36 512.6 M(s'appelle << une situation de d\351passement de limite >> \()S
/F6 SF (overlimit situation)S
/F4 SF (\). Si les paquets continuent)S
36 499.4 M(\340 arriver, ils commenceront \340 \352tre \351limin\351s.)S
/F18 SF 28.19 539 M(\267 )S
/F4 SF 0 473 M(Le dernier sc\351nario est tr\350s important, car il autorise la mise en forme administrative de la bande passante)S
0 459.8 M(disponible pour les donn\351es traversant le filtre.)S
0 433.4 M(L'accumulation de jetons autorise l'\351mission de courtes rafales de donn\351es sans perte en situation de)S
0 420.2 M(d\351passement de limite, mais toute surcharge prolong\351e causera syst\351matiquement le retard des paquets, puis)S
0 407 M(leur rejet.)S
0 380.6 M(Notez que, dans l'impl\351mentation r\351elle, les jetons correspondent \340 des octets, et non des paquets.)S
/F9 SF 0 352.2 M(Param\350tres & usage)S
/F4 SF 0 325.8 M(M\352me si vous n'aurez probablement pas besoin de les changer, TBF a des param\350tres. D'abord, ceux toujours)S
0 312.6 M(disponibles sont :)S
/F0 SF 0 286.2 M(limit or latency)S
36 273 M(Limit)S
/F4 SF ( est le nombre d'octets qui peuvent \352tre mis en file d'attente en attendant la disponibilit\351 de)S
36 259.8 M(jetons. Vous pouvez \351galement indiquer ceci d'une autre mani\350re en configurant le param\350tre)S
/F0 SF 36 246.6 M(latency)S
/F4 SF (, qui sp\351cifie le temps maximal pendant lequel un paquet peut rester dans TBF. Ce dernier)S
36 233.4 M(param\350tre prend en compte la taille du seau, le d\351bit, et s'il est configur\351, le d\351bit de cr\352te)S
36 220.2 M(\()S
/F0 SF (peakrate)S
/F4 SF (\).)S
/F0 SF 0 207 M(burst/buffer/maxburst)S
/F4 SF 36 193.8 M(Taille du seau, en octets. C'est la quantit\351 maximale, en octets, de jetons dont on disposera)S
36 180.6 M(simultan\351ment. En g\351n\351ral, plus les d\351bits de mise en forme sont importants, plus le tampon doit \352tre)S
36 167.4 M(grand. Pour 10 Mbit/s sur plateforme Intel, vous avez besoin d'un tampon d'au moins 10 kilo-octets si)S
36 154.2 M(vous voulez atteindre la limitation configur\351e !)S
36 127.8 M(Si votre tampon est trop petit, les paquets pourront \352tre rejet\351s car il arrive plus de jetons par top)S
36 114.6 M(d'horloge que ne peut en contenir le tampon.)S
/F0 SF 0 101.4 M(mpu)S
/F4 SF 36 88.2 M(Un paquet de taille nulle n'utilise pas une bande passante nulle. Pour ethernet, la taille minimale d'un)S
36 75 M(paquet est de 64 octets. L'Unit\351 Minimale de Paquet \()S
/F6 SF (Minimun Packet Unit)S
/F4 SF (\) d\351termine le nombre)S
36 61.8 M(minimal de jetons \340 utiliser pour un paquet.)S
/F0 SF 0 48.6 M(rate)S
/F4 SF 36 35.4 M(Le param\350tre de la vitesse. Voir les remarques au-dessus \340 propos des limites !)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(38)S
273.644 0 M(Filtre \340 seau de jetons \(Token Bucket Filter\))S
GR
SP
%%Page: (39) 39
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 422.6 M 487.0 2.0 F
0 53.2 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(Si le seau contient des jetons et qu'il est autoris\351 \340 se vider, alors il le fait par d\351faut avec une vitesse infinie.)S
0 723.8 M(Si ceci vous semble inacceptable, utilisez les param\350tres suivants :)S
/F0 SF 0 697.4 M(peakrate)S
/F4 SF 36 684.2 M(Si des jetons sont disponibles et que des paquets arrivent, ils sont imm\351diatement envoy\351s par d\351faut ;)S
36 671 M(et pour ainsi dire \340 << la vitesse de la lumi\350re >>. Cela peut ne pas vous convenir, sp\351cialement si)S
36 657.8 M(vous avez un grand seau.)S
36 631.4 M(Le d\351bit de cr\352te \()S
/F6 SF (peak rate)S
/F4 SF (\) peut \352tre utilis\351 pour sp\351cifier la vitesse \340 laquelle le seau est autoris\351 \340)S
36 618.2 M(se vider. Si tout se passe comme \351crit dans les livres, ceci est r\351alis\351 en lib\351rant un paquet, puis en)S
36 605 M(attendant suffisamment longtemps, pour lib\351rer le paquet suivant. Le temps d'attente est calcul\351 de)S
36 591.8 M(mani\350re \340 obtenir un d\351bit \351gal au d\351bit de cr\352te.)S
36 565.4 M(Cependant, \351tant donn\351 que la r\351solution du minuteur \()S
/F6 SF (timer)S
/F4 SF (\) d'UNIX est de 10 ms et que les paquets)S
36 552.2 M(ont une taille moyenne de 10 000 bits, nous sommes limit\351s \340 un d\351bit de cr\352te de 1mbit/s !)S
/F0 SF 0 539 M(mtu/minburst)S
/F4 SF 36 525.8 M(Le d\351bit de cr\352te de 1Mb/s ne sert pas \340 grand chose si votre d\351bit habituel est sup\351rieur \340 cette)S
36 512.6 M(valeur. Un d\351bit de cr\352te plus \351lev\351 peut \352tre atteint en \351mettant davantage de paquets par top du)S
36 499.4 M(minuteur, ce qui a pour effet de cr\351er un second seau.)S
36 473 M(Ce second)S
/F6 SF ( bucket)S
/F4 SF ( ne prend par d\351faut qu'un seul paquet, et n'est donc en aucun cas un seau.)S
36 446.6 M(Pour calculer le d\351bit de cr\352te maximum, multipliez le)S
/F6 SF ( mtu)S
/F4 SF ( que vous avez configur\351 par 100 \(ou plus)S
36 433.4 M(exactement par HZ, qui est \351gal \340 100 sur Intel et \340 1024 sur Alpha\).)S
/F9 SF 0 405 M(Configuration simple)S
/F4 SF 0 378.6 M(Voici une configuration simple, mais)S
/F6 SF ( tr\350s)S
/F4 SF ( utile :)S
9.2 FS/F0 SF 0 354.033 M(# tc qdisc add dev ppp0 root tbf rate 220kbit latency 50ms burst 1540)S
11 FS/F4 SF 0 328 M(Pourquoi est-ce utile ? Si vous avez un p\351riph\351rique r\351seau avec une grande file d'attente, comme un modem)S
0 314.8 M(DSL ou un modem c\342ble, et que le dialogue se fasse \340 travers une interface rapide, comme une interface)S
0 301.6 M(ethernet, vous observerez que t\351l\351charger vers l'amont \()S
/F6 SF (uploading)S
/F4 SF (\) d\351grade compl\350tement l'interactivit\351.)S
0 275.2 M(&lsqb;NdT :)S
/F6 SF ( uploading)S
/F4 SF ( d\351signe une op\351ration qui consiste \340 transf\351rer des donn\351es ou des programmes)S
0 262 M(stock\351s dans un ordinateur local vers un ordinateur distant \340 travers un r\351seau. La traduction officielle pour ce)S
0 248.8 M(terme est << t\351l\351chargement vers l'amont >>. On parle alors de voie montante. Le)S
/F6 SF ( downloading)S
/F4 SF ( d\351signe)S
0 235.6 M(l'op\351ration inverse \(transfert d'un h\364te distant vers l'ordinateur local\) et est traduit par << t\351l\351chargement >>)S
0 222.4 M(ou << t\351l\351chargement vers l'aval >>. On parle alors de la voie descendante.])S
0 196 M(Le t\351l\351chargement vers l'amont va en effet remplir la file d'attente du modem. Celle-ci est probablement)S
/F6 SF 0 182.8 M(ENORME)S
/F4 SF ( car cela aide vraiment \340 obtenir de bon d\351bit de t\351l\351chargement vers l'amont. Cependant, ceci n'est)S
0 169.6 M(pas forc\351ment ce que voulez. Vous ne voulez pas forc\351ment avoir une file d'attente importante de mani\350re \340)S
0 156.4 M(garder l'interactivit\351 et pouvoir encore faire des choses pendant que vous envoyez des donn\351es.)S
0 130 M(La ligne de commande au-dessus ralentit l'envoi de donn\351es \340 un d\351bit qui ne conduit pas \340 une mise en file)S
0 116.8 M(d'attente dans le modem. La file d'attente r\351side dans le noyau Linux, o\371 nous pouvons lui imposer une taille)S
0 103.6 M(limite.)S
0 77.2 M(Modifier la valeur 220kbit avec votre vitesse de lien)S
/F6 SF ( REELLE)S
/F4 SF ( moins un petit pourcentage. Si vous avez un)S
0 64 M(modem vraiment rapide, augmenter un peu le param\350tre )S
/F0 SF (burst)S
/F4 SF (.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Param\350tres & usage)S
474.768 0 M(39)S
GR
SP
%%Page: (40) 40
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 364.52 M 487.0 2.0 F
0 204.12 M 487.0 2.0 F
13.2 FS/F9 SF 0 734.8 M(Mise en file d'attente stochastiquement \351quitable \()S
/Fb SF (Stochastic Fairness)S
0 718.96 M(Queueing)S
/F9 SF (\))S
11 FS/F6 SF 0 692.12 M(Stochastic Fairness Queueing)S
/F4 SF ( \(SFQ\) est une impl\351mentation simple de la famille des algorithmes de mise en)S
0 678.92 M(file d'attente \351quitable. Cette impl\351mentation est moins pr\351cise que les autres, mais elle n\351cessite aussi moins)S
0 665.72 M(de calculs tout en \351tant presque parfaitement \351quitable.)S
0 639.32 M(Le mot cl\351 dans SFQ est conversation \(ou flux\), qui correspond principalement \340 une session TCP ou un flux)S
0 626.12 M(UDP. Le trafic est alors divis\351 en un grand nombre de jolies files d'attente FIFO : une par conversation. Le)S
0 612.92 M(trafic est alors envoy\351 dans un tourniquet, donnant une chance \340 chaque session d'envoyer leurs donn\351es tour)S
0 599.72 M(\340 tour.)S
0 573.32 M(Ceci conduit \340 un comportement tr\350s \351quitable et emp\352che qu'une seule conversation \351touffe les autres. SFQ)S
0 560.12 M(est appel\351 << Stochastic >> car il n'alloue pas vraiment une file d'attente par session, mais a un algorithme qui)S
0 546.92 M(divise le trafic \340 travers un nombre limit\351 de files d'attente en utilisant un algorithme de hachage.)S
0 520.52 M(A cause de ce hachage, plusieurs sessions peuvent finir dans le m\352me seau, ce qui peut r\351duire de moiti\351 les)S
0 507.32 M(chances d'une session d'envoyer un paquet et donc r\351duire de moiti\351 la vitesse effective disponible. Pour)S
0 494.12 M(emp\352cher que cette situation ne devienne importante, SFQ change tr\350s souvent son algorithme de hachage)S
0 480.92 M(pour que deux sessions entrantes en collision ne le fassent que pendant un nombre r\351duit de secondes.)S
0 454.52 M(Il est important de noter que SFQ n'est seulement utile que dans le cas o\371 votre interface de sortie est vraiment)S
0 441.32 M(satur\351e ! Si ce n'est pas le cas, il n'y aura pas de files d'attente sur votre machine Linux et donc, pas d'effets.)S
0 428.12 M(Plus tard, nous d\351crirons comment combiner SFQ avec d'autres gestionnaires de mise en files d'attente pour)S
0 414.92 M(obtenir le meilleur des deux mondes.)S
0 388.52 M(Configurer sp\351cialement SFQ sur l'interface ethernet qui est en relation avec votre modem c\342ble ou votre)S
0 375.32 M(routeur DSL est vain sans d'autres mises en forme du trafic !)S
/F9 SF 0 346.92 M(Param\350tres & usage)S
/F4 SF 0 320.52 M(SFQ est presque configur\351 de base :)S
/F0 SF 0 294.12 M(perturb)S
/F4 SF 36 280.92 M(Reconfigure le hachage une fois toutes les )S
/F0 SF (pertub)S
/F4 SF ( secondes. S'il n'est pas indiqu\351, le hachage se sera)S
36 267.72 M(jamais reconfigur\351. Ce n'est pas recommand\351. 10 secondes est probablement une bonne valeur.)S
/F0 SF 0 254.52 M(quantum)S
/F4 SF 36 241.32 M(Nombre d'octets qu'un flux est autoris\351 \340 retirer de la file d'attente avant que la prochaine file d'attente)S
36 228.12 M(ne prenne son tour. Par d\351faut, \351gal \340 la taille maximum d'un paquet \(MTU\). Ne le configurez pas en)S
36 214.92 M(dessous du MTU !)S
/F9 SF 0 186.52 M(Configuration simple)S
/F4 SF 0 160.12 M(Si vous avez un p\351riph\351rique qui a une vitesse identique \340 celle du lien et un d\351bit r\351el disponible, comme un)S
0 146.92 M(modem t\351l\351phonique, cette configuration aidera \340 promouvoir l'\351quit\351 :)S
9.2 FS/F0 SF 0 122.353 M(# tc qdisc add dev ppp0 root sfq perturb 10)S
0 111.353 M(# tc -s -d qdisc ls)S
0 100.353 M(qdisc sfq 800c: dev ppp0 quantum 1514b limit 128p flows 128/1024 perturb 10sec )S
0 89.353 M( Sent 4812 bytes 62 pkts \(dropped 0, overlimits 0\) )S
11 FS/F4 SF 0 63.32 M(Le nombre )S
/F0 SF (800c)S
/F4 SF ( est un descripteur \()S
/F6 SF (handle)S
/F4 SF (\) automatiquement assign\351 et )S
/F0 SF (limit)S
/F4 SF ( signifie que )S
/F0 SF (128)S
/F4 SF ( paquets)S
0 50.12 M(peuvent attendre dans la file d'attente. Il y a )S
/F0 SF (1024)S
/F4 SF ( << seaux de hachage >> disponibles pour la comptabilit\351,)S
/F0 SF 0 36.92 M(128)S
/F4 SF ( pouvant \352tre actifs \340 la fois \(pas plus de paquets ne conviennent dans la file d'attente\). Le hachage est)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(40)S
92.386 0 M(Mise en file d'attente stochastiquement \351quitable \(Stochastic Fairness Queueing\))S
GR
SP
%%Page: (41) 41
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 726.2 M 487.0 2.0 F
0 335.592 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(reconfigur\351 toutes les 10 secondes.)S
15.8 FS/F9 SF 0 703.76 M(Conseils pour le choix de la file d'attente)S
11 FS/F4 SF 0 676.392 M(Pour r\351sumer, ces files d'attente simples g\350rent le trafic en r\351ordonnant, en ralentissant ou en supprimant les)S
0 663.192 M(paquets.)S
0 636.792 M(Les astuces suivantes peuvent vous aider \340 choisir la file d'attente \340 utiliser. Elles mentionnent certaines files)S
0 623.592 M(d'attente d\351crites dans le chapitre)S
/F6 SF ( Gestionnaires de mise en file d'attente avanc\351s>)S
/F4 SF (.)S
36 597.192 M(Pour simplement ralentir le trafic sortant, utilisez le)S
/F6 SF ( Token Bucket Filter)S
/F4 SF (. Il convient bien pour les)S
36 583.992 M(\351normes bandes passantes, si vous param\350trez en cons\351quence le seau.)S
/F18 SF 28.19 597.192 M(\267 )S
/F4 SF 36 570.792 M(Si votre lien est vraiment satur\351 et que vous voulez \352tre s\373r qu'aucune session ne va accaparer la)S
36 557.592 M(bande passante vers l'ext\351rieur, utilisez le)S
/F6 SF ( Stochastical Fairness Queueing)S
/F4 SF (.)S
/F18 SF 28.19 570.792 M(\267 )S
/F4 SF 36 544.392 M(Si vous avez une grande dorsale et que vous voulez savoir ce que vous faites, consid\351rez)S
/F6 SF ( Random)S
36 531.192 M(Early Drop)S
/F4 SF ( \(voir le chapitre)S
/F6 SF ( Gestionnaires de mise en file d'attente avanc\351s>)S
/F4 SF (\).)S
/F18 SF 28.19 544.392 M(\267 )S
/F4 SF 36 517.992 M(Pour << mettre en forme >> le trafic entrant qui n'est pas transmis, utilisez la r\351glementation Ingress)S
36 504.792 M(\()S
/F6 SF (Ingress Policier)S
/F4 SF (\). La mise en forme du flux entrant est appel\351e << r\351glementation >> \()S
/F6 SF (policing)S
/F4 SF (\) et)S
36 491.592 M(non << mise en forme >> \()S
/F6 SF (shaping)S
/F4 SF (\).)S
/F18 SF 28.19 517.992 M(\267 )S
/F4 SF 36 478.392 M(Si vous transmettez le trafic, utilisez TBF sur l'interface vers laquelle vous transmettez les donn\351es. Si)S
36 465.192 M(vous voulez mettre en forme un trafic pouvant sortir par plusieurs interfaces, alors le seul facteur)S
36 451.992 M(commun est l'interface entrante. Dans ce cas, utilisez la r\351glementation Ingress.)S
/F18 SF 28.19 478.392 M(\267 )S
/F4 SF 36 438.792 M(Si vous ne voulez pas mettre en forme le trafic, mais que vous vouliez voir si votre interface est)S
36 425.592 M(tellement charg\351e qu'elle a d\373 mettre en file d'attente les donn\351es, utilisez la file d'attente )S
/F0 SF (pfifo)S
/F4 SF ( \(pas)S
/F0 SF 36 412.392 M(pfifo&lowbar;fast)S
/F4 SF (\). Elle n'a pas de bandes internes, mais assure le comptage de la taille de son)S
36 399.192 M(accumulateur.)S
/F18 SF 28.19 438.792 M(\267 )S
/F4 SF 36 385.992 M(Finalement, vous pouvez aussi faire de la << mise en forme sociale >>. La technologie n'est pas)S
36 372.792 M(toujours capable de r\351aliser ce que vous voulez. Les utilisateurs sont hostiles aux contraintes)S
36 359.592 M(techniques. Un mot aimable peut \351galement vous aider \340 avoir votre bande passante correctement)S
36 346.392 M(divis\351e !)S
/F18 SF 28.19 385.992 M(\267 )S
15.8 FS/F9 SF 0 313.152 M(terminologie)S
11 FS/F4 SF 0 285.784 M(Pour comprendre correctement des configurations plus compliqu\351es, il est d'abord n\351cessaire d'expliquer)S
0 272.584 M(quelques concepts. A cause de la complexit\351 et de la relative jeunesse du sujet, beaucoup de mots diff\351rents)S
0 259.384 M(sont utilis\351s par les personnes mais ils signifient en fait la m\352me chose.)S
0 232.984 M(Ce qui suit est l\342chement inspir\351 du texte )S
/F0 SF (draft-ietf-diffserv-model-06.txt)S
/F4 SF (,)S
/F6 SF ( An Informal)S
0 219.784 M(Management Model for Diffserv Routers)S
/F4 SF (. Il peut \352tre trouv\351 \340 l'adresse)S
0 206.584 M(http://www.ietf.org/internet-drafts/draft-ietf-diffserv-model-04.txt.)S
0 180.184 M(Lisez-le pour les d\351finitions strictes des termes utilis\351s.)S
0 153.784 M(Gestionnaire de mise en file d'attente \(qdisc\) \()S
/F6 SF (Queueing Discipline)S
/F4 SF (\))S
36 140.584 M(Un algorithme qui g\350re la file d'attente d'un p\351riph\351rique, soit pour les donn\351es entrantes \()S
/F6 SF (ingress)S
/F4 SF (\),)S
36 127.384 M(soit pour les donn\351es sortantes \()S
/F6 SF (egress)S
/F4 SF (\).)S
0 114.184 M(Gestionnaire de mise en file d'attente sans classes \()S
/F6 SF (Classless qdisc)S
/F4 SF (\))S
36 100.984 M(Un gestionnaire de mise en file d'attente qui n'a pas de subdivisions internes configurables.)S
0 87.784 M(Gestionnaire de mise en file d'attente bas\351 sur des classes \()S
/F6 SF (Classful qdisc)S
/F4 SF (\))S
36 74.584 M(Un gestionnaire de mise en file d'attente bas\351 sur des classes contient de multiples classes. Certaines)S
36 61.384 M(de ces classes contiennent un gestionnaire de mise en file d'attente suppl\351mentaire, qui peut encore)S
36 48.184 M(\352tre bas\351 sur des classes, mais ce n'est pas obligatoire. Si l'on s'en tient \340 la d\351finition stricte,)S
/F0 SF 36 34.984 M(pfifo&lowbar;fast)S
/F6 SF ( EST)S
/F4 SF ( bas\351 sur des classes, dans la mesure o\371 il contient trois bandes, qui sont)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Configuration simple)S
474.768 0 M(41)S
GR
SP
%%Page: (42) 42
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 11 FS/F4 SF 36 737 M(en fait des classes. Cependant, d'un point de vue des perspectives de configuration pour l'utilisateur, il)S
36 723.8 M(est sans classes dans la mesure o\371 ces classes ne peuvent \352tre modifi\351es avec l'outil)S
/F5 SF ( tc)S
/F4 SF (.)S
0 710.6 M(Classes)S
36 697.4 M(Un gestionnaire de mise en file d'attente bas\351 sur les classes peut avoir beaucoup de classes, chacune)S
36 684.2 M(d'elles \351tant internes au gestionnaire. Une classe peut \340 son tour se voir ajouter plusieurs classes. Une)S
36 671 M(classe peut donc avoir comme parent soit un gestionnaire de mise en file d'attente, soit une autre)S
36 657.8 M(classe. Une classe terminale est une classe qui ne poss\350de de classes enfants. Seul 1 gestionnaire de)S
36 644.6 M(mise en file d'attente est attach\351 \340 cette classe. Ce gestionnaire est responsable de l'envoi des donn\351es)S
36 631.4 M(de cette classe. Quand vous cr\351ez une classe, un gestionnaire de mise en file d'attente fifo est cr\351\351.)S
36 618.2 M(Quand vous ajoutez une classe enfant, ce gestionnaire est supprim\351. Le gestionnaire fifo d'une classe)S
36 605 M(terminale peut \352tre remplac\351 par un autre gestionnaire plus adapt\351. Vous pouvez m\352me remplacer ce)S
36 591.8 M(gestionnaire fifo par un gestionnaire de mise en file d'attente bas\351 sur des classes de sorte que vous)S
36 578.6 M(pourrez rajouter des classes suppl\351mentaires.)S
0 565.4 M(Classificateur \()S
/F6 SF (Classifier)S
/F4 SF (\))S
36 552.2 M(Chaque gestionnaire de mise en file d'attente bas\351 sur des classes a besoin de d\351terminer vers quelles)S
36 539 M(classes il doit envoyer un paquet. Ceci est r\351alis\351 en utilisant le classificateur.)S
0 525.8 M(Filtre \()S
/F6 SF (Filter)S
/F4 SF (\))S
36 512.6 M(La classification peut \352tre r\351alis\351e en utilisant des filtres. Un filtre est compos\351 d'un certain nombre de)S
36 499.4 M(conditions qui, si elles sont toutes v\351rifi\351es, satisfait le filtre.)S
0 486.2 M(Ordonnancement \()S
/F6 SF (Scheduling)S
/F4 SF (\))S
36 473 M(Un gestionnaire de mise en file d'attente peut, avec l'aide d'un classificateur, d\351cider que des paquets)S
36 459.8 M(doivent sortir plus t\364t que d'autres. Ce processus est appel\351 ordonnancement \()S
/F6 SF (scheduling)S
/F4 SF (\), et est)S
36 446.6 M(r\351alis\351 par exemple par le gestionnaire )S
/F0 SF (pfifo&lowbar;fast)S
/F4 SF ( mentionn\351 plus t\364t.)S
36 433.4 M(L'ordonnancement est aussi appel\351 << reclassement >> \()S
/F6 SF (reordering)S
/F4 SF (\), ce qui peut pr\352ter \340 confusion.)S
0 420.2 M(Mise en forme \()S
/F6 SF (Shaping)S
/F4 SF (\))S
36 407 M(Le processus qui consiste \340 retarder l'\351mission des paquets sortants pour avoir un trafic conforme \340 un)S
36 393.8 M(d\351bit maximum configur\351. La mise en forme est r\351alis\351e sur)S
/F6 SF ( egress)S
/F4 SF (. Famili\350rement, rejeter des)S
36 380.6 M(paquets pour ralentir le trafic est \351galement souvent appel\351 Mise en forme.)S
0 367.4 M(R\351glementation \()S
/F6 SF (Policing)S
/F4 SF (\))S
36 354.2 M(Retarder ou jeter des paquets dans le but d'avoir un trafic restant en dessous d'une bande passante)S
36 341 M(configur\351e. Dans Linux, la r\351glementation ne peut que jeter un paquet, et non le retarder dans la)S
36 327.8 M(mesure o\371 il n'y a pas de << file d'attente d'entr\351e >> \()S
/F6 SF (ingress queue)S
/F4 SF (\).)S
/F6 SF 0 314.6 M(Work-Conserving)S
/F4 SF 36 301.4 M(Un gestionnaire de mise en file d'attente)S
/F6 SF ( work-conserving)S
/F4 SF ( d\351livre toujours un paquet s'il y en a un de)S
36 288.2 M(disponible. En d'autres termes, il ne retarde jamais un paquet si l'adaptateur r\351seau est pr\352t \340 l'envoyer)S
36 275 M(\(dans le cas du gestionnaire)S
/F6 SF ( egress)S
/F4 SF (\).)S
/F6 SF 0 261.8 M(non-Work-Conserving)S
/F4 SF 36 248.6 M(Quelques gestionnaire de mise en files d'attente, comme par exemple le)S
/F6 SF ( Token Bucket Filter)S
/F4 SF (, peuvent)S
36 235.4 M(avoir besoin de maintenir un paquet pendant un certain temps pour limiter la bande passante. Ceci)S
36 222.2 M(signifie qu'ils refusent parfois de lib\351rer un paquet, bien qu'ils en aient un de disponible.)S
0 195.8 M(Maintenant que nous avons d\351fini notre terminologie, voyons o\371 tous ces \351l\351ments sont situ\351s.)S
9.2 FS/F0 SF 0 171.233 M(                Programmes Utilisateurs)S
0 160.233 M(                     ^)S
0 149.233 M(                     |)S
0 138.233 M(     +---------------+-------------------------------------------+)S
0 127.233 M(     |               Y                                           |)S
0 116.233 M(     |    -------> Pile IP                                       |)S
0 105.233 M(     |   |              |                                        |)S
0 94.233 M(     |   |              Y                                        |)S
0 83.233 M(     |   |              Y                                        |)S
0 72.233 M(     |   ^              |                                        |)S
0 61.233 M(     |   |  / ----------> Transmission ->                        |)S
0 50.233 M(     |   ^ /                           |                         |)S
0 39.233 M(     |   |/                            Y                         |)S
0 28.233 M(     |   |                             |                         |)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(42)S
427.094 0 M(terminologie)S
GR
SP
%%Page: (43) 43
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 319.2 M 487.0 2.0 F
0 139.792 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(     |   ^                             Y            /-qdisc1-\\   |)S
0 727.833 M(     |   |                          Classificateur /--qdisc2--\\  |)S
0 716.833 M(  --->->Gestionnaire de mise        de sortie      ---qdisc3---- | ->)S
0 705.833 M(     |  en file d'attente           \(Egress\)       \\__qdisc4__/  |)S
0 694.833 M(     |  d'entr\351e \(Ingress\)                          \\-qdiscN_/   |)S
0 683.833 M(     |                                                           |)S
0 672.833 M(     +-----------------------------------------------------------+)S
11 FS/F4 SF 0 646.8 M(Merci \340 Jamal Hadi Salim pour cette repr\351sentation ASCII.)S
0 620.4 M(Le grand rectangle repr\351sente le noyau. La fl\350che la plus \340 gauche repr\351sente le trafic du r\351seau entrant dans)S
0 607.2 M(votre machine. Celui-ci alimente alors le gestionnaire de mise en file d'attente Ingress qui peut appliquer des)S
0 594 M(filtres \340 un paquet, et d\351cider de le supprimer. Ceci est appel\351 << r\351glementation >> \()S
/F6 SF (Policing)S
/F4 SF (\).)S
0 567.6 M(Ce processus a lieu tr\350s t\364t, avant d'avoir beaucoup parcouru le noyau. C'est par cons\351quent un tr\350s bon)S
0 554.4 M(endroit pour rejeter au plus t\364t du trafic, sans pour autant consommer beaucoup de ressources CPU.)S
0 528 M(Si le paquet est autoris\351 \340 continuer, il peut \352tre destin\351 \340 une application locale et, dans ce cas, il entre dans la)S
0 514.8 M(couche IP pour \352tre trait\351 et d\351livr\351 \340 un programme utilisateur. Le paquet peut \351galement \352tre transmis sans)S
0 501.6 M(entrer dans une application et dans ce cas, \352tre destin\351 \340)S
/F6 SF ( egress)S
/F4 SF (. Les programmes utilisateurs peuvent)S
0 488.4 M(\351galement d\351livrer des donn\351es, qui sont alors transmises et examin\351es par le classificateur)S
/F6 SF ( Egress)S
/F4 SF (.)S
0 462 M(L\340, il est examin\351 et mis en file d'attente vers un certain nombre de gestionnaire de mise en file d'attente. Par)S
0 448.8 M(d\351faut, il n'y a qu'un seul gestionnaire)S
/F6 SF ( egress)S
/F4 SF ( install\351, )S
/F0 SF (pfifo&lowbar;fast)S
/F4 SF (, qui re\347oit tous les paquets.)S
0 435.6 M(Ceci correspond \340 << la mise en file d'attente >> \()S
/F6 SF (enqueueing)S
/F4 SF (\).)S
0 409.2 M(Le paquet r\351side maintenant dans le gestionnaire de mise en file d'attente, attendant que le noyau le r\351clame)S
0 396 M(pour le transmettre \340 travers l'interface r\351seau. Ceci correspond au << retrait de la file d'attente >>)S
0 382.8 M(\()S
/F6 SF (dequeueing)S
/F4 SF (\).)S
0 356.4 M(Le sch\351ma ne montre que le cas d'un seul adaptateur r\351seau. Les fl\350ches entrantes et sortantes du noyau ne)S
0 343.2 M(doivent pas \352tre trop prises au pied de la lettre. Chaque adaptateur r\351seau a un gestionnaire d'entr\351e et de)S
0 330 M(sortie.)S
15.8 FS/F9 SF 0 296.76 M(Gestionnaires de file d'attente bas\351s sur les classes)S
11 FS/F4 SF 0 269.392 M(Les gestionnaires de mise en file d'attente bas\351s sur des classes sont tr\350s utiles si vous avez diff\351rentes sortes)S
0 256.192 M(de trafic qui doivent \352tre trait\351s diff\351remment. L'un d'entre eux est appel\351 CBQ, pour)S
/F6 SF ( Class Based Queueing)S
/F4 SF (.)S
0 242.992 M(Il est si souvent mentionn\351 que les personnes identifient les gestionnaires de mise en file d'attente bas\351s sur)S
0 229.792 M(des classes uniquement \340 CBQ, ce qui n'est pas le cas.)S
0 203.392 M(CBQ est le m\351canisme le plus ancien, ainsi que le plus compliqu\351. Il n'aura pas forc\351ment les effets que vous)S
0 190.192 M(recherchez. Ceci surprendra peut-\352tre ceux qui sont sous l'emprise de << l'effet Sendmail >>, qui nous)S
0 176.992 M(enseigne qu'une technologie complexe, non document\351e est forc\351ment meilleure que toute autre.)S
0 150.592 M(Nous \351voquerons bient\364t, plus \340 propos, CBQ et ses alternatives.)S
13.2 FS/F9 SF 0 119.992 M(Flux \340 l'int\351rieur des gestionnaires bas\351s sur des classes & \340 l'int\351rieur des)S
0 104.152 M(classes)S
11 FS/F4 SF 0 77.312 M(Quand le trafic entre dans un gestionnaire de mise en file d'attente bas\351 sur des classes, il doit \352tre envoy\351 vers)S
0 64.112 M(l'une de ses classes ; il doit \352tre << classifi\351 >>. Pour d\351terminer que faire d'un paquet, les \351l\351ments appel\351s)S
0 50.912 M(<< filtres >> sont consult\351s. Il est important de savoir que les filtres sont appel\351s de l'int\351rieur d'un)S
0 37.712 M(gestionnaire, et pas autrement !)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Gestionnaires de file d'attente bas\351s sur les classes)S
474.768 0 M(43)S
GR
SP
%%Page: (44) 44
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 567.8 M 487.0 2.0 F
0 336.12 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(Les filtres attach\351s \340 ce gestionnaire renvoient alors une d\351cision que le gestionnaire utilise pour mettre en file)S
0 723.8 M(d'attente le paquet vers l'une des classes. Chaque sous-classe peut essayer d'autres filtres pour voir si de)S
0 710.6 M(nouvelles instructions s'appliquent. Si ce n'est pas le cas, la classe met le paquet en file d'attente dans le)S
0 697.4 M(gestionnaire de mise en file d'attente qu'elle contient.)S
0 671 M(En plus de contenir d'autres gestionnaires, la plupart des gestionnaires de mise en file d'attente bas\351s sur des)S
0 657.8 M(classes r\351alisent \351galement de la mise en forme. Ceci est utile pour r\351aliser \340 la fois l'ordonnancement \(avec)S
0 644.6 M(SFQ, par exemple\) et le contr\364le de d\351bit. Vous avez besoin de ceci dans les cas o\371 vous avez une interface \340)S
0 631.4 M(haut d\351bit \(ethernet, par exemple\) connect\351e \340 un p\351riph\351rique plus lent \(un modem c\342ble\).)S
0 605 M(Si vous n'utilisez que SFQ, rien ne devait se passer, dans la mesure o\371 les paquets entrent et sortent du routeur)S
0 591.8 M(sans d\351lai : l'interface de sortie est de loin beaucoup plus rapide que la vitesse r\351elle de votre liaison ; il n'y a)S
0 578.6 M(alors pas de files d'attente \340 r\351ordonnancer.)S
13.2 FS/F9 SF 0 548 M(La famille des gestionnaires de mise en file d'attente : racines, descripteurs,)S
0 532.16 M(descendances et parents)S
11 FS/F4 SF 0 505.32 M(Chaque interface \340 << un gestionnaire de mise en file d'attente racine >> de sortie \()S
/F6 SF (egress root qdisc)S
/F4 SF (\). Par)S
0 492.12 M(d\351faut, le gestionnaire de mise en file d'attente sans classes mentionn\351 plus t\364t )S
/F0 SF (pfifo&lowbar;fast)S
/F4 SF (.)S
0 478.92 M(Chaque gestionnaire et classe est rep\351r\351 par un descripteur \()S
/F6 SF (handle)S
/F4 SF (\), qui pourra \352tre utilis\351 par les prochaines)S
0 465.72 M(d\351clarations de configuration pour se r\351f\351rer \340 ce gestionnaire. En plus du gestionnaire de sortie, une interface)S
0 452.52 M(peut \351galement avoir un gestionnaire d'entr\351e \()S
/F6 SF (ingress)S
/F4 SF (\), qui r\351glemente le trafic entrant.)S
0 426.12 M(Ces descripteurs sont constitu\351s de deux parties : un nombre majeur et un nombre mineur : <major>:<minor>.)S
0 412.92 M(Il est habituel de nommer le gestionnaire racine )S
/F0 SF (1:)S
/F4 SF (, ce qui est \351quivalent \340 )S
/F0 SF (1:0)S
/F4 SF (. Le nombre mineur d'un)S
0 399.72 M(gestionnaire de mise en file d'attente est toujours 0.)S
0 373.32 M(Les classes doivent avoir le m\352me nombre majeur que leur parent. Le nombre majeur doit \352tre unique \340)S
0 360.12 M(l'int\351rieur d'une configuration egress ou ingress. Le nombre mineur doit \352tre unique \340 l'int\351rieur d'un)S
0 346.92 M(gestionnaire de mise en file d'attente et de ses classes.)S
/F9 SF 0 318.52 M(Comment les filtres sont utilis\351s pour classifier le trafic)S
/F4 SF 0 292.12 M(Pour r\351capituler, une hi\351rarchie typique pourrait ressembler \340 ceci :)S
9.2 FS/F0 SF 0 267.553 M(                     1:   Gestionnaire de mise en file d'attente racine)S
0 256.553 M(                      |)S
0 245.553 M(                     1:1    classe enfant)S
0 234.553 M(                   /  |  \\)S
0 223.553 M(                  /   |   \\)S
0 212.553 M(                 /    |    \\)S
0 201.553 M(                 /    |    \\)S
0 190.553 M(              1:10  1:11  1:12   classes enfants)S
0 179.553 M(               |      |     | )S
0 168.553 M(               |     11:    |    classe terminale)S
0 157.553 M(               |            | )S
0 146.553 M(               10:         12:   Gestionnaire de mise en file d'attente)S
0 135.553 M(              /   \\       /   \\)S
0 124.553 M(           10:1  10:2   12:1  12:2   classes terminales)S
11 FS/F4 SF 0 98.52 M(Mais ne laissez pas cet arbre vous abuser ! Vous ne devriez)S
/F6 SF ( pas)S
/F4 SF ( imaginer le noyau \352tre au sommet de l'arbre et)S
0 85.32 M(le r\351seau en dessous, ce qui n'est justement pas le cas. Les paquets sont mis et retir\351s de la file d'attente \340 la)S
0 72.12 M(racine du gestionnaire, qui est le seul \351l\351ment avec lequel le noyau dialogue.)S
0 45.72 M(Un paquet pourrait \352tre classifi\351 \340 travers une cha\356ne suivante :)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(44)S
84.818 0 M(Flux \340 l'int\351rieur des gestionnaires bas\351s sur des classes & \340 l'int\351rieur desclasses)S
GR
SP
%%Page: (45) 45
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 625 M 487.0 2.0 F
0 425 M 487.0 2.0 F
0 63.96 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(1: -> 1:1 -> 12: -> 12:2)S
11 FS/F4 SF 0 712.8 M(Le paquet r\351side maintenant dans la file d'attente du gestionnaire attach\351 \340 la classe 12:2. Dans cet exemple,)S
0 699.6 M(un filtre a \351t\351 attach\351 \340 chaque noeud de l'arbre, chacun choisissant la prochaine branche \340 prendre. Cela est)S
0 686.4 M(r\351alisable. Cependant, ceci est \351galement possible :)S
9.2 FS/F0 SF 0 661.833 M(1: -> 12:2)S
11 FS/F4 SF 0 635.8 M(Dans ce cas, un filtre attach\351 \340 la racine a d\351cid\351 d'envoyer le paquet directement \340 )S
/F0 SF (12:2)S
/F4 SF (.)S
/F9 SF 0 607.4 M(Comment les paquets sont retir\351s de la file d'attente et envoy\351s vers le mat\351riel)S
/F4 SF 0 581 M(Quand le noyau d\351cide qu'il doit extraire des paquets pour les envoyer vers l'interface, le gestionnaire racine)S
/F0 SF 0 567.8 M(1:)S
/F4 SF ( re\347oit une requ\352te )S
/F0 SF (dequeue)S
/F4 SF (, qui est transmise \340 )S
/F0 SF (1:1)S
/F4 SF ( et qui, \340 son tour, est pass\351e \340 )S
/F0 SF (10:)S
/F4 SF (, )S
/F0 SF (11:)S
/F4 SF ( et )S
/F0 SF (12:)S
/F4 SF (,)S
0 554.6 M(chacune interrogeant leurs descendances qui essaient de retirer les paquets de leur file d'attente. Dans ce cas,)S
0 541.4 M(le noyau doit parcourir l'ensemble de l'arbre, car seul )S
/F0 SF (12:2)S
/F4 SF ( contient un paquet.)S
0 515 M(En r\351sum\351, les classes << embo\356t\351es >> parlent)S
/F6 SF ( uniquement)S
/F4 SF ( \340 leur gestionnaire de mise en file d'attente)S
0 501.8 M(parent ; jamais \340 une interface. Seul la file d'attente du gestionnaire racine est vid\351e par le noyau !)S
0 475.4 M(Ceci a pour r\351sultat que les classes ne retirent jamais les paquets d'une file d'attente plus vite que ce que leur)S
0 462.2 M(parent autorise. Et c'est exactement ce que nous voulons : de cette mani\350re, nous pouvons avoir SFQ dans une)S
0 449 M(classe interne qui ne fait pas de mise en forme, mais seulement de l'ordonnancement, et avoir un gestionnaire)S
0 435.8 M(de mise en file d'attente ext\351rieur qui met en forme le trafic.)S
13.2 FS/F9 SF 0 405.2 M(Le gestionnaire de mise en file d'attente PRIO)S
11 FS/F4 SF 0 378.36 M(Le gestionnaire de mise en file d'attente ne met pas vraiment en forme le trafic ; il ne fait que le subdiviser en)S
0 365.16 M(se basant sur la mani\350re dont vous avez configur\351 vos filtres. Vous pouvez consid\351rer les gestionnaires PRIO)S
0 351.96 M(comme une sorte de super )S
/F0 SF (pfifo&lowbar;fast)S
/F4 SF ( dop\351, o\371 chaque bande est une classe s\351par\351e au lieu)S
0 338.76 M(d'une simple FIFO.)S
0 312.36 M(Quand un paquet est mis en file d'attente dans le gestionnaire PRIO, une classe est choisie en fonction des)S
0 299.16 M(filtres que vous avez donn\351s. Par d\351faut, trois classes sont cr\351\351es. Ces classes contiennent par d\351faut de purs)S
0 285.96 M(gestionnaires de mise en file d'attente FIFO sans structure interne, mais vous pouvez les remplacer par)S
0 272.76 M(n'importe quels gestionnaires disponibles.)S
0 246.36 M(Chaque fois qu'un paquet doit \352tre retir\351 d'une file d'attente, la classe )S
/F0 SF (:1)S
/F4 SF ( est d'abord test\351e. Les classes plus)S
0 233.16 M(\351lev\351es ne sont utilis\351es que si aucune des bandes plus faibles n'a pas fourni de paquets.)S
0 206.76 M(Cette file d'attente est tr\350s utile dans le cas o\371 vous voulez donner la priorit\351 \340 certains trafics en utilisant toute)S
0 193.56 M(la puissance des filtres)S
/F5 SF ( tc)S
/F4 SF ( et en ne se limitant pas seulement aux options du champ TOS. Vous pouvez)S
0 180.36 M(\351galement ajouter un autre gestionnaire de mise en file d'attente aux trois classes pr\351d\351finies, tandis que)S
/F0 SF 0 167.16 M(pfifo&lowbar;fast)S
/F4 SF ( est limit\351 aux simples gestionnaires FIFO.)S
0 140.76 M(Puisqu'il ne met pas vraiment en forme, on applique le m\352me avertissement que pour SFQ. Utilisez PRIO)S
0 127.56 M(seulement si votre lien physique est vraiment satur\351 ou int\351grez-le \340 l'int\351rieur d'un gestionnaire de mise en)S
0 114.36 M(file d'attente bas\351 sur des classes qui r\351alisent la mise en forme. Ce dernier cas est valable pour pratiquement)S
0 101.16 M(tous les modems-c\342bles et les p\351riph\351riques DSL.)S
0 74.76 M(En termes formels, le gestionnaire de mise en file d'attente PRIO est un ordonnanceur)S
/F6 SF ( Work-Conserving)S
/F4 SF (.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Comment les filtres sont utilis\351s pour classifier le trafic)S
474.768 0 M(45)S
GR
SP
%%Page: (46) 46
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 501.8 M 487.0 2.0 F
11 FS/F9 SF 0 737 M(Param\350tres PRIO & usage)S
/F4 SF 0 710.6 M(Les param\350tres suivants sont reconnus par)S
/F5 SF ( tc)S
/F4 SF ( :)S
/F0 SF 0 684.2 M(bands)S
/F4 SF 36 671 M(Nombre de bandes \340 cr\351er. Chaque bande est en fait une classe. Si vous changez ce nombre, vous)S
36 657.8 M(devez \351galement changer :)S
/F0 SF 0 644.6 M(priomap)S
/F4 SF 36 631.4 M(Si vous ne fournissez pas de filtres)S
/F5 SF ( tc)S
/F4 SF ( pour classifier le trafic, le gestionnaire PRIO regarde la priorit\351)S
/F0 SF 36 618.2 M(TC&lowbar;PRIO)S
/F4 SF ( pour d\351cider comment mettre en file d'attente le trafic.)S
36 591.8 M(Ceci fonctionne comme le gestionnaire de mise en file d'attente )S
/F0 SF (pfifo&lowbar;fast)S
/F4 SF ( mentionn\351)S
36 578.6 M(plus t\364t. Voir la section correspondante pour plus de d\351tails.)S
0 552.2 M(Les bandes sont des classes et sont appel\351es par d\351faut majeur:1 \340 majeur:3. Donc, si votre gestionnaire de)S
0 539 M(mise en file d'attente est appel\351 )S
/F0 SF (12:)S
/F4 SF (,)S
/F5 SF ( tc)S
/F4 SF ( filtre le trafic vers )S
/F0 SF (12:1)S
/F4 SF ( pour lui accorder une plus grande priorit\351.)S
0 512.6 M(Par it\351ration, la bande 0 correspond au nombre mineur 1, la bande 1 au nombre mineur 2, etc ...)S
/F9 SF 0 484.2 M(Configuration simple)S
/F4 SF 0 457.8 M(Nous allons cr\351er cet arbre :)S
9.2 FS/F0 SF 0 433.233 M(     racine 1: prio)S
0 422.233 M(          1:   Gestionnaire racine)S
0 411.233 M(         / | \\ )S
0 400.233 M(       /   |   \\)S
0 389.233 M(       /   |   \\)S
0 378.233 M(     1:1  1:2  1:3    classes)S
0 367.233 M(      |    |    |)S
0 356.233 M(     10:  20:  30:    gestionnaire gestionnaire)S
0 345.233 M(     sfq  tbf  sfq)S
0 334.233 M(bande 0    1    2)S
11 FS/F4 SF 0 308.2 M(Le trafic de masse ira vers )S
/F0 SF (30:)S
/F4 SF ( tandis que le trafic interactif ira vers )S
/F0 SF (20:)S
/F4 SF ( ou )S
/F0 SF (10:)S
/F4 SF (.)S
0 281.8 M(Les lignes de commande :)S
9.2 FS/F0 SF 0 257.233 M(# tc qdisc add dev eth0 root handle 1: prio )S
0 246.233 M(## Ceci cr\351e *instantan\351ment* les classes 1:1, 1:2, 1:3)S
0 224.233 M(# tc qdisc add dev eth0 parent 1:1 handle 10: sfq)S
0 213.233 M(# tc qdisc add dev eth0 parent 1:2 handle 20: tbf rate 20kbit buffer 1600 limit 3000)S
0 202.233 M(# tc qdisc add dev eth0 parent 1:3 handle 30: sfq                                )S
11 FS/F4 SF 0 176.2 M(Regardons maintenant ce que nous avons cr\351\351 :)S
9.2 FS/F0 SF 0 151.633 M(# tc -s qdisc ls dev eth0 )S
0 140.633 M(qdisc sfq 30: quantum 1514b )S
0 129.633 M( Sent 0 bytes 0 pkts \(dropped 0, overlimits 0\) )S
0 107.633 M( qdisc tbf 20: rate 20Kbit burst 1599b lat 667.6ms )S
0 96.633 M( Sent 0 bytes 0 pkts \(dropped 0, overlimits 0\) )S
0 74.633 M( qdisc sfq 10: quantum 1514b )S
0 63.633 M( Sent 132 bytes 2 pkts \(dropped 0, overlimits 0\) )S
0 41.633 M( qdisc prio 1: bands 3 priomap  1 2 2 2 1 2 0 0 1 1 1 1 1 1 1 1)S
0 30.633 M( Sent 174 bytes 3 pkts \(dropped 0, overlimits 0\) )S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(46)S
356.782 0 M(Param\350tres PRIO & usage)S
GR
SP
%%Page: (47) 47
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 244.4 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(Comme vous pouvez le voir, la bande 0 a d\351j\340 re\347u du trafic, et un paquet a \351t\351 envoy\351 pendant l'ex\351cution de)S
0 723.8 M(cette commande !)S
0 697.4 M(Nous allons maintenant g\351n\351rer du trafic de masse avec un outil qui configure correctement les options TOS,)S
0 684.2 M(et regarder de nouveau :)S
9.2 FS/F0 SF 0 659.633 M(# scp tc ahu@10.0.0.11:./)S
0 648.633 M(ahu@10.0.0.11's password: )S
0 637.633 M(tc                   100% |*****************************|   353 KB    00:00    )S
0 626.633 M(# tc -s qdisc ls dev eth0)S
0 615.633 M(qdisc sfq 30: quantum 1514b )S
0 604.633 M( Sent 384228 bytes 274 pkts \(dropped 0, overlimits 0\) )S
0 582.633 M( qdisc tbf 20: rate 20Kbit burst 1599b lat 667.6ms )S
0 571.633 M( Sent 2640 bytes 20 pkts \(dropped 0, overlimits 0\) )S
0 549.633 M( qdisc sfq 10: quantum 1514b )S
0 538.633 M( Sent 2230 bytes 31 pkts \(dropped 0, overlimits 0\) )S
0 516.633 M( qdisc prio 1: bands 3 priomap  1 2 2 2 1 2 0 0 1 1 1 1 1 1 1 1)S
0 505.633 M( Sent 389140 bytes 326 pkts \(dropped 0, overlimits 0\) )S
11 FS/F4 SF 0 479.6 M(Comme vous pouvez le voir, tout le trafic a \351t\351 envoy\351 comme pr\351vu vers le descripteur )S
/F0 SF (30:)S
/F4 SF (, qui est la bande)S
0 466.4 M(de plus faible priorit\351. Maintenant, pour v\351rifier que le trafic interactif va vers les bandes de plus grande)S
0 453.2 M(priorit\351, nous g\351n\351rons du trafic interactif :)S
9.2 FS/F0 SF 0 428.633 M(# tc -s qdisc ls dev eth0)S
0 417.633 M(qdisc sfq 30: quantum 1514b )S
0 406.633 M( Sent 384228 bytes 274 pkts \(dropped 0, overlimits 0\) )S
0 384.633 M( qdisc tbf 20: rate 20Kbit burst 1599b lat 667.6ms )S
0 373.633 M( Sent 2640 bytes 20 pkts \(dropped 0, overlimits 0\) )S
0 351.633 M( qdisc sfq 10: quantum 1514b )S
0 340.633 M( Sent 14926 bytes 193 pkts \(dropped 0, overlimits 0\) )S
0 318.633 M( qdisc prio 1: bands 3 priomap  1 2 2 2 1 2 0 0 1 1 1 1 1 1 1 1)S
0 307.633 M( Sent 401836 bytes 488 pkts \(dropped 0, overlimits 0\) )S
11 FS/F4 SF 0 281.6 M(Ca a march\351. Tout le trafic suppl\351mentaire a \351t\351 vers )S
/F0 SF (10:)S
/F4 SF (, qui est notre gestionnaire de plus grande priorit\351.)S
0 268.4 M(Aucun trafic n'a \351t\351 envoy\351 vers les priorit\351s les plus faibles, qui avaient re\347u au pr\351alable tout le trafic venant)S
0 255.2 M(de notre)S
/F5 SF ( scp)S
/F4 SF (.)S
13.2 FS/F9 SF 0 224.6 M(Le c\351l\350bre gestionnaire de mise en file d'attente CBQ)S
11 FS/F4 SF 0 197.76 M(Comme dit avant, CBQ est le gestionnaire de mise en file d'attente disponible le plus complexe, celui qui a eu)S
0 184.56 M(le plus de publicit\351, qui est le moins compris et qui est probablement le plus farceur lors de sa mise au point.)S
0 171.36 M(Ce n'est pas parce que les auteurs sont mauvais ou incomp\351tents, loin de l\340, mais l'algorithme CBQ n'est pas)S
0 158.16 M(remarquablement pr\351cis et il ne correspond pas vraiment \340 la fa\347on dont Linux fonctionne.)S
0 131.76 M(En plus d'\352tre bas\351 sur des classes, CBQ sert \351galement \340 la mise en forme de trafic et c'est sur cet aspect qu'il)S
0 118.56 M(ne fonctionne pas tr\350s bien. Il travaille comme ceci : si vous essayez de mettre en forme une connexion de)S
0 105.36 M(10mbit/s \340 1mbits/s, le lien doit \352tre inactif 90&percnt; du temps. Si ce n'est pas le cas, nous devons limiter le)S
0 92.16 M(taux de sorte qu'il)S
/F6 SF ( soit)S
/F4 SF ( inactif 90&percnt; du temps.)S
0 65.76 M(Ceci est assez dur \340 mesurer et c'est pour cette raison que CBQ d\351duit le temps d'inactivit\351 du nombre de)S
0 52.56 M(microsecondes qui s'\351coulent entre les requ\352tes de la couche mat\351rielle pour avoir plus de donn\351es. Cette)S
0 39.36 M(combinaison peut \352tre utilis\351e pour \351valuer si le lien est charg\351 ou non.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Configuration simple)S
474.768 0 M(47)S
GR
SP
%%Page: (48) 48
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 541.4 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(Ceci est plut\364t l\351ger et l'on arrive pas toujours \340 des r\351sultats convenables. Par exemple, qu'en est-il de la)S
0 723.8 M(vitesse de liaison r\351elle d'une interface qui n'est pas capable de transmettre pleinement les donn\351es \340)S
0 710.6 M(100mbit/s, peut-\352tre \340 cause d'un mauvais pilote de p\351riph\351rique ? Une carte r\351seau PCMCIA ne pourra)S
0 697.4 M(jamais atteindre 100mbit/s \340 cause de la conception du bus. De nouveau, comment calculons-nous le temps)S
0 684.2 M(d'inactivit\351 ?)S
0 657.8 M(Cela devient m\352me pire quand on consid\350re un p\351riph\351rique r\351seau "pas-vraiment-r\351el" comme)S
/F6 SF ( PPP Over)S
0 644.6 M(Ethernet)S
/F4 SF ( ou)S
/F6 SF ( PPTP over TCP/IP)S
/F4 SF (. La largeur de bande effective est dans ce cas probablement d\351termin\351e par)S
0 631.4 M(l'efficacit\351 des tubes vers l'espace utilisateur, qui est \351norme.)S
0 605 M(Les personnes qui ont effectu\351 des mesures ont d\351couvert que CBQ n'est pas toujours tr\350s exact, et parfois)S
0 591.8 M(m\352me, tr\350s \351loign\351 de la configuration.)S
0 565.4 M(Cependant, il marche bien dans de nombreuses circonstances. Avec la documentation fournie ici, vous devriez)S
0 552.2 M(\352tre capable de le configurer pour qu'il fonctionne bien dans la plupart des cas.)S
/F9 SF 0 523.8 M(Mise en forme CBQ en d\351tail)S
/F4 SF 0 497.4 M(Comme dit pr\351c\351demment, CBQ fonctionne en s'assurant que le lien est inactif juste assez longtemps pour)S
0 484.2 M(abaisser la bande passante r\351elle au d\351bit configur\351. Pour r\351aliser cela, il calcule le temps qui devrait s'\351couler)S
0 471 M(entre des paquets de taille moyennne.)S
0 444.6 M(En cours de fonctionnement, le temps d'inactivit\351 effectif \()S
/F6 SF (the effective idletime)S
/F4 SF (\) est mesur\351 en utilisant)S
0 431.4 M(l'algorithme EWMA \()S
/F6 SF (Exponential Weighted Moving Average)S
/F4 SF (\), qui consid\350re que les paquets r\351cents sont)S
0 418.2 M(exponentiellement plus nombreux que ceux pass\351s. La charge moyenne UNIX \()S
/F6 SF (UNIX loadaverage)S
/F4 SF (\) est)S
0 405 M(calcul\351e de la m\352me mani\350re.)S
0 378.6 M(Le temps d'inactivit\351 calcul\351 est soustrait \340 celui mesur\351 par EWMA et le nombre r\351sultant est appel\351)S
/F0 SF 0 365.4 M(avgidle)S
/F4 SF (. Un lien parfaitement charg\351 a un )S
/F0 SF (avgidle)S
/F4 SF ( nul : un paquet arrive \340 chaque intervalle calcul\351.)S
0 339 M(Une liaison surcharg\351e a un )S
/F0 SF (avgidle)S
/F4 SF ( n\351gatif et s'il devient trop n\351gatif, CBQ s'arr\352te un moment et se place)S
0 325.8 M(alors en d\351passement de limite \()S
/F6 SF (overlimit)S
/F4 SF (\).)S
0 299.4 M(Inversement, un lien inutilis\351 peut accumuler un )S
/F0 SF (avgidle)S
/F4 SF ( \351norme, qui autoriserait alors des bandes)S
0 286.2 M(passantes infinies apr\350s quelques heures d'inactivit\351. Pour \351viter cela, )S
/F0 SF (avgidle)S
/F4 SF ( est born\351 \340 )S
/F0 SF (maxidle)S
/F4 SF (.)S
0 259.8 M(En situation de d\351passement de limite, CBQ peut en th\351orie bloquer le d\351bit pour une dur\351e \351quivalente au)S
0 246.6 M(temps qui doit s'\351couler entre deux paquets moyens, puis laisser passer un paquet et bloquer de nouveau le)S
0 233.4 M(d\351bit. Regardez cependant le param\350tre )S
/F0 SF (minburst)S
/F4 SF ( ci-dessous.)S
0 207 M(Voici les param\350tres que vous pouvez sp\351cifier pour configurer la mise en forme :)S
/F0 SF 0 180.6 M(avpkt)S
/F4 SF 36 167.4 M(Taille moyenne d'un paquet mesur\351e en octets. N\351cessaire pour calculer )S
/F0 SF (maxidle)S
/F4 SF (, qui d\351rive de)S
/F0 SF 36 154.2 M(maxburst)S
/F4 SF (, qui est sp\351cifi\351 en paquets.)S
/F0 SF 0 141 M(bandwidth)S
/F4 SF 36 127.8 M(La bande passante physique de votre p\351riph\351rique n\351cessaire pour les calculs du temps de non)S
36 114.6 M(utilisation \()S
/F6 SF (idle time)S
/F4 SF (\).)S
/F0 SF 0 101.4 M(cell)S
/F4 SF 36 88.2 M(La dur\351e de transmission d'un paquet n'augmente pas n\351cessairement de mani\350re lin\351aire en fonction)S
36 75 M(de sa taille. Par exemple, un paquet de 800 octets peut \352tre transmis en exactement autant de temps)S
36 61.8 M(qu'un paquet de 806 octets. Ceci d\351termine la granularit\351. Cette valeur est g\351n\351ralement positionn\351e \340)S
/F0 SF 36 48.6 M(8)S
/F4 SF (, et doit \352tre une puissance de deux.)S
/F0 SF 0 35.4 M(maxburst)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(48)S
226.883 0 M(Le c\351l\350bre gestionnaire de mise en file d'attente CBQ)S
GR
SP
%%Page: (49) 49
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 317 M 487.0 2.0 F
11 FS/F4 SF 36 737 M(Ce nombre de paquets est utilis\351 pour calculer )S
/F0 SF (maxidle)S
/F4 SF ( de telle sorte que quand )S
/F0 SF (avgidle)S
/F4 SF ( est \351gal)S
36 723.8 M(\340 )S
/F0 SF (maxidle)S
/F4 SF (, le nombre de paquets moyens peut \352tre envoy\351 en rafale avant que )S
/F0 SF (avgidle)S
/F4 SF ( ne)S
36 710.6 M(retombe \340 0. Augmentez-le pour \352tre plus tol\351rant vis \340 vis des rafales de donn\351es. Vous ne pouvez)S
36 697.4 M(pas configurer )S
/F0 SF (maxidle)S
/F4 SF ( directement, mais seulement via ce param\350tre.)S
/F0 SF 0 684.2 M(minburst)S
/F4 SF 36 671 M(Comme nous l'avons d\351j\340 indiqu\351, CBQ doit bloquer le d\351bit dans le cas d'un d\351passement de limite.)S
36 657.8 M(La solution id\351ale est de le faire pendant exactement le temps d'inutilisation calcul\351, puis de laisser)S
36 644.6 M(passer un paquet. Cependant, les noyaux UNIX ont g\351n\351ralement du mal \340 pr\351voir des \351v\351nements)S
36 631.4 M(plus courts que 10 ms, il vaut donc mieux limiter le d\351bit pendant une p\351riode plus longue, puis)S
36 618.2 M(envoyer )S
/F0 SF (minburst)S
/F4 SF ( paquets d'un seul coup et dormir pendant une dur\351e de )S
/F0 SF (minburst)S
/F4 SF (.)S
36 591.8 M(Le temps d'attente est appel\351)S
/F6 SF ( offtime)S
/F4 SF (. De plus grandes valeurs de )S
/F0 SF (minburst)S
/F4 SF ( m\350nent \340 une mise en)S
36 578.6 M(forme plus pr\351cise dans le long terme, mais provoquent de plus grandes rafales de donn\351es pendant)S
36 565.4 M(des p\351riodes de quelques millisecondes.)S
/F0 SF 0 552.2 M(minidle)S
/F4 SF 36 539 M(Si )S
/F0 SF (avgidle)S
/F4 SF ( est inf\351rieur \340 0, nous sommes en d\351passement de limite et nous devons attendre jusqu'\340)S
36 525.8 M(ce que )S
/F0 SF (avgidle)S
/F4 SF ( devienne suffisamment important pour envoyer un paquet. Pour \351viter qu'une)S
36 512.6 M(brusque rafale de donn\351es n'emp\352che le lien de fonctionner pendant une dur\351e prolong\351e, )S
/F0 SF (avgidle)S
/F4 SF 36 499.4 M(est remis \340 )S
/F0 SF (minidle)S
/F4 SF ( s'il atteint une valeur trop basse.)S
36 473 M(La valeur )S
/F0 SF (minidle)S
/F4 SF ( est sp\351cifi\351e en microsecondes n\351gatives : 10 signifie alors que )S
/F0 SF (avgidle)S
/F4 SF ( est)S
36 459.8 M(born\351 \340 -10\265s.)S
/F0 SF 0 446.6 M(mpu)S
/F4 SF 36 433.4 M(Taille minumum d'un paquet. N\351cessaire car m\352me un paquet de taille nulle est encapsul\351 par 64)S
36 420.2 M(octets sur ethernet et il faut donc un certain temps pour le transmettre. CBQ doit conna\356tre ce)S
36 407 M(param\350tre pour calculer pr\351cis\351ment le temps d'inutilisation.)S
/F0 SF 0 393.8 M(rate)S
/F4 SF 36 380.6 M(D\351bit du trafic sortant du gestionnaire. Ceci est le << param\350tre de vitesse >> !)S
0 354.2 M(En interne, CBQ est finement optimis\351. Par exemple, les classes qui sont connues pour ne pas avoir de)S
0 341 M(donn\351es pr\351sentes dans leur file d'attente ne sont pas interrog\351es. Les classes en situation de d\351passement de)S
0 327.8 M(limite sont p\351nalis\351es par la diminution de leur priorit\351 effective. Tout ceci est tr\350s habile et compliqu\351.)S
/F9 SF 0 299.4 M(Le comportement)S
/Fb SF ( CBQ classful)S
/F4 SF 0 273 M(En plus de la mise en forme, en utilisant les approximations )S
/F0 SF (idletime)S
/F4 SF ( mentionn\351es ci-dessus, CBQ peut)S
0 259.8 M(\351galement agir comme une file d'attente PRIO dans le sens o\371 les classes peuvent avoir diff\351rentes priorit\351s.)S
0 246.6 M(Les priorit\351s de plus faible valeur seront examin\351es avant celles de valeurs plus \351lev\351es.)S
0 220.2 M(Chaque fois qu'un paquet est demand\351 par la couche mat\351rielle pour \352tre envoy\351 sur le r\351seau, un processus)S
/F6 SF 0 207 M(weighted round robin)S
/F4 SF ( \(WRR\) d\351marre en commen\347ant par les classes de plus faibles num\351ros.)S
0 180.6 M(Celles-ci sont regroup\351es et interrog\351es si elles ont des donn\351es disponibles. Apr\350s qu'une classe ait \351t\351)S
0 167.4 M(autoris\351e \340 retirer de la file d'attente un nombre d'octets, la classe de priorit\351 suivante est consult\351e.)S
0 141 M(Les param\350tres suivants contr\364lent le processus WRR :)S
/F0 SF 0 114.6 M(allot)S
/F4 SF 36 101.4 M(Quand le CBQ racine re\347oit une demande d'envoi de paquets sur une interface, il va essayer tous les)S
36 88.2 M(gestionnaires internes \(dans les classes\) tour \340 tour suivant l'ordre du param\350tre )S
/F0 SF (priority)S
/F4 SF (. A)S
36 75 M(chaque passage, une classe ne peut envoyer qu'une quantit\351 limit\351e de donn\351es. Le param\350tre )S
/F0 SF (allot)S
/F4 SF 36 61.8 M(est l'unit\351 de base de cette quantit\351. Voir le param\350tre )S
/F0 SF (weight)S
/F4 SF ( pour plus d'informations.)S
/F0 SF 0 48.6 M(prio)S
/F4 SF 36 35.4 M(CBQ peut \351galement agir comme un p\351riph\351rique PRIO. Les classes internes avec les priorit\351s les)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Mise en forme CBQ en d\351tail)S
474.768 0 M(49)S
GR
SP
%%Page: (50) 50
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 541.4 M 487.0 2.0 F
0 235.8 M 487.0 2.0 F
11 FS/F4 SF 36 737 M(plus \351lev\351es sont consult\351es en premier et, aussi longtemps qu'elles ont du trafic, les autres classes ne)S
36 723.8 M(sont pas examin\351es.)S
/F0 SF 0 710.6 M(weight)S
/F4 SF 36 697.4 M(Le param\350tre )S
/F0 SF (weight)S
/F4 SF ( assiste le processus)S
/F6 SF ( Weighted Round Robin)S
/F4 SF (. Chaque classe a tour \340 tour la)S
36 684.2 M(possibilit\351 d'envoyer ses donn\351es. Si vous avez des classes avec des bandes passantes)S
36 671 M(significativement plus importantes, il est logique de les autoriser \340 envoyer plus de donn\351es \340 chaque)S
36 657.8 M(tour que les autres.)S
36 631.4 M(Vous pouvez utiliser des nombres arbitraires dans la mesure o\371 CBQ additionne tous les param\350tres)S
/F0 SF 36 618.2 M(weight)S
/F4 SF ( pr\351sents sous une classe et les normalise. La r\350gle empirique qui consiste \340 prendre)S
/F0 SF 36 605 M(rate/10)S
/F4 SF ( semble fonctionner correctement. Le param\350tre )S
/F0 SF (weight)S
/F4 SF ( normalis\351 est multipli\351 par le)S
36 591.8 M(param\350tre )S
/F0 SF (allot)S
/F4 SF ( pour d\351terminer la quantit\351 de donn\351es \340 envoyer \340 chaque tour.)S
0 565.4 M(Notez, s'il vous pla\356t, que toutes les classes \340 l'int\351rieur d'une hi\351rarchie CBQ doivent avoir le m\352me nombre)S
0 552.2 M(majeur !)S
/F9 SF 0 523.8 M(Param\350tres CBQ qui d\351terminent le partage & le pr\352t du lien)S
/F4 SF 0 497.4 M(En plus de purement limiter certains trafics, il est \351galement possible de sp\351cifier quelles classes peuvent)S
0 484.2 M(emprunter de la bande passante aux autres classes ou, r\351ciproquement, pr\352ter sa bande passante.)S
/F0 SF 0 457.8 M(isolated)S
/F4 SF (/ )S
/F0 SF (sharing)S
/F4 SF 36 444.6 M(Une classe qui est configur\351e avec )S
/F0 SF (isolated)S
/F4 SF ( ne pr\352tera pas sa bande passante \340 ses classes enfants.)S
36 431.4 M(Utilisez ceci si vous avez sur votre lien deux agences concurrentes ou qui ne s'appr\351cient pas et qui ne)S
36 418.2 M(veulent pas se pr\352ter gratuitement de la bande passante.)S
36 391.8 M(Le programme de contr\364le)S
/F5 SF ( tc)S
/F4 SF ( connait \351galement )S
/F0 SF (sharing)S
/F4 SF (, qui agit \340 l'inverse du param\350tre)S
/F0 SF 36 378.6 M(isolated)S
/F4 SF (.)S
/F0 SF 0 365.4 M(bounded)S
/F4 SF (/ )S
/F0 SF (borrow)S
/F4 SF 36 352.2 M(Une classe peut aussi \352tre born\351e \()S
/F0 SF (bounded)S
/F4 SF (\), ce qui signifie qu'elle n'essaiera pas d'emprunter de la)S
36 339 M(bande passante \340 ses classes enfants.)S
/F5 SF ( tc)S
/F4 SF ( connait \351galement )S
/F0 SF (borrow)S
/F4 SF (, qui agit \340 l'inverse de )S
/F0 SF (bounded)S
/F4 SF (.)S
0 312.6 M(Une situation typique pourrait \352tre le cas o\371 vous avez deux agences pr\351sentes sur votre lien qui sont \340 la fois)S
/F0 SF 0 299.4 M(isolated)S
/F4 SF ( et )S
/F0 SF (bounded)S
/F4 SF (. Ceci signifie qu'elles sont strictement limit\351es \340 leur d\351bit et qu'elles ne pr\352teront)S
0 286.2 M(pas aux autres leur bande passante.)S
0 259.8 M(A l'int\351rieur de ces classes d'agence, il pourrait y avoir d'autres classes qui sont autoris\351es \340 \351changer leur)S
0 246.6 M(bande passante.)S
/F9 SF 0 218.2 M(Configuration simple)S
9.2 FS/F0 SF 0 193.633 M(               1:           gestionnaire de mise en file d'attente racine)S
0 182.633 M(               |)S
0 171.633 M(              1:1           classe enfant)S
0 160.633 M(             /   \\)S
0 149.633 M(            /     \\)S
0 138.633 M(          1:3     1:4       classes terminales)S
0 127.633 M(           |       |)S
0 116.633 M(          30:     40:       gestionnares de mise en file d'attente)S
0 105.633 M(         \(sfq\)   \(sfq\))S
11 FS/F4 SF 0 79.6 M(Cette configuration limite le trafic d'un serveur web \340 5 mbit et le trafic SMTP \340 3 mbit. Il est souhaitable)S
0 66.4 M(qu'ils n'occupent pas plus de 6 mbit \340 eux deux. Nous avons une carte r\351seau \340 100 mbit et les classes peuvent)S
0 53.2 M(s'emprunter mutuellement de la bande passante.)S
9.2 FS/F0 SF 0 28.633 M(# tc qdisc add dev eth0 root handle 1:0 cbq bandwidth 100Mbit         \\ )S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(50)S
334.782 0 M(Le comportement CBQ classful)S
GR
SP
%%Page: (51) 51
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 114.6 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(  avpkt 1000 cell 8)S
0 727.833 M(# tc class add dev eth0 parent 1:0 classid 1:1 cbq bandwidth 100Mbit  \\)S
0 716.833 M(  rate 6Mbit weight 0.6Mbit prio 8 allot 1514 cell 8 maxburst 20      \\)S
0 705.833 M(  avpkt 1000 bounded)S
11 FS/F4 SF 0 679.8 M(Cette partie installe la racine et la classe )S
/F0 SF (1:1)S
/F4 SF ( habituelle. La classe )S
/F0 SF (1:1)S
/F4 SF ( est born\351e, la bande passante totale ne)S
0 666.6 M(pourra donc pas exc\351der 6 mbit.)S
0 640.2 M(Comme dit avant, CBQ a besoin de)S
/F6 SF ( NOMBREUX)S
/F4 SF ( param\350tres. Tous ces param\350tres sont cependant expliqu\351s)S
0 627 M(au-dessus. La configuration HTB correspondante est beaucoup plus simple.)S
9.2 FS/F0 SF 0 602.433 M(# tc class add dev eth0 parent 1:1 classid 1:3 cbq bandwidth 100Mbit  \\)S
0 591.433 M(  rate 5Mbit weight 0.5Mbit prio 5 allot 1514 cell 8 maxburst 20      \\)S
0 580.433 M(  avpkt 1000)S
0 569.433 M(# tc class add dev eth0 parent 1:1 classid 1:4 cbq bandwidth 100Mbit  \\)S
0 558.433 M(  rate 3Mbit weight 0.3Mbit prio 5 allot 1514 cell 8 maxburst 20      \\)S
0 547.433 M(  avpkt 1000)S
11 FS/F4 SF 0 521.4 M(Ce sont nos deux classes. Notez comment nous avons configur\351 la valeur du param\350tre )S
/F0 SF (weight)S
/F4 SF ( en fonction)S
0 508.2 M(du param\350tre )S
/F0 SF (rate)S
/F4 SF (. La bande passante de l'ensemble des deux classes ne pourra jamais d\351passer 6 mbit. En)S
0 495 M(fait, les identifieurs de classe \()S
/F0 SF (classid)S
/F4 SF (\) doivent avoir le m\352me num\351ro majeur que le gestionnaire de mise)S
0 481.8 M(en file d'attente parent !)S
9.2 FS/F0 SF 0 457.233 M(# tc qdisc add dev eth0 parent 1:3 handle 30: sfq)S
0 446.233 M(# tc qdisc add dev eth0 parent 1:4 handle 40: sfq)S
11 FS/F4 SF 0 420.2 M(Les deux classes ont par d\351faut un gestionnaire de mise en file d'attente FIFO. Nous les rempla\347ons par une)S
0 407 M(file d'attente SFQ de telle sorte que chaque flux de donn\351es soit trait\351 de mani\350re \351gale.)S
9.2 FS/F0 SF 0 382.433 M(# tc filter add dev eth0 parent 1:0 protocol ip prio 1 u32 match ip \\)S
0 371.433 M(  sport 80 0xffff flowid 1:3)S
0 360.433 M(# tc filter add dev eth0 parent 1:0 protocol ip prio 1 u32 match ip \\)S
0 349.433 M(  sport 25 0xffff flowid 1:4)S
11 FS/F4 SF 0 297 M(Ces commandes, directement attach\351es \340 la racine, envoient le trafic vers le bon gestionnaire de mise en file)S
0 283.8 M(d'attente.)S
0 257.4 M(Notez que nous utilisons )S
/F1 SF (tc class add)S
/F4 SF ( pour)S
/F6 SF ( CREER)S
/F4 SF ( des classes \340 l'int\351rieur d'un gestionnaire de mise en)S
0 244.2 M(file d'attente, et que nous utilisons )S
/F1 SF (tc qdisc add)S
/F4 SF ( pour v\351ritablement configurer ces classes.)S
0 217.8 M(Vous vous demandez peut-\352tre ce qui arrive au trafic qui n'est classifi\351 par aucune des deux r\350gles. Dans ce)S
0 204.6 M(cas, les donn\351es seront trait\351es \340 l'int\351rieur de )S
/F0 SF (1:0)S
/F4 SF (, et le d\351bit ne sera pas limit\351.)S
0 178.2 M(Si le trafic SMTP+web tente de d\351passer la limite de 6 mbit/s, la bande passante sera divis\351e selon le)S
0 165 M(param\350tre )S
/F0 SF (weight)S
/F4 SF (, donnant 5/8 du trafic au serveur web et 3/8 au serveur smtp.)S
0 138.6 M(Avec cette configuration, vous pouvez \351galement dire que le trafic du serveur web sera au minimum de 5/8 *)S
0 125.4 M(6 mbit = 3.75 mbit.)S
/F9 SF 0 97 M(D'autres param\350tres CBQ : )S
/F1 SF (split)S
/F9 SF ( & )S
/F1 SF (defmap)S
/F4 SF 0 70.6 M(Comme pr\351cis\351 avant, un gestionnaire de mise en file d'attente bas\351 sur des classes doit appeler des filtres)S
0 57.4 M(pour d\351terminer dans quelle classe un paquet sera mis en file d'attente.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Configuration simple)S
474.768 0 M(51)S
GR
SP
%%Page: (52) 52
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 11 FS/F4 SF 0 737 M(En plus d'appeler les filtres, CBQ offre d'autres options : )S
/F0 SF (defmap)S
/F4 SF ( & )S
/F0 SF (split)S
/F4 SF (. C'est plut\364t compliqu\351 \340)S
0 723.8 M(comprendre et, de plus, ce n'est pas vital. Mais, \351tant donn\351 que ceci est le seul endroit connu o\371 )S
/F0 SF (defmap)S
/F4 SF ( &)S
/F0 SF 0 710.6 M(split)S
/F4 SF ( sont correctement expliqu\351s, je vais faire de mon mieux.)S
0 684.2 M(Etant donn\351 que nous voulons le plus souvent r\351aliser le filtrage en ne consid\351rant que le champ TOS, une)S
0 671 M(syntaxe sp\351ciale est fournie. Chaque fois que CBQ doit trouver o\371 le paquet doit \352tre mis en file d'attente, il)S
0 657.8 M(v\351rifie si le noeud est un noeud d'aiguillage \()S
/F6 SF (split node)S
/F4 SF (\). Si c'est le cas, un de ses sous-gestionnaires a indiqu\351)S
0 644.6 M(son souhait de recevoir tous les paquets configur\351s avec une certaine priorit\351. Celle ci peut \352tre d\351riv\351e du)S
0 631.4 M(champ TOS ou des options des sockets positionn\351es par les applications.)S
0 605 M(Les bits de priorit\351s des paquets subissent un ET logique avec le champ )S
/F0 SF (defmap)S
/F4 SF ( pour voir si une)S
0 591.8 M(correspondance existe. En d'autres termes, c'est un moyen pratique de cr\351er un filtre tr\350s rapide, qui ne sera)S
0 578.6 M(actif que pour certaines priorit\351s. Un )S
/F0 SF (defmap)S
/F4 SF ( de )S
/F0 SF (ff)S
/F4 SF ( \(en hexad\351cimal\) v\351rifiera tout tandis qu'une valeur de )S
/F0 SF (0)S
/F4 SF 0 565.4 M(ne v\351rifiera rien. Une configuration simple aidera peut-\352tre \340 rendre les choses plus claires :)S
9.2 FS/F0 SF 0 540.833 M(# tc qdisc add dev eth1 root handle 1: cbq bandwidth 10Mbit allot 1514 \\)S
0 529.833 M(  cell 8 avpkt 1000 mpu 64)S
0 507.833 M(# tc class add dev eth1 parent 1:0 classid 1:1 cbq bandwidth 10Mbit    \\)S
0 496.833 M(  rate 10Mbit allot 1514 cell 8 weight 1Mbit prio 8 maxburst 20        \\)S
0 485.833 M(  avpkt 1000)S
11 FS/F4 SF 0 459.8 M(Pr\351ambule standard de CBQ. Je n'ai jamais pris l'habitude de la quantit\351 de nombres n\351cessaires !)S
0 433.4 M(Le param\350tre )S
/F0 SF (defmap)S
/F4 SF ( se r\351f\350re aux bits TC&lowbar;PRIO qui sont d\351finis comme suit :)S
9.2 FS/F0 SF 0 408.833 M(TC_PRIO..          Num  Correspond \340 TOS)S
0 397.833 M(-------------------------------------------------)S
0 386.833 M(BESTEFFORT         0    Maximalise la Fiabilit\351 )S
0 375.833 M(FILLER             1    Minimalise le Co\373t )S
0 364.833 M(BULK               2    Maximalise le D\351bit \(0x8\)  )S
0 353.833 M(INTERACTIVE_BULK   4                               )S
0 342.833 M(INTERACTIVE        6    Minimise le D\351lai \(0x10\)      )S
0 331.833 M(CONTROL            7                               )S
11 FS/F4 SF 0 305.8 M(Les nombres TC&lowbar;PRIO.. correspondent aux bits compt\351s \340 partir de la droite. Voir la section)S
/F0 SF 0 292.6 M(pfifo&lowbar;fast)S
/F4 SF ( pour plus de d\351tails sur la fa\347on dont les bits TOS sont convertis en priorit\351s.)S
0 266.2 M(Maintenant, les classes interactive et de masse :)S
9.2 FS/F0 SF 0 241.633 M(# tc class add dev eth1 parent 1:1 classid 1:2 cbq bandwidth 10Mbit     \\)S
0 230.633 M(  rate 1Mbit allot 1514 cell 8 weight 100Kbit prio 3 maxburst 20        \\)S
0 219.633 M(  avpkt 1000 split 1:0 defmap c0)S
0 197.633 M(# tc class add dev eth1 parent 1:1 classid 1:3 cbq bandwidth 10Mbit     \\)S
0 186.633 M(  rate 8Mbit allot 1514 cell 8 weight 800Kbit prio 7 maxburst 20        \\)S
0 175.633 M(  avpkt 1000 split 1:0 defmap 3f)S
11 FS/F4 SF 0 149.6 M(La gestion de mise en file d'attente d'aiguillage \()S
/F6 SF (split qdisc)S
/F4 SF (\) est )S
/F0 SF (1:0)S
/F4 SF ( et c'est \340 ce niveau que le choix sera fait.)S
/F0 SF 0 136.4 M(C0)S
/F4 SF ( correspond au nombre binaire )S
/F0 SF (11000000)S
/F4 SF ( et )S
/F0 SF (3F)S
/F4 SF ( au nombre binaire )S
/F0 SF (00111111)S
/F4 SF (. Ces valeurs sont choisies)S
0 123.2 M(de telle sorte qu'\340 elles deux, elles v\351rifient tous les bits. La premi\350re classe correspond aux bits 6 & 7, ce qui)S
0 110 M(est \351quivalent aux trafics << interactif >> et de << contr\364le >>. La seconde classe correspond au reste.)S
0 83.6 M(Le noeud )S
/F0 SF (1:0)S
/F4 SF ( poss\350de maintenant la table suivante :)S
9.2 FS/F0 SF 0 59.033 M(priorit\351        envoyer \340)S
0 48.033 M(0               1:3)S
0 37.033 M(1               1:3)S
0 26.033 M(2               1:3)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(52)S
281.938 0 M(D'autres param\350tres CBQ : split & defmap)S
GR
SP
%%Page: (53) 53
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 442.4 M 487.0 2.0 F
0 147.36 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(3               1:3)S
0 727.833 M(4               1:3)S
0 716.833 M(5               1:3)S
0 705.833 M(6               1:2)S
0 694.833 M(7               1:2)S
11 FS/F4 SF 0 668.8 M(Pour d'autres amusements, vous pouvez \351galement donner un << masque de changement >> qui indique)S
0 655.6 M(exactement les priorit\351s que vous souhaitez changer. N'utilisez ceci qu'avec la commande )S
/F1 SF (tc class)S
0 642.4 M(change)S
/F4 SF (. Par exemple, pour ajouter le trafic)S
/F6 SF ( best effort)S
/F4 SF ( \340 la classe )S
/F0 SF (1:2)S
/F4 SF (, nous devrons ex\351cuter ceci :)S
9.2 FS/F0 SF 0 617.833 M(# tc class change dev eth1 classid 1:2 cbq defmap 01/01)S
11 FS/F4 SF 0 591.8 M(La carte des priorit\351s au niveau de )S
/F0 SF (1:0)S
/F4 SF ( ressemble maintenant \340 ceci :)S
9.2 FS/F0 SF 0 567.233 M(priorit\351        envoyer \340)S
0 556.233 M(0               1:2)S
0 545.233 M(1               1:3)S
0 534.233 M(2               1:3)S
0 523.233 M(3               1:3)S
0 512.233 M(4               1:3)S
0 501.233 M(5               1:3)S
0 490.233 M(6               1:2)S
0 479.233 M(7               1:2)S
11 FS/F4 SF 0 453.2 M(FIXME: )S
/F1 SF (tc class change)S
/F4 SF ( n'a pas \351t\351 test\351, mais simplement vu dans les sources.)S
13.2 FS/F9 SF 0 422.6 M(Seau de jetons \340 contr\364le hi\351rarchique \()S
/Fb SF (Hierarchical Token Bucket)S
/F9 SF (\))S
11 FS/F4 SF 0 395.76 M(Martin Devera\(<devik>\) r\351alisa \340 juste titre que CBQ est complexe et qu'il ne semble pas optimis\351 pour de)S
0 382.56 M(nombreuses situations classiques. Son approche hi\351rarchique est bien adapt\351e dans le cas de configurations o\371)S
0 369.36 M(il y a une largeur de bande passante fix\351e \340 diviser entre diff\351rents \351l\351ments. Chacun de ces \351l\351ments aura une)S
0 356.16 M(bande passante garantie, avec la possibilit\351 de sp\351cifier la quantit\351 de bande passante qui pourra \352tre)S
0 342.96 M(emprunt\351e.)S
0 316.56 M(HTB travaille juste comme CBQ, mais il n'a pas recourt \340 des calculs de temps d'inoccupation pour la mise en)S
0 303.36 M(forme. A la place, c'est un)S
/F6 SF ( Token Bucket Filter)S
/F4 SF ( bas\351 sur des classes, d'o\371 son nom. Il n'a que quelques)S
0 290.16 M(param\350tres, qui sont bien document\351s sur ce site.)S
0 263.76 M(Au fur et \340 mesure que votre configuration HTB se complexifie, votre configuration s'adapte bien. Avec CBQ,)S
0 250.56 M(elle est d\351j\340 complexe m\352me dans les cas simples ! HTB3 \(voir sa page principale pour les d\351tails des)S
0 237.36 M(versions HTB\) fait maintenant parti des sources officielles du noyau \(\340 partir des versions 2.4.20-pre1 et)S
0 224.16 M(2.5.31 et sup\351rieures\). Il est encore cependant possible que vous soyez oblig\351 de r\351cup\351rer la version mise \340)S
0 210.96 M(jour de 'tc' pour HTB3. Les programmes de l'espace utilisateur et la partie HTB du noyau doivent avoir le)S
0 197.76 M(m\352me num\351ro majeur. Sans cela, 'tc' ne marchera pas avec HTB.\15)S
0 171.36 M(Si vous avez d\351j\340 un noyau r\351cent ou si vous \352tes sur le point de mettre \340 jour votre noyau, consid\351rez HTB)S
0 158.16 M(co\373te que co\373te.)S
/F9 SF 0 129.76 M(Configuration simple)S
/F4 SF 0 103.36 M(Fonctionnellement presque identique \340 la configuration simple CBQ pr\351sent\351e ci-dessus :)S
9.2 FS/F0 SF 0 78.793 M(# tc qdisc add dev eth0 root handle 1: htb default 30)S
0 56.793 M(# tc class add dev eth0 parent 1: classid 1:1 htb rate 6mbit burst 15k)S
0 34.793 M(# tc class add dev eth0 parent 1:1 classid 1:10 htb rate 5mbit burst 15k)S
0 23.793 M(# tc class add dev eth0 parent 1:1 classid 1:20 htb rate 3mbit ceil 6mbit burst 15k)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Seau de jetons \340 contr\364le hi\351rarchique \(Hierarchical Token Bucket\))S
474.768 0 M(53)S
GR
SP
%%Page: (54) 54
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 477.6 M 487.0 2.0 F
0 67.192 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(# tc class add dev eth0 parent 1:1 classid 1:30 htb rate 1kbit ceil 6mbit burst 15k)S
11 FS/F4 SF 0 712.8 M(L'auteur recommande SFQ sous ces classes :)S
9.2 FS/F0 SF 0 688.233 M(# tc qdisc add dev eth0 parent 1:10 handle 10: sfq perturb 10)S
0 677.233 M(# tc qdisc add dev eth0 parent 1:20 handle 20: sfq perturb 10)S
0 666.233 M(# tc qdisc add dev eth0 parent 1:30 handle 30: sfq perturb 10)S
11 FS/F4 SF 0 640.2 M(Ajouter les filtres qui dirigent le trafic vers les bonnes classes :)S
9.2 FS/F0 SF 0 615.633 M(# U32="tc filter add dev eth0 protocol ip parent 1:0 prio 1 u32")S
0 604.633 M(# $U32 match ip dport 80 0xffff flowid 1:10)S
0 593.633 M(# $U32 match ip sport 25 0xffff flowid 1:20)S
11 FS/F4 SF 0 567.6 M(Et, c'est tout. Pas de vilains nombres non expliqu\351s, pas de param\350tres non document\351s.)S
0 541.2 M(HTB semble vraiment merveilleux. Si )S
/F0 SF (10:)S
/F4 SF ( et )S
/F0 SF (20:)S
/F4 SF ( ont atteint tous les deux leur bande passante garantie et)S
0 528 M(qu'il en reste \340 partager, ils l'empruntent avec un rapport de 5:3, comme attendu.)S
0 501.6 M(Le trafic non classifi\351 est achemin\351 vers )S
/F0 SF (30:)S
/F4 SF (, qui a une petite bande passante, mais qui peut emprunter tout ce)S
0 488.4 M(qui est laiss\351 libre. Puisque nous avons choisi SFQ en interne, on h\351rite naturellement de l'\351quit\351.)S
15.8 FS/F9 SF 0 455.16 M(Classifier des paquets avec des filtres)S
11 FS/F4 SF 0 427.792 M(Pour d\351terminer quelle classe traitera un paquet, la << cha\356ne de classificateurs >> est appel\351e chaque fois)S
0 414.592 M(qu'un choix a besoin d'\352tre fait. Cette cha\356ne est constitu\351e de tous les filtres attach\351s aux gestionnaires de)S
0 401.392 M(mise en file d'attente bas\351s sur des classes qui doivent prendre une d\351cision.)S
0 374.992 M(On reprend l'arbre qui n'est pas un arbre :)S
9.2 FS/F0 SF 0 350.425 M(                   racine 1:)S
0 339.425 M(                      |)S
0 328.425 M(                    _1:1_)S
0 317.425 M(                   /  |  \\)S
0 306.425 M(                  /   |   \\)S
0 295.425 M(                 /    |    \\)S
0 284.425 M(               10:   11:   12:)S
0 273.425 M(              /   \\       /   \\)S
0 262.425 M(           10:1  10:2   12:1  12:2)S
11 FS/F4 SF 0 236.392 M(Quand un paquet est mis en file d'attente, l'instruction appropri\351e de la cha\356ne de filtre est consult\351e \340 chaque)S
0 223.192 M(branche. Une configuration typique devrait avoir un filtre en )S
/F0 SF (1:1)S
/F4 SF ( qui dirige le paquet vers )S
/F0 SF (12:)S
/F4 SF ( et un filtre en)S
/F0 SF 0 209.992 M(12:)S
/F4 SF ( qui l'envoie vers )S
/F0 SF (12:2)S
/F4 SF (.)S
0 183.592 M(Vous pourriez \351galement avoir ce dernier filtre en )S
/F0 SF (1:1)S
/F4 SF (, mais vous pouvez gagner en efficacit\351 en ayant des)S
0 170.392 M(tests plus sp\351cifiques plus bas dans la cha\356ne.)S
0 143.992 M(A ce propos, vous ne pouvez pas filtrer un paquet << vers le haut >>. Donc, avec HTB, vous devrez attacher)S
0 130.792 M(tous les filtres \340 la racine !)S
0 104.392 M(Encore une fois, les paquets ne sont mis en file d'attente que vers le bas ! Quand ils sont retir\351s de la file)S
0 91.192 M(d'attente, ils montent de nouveau, vers l'interface. Ils ne tombent)S
/F6 SF ( PAS)S
/F4 SF ( vers l'extr\351mit\351 de l'arbre en direction de)S
0 77.992 M(l'adaptateur r\351seau !)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(54)S
386.746 0 M(Configuration simple)S
GR
SP
%%Page: (55) 55
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 224.16 M 487.0 2.0 F
13.2 FS/F9 SF 0 734.8 M(Quelques exemples simples de filtrage)S
11 FS/F4 SF 0 707.96 M(Comme expliqu\351 dans le chapitre)S
/F6 SF ( Filtres avanc\351s pour la classification des paquets>)S
/F4 SF (, vous pouvez vraiment)S
0 694.76 M(analyser n'importe quoi en utilisant une syntaxe tr\350s compliqu\351e. Pour commencer, nous allons montrer)S
0 681.56 M(comment r\351aliser les choses \351videntes, ce qui heureusement est plut\364t facile.)S
0 655.16 M(Disons que nous avons un gestionnaire de mise en file d'attente PRIO appel\351 )S
/F0 SF (10:)S
/F4 SF ( qui contient trois classes, et)S
0 641.96 M(que nous voulons assigner \340 la bande de plus haute priorit\351 tout le trafic allant et venant du port 22. Les filtres)S
0 628.76 M(seraient les suivants :)S
9.2 FS/F0 SF 0 604.193 M(# tc filter add dev eth0 protocol ip parent 10: prio 1 u32 match \\ )S
0 593.193 M(  ip dport 22 0xffff flowid 10:1)S
0 582.193 M(# tc filter add dev eth0 protocol ip parent 10: prio 1 u32 match \\)S
0 571.193 M(  ip sport 80 0xffff flowid 10:1)S
0 560.193 M(# tc filter add dev eth0 protocol ip parent 10: prio 2 flowid 10:2)S
11 FS/F4 SF 0 534.16 M(Qu'est-ce que cela signifie ? Cela dit : attacher \340 )S
/F0 SF (eth0)S
/F4 SF (, au noeud )S
/F0 SF (10:)S
/F4 SF ( un filtre )S
/F0 SF (u32)S
/F4 SF ( de priorit\351 1 qui analyse)S
0 520.96 M(le port de destination ip 22 et qui l'envoie vers la bande )S
/F0 SF (10:1)S
/F4 SF (. La m\352me chose est r\351p\351t\351e avec le port source)S
0 507.76 M(80. La derni\350re commande indique que si aucune correspondance n'est trouv\351e, alors le trafic devra aller vers)S
0 494.56 M(la bande )S
/F0 SF (10:2)S
/F4 SF (, la plus grande priorit\351 suivante.)S
0 468.16 M(Vous devez ajouter )S
/F0 SF (eth0)S
/F4 SF ( ou n'importe laquelle de vos interfaces, car chaque interface poss\350de un espace de)S
0 454.96 M(nommage de ses descripteurs qui lui est propre.)S
0 428.56 M(Pour s\351lectionner une adresse IP, utilisez ceci :)S
9.2 FS/F0 SF 0 403.993 M(# tc filter add dev eth0 parent 10:0 protocol ip prio 1 u32 \\ )S
0 392.993 M(  match ip dst 4.3.2.1/32 flowid 10:1)S
0 381.993 M(# tc filter add dev eth0 parent 10:0 protocol ip prio 1 u32 \\)S
0 370.993 M(  match ip src 1.2.3.4/32 flowid 10:1)S
0 359.993 M(# tc filter add dev eth0 protocol ip parent 10: prio 2      \\)S
0 348.993 M(  flowid 10:2)S
11 FS/F4 SF 0 322.96 M(Ceci dirige le trafic allant vers )S
/F0 SF (4.3.2.1)S
/F4 SF ( et venant de )S
/F0 SF (1.2.3.4)S
/F4 SF ( vers la file d'attente de plus haute priorit\351,)S
0 309.76 M(tandis que le reste ira vers la prochaine plus haute priorit\351.)S
0 283.36 M(Vous pouvez rassembler ces deux v\351rifications pour r\351cup\351rer le trafic venant de )S
/F0 SF (1.2.3.4)S
/F4 SF ( avec le port)S
0 270.16 M(source 80 :)S
9.2 FS/F0 SF 0 245.593 M(# tc filter add dev eth0 parent 10:0 protocol ip prio 1 u32 match ip src 4.3.2.1/32)S
0 234.593 M(  match ip sport 80 0xffff flowid 10:1)S
13.2 FS/F9 SF 0 204.36 M(Toutes les commandes de filtres dont vous aurez normalement besoin)S
11 FS/F4 SF 0 177.52 M(La plupart des commandes pr\351sent\351es ici commencent avec le pr\351ambule suivant :)S
9.2 FS/F0 SF 0 152.953 M(# tc filter add dev eth0 parent 1:0 protocol ip prio 1 u32 ..)S
11 FS/F4 SF 0 126.92 M(Ils sont appel\351s filtres )S
/F0 SF (u32)S
/F4 SF ( et analysent)S
/F6 SF ( N'IMPORTE QUELLE)S
/F4 SF ( partie d'un paquet.)S
0 100.52 M(Sur l'adresse source/destination)S
36 87.32 M(Masque pour la source )S
/F0 SF (match ip src 1.2.3.0/24)S
/F4 SF ( et masque pour la destination )S
/F0 SF (match ip)S
36 74.12 M(dst 4.3.2.0/24)S
/F4 SF (. Pour analyser un h\364te simple, employez /32 ou omettez le masque.)S
0 60.92 M(Sur le port source/destination, tous les protocoles IP)S
36 47.72 M(Source: )S
/F0 SF (match ip sport 80 0xffff)S
/F4 SF ( et destination : )S
/F0 SF (match ip dport ?? 0xffff)S
/F4 SF 0 34.52 M(Sur le protocole ip \(tcp, udp, icmp, gre, ipsec\))S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Quelques exemples simples de filtrage)S
474.768 0 M(55)S
GR
SP
%%Page: (56) 56
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 367.6 M 487.0 2.0 F
0 37.184 M 487.0 2.0 F
11 FS/F4 SF 36 737 M(Utilisez les nombres d\351finis dans )S
/F0 SF (/etc/protocols)S
/F4 SF (, par exemple 1 pour icmp : )S
/F0 SF (match ip)S
36 723.8 M(protocol 1 0xff)S
/F4 SF (.)S
0 710.6 M(Sur fwmark)S
36 697.4 M(Vous pouvez marquer les paquets avec ipchains ou iptables et voir cette marque pr\351serv\351e lors du)S
36 684.2 M(routage \340 travers les interfaces. Ceci est vraiment utile pour mettre uniquement en forme le trafic sur)S
/F0 SF 36 671 M(eth1)S
/F4 SF ( et venant de )S
/F0 SF (eth0)S
/F4 SF (, par exemple. La syntaxe est la suivante :)S
9.2 FS/F0 SF 36 646.433 M(# tc filter add dev eth1 protocol ip parent 1:0 prio 1 handle 6 fw flowid 1:1)S
11 FS/F4 SF 36 620.4 M(Notez que ce n'est pas une correspondance )S
/F0 SF (u32)S
/F4 SF ( !)S
36 594 M(Vous pouvez positionner une marque comme ceci :)S
9.2 FS/F0 SF 36 569.433 M(# iptables -A PREROUTING -t mangle -i eth0 -j MARK --set-mark 6)S
11 FS/F4 SF 36 543.4 M(Le nombre 6 est arbitraire.)S
36 517 M(Si vous ne voulez pas assimiler la syntaxe compl\350te de)S
/F5 SF ( tc filter)S
/F4 SF (, utilisez juste)S
/F5 SF ( iptables)S
/F4 SF ( et apprenez)S
36 503.8 M(seulement la s\351lection bas\351e sur fwmark.)S
0 490.6 M(Sur le champ TOS)S
36 477.4 M(Pour s\351lectionner le trafic interactif, d\351lai minimum :)S
9.2 FS/F0 SF 36 452.833 M(# tc filter add dev ppp0 parent 1:0 protocol ip prio 10 u32 \\)S
36 441.833 M(      match ip tos 0x10 0xff \\)S
36 430.833 M(     flowid 1:4)S
11 FS/F4 SF 36 404.8 M(Utilisez )S
/F0 SF (0x08)S
102.121 404.8 M(0xff)S
/F4 SF ( pour le trafic de masse.)S
0 378.4 M(Pour plus de commandes de filtrage, voir le chapitre)S
/F6 SF ( Filtres avanc\351s pour la classification des paquets>)S
/F4 SF (.)S
15.8 FS/F9 SF 0 345.16 M(Le p\351riph\351rique de file d'attente interm\351diaire \(The Intermediate)S
0 326.152 M(queueing device \(IMQ\)\))S
11 FS/F4 SF 0 298.784 M(Le p\351riph\351rique IMQ n'est pas un gestionnaire de mise en file d'attente mais son utilisation est fortement li\351e \340)S
0 285.584 M(ceux-ci. Au coeur de Linux, les gestionnaires de mise en file d'attente sont attach\351s aux p\351riph\351riques r\351seaux)S
0 272.384 M(et tout ce qui est mis en file d'attente dans ce p\351riph\351rique l'est d'abord dans le gestionnaire. Avec ce concept,)S
0 259.184 M(il existe deux limitations :)S
0 232.784 M(1. Seule la mise en forme du trafic sortant est possible \(un gestionnaire d'entr\351e existe, mais ses possibilit\351s)S
0 219.584 M(sont tr\350s limit\351es en comparaison des gestionnaires de mise en file bas\351s sur les classes\).)S
0 193.184 M(2. Un gestionnaire de mise en file d'attente ne voit le trafic que d'une interface, et des limitations globales ne)S
0 179.984 M(peuvent pas \352tre mises en place.)S
0 153.584 M(IMQ est ici pour aider \340 r\351soudre ces deux limitations. En r\351sum\351, vous pouvez mettre tout ce que vous)S
0 140.384 M(voulez dans un gestionnaire de mise en file d'attente. Les paquets sp\351cialement marqu\351s sont intercept\351s par)S
0 127.184 M(les points d'accroche netfilter NF_IP_PRE_ROUTING et NF_IP_POST_ROUTING et sont transf\351r\351s vers le)S
0 113.984 M(gestionnaire attach\351 au p\351riph\351rique imq. Une cible iptables est utilis\351e pour le marquage des paquets.)S
0 87.584 M(Ceci vous permet de r\351aliser de la mise en forme d'entr\351e \351tant donn\351 que vous pouvez marquer les paquets)S
0 74.384 M(entrant par un p\351riph\351rique quelconque et/ou traiter les interfaces comme des classes pour configurer des)S
0 61.184 M(limites globales. Vous pouvez \351galement r\351aliser de nombreuses autres choses comme simplement mettre)S
0 47.984 M(votre trafic http dans un gestionnaire, mettre les requ\352tes de nouvelles connexions dans un gestionnaire, ...)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(56)S
144.636 0 M(Toutes les commandes de filtres dont vous aurez normalement besoin)S
GR
SP
%%Page: (57) 57
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 39.36 M 487.0 2.0 F
13.2 FS/F9 SF 0 734.8 M(Configuration simple)S
11 FS/F4 SF 0 707.96 M(La premi\350re chose qui devrait vous venir \340 l'esprit est d'utiliser la mise en forme du trafic entrant pour vous)S
0 694.76 M(garantir une grande passante. ;\) La configuration se fait comme avec n'importe quelle autre interface :)S
9.2 FS/F0 SF 0 670.193 M(tc qdisc add dev imq0 root handle 1: htb default 20)S
0 648.193 M(tc class add dev imq0 parent 1: classid 1:1 htb rate 2mbit burst 15k)S
0 626.193 M(tc class add dev imq0 parent 1:1 classid 1:10 htb rate 1mbit)S
0 615.193 M(tc class add dev imq0 parent 1:1 classid 1:20 htb rate 1mbit)S
0 593.193 M(tc qdisc add dev imq0 parent 1:10 handle 10: pfifo)S
0 582.193 M(tc qdisc add dev imq0 parent 1:20 handle 20: sfq)S
0 560.193 M(tc filter add dev imq0 parent 10:0 protocol ip prio 1 u32 match \\)S
0 549.193 M(                ip dst 10.0.0.230/32 flowid 1:10)S
11 FS/F4 SF 0 523.16 M(Dans cet exemple, u32 est utilis\351 pour la classification. Les autres classificateurs devraient marcher tout aussi)S
0 509.96 M(bien. Le trafic doit ensuite \352tre s\351lectionn\351 et marqu\351 pour \352tre mis en file d'attente vers imq0.)S
9.2 FS/F0 SF 0 485.393 M(iptables -t mangle -A PREROUTING -i eth0 -j IMQ --todev 0)S
0 463.393 M(ip link set imq0 up)S
11 FS/F4 SF 0 410.96 M(Les cibles iptables IMQ sont valides dans les cha\356nes PREROUTING et POSTROUTING de la table mangle.)S
0 397.76 M(La syntaxe est la suivante :)S
9.2 FS/F0 SF 0 373.193 M(IMQ [ --todev n ]       n : num\351ro du p\351riph\351rique imq)S
11 FS/F4 SF 0 347.16 M(Il existe aussi une cible ip6tables.)S
0 320.76 M(Notez que le trafic n'est pas mis en file d'attente quand la cible est activ\351e, mais apr\350s. La localisation exacte)S
0 307.56 M(de l'entr\351e du trafic dans le p\351riph\351rique imq d\351pend de la direction de ce trafic \(entrant/sortant\). Ces entr\351es)S
0 294.36 M(sont les points d'accroche pr\351d\351finis de netfilter et utilis\351s par iptables :)S
9.2 FS/F0 SF 0 269.793 M(enum nf_ip_hook_priorities {)S
0 258.793 M(        NF_IP_PRI_FIRST = INT_MIN,)S
0 247.793 M(        NF_IP_PRI_CONNTRACK = -200,)S
0 236.793 M(        NF_IP_PRI_MANGLE = -150,)S
0 225.793 M(        NF_IP_PRI_NAT_DST = -100,)S
0 214.793 M(        NF_IP_PRI_FILTER = 0,)S
0 203.793 M(        NF_IP_PRI_NAT_SRC = 100,)S
0 192.793 M(        NF_IP_PRI_LAST = INT_MAX,)S
0 181.793 M(};)S
11 FS/F4 SF 0 129.36 M(Pour le trafic entrant, imq se d\351clare avec la priorit\351 NF_IP_PRI_MANGLE + 1, ce qui signifie que les)S
0 116.16 M(paquets entrent dans le p\351riph\351rique imq juste apr\350s la chaine PREROUTING de la table mangle.)S
0 89.76 M(Pour le trafic sortant, imq utilise NF_IP_PRI_LAST qui honore le fait que les paquets rejet\351s par la table filter)S
0 76.56 M(n'occuperont pas de bande passante.)S
0 50.16 M(Les mises \340 jour et de plus amples informations peuvent \352tre trouv\351es sur le site imq.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Configuration simple)S
474.768 0 M(57)S
GR
SP
%%Page: (58) 58
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 19 FS/F9 SF 0 728.992 M(Chapitre 10. \311quilibrage de charge sur plusieurs)S
0 706.182 M(interfaces)S
11 FS/F4 SF 0 678.181 M(Il existe plusieurs mani\350res pour le faire. Une des plus faciles et des plus directes est TEQL \()S
/F6 SF (True \(or Trivial\))S
0 664.981 M(Link Equalizer)S
/F4 SF (. Comme la plupart des \351l\351ments en relation avec la gestion de file d'attente, l'\351quilibrage de)S
0 651.781 M(charge est bidirectionnel. Les deux \351quipements terminaux du lien ont besoin de participer pour obtenir une)S
0 638.581 M(efficacit\351 optimale.)S
0 612.181 M(Imaginez la situation suivante :)S
9.2 FS/F0 SF 0 587.614 M(                 +-------+   eth1   +-------+)S
0 576.614 M(                 |       |==========|       |)S
0 565.614 M( 'r\351seau 1' -----|   A   |          |   B   |---- 'r\351seau 2')S
0 554.614 M(                 |       |==========|       |)S
0 543.614 M(                 +-------+   eth2   +-------+)S
11 FS/F0 SF 0 517.581 M(A)S
/F4 SF ( et )S
/F0 SF (B)S
/F4 SF ( sont des routeurs dont nous supposerons qu'ils fonctionnent avec Linux pour le moment. Si le trafic va)S
0 504.381 M(du r\351seau 1 vers le r\351seau 2, le routeur )S
/F0 SF (A)S
/F4 SF ( a besoin de distribuer les paquets sur les deux liens allant vers )S
/F0 SF (B)S
/F4 SF (. Le)S
0 491.181 M(routeur )S
/F0 SF (B)S
/F4 SF ( a besoin d'\352tre configur\351 pour l'accepter. On retrouve la m\352me chose dans le sens inverse, pour les)S
0 477.981 M(paquets allant du r\351seau 2 vers le r\351seau 1. Le routeur )S
/F0 SF (B)S
/F4 SF ( a besoin d'envoyer les paquets \340 la fois sur )S
/F0 SF (eth1)S
/F4 SF ( et)S
/F0 SF 0 464.781 M(eth2)S
/F4 SF (.)S
0 438.381 M(La r\351partition est faite par un p\351riph\351rique TEQL, comme ceci \(cela ne pouvait pas \352tre plus simple\) :)S
9.2 FS/F0 SF 0 413.814 M(# tc qdisc add dev eth1 root teql0)S
0 402.814 M(# tc qdisc add dev eth2 root teql0)S
0 391.814 M(# ip link set dev teql0 up)S
11 FS/F4 SF 0 365.781 M(N'oubliez pas la commande)S
/F5 SF ( ip link set up)S
/F4 SF ( !)S
0 339.381 M(Ceci a besoin d'\352tre fait sur les deux h\364tes. Le p\351riph\351rique )S
/F0 SF (teql0)S
/F4 SF ( est basiquement un distributeur tourniquet)S
0 326.181 M(au-dessus de )S
/F0 SF (eth1)S
/F4 SF ( et )S
/F0 SF (eth2)S
/F4 SF ( pour l'envoi des paquets. Aucune donn\351e n'arrive jamais \340 travers un)S
0 312.981 M(p\351riph\351rique )S
/F0 SF (teql)S
/F4 SF (, mais les donn\351es apparaissent sur )S
/F0 SF (eth1)S
/F4 SF ( et )S
/F0 SF (eth2)S
/F4 SF (.)S
0 286.581 M(Nous n'avons pour le moment que les p\351riph\351riques et nous avons \351galement besoin d'un routage correct.)S
0 273.381 M(L'une des possibilit\351s pour r\351aliser cela est d'assigner un r\351seau )S
/F0 SF (/31)S
/F4 SF ( sur chacun des liens, ainsi que sur le)S
0 260.181 M(p\351riph\351rique )S
/F0 SF (teql0)S
/F4 SF ( :)S
0 233.781 M(FIXME: Avons nous besoin de quelque chose comme )S
/F0 SF (nobroadcast)S
/F4 SF ( ? Un )S
/F0 SF (/31)S
/F4 SF ( est trop petit pour contenir)S
0 220.581 M(une adresse r\351seau et une adresse de diffusion. Si cela ne marche pas comme pr\351vu, essayez un )S
/F0 SF (/30)S
/F4 SF (, et)S
0 207.381 M(ajustez les adresses IP. Vous pouvez m\352me essayer sans attribuer d'adresses \340 )S
/F0 SF (eth1)S
/F4 SF ( et )S
/F0 SF (eth2)S
/F4 SF (.)S
0 180.981 M(Sur le routeur A:)S
9.2 FS/F0 SF 0 156.414 M(# ip addr add dev eth1 10.0.0.0/31)S
0 145.414 M(# ip addr add dev eth2 10.0.0.2/31)S
0 134.414 M(# ip addr add dev teql0 10.0.0.4/31)S
11 FS/F4 SF 0 108.381 M(Sur le routeur B:)S
9.2 FS/F0 SF 0 83.814 M(# ip addr add dev eth1 10.0.0.1/31)S
0 72.814 M(# ip addr add dev eth2 10.0.0.3/31)S
0 61.814 M(# ip addr add dev teql0 10.0.0.5/31)S
11 FS/F4 SF 0 35.781 M(Le routeur )S
/F0 SF (A)S
/F4 SF ( devrait maintenant \352tre capable de lancer un)S
/F5 SF ( ping)S
/F4 SF ( vers )S
/F0 SF (10.0.0.1)S
/F4 SF (, )S
/F0 SF (10.0.0.3)S
/F4 SF ( et )S
/F0 SF (10.0.0.5)S
/F4 SF ( \340)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(58)S
200.879 0 M(Chapitre 10. \311quilibrage de charge sur plusieurs interfaces)S
GR
SP
%%Page: (59) 59
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 660.2 M 487.0 2.0 F
0 392.792 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(travers les deux liens physiques et le p\351riph\351rique << \351galis\351 >>. Le routeur )S
/F0 SF (B)S
/F4 SF ( devrait maintenant \352tre capable)S
0 723.8 M(de lancer un)S
/F5 SF ( ping)S
/F4 SF ( vers )S
/F0 SF (10.0.0.0)S
/F4 SF (, )S
/F0 SF (10.0.0.2)S
/F4 SF ( et )S
/F0 SF (10.0.0.4)S
/F4 SF ( \340 travers les liens.)S
0 697.4 M(Si cela marche, le routeur )S
/F0 SF (A)S
/F4 SF ( peut prendre )S
/F0 SF (10.0.0.5)S
/F4 SF ( comme route vers le r\351seau 2 et le routeur )S
/F0 SF (B)S
0 684.2 M(10.0.0.4)S
/F4 SF ( comme route vers le r\351seau 1. Pour le cas particulier o\371 le r\351seau 1 est votre r\351seau personnel et)S
0 671 M(o\371 le r\351seau 2 est l'Internet, le routeur )S
/F0 SF (A)S
/F4 SF ( peut prendre )S
/F0 SF (10.0.0.5)S
/F4 SF ( comme passerelle par d\351faut.)S
15.8 FS/F9 SF 0 637.76 M(Avertissement)S
11 FS/F4 SF 0 610.392 M(Rien n'est aussi simple qu'il y para\356t. Les interfaces )S
/F0 SF (eth1)S
/F4 SF ( et )S
/F0 SF (eth2)S
/F4 SF ( sur les deux routeurs )S
/F0 SF (A)S
/F4 SF ( et )S
/F0 SF (B)S
/F4 SF ( ne doivent pas)S
0 597.192 M(avoir la fonction de filtrage par chemin inverse activ\351e. Dans le cas contraire, ils rejetteront les paquets)S
0 583.992 M(destin\351s \340 des adresses autres que les leurs :)S
9.2 FS/F0 SF 0 559.425 M(# echo 0 > /proc/sys/net/ipv4/conf/eth1/rp_filter)S
0 548.425 M(# echo 0 > /proc/sys/net/ipv4/conf/eth2/rp_filter)S
11 FS/F4 SF 0 522.392 M(Il y a un s\351rieux probl\350me avec le r\351ordonnancement des paquets. Supposons que six paquets aient besoin)S
0 509.192 M(d'\352tre envoy\351s de )S
/F0 SF (A)S
/F4 SF ( vers )S
/F0 SF (B)S
/F4 SF (. Par exemple, )S
/F0 SF (eth1)S
/F4 SF ( peut traiter les paquets 1, 3 et 5 et )S
/F0 SF (eth2)S
/F4 SF ( les paquets 2, 4 et 6.)S
0 495.992 M(Dans un monde id\351al, le routeur )S
/F0 SF (B)S
/F4 SF ( devrait recevoir ces paquets dans l'ordre 1, 2, 3, 4, 5, 6. Mais il est plus)S
0 482.792 M(probable que le noyau les recevra comme ceci : 2, 1, 4, 3, 6, 5. Ce probl\350me va perturber TCP/IP. Alors qu'il)S
0 469.592 M(n'y a pas de probl\350mes pour les liens transportant diff\351rentes sessions TCP/IP, vous ne serez pas capable de)S
0 456.392 M(regrouper plusieurs liens et obtenir par ftp un simple fichier beaucoup plus rapidement, \340 moins que le)S
0 443.192 M(syst\350me d'exploitation envoyant ou recevant ne soit Linux. En effet, celui-ci n'est pas facilement perturb\351 par)S
0 429.992 M(de simples r\351ordonnancements.)S
0 403.592 M(Cependant, l'\351quilibrage de charge est une bonne id\351e pour de nombreuses applications.)S
19 FS/F9 SF 0 367.184 M(Chapitre 11. Netfilter et iproute - marquage de)S
0 344.374 M(paquets)S
11 FS/F4 SF 0 316.372 M(Jusqu'\340 maintenant, nous avons vu comment iproute travaille, et netfilter a \351t\351 mentionn\351 plusieurs fois. Vous)S
0 303.172 M(ne perdrez pas votre temps \340 consulter Rusty's Remarkably Unreliable Guides. Le logiciel Netfilter peut \352tre)S
0 289.972 M(trouv\351 ici.)S
0 263.572 M(Netfilter nous permet de filtrer les paquets ou de d\351sosser leurs en-t\352tes. Une de ses fonctionnalit\351s)S
0 250.372 M(particuli\350res est de pouvoir marquer un paquet avec un nombre, gr\342ce \340 l'option )S
/F0 SF (--set-mark)S
/F4 SF (.)S
0 223.972 M(Comme exemple, la commande suivante marque tous les paquets destin\351s au port 25, en l'occurrence le)S
0 210.772 M(courrier sortant.)S
9.2 FS/F0 SF 0 186.206 M(# iptables -A PREROUTING -i eth0 -t mangle -p tcp --dport 25 \\)S
0 175.206 M( -j MARK --set-mark 1)S
11 FS/F4 SF 0 149.172 M(Disons que nous avons plusieurs connexions, une qui est rapide \(et ch\350re au m\351gaoctet\) et une qui est plus)S
0 135.972 M(lente, mais avec un tarif moins \351lev\351. Nous souhaiterions que le courrier passe par la route la moins ch\350re.)S
0 109.572 M(Nous avons d\351j\340 marqu\351 le paquet avec un "1" et nous allons maintenant renseigner la base de donn\351es de la)S
0 96.372 M(politique de routage pour qu'elle agisse sur ces paquets marqu\351s.)S
9.2 FS/F0 SF 0 71.806 M(# echo 201 mail.out >> /etc/iproute2/rt_tables)S
0 60.806 M(# ip rule add fwmark 1 table mail.out)S
0 49.806 M(# ip rule ls)S
0 38.806 M(0:      from all lookup local )S
0 27.806 M(32764:  from all fwmark        1 lookup mail.out )S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Chapitre 11. Netfilter et iproute - marquage de paquets)S
474.768 0 M(59)S
GR
SP
%%Page: (60) 60
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 330.2 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(32766:  from all lookup main )S
0 727.833 M(32767:  from all lookup default )S
11 FS/F4 SF 0 701.8 M(Nous allons maintenant g\351n\351rer la table mail.out avec une route vers la ligne lente, mais peu co\373teuse.)S
9.2 FS/F0 SF 0 677.233 M(# /sbin/ip route add default via 195.96.98.253 dev ppp0 table mail.out)S
11 FS/F4 SF 0 651.2 M(Voil\340 qui est fait. Il se peut que nous voulions mettre en place des exceptions, et il existe de nombreux)S
0 638 M(moyens pour le faire. Nous pouvons modifier la configuration de netfilter pour exclure certains h\364tes ou nous)S
0 624.8 M(pouvons ins\351rer une r\350gle avec une priorit\351 plus faible qui pointe sur la table principale pour nos h\364tes faisant)S
0 611.6 M(exception.)S
0 585.2 M(Nous pouvons aussi utiliser cette fonctionnalit\351 pour nous conformer aux bits TOS en marquant les paquets)S
0 572 M(avec diff\351rents types de service et les nombres correspondants. On cr\351e ensuite les r\350gles qui agissent sur ces)S
0 558.8 M(types de service. De cette fa\347on, on peut d\351dier une ligne RNIS aux connexions interactives.)S
0 532.4 M(Inutile de le dire, cela marche parfaitement sur un h\364te qui fait de la translation d'adresse \(NAT\), autrement)S
0 519.2 M(dit du)S
/F6 SF ( masquerading)S
/F4 SF (.)S
0 492.8 M(IMPORTANT : Nous avons re\347u une information selon laquelle MASQ et SNAT entrent en conflit avec le)S
0 479.6 M(marquage de paquets. Rusty Russell l'explique dans ce courrier.)S
0 453.2 M(D\351sactivez le filtrage de chemin inverse pour que cela fonctionne correctement.)S
0 426.8 M(Note : pour marquer les paquets, vous aurez besoin de valider quelques options du noyau :)S
9.2 FS/F0 SF 0 402.233 M(IP: advanced router \(CONFIG_IP_ADVANCED_ROUTER\) [Y/n/?])S
0 391.233 M(IP: policy routing \(CONFIG_IP_MULTIPLE_TABLES\) [Y/n/?])S
0 380.233 M(IP: use netfilter MARK value as routing key \(CONFIG_IP_ROUTE_FWMARK\) [Y/n/?])S
11 FS/F4 SF 0 354.2 M(Voir aussi la section intitul\351e)S
/F6 SF ( Cache web transparent utilisant netfilter, iproute2, ipchains et squid)S
/F4 SF ( dans)S
0 341 M(Chapitre 15> dans le chapitre)S
/F6 SF ( Recettes de cuisine>)S
/F4 SF (.)S
19 FS/F9 SF 0 304.592 M(Chapitre 12. Filtres avanc\351s pour la \(re-\)classification)S
0 281.782 M(des paquets)S
11 FS/F4 SF 0 253.78 M(Comme expliqu\351 dans la section sur les gestionnaires de mise en file d'attente bas\351s sur des classes, les filtres)S
0 240.58 M(sont n\351cessaires pour classifier les paquets dans n'importe laquelle des sous-files d'attente. Ces filtres sont)S
0 227.38 M(appel\351s \340 l'int\351rieur des gestionnaires de mise en file d'attente bas\351s sur des classes.)S
0 200.98 M(Voici une liste incompl\350te des classificateurs disponibles :)S
/F0 SF 0 174.58 M(fw)S
/F4 SF 36 161.38 M(Base la d\351cision sur la fa\347on dont le pare-feu a marqu\351 les paquets. Ceci peut \352tre un passage facile si)S
36 148.18 M(vous ne voulez pas apprendre la syntaxe)S
/F5 SF ( tc)S
/F4 SF ( li\351e aux filtres. Voir le chapitre sur les gestionnaires de)S
36 134.98 M(mise en file d'attente pour plus de d\351tails.)S
/F0 SF 0 121.78 M(u32)S
/F4 SF 36 108.58 M(Base la d\351cision sur les champs \340 l'int\351rieur du paquet \(c'est-\340-dire l'adresse IP source, etc.\))S
/F0 SF 0 95.38 M(route)S
/F4 SF 36 82.18 M(Base la d\351cision sur la route que va emprunter le paquet.)S
/F0 SF 0 68.98 M(rsvp)S
/F4 SF (, )S
/F0 SF (rsvp6)S
/F4 SF 36 55.78 M(Route les paquets en se basant sur RSVP. Seulement utile sur les r\351seaux que vous contr\364lez. Internet)S
36 42.58 M(ne respecte pas RSVP.)S
/F0 SF 0 29.38 M(tcindex)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(60)S
164.216 0 M(Chapitre 12. Filtres avanc\351s pour la \(re-\)classification des paquets)S
GR
SP
%%Page: (61) 61
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 462.2 M 487.0 2.0 F
0 117.792 M 487.0 2.0 F
11 FS/F4 SF 36 737 M(Utilis\351 par le gestionnaire de file d'attente )S
/F0 SF (DSMARK)S
/F4 SF (. Voir la section DSMARK>.)S
0 710.6 M(Notez qu'il y a g\351n\351ralement plusieurs mani\350res de classifier un paquet. Cela d\351pend du syst\350me de)S
0 697.4 M(classification que vous souhaitez utiliser.)S
0 671 M(Les classificateurs acceptent en g\351n\351ral quelques arguments communs. Ils sont list\351s ici pour des raisons)S
0 657.8 M(pratiques :)S
/F0 SF 0 631.4 M(protocol)S
/F4 SF 36 618.2 M(Le protocole que ce classificateur acceptera. G\351n\351ralement, on n'acceptera que le trafic IP. Exig\351.)S
/F0 SF 0 605 M(parent)S
/F4 SF 36 591.8 M(Le descripteur auquel ce classificateur est attach\351. Ce descripteur doit \352tre une classe d\351j\340 existante.)S
36 578.6 M(Exig\351.)S
/F0 SF 0 565.4 M(prio)S
/F4 SF 36 552.2 M(La priorit\351 de ce classificateur. Les plus petits nombres seront test\351s en premier.)S
/F0 SF 0 539 M(handle)S
/F4 SF 36 525.8 M(Cette r\351f\351rence a plusieurs significations suivant les diff\351rents filtres.)S
0 499.4 M(Toutes les sections suivantes supposeront que vous essayez de mettre en forme le trafic allant vers )S
/F0 SF (HostA)S
/F4 SF (.)S
0 486.2 M(Ces sections supposeront que la classe racine a \351t\351 configur\351e sur )S
/F0 SF (1:)S
/F4 SF ( et que la classe vers laquelle vous)S
0 473 M(voulez envoyer le trafic s\351lectionn\351 est )S
/F0 SF (1:1)S
/F4 SF (.)S
15.8 FS/F9 SF 0 439.76 M(Le classificateur )S
/F1 SF (u32)S
11 FS/F4 SF 0 412.392 M(Le filtre )S
/F0 SF (u32)S
/F4 SF ( est le filtre le plus avanc\351 dans l'impl\351mentation courante. Il est enti\350rement bas\351 sur des tables)S
0 399.192 M(de hachage, ce qui le rend robuste quand il y a beaucoup de r\350gles de filtrage.)S
0 372.792 M(Dans sa forme la plus simple, le filtre )S
/F0 SF (u32)S
/F4 SF ( est une liste d'enregistrements, chacun consistant en deux champs :)S
0 359.592 M(un s\351lecteur et une action. Les s\351lecteurs, d\351crits ci-dessous, sont compar\351s avec le paquet IP trait\351 jusqu'\340 la)S
0 346.392 M(premi\350re correspondance, et l'action associ\351e est r\351alis\351e. Le type d'action le plus simple serait de diriger le)S
0 333.192 M(paquet vers une classe CBQ d\351finie.)S
0 306.792 M(La ligne de commande du programme)S
/F5 SF ( tc filter)S
/F4 SF (, utilis\351e pour configurer le filtre, consiste en trois parties : la)S
0 293.592 M(sp\351cification du filtre, un s\351lecteur et une action. La sp\351cification du filtre peut \352tre d\351finie comme :)S
9.2 FS/F0 SF 0 269.025 M(tc filter add dev IF [ protocol PROTO ])S
0 258.025 M(                     [ \(preference|priority\) PRIO ])S
0 247.025 M(                     [ parent CBQ ])S
11 FS/F4 SF 0 220.992 M(Le champ )S
/F0 SF (protocol)S
/F4 SF ( d\351crit le protocole sur lequel le filtre sera appliqu\351. Nous ne discuterons que du cas du)S
0 207.792 M(protocole )S
/F0 SF (ip)S
/F4 SF (. Le champ )S
/F0 SF (preference)S
/F4 SF ( \()S
/F0 SF (priority)S
/F4 SF ( peut \352tre utilis\351 comme alternative\) fixe la priorit\351 du)S
0 194.592 M(filtre que l'on d\351finit. C'est important dans la mesure o\371 vous pouvez avoir plusieurs filtres \(listes de r\350gles\))S
0 181.392 M(avec des priorit\351s diff\351rentes. Chaque liste sera scrut\351e dans l'ordre d'ajout des r\350gles. Alors, la liste avec la)S
0 168.192 M(priorit\351 la plus faible \(celle qui a le num\351ro de pr\351f\351rence le plus \351lev\351\) sera trait\351e. Le champ )S
/F0 SF (parent)S
/F4 SF 0 154.992 M(d\351finit le sommet de l'arbre CBQ \(par ex. )S
/F0 SF (1:0)S
/F4 SF (\) auquel le filtre doit \352tre attach\351.)S
0 128.592 M(Les options d\351crites s'appliquent \340 tous les filtres, pas seulement \340 )S
/F0 SF (u32)S
/F4 SF (.)S
13.2 FS/F9 SF 0 97.992 M(Le s\351lecteur U32)S
11 FS/F4 SF 0 71.152 M(Le s\351lecteur U32 contient la d\351finition d'un mod\350le, qui sera compar\351 au paquet trait\351. Plus pr\351cis\351ment, il)S
0 57.952 M(d\351finit quels bits doivent correspondre dans l'en-t\352te du paquet, et rien de plus, mais cette m\351thode simple est)S
0 44.752 M(tr\350s puissante. Jetons un oeil sur l'exemple suivant, directement tir\351 d'un filtre assez complexe r\351ellement)S
0 31.552 M(existant :)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Le classificateur u32)S
474.768 0 M(61)S
GR
SP
%%Page: (62) 62
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 378.6 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(# tc filter parent 1: protocol ip pref 10 u32 fh 800::800 order 2048 key ht 800 bkt 0 flowid 1:3 \\)S
0 727.833 M(  match 00100000/00ff0000 at 0)S
11 FS/F4 SF 0 701.8 M(Pour l'instant, laissons de c\364t\351 la premi\350re ligne ; tous ces param\350tres d\351crivent les tables de hachage du filtre.)S
0 688.6 M(Focalisons-nous sur la ligne de s\351lection contenant le mot-cl\351 )S
/F0 SF (match)S
/F4 SF (. Ce s\351lecteur fera correspondre les)S
0 675.4 M(en-t\352tes IP dont le second octet sera )S
/F0 SF (0x10)S
/F4 SF ( \()S
/F0 SF (0010)S
/F4 SF (\). Comme nous pouvons le deviner, le nombre )S
/F0 SF (00ff)S
/F4 SF ( est le)S
0 662.2 M(masque de correspondance, disant au filtre quels bits il doit regarder. Ici, c'est )S
/F0 SF (0xff)S
/F4 SF (, donc l'octet)S
0 649 M(correspondra si c'est exactement 0x10. Le mot-cl\351 )S
/F0 SF (at)S
/F4 SF ( signifie que la correspondance doit d\351marrer au)S
0 635.8 M(d\351calage sp\351cifi\351 \(en octets\) - dans notre cas, c'est au d\351but du paquet. Traduisons tout cela en langage)S
0 622.6 M(humain : le paquet correspondra si son champ Type de Service \(TOS\) a le bit << faible d\351lai >> positionn\351.)S
0 609.4 M(Analysons une autre r\350gle :)S
9.2 FS/F0 SF 0 584.833 M(# tc filter parent 1: protocol ip pref 10 u32 fh 800::803 order 2051 key ht 800 bkt 0 flowid 1:3 \\)S
0 573.833 M(  match 00000016/0000ffff at nexthdr+0)S
11 FS/F4 SF 0 547.8 M(L'option )S
/F0 SF (nexthdr)S
/F4 SF ( d\351signe l'en-t\352te suivant encapsul\351 dans le paquet IP, c'est \340 dire celui du protocole de la)S
0 534.6 M(couche sup\351rieure. La correspondance commencera \351galement au d\351but du prochain en-t\352te. Elle devrait avoir)S
0 521.4 M(lieu dans le deuxi\350me mot de 32 bits de l'en-t\352te. Dans les protocoles TCP et UDP, ce champ contient le port)S
0 508.2 M(de destination du paquet. Le nombre est donn\351 dans le format big-endian, c'est-\340-dire les bits les plus)S
0 495 M(significatifs en premier. Il faut donc lire 0x0016 comme 22 en d\351cimal, qui correspond au service SSH dans le)S
0 481.8 M(cas de TCP. Comme vous le devinez, cette correspondance est ambigu\353 sans un contexte, et nous en)S
0 468.6 M(discuterons plus loin.)S
0 442.2 M(Ayant compris tout cela, nous trouverons le s\351lecteur suivant tr\350s facile \340 lire : )S
/F0 SF (match)S
0 429 M(c0a80100/ffffff00 at 16)S
/F4 SF (. Ce que nous avons ici, c'est une correspondance de trois octets au 17\350me)S
0 415.8 M(octet, en comptant \340 partir du d\351but de l'en-t\352te IP. Cela correspond aux paquets qui ont une adresse de)S
0 402.6 M(destination quelconque dans le r\351seau )S
/F0 SF (192.168.1/24)S
/F4 SF (. Apr\350s avoir analys\351 les exemples, nous pouvons)S
0 389.4 M(r\351sumer ce que nous avons appris.)S
13.2 FS/F9 SF 0 358.8 M(S\351lecteurs g\351n\351raux)S
11 FS/F4 SF 0 331.96 M(Les s\351lecteurs g\351n\351raux d\351finissent le mod\350le, le masque et le d\351calage qui seront compar\351s au contenu du)S
0 318.76 M(paquet. En utilisant les s\351lecteurs g\351n\351raux, vous pouvez rechercher des correspondances sur n'importe quel)S
0 305.56 M(bit de l'en-t\352te IP \(ou des couches sup\351rieures\). Ils sont quand m\352me plus difficiles \340 \351crire et \340 lire que les)S
0 292.36 M(s\351lecteurs sp\351cifiques d\351crits ci-dessus. La syntaxe g\351n\351rale des s\351lecteurs est :)S
9.2 FS/F0 SF 0 267.793 M(match [ u32 | u16 | u8 ] PATTERN MASK [ at OFFSET | nexthdr+OFFSET])S
11 FS/F4 SF 0 241.76 M(Un des mots-cl\351s )S
/F0 SF (u32)S
/F4 SF (, )S
/F0 SF (u16)S
/F4 SF ( ou )S
/F0 SF (u8)S
/F4 SF ( doit sp\351cifier la longueur du mod\350le en bits. )S
/F0 SF (PATTERN)S
/F4 SF ( et )S
/F0 SF (MASK)S
/F4 SF ( se)S
0 228.56 M(rapporteront \340 la longueur d\351finie par ce mot-cl\351. Le param\350tre )S
/F0 SF (OFFSET)S
/F4 SF ( est le d\351calage, en octets, pour le)S
0 215.36 M(d\351marrage de la recherche de correspondance. Si le mot-clef )S
/F0 SF (nexthdr+)S
/F4 SF ( est pr\351sent, le d\351calage sera relatif \340)S
0 202.16 M(l'en-t\352te de la couche r\351seau sup\351rieure.)S
0 175.76 M(Quelques exemples :)S
9.2 FS/F0 SF 0 151.193 M(# tc filter add dev ppp14 parent 1:0 prio 10 u32 \\)S
0 140.193 M(     match u8 64 0xff at 8 \\)S
0 129.193 M(     flowid 1:4)S
11 FS/F4 SF 0 103.16 M(Un paquet correspondra \340 cette r\350gle si sa << dur\351e de vie >> \(TTL\) est de 64. TTL est le champ d\351marrant)S
0 89.96 M(juste apr\350s le 8\350me octet de l'en-t\352te IP.)S
0 63.56 M(Correspond \340 tous les paquets TCP ayant le bit ACK activ\351 :)S
9.2 FS/F0 SF 0 38.993 M(# tc filter add dev ppp14 parent 1:0 prio 10 u32 \\)S
0 27.993 M(     match ip protocol 6 0xff \\)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(62)S
403.851 0 M(Le s\351lecteur U32)S
GR
SP
%%Page: (63) 63
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 330.2 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(     match u8 0x10 0xff at nexthdr+13 \\)S
0 727.833 M(     flowid 1:3  )S
11 FS/F4 SF 0 701.8 M(Utilisez ceci pour d\351terminer la pr\351sence du bit ACK sur les paquets d'une longueur inf\351rieure \340 64 octets :)S
9.2 FS/F0 SF 0 677.233 M(## V\351rifie la pr\351sence d'un ACK,)S
0 666.233 M(## protocol IP 6,)S
0 655.233 M(## longueur de l'en-t\352te IP 0x5\(mots de 32 bits\),)S
0 644.233 M(## longueur total IP 0x34 \(ACK + 12 octets d'options TCP\))S
0 633.233 M(## TCP ack actif \(bit 5, offset 33\))S
0 622.233 M(# tc filter add dev ppp14 parent 1:0 protocol ip prio 10 u32 \\)S
0 611.233 M(            match ip protocol 6 0xff \\)S
0 600.233 M(            match u8 0x05 0x0f at 0 \\)S
0 589.233 M(            match u16 0x0000 0xffc0 at 2 \\)S
0 578.233 M(            match u8 0x10 0xff at 33 \\)S
0 567.233 M(            flowid 1:3)S
11 FS/F4 SF 0 541.2 M(Seuls les paquets TCP sans charge utile et avec le bit ACK positionn\351 v\351rifieront cette r\350gle. Ici, nous)S
0 528 M(pouvons voir un exemple d'utilisation de deux s\351lecteurs, le r\351sultat final \351tant un ET logique de leur r\351sultat.)S
0 514.8 M(Si nous jetons un coup d'oeil sur un sch\351ma de l'en-t\352te TCP, nous pouvons voir que le bit ACK est le second)S
0 501.6 M(bit \()S
/F0 SF (0x10)S
/F4 SF (\) du 14\350me octet de l'en-t\352te TCP \()S
/F0 SF (at nexthdr+13)S
/F4 SF (\). Comme second s\351lecteur, si nous voulons)S
0 488.4 M(nous compliquer la vie, nous pouvons \351crire )S
/F0 SF (match u8 0x06 0xff at 9)S
/F4 SF ( \340 la place du s\351lecteur)S
0 475.2 M(sp\351cifique )S
/F0 SF (protocol tcp)S
/F4 SF (, puisque 6 est le num\351ro du protocole TCP, sp\351cifi\351 au 10\350me octet de l'en-t\352te)S
0 462 M(IP. D'un autre c\364t\351, dans cet exemple, nous ne pourrons pas utiliser de s\351lecteur sp\351cifique pour la premi\350re)S
0 448.8 M(correspondance, simplement parce qu'il n'y a pas de s\351lecteur sp\351cifique pour d\351signer les bits TCP ACK.)S
0 422.4 M(Le filtre ci dessous est une version modifi\351e du filtre pr\351sent\351 au-dessus. La diff\351rence est qu'il ne v\351rifie pas)S
0 409.2 M(la longueur de l'en-t\352te ip. Pourquoi ? Car le filtre au-dessus ne marche que sur les syst\350mes 32 bits.)S
9.2 FS/F0 SF 0 384.633 M(tc filter add dev ppp14 parent 1:0 protocol ip prio 10 u32 \\)S
0 373.633 M(      match ip protocol 6 0xff \\)S
0 362.633 M(      match u8 0x10 0xff at nexthdr+13 \\)S
0 351.633 M(      match u16 0x0000 0xffc0 at 2 \\)S
0 340.633 M(      flowid 1:3)S
13.2 FS/F9 SF 0 310.4 M(Les s\351lecteurs sp\351cifiques)S
11 FS/F4 SF 0 283.56 M(La table suivante contient la liste de tous les s\351lecteurs sp\351cifiques que les auteurs de cette section ont trouv\351s)S
0 270.36 M(dans le code source du programme)S
/F5 SF ( tc)S
/F4 SF (. Ils rendent simplement la vie plus facile en accroissant la lisibilit\351 de la)S
0 257.16 M(configuration du filtre.)S
0 230.76 M(FIXME: emplacement de la table - la table est dans un fichier s\351par\351 "selector.html")S
0 204.36 M(FIXME: C'est encore en Polonais :-\()S
0 177.96 M(FIXME: doit \352tre "sgmlis\351")S
0 151.56 M(Quelques exemples :)S
9.2 FS/F0 SF 0 126.993 M(# tc filter add dev ppp0 parent 1:0 prio 10 u32 \\)S
0 115.993 M(     match ip tos 0x10 0xff \\)S
0 104.993 M(     flowid 1:4)S
11 FS/F4 SF 0 78.96 M(FIXME: tcp dport match ne fonctionne pas comme d\351crit ci-dessous :)S
0 52.56 M(La r\350gle ci-dessus correspondra \340 des paquets qui ont le champ TOS \351gal \340 )S
/F0 SF (0x10)S
/F4 SF (. Le champ TOS commence)S
0 39.36 M(au deuxi\350me octet du paquet et occupe 1 octet, ce qui nous permet d'\351crire un s\351lecteur g\351n\351ral \351quivalent :)S
/F0 SF 0 26.16 M(match u8 0x10 0xff at 1)S
/F4 SF (. Cela nous donne une indication sur l'impl\351mentation du filtre )S
/F0 SF (u32)S
/F4 SF (. Les)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(S\351lecteurs g\351n\351raux)S
474.768 0 M(63)S
GR
SP
%%Page: (64) 64
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 616.2 M 487.0 2.0 F
0 71.592 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(r\350gles sp\351cifiques sont toujours traduites en r\350gles g\351n\351rales, et c'est sous cette forme qu'elles sont stock\351es en)S
0 723.8 M(m\351moire par le noyau. Cela am\350ne \340 une autre conclusion : les s\351lecteurs )S
/F0 SF (tcp)S
/F4 SF ( et )S
/F0 SF (udp)S
/F4 SF ( sont exactement les)S
0 710.6 M(m\352mes et c'est la raison pour laquelle vous ne pouvez pas utiliser un simple s\351lecteur )S
/F0 SF (match tcp dport)S
0 697.4 M(53 0xffff)S
/F4 SF ( pour d\351signer un paquet TCP envoy\351 sur un port donn\351. Ce s\351lecteur d\351signe aussi les paquets)S
0 684.2 M(UDP envoy\351s sur ce port. Vous devez \351galement sp\351cifier le protocole avec la r\350gle suivante :)S
9.2 FS/F0 SF 0 659.633 M(# tc filter add dev ppp0 parent 1:0 prio 10 u32 \\)S
0 648.633 M(        match tcp dport 53 0xffff \\)S
0 637.633 M(        match ip protocol 0x6 0xff \\)S
0 626.633 M(        flowid 1:2)S
15.8 FS/F9 SF 0 593.76 M(Le classificateur )S
/F1 SF (route)S
11 FS/F4 SF 0 566.392 M(Ce classificateur filtre en se basant sur les informations des tables de routage. Quand un paquet passant \340)S
0 553.192 M(travers les classes et en atteint une qui est marqu\351e avec le filtre )S
/F0 SF (route)S
/F4 SF (, il divise le paquet en se basant sur)S
0 539.992 M(l'information de la table de routage.)S
9.2 FS/F0 SF 0 515.425 M(# tc filter add dev eth1 parent 1:0 protocol ip prio 100 route)S
11 FS/F4 SF 0 489.392 M(Ici, nous ajoutons un classificateur )S
/F0 SF (route)S
/F4 SF ( sur le noeud parent )S
/F0 SF (1:0)S
/F4 SF (, avec la priorit\351 )S
/F0 SF (100)S
/F4 SF (. Quand un paquet)S
0 476.192 M(atteint ce noeud \(ce qui arrive imm\351diatement, puisqu'il est racine\), il consulte la table de routage et si une)S
0 462.992 M(entr\351e de la table correspond, il envoie le paquet vers la classe donn\351e et lui donne une priorit\351 de )S
/F0 SF (100)S
/F4 SF (.)S
0 449.792 M(Ensuite, vous ajoutez l'entr\351e de routage appropri\351e pour finalement activer les choses.)S
0 423.392 M(L'astuce ici est de d\351finir )S
/F0 SF (realm)S
/F4 SF ( en se basant soit sur la destination, soit sur la source. Voici la fa\347on de)S
0 410.192 M(proc\351der :)S
9.2 FS/F0 SF 0 385.625 M(# ip route add Host/Network via Gateway dev Device realm RealmNumber)S
11 FS/F4 SF 0 359.592 M(Par exemple, nous pouvons d\351finir notre r\351seau de destination )S
/F0 SF (192.168.10.0)S
/F4 SF ( avec le nombre )S
/F0 SF (realm)S
/F4 SF ( \351gal)S
0 346.392 M(\340 )S
/F0 SF (10)S
/F4 SF ( :)S
9.2 FS/F0 SF 0 321.825 M(# ip route add 192.168.10.0/24 via 192.168.10.1 dev eth1 realm 10)S
11 FS/F4 SF 0 295.792 M(Quand on ajoute des filtres )S
/F0 SF (route)S
/F4 SF (, on peut utiliser les nombres )S
/F0 SF (realm)S
/F4 SF ( pour repr\351senter les r\351seaux ou les)S
0 282.592 M(h\364tes et sp\351cifier quelle est la correspondance entre les routes et les filtres.)S
9.2 FS/F0 SF 0 258.025 M(# tc filter add dev eth1 parent 1:0 protocol ip prio 100 \\)S
0 247.025 M(  route to 10 classid 1:10)S
11 FS/F4 SF 0 220.992 M(La r\350gle ci-dessus indique que les paquets allant vers le r\351seau )S
/F0 SF (192.168.10.0)S
/F4 SF ( correspondent \340 la classe)S
/F0 SF 0 207.792 M(1:10)S
/F4 SF (.)S
0 181.392 M(Le filtre )S
/F0 SF (route)S
/F4 SF ( peut aussi \352tre utilis\351 avec les routes sources. Par exemple, il y a un sous-r\351seau attach\351 \340)S
0 168.192 M(notre routeur Linux sur )S
/F0 SF (eth2)S
/F4 SF (.)S
9.2 FS/F0 SF 0 143.625 M(# ip route add 192.168.2.0/24 dev eth2 realm 2)S
0 132.625 M(# tc filter add dev eth1 parent 1:0 protocol ip prio 100 \\)S
0 121.625 M(  route from 2 classid 1:2)S
11 FS/F4 SF 0 95.592 M(Ici, le filtre sp\351cifie que les paquets venant du r\351seau )S
/F0 SF (192.168.2.0)S
/F4 SF ( \()S
/F0 SF (realm 2)S
/F4 SF (\) correspondront \340 la classe)S
/F0 SF 0 82.392 M(1:2)S
/F4 SF (.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(64)S
358.003 0 M(Les s\351lecteurs sp\351cifiques)S
GR
SP
%%Page: (65) 65
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 561.992 M 487.0 2.0 F
0 412.152 M 487.0 2.0 F
0 291.352 M 487.0 2.0 F
0 78.152 M 487.0 2.0 F
15.8 FS/F9 SF 0 732.16 M(Les filtres de r\351glementation \()S
/Fb SF (Policing filters)S
/F9 SF (\))S
11 FS/F4 SF 0 704.792 M(Pour r\351aliser des configurations encore plus compliqu\351es, vous pouvez avoir des filtres qui analysent le trafic)S
0 691.592 M(\340 hauteur d'une certaine bande passante. Vous pouvez configurer un filtre pour qu'il cesse compl\350tement)S
0 678.392 M(l'analyse de tout le trafic au-dessus d'un certain d\351bit ou pour qu'il n'analyse pas la bande passante d\351passant)S
0 665.192 M(un certain d\351bit.)S
0 638.792 M(Ainsi, si vous d\351cidez de r\351glementer \340 4mbit/s, mais qu'un trafic de 5mbit/s est pr\351sent, vous pouvez cesser)S
0 625.592 M(d'analyser l'ensemble des 5mbit/s ou seulement cesser d'analyser le 1 mbit/s suppl\351mentaire et envoyer 4)S
0 612.392 M(mbit/s \340 la classe correspondante.)S
0 585.992 M(Si la bande passante d\351passe le d\351bit configur\351, vous pouvez rejeter un paquet, le reclassifier ou voir si un)S
0 572.792 M(autre filtre y correspond.)S
13.2 FS/F9 SF 0 542.192 M(Techniques de r\351glementation)S
11 FS/F4 SF 0 515.352 M(Il y a essentiellement deux fa\347ons de r\351glementer. Si vous avez compil\351 le noyau avec )S
/F0 SF (Estimators)S
/F4 SF (, celui-ci)S
0 502.152 M(peut mesurer plus ou moins pour chaque filtre le trafic qui est pass\351. Ces estimations ne sont pas co\373teuses en)S
0 488.952 M(temps CPU, \351tant donn\351 qu'il ne compte que 25 fois par seconde le nombre de donn\351es qui sont pass\351es, et)S
0 475.752 M(qu'il calcule le d\351bit \340 partir de l\340.)S
0 449.352 M(L'autre mani\350re utilise encore le)S
/F6 SF ( Token Bucket Filter)S
/F4 SF ( qui r\351side \340 l'int\351rieur du filtre cette fois. Le TBF analyse)S
0 436.152 M(seulement le trafic)S
/F6 SF ( A HAUTEUR)S
/F4 SF ( de la bande passante que vous avez configur\351e. Si cette bande passante est)S
0 422.952 M(d\351pass\351e, seul l'exc\350s est trait\351 par l'action de d\351passement de limite configur\351e.)S
/F9 SF 0 394.552 M(Avec l'estimateur du noyau)S
/F4 SF 0 368.152 M(Ceci est tr\350s simple et il n'y a qu'un seul param\350tre : )S
/F0 SF (avrate)S
/F4 SF (. Soit le flux demeure sous )S
/F0 SF (avrate)S
/F4 SF ( et le filtre)S
0 354.952 M(classifie le trafic vers la classe appropri\351e, soit votre d\351bit le d\351passe et l'action indiqu\351e par d\351faut, la)S
0 341.752 M(<< reclassification >>, est r\351alis\351e dans ce cas.)S
0 315.352 M(Le noyau utilise l'algorithme EWMA pour votre bande passante, ce qui la rend moins sensible aux courtes)S
0 302.152 M(rafales de donn\351es.)S
/F9 SF 0 273.752 M(Avec le)S
/Fb SF ( Token Bucket Filter)S
/F4 SF 0 247.352 M(Utilisez les param\350tres suivants :)S
/F0 SF 36 220.952 M(buffer)S
/F4 SF (/)S
/F0 SF (maxburst)S
/F18 SF 28.19 220.952 M(\267 )S
/F0 SF 36 207.752 M(mtu)S
/F4 SF (/)S
/F0 SF (minburst)S
/F18 SF 28.19 207.752 M(\267 )S
/F0 SF 36 194.552 M(mpu)S
/F18 SF 28.19 194.552 M(\267 )S
/F0 SF 36 181.352 M(rate)S
/F18 SF 28.19 181.352 M(\267 )S
/F4 SF 0 154.952 M(Ceux-ci se comportent la plupart du temps de mani\350re identique \340 ceux d\351crits dans la section)S
/F6 SF ( Filtre \340 seau de)S
0 141.752 M(jetons>)S
/F4 SF (. Notez cependant que si vous configurez le )S
/F0 SF (mtu)S
/F4 SF ( du filtre de r\351glementation TBF trop bas, aucun)S
0 128.552 M(paquet ne passera et le gestionnaire de mise en file d'attente de sortie TBF ne fera que les ralentir.)S
0 102.152 M(Une autre diff\351rence est que la r\351glementation ne peut que laisser passer ou jeter un paquet. Il ne peut pas le)S
0 88.952 M(retenir dans le but de le retarder.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Les filtres de r\351glementation \(Policing filters\))S
474.768 0 M(65)S
GR
SP
%%Page: (66) 66
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 512.36 M 487.0 2.0 F
0 428.52 M 487.0 2.0 F
13.2 FS/F9 SF 0 734.8 M(Actions de d\351passement de limite \()S
/Fb SF (Overlimit actions)S
/F9 SF (\))S
11 FS/F4 SF 0 707.96 M(Si votre filtre d\351cide qu'un d\351passement de limite est atteint, il peut mettre en oeuvre des << actions >>.)S
0 694.76 M(Actuellement, trois actions sont disponibles :)S
/F0 SF 0 668.36 M(continue)S
/F4 SF 36 655.16 M(Provoque l'arr\352t de l'analyse du filtre, bien que d'autres filtres aient la possibilit\351 de le faire.)S
/F0 SF 0 641.96 M(drop)S
/F4 SF 36 628.76 M(Ceci est une option tr\350s f\351roce qui supprime simplement le trafic exc\351dant un certain d\351bit. Elle est)S
36 615.56 M(souvent employ\351e dans le)S
/F6 SF ( Ingress policer)S
/F4 SF ( et a des utilisations limit\351es. Par exemple, si vous avez un)S
36 602.36 M(serveur de noms qui s'\351croule s'il traite plus de 5mbit/s de paquets, alors, vous pourrez dans ce cas)S
36 589.16 M(utiliser un filtre d'entr\351e pour \352tre s\373r qu'il ne traitera jamais plus de 5mbit/s.)S
/F0 SF 0 575.96 M(Pass/OK)S
/F4 SF 36 562.76 M(Transmettre le trafic. Peut \352tre utilis\351 pour mettre hors service un filtre compliqu\351, tout en le laissant)S
36 549.56 M(en place.)S
/F0 SF 0 536.36 M(reclassify)S
/F4 SF 36 523.16 M(Permet le plus souvent une reclassification vers)S
/F6 SF ( Best Effort)S
/F4 SF (. Ceci est l'action par d\351faut.)S
13.2 FS/F9 SF 0 492.56 M(Exemples)S
11 FS/F4 SF 0 465.72 M(Le seul vrai exemple connu est mentionn\351 dans la section)S
/F6 SF ( Prot\351ger votre machine des inondations SYN>)S
/F4 SF (.)S
0 439.32 M(FIXME: Si vous avez d\351j\340 utilis\351 ceci, partagez s'il vous pla\356t votre exp\351rience avec nous.)S
15.8 FS/F9 SF 0 406.08 M(Filtres hach\351s pour un filtrage massif tr\350s rapide)S
11 FS/F4 SF 0 378.712 M(Si vous avez besoin de milliers de r\350gles, par exemple, dans le cas o\371 vous avez beaucoup de clients ou)S
0 365.512 M(d'ordinateurs, tous avec des sp\351cifications QoS diff\351rentes, vous pourrez constater que le noyau passe)S
0 352.312 M(beaucoup de temps \340 analyser toutes ces r\350gles.)S
0 325.912 M(Par d\351faut, tous les filtres r\351sident dans une grande cha\356ne qui est analys\351e par ordre d\351croissant des priorit\351s.)S
0 312.712 M(Si vous avez 1000 r\350gles, 1000 contr\364les peuvent \352tre n\351cessaires pour d\351terminer ce qu'il faut faire d'un)S
0 299.512 M(paquet.)S
0 273.112 M(La v\351rification irait plus vite s'il y avait 256 cha\356nes avec chacune quatre r\350gles et si vous pouviez r\351partir les)S
0 259.912 M(paquets sur ces 256 cha\356nes, afin que la bonne r\350gle soit pr\351sente.)S
0 233.512 M(Ceci est rendu possible par le hachage. Imaginons que vous ayez sur votre r\351seau 1024 clients avec des)S
0 220.312 M(modems c\342ble, avec des adresses IP allant de )S
/F0 SF (1.2.0.0)S
/F4 SF ( \340 )S
/F0 SF (1.2.3.255)S
/F4 SF (, et que chacun doit avoir un)S
0 207.112 M(classement particulier, par exemple << pauvre >>, << moyen >> et << bourrage >>. Cela vous ferait alors)S
0 193.912 M(1024 r\350gles, dans le genre :)S
9.2 FS/F0 SF 0 169.345 M(# tc filter add dev eth1 parent 1:0 protocol ip prio 100 match ip src \\)S
0 158.345 M(  1.2.0.0 classid 1:1)S
0 147.345 M(# tc filter add dev eth1 parent 1:0 protocol ip prio 100 match ip src \\)S
0 136.345 M(  1.2.0.1 classid 1:1)S
0 125.345 M(...)S
0 114.345 M(# tc filter add dev eth1 parent 1:0 protocol ip prio 100 match ip src \\)S
0 103.345 M(  1.2.3.254 classid 1:3)S
0 92.345 M(# tc filter add dev eth1 parent 1:0 protocol ip prio 100 match ip src \\)S
0 81.345 M(  1.2.3.255 classid 1:2)S
11 FS/F4 SF 0 55.312 M(Pour aller plus vite, nous pouvons utiliser la derni\350re partie de l'adresse IP comme << cl\351 de hachage >>.)S
0 42.112 M(Nous obtenons alors 256 tables, la premi\350re ressemblant \340 ceci :)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(66)S
230.865 0 M(Actions de d\351passement de limite \(Overlimit actions\))S
GR
SP
%%Page: (67) 67
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 94.8 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(# tc filter add dev eth1 parent 1:0 protocol ip prio 100 match ip src \\)S
0 727.833 M(  1.2.0.0 classid 1:1)S
0 716.833 M(# tc filter add dev eth1 parent 1:0 protocol ip prio 100 match ip src \\)S
0 705.833 M(  1.2.1.0 classid 1:1)S
0 694.833 M(# tc filter add dev eth1 parent 1:0 protocol ip prio 100 match ip src \\)S
0 683.833 M(  1.2.2.0 classid 1:3)S
0 672.833 M(# tc filter add dev eth1 parent 1:0 protocol ip prio 100 match ip src \\)S
0 661.833 M(  1.2.3.0 classid 1:2)S
11 FS/F4 SF 0 635.8 M(La suivante commence comme ceci :)S
9.2 FS/F0 SF 0 611.233 M(# tc filter add dev eth1 parent 1:0 protocol ip prio 100 match ip src \\)S
0 600.233 M(  1.2.0.1 classid 1:1)S
0 589.233 M(...)S
11 FS/F4 SF 0 563.2 M(De cette mani\350re, seules quatre recherches au plus sont n\351cessaires et deux en moyenne.)S
0 536.8 M(La configuration est plut\364t compliqu\351e, mais elle en vaut vraiment la peine du fait des nombreuses r\350gles.)S
0 523.6 M(Nous cr\351ons d'abord un filtre racine, puis une table avec 256 entr\351es :)S
9.2 FS/F0 SF 0 499.033 M(# tc filter add dev eth1 parent 1:0 prio 5 protocol ip u32)S
0 488.033 M(# tc filter add dev eth1 parent 1:0 prio 5 handle 2: u32 divisor 256)S
11 FS/F4 SF 0 462 M(Nous ajoutons maintenant des r\350gles dans la table pr\351c\351demment cr\351\351e :)S
9.2 FS/F0 SF 0 437.433 M(# tc filter add dev eth1 protocol ip parent 1:0 prio 5 u32 ht 2:7b: \\)S
0 426.433 M(        match ip src 1.2.0.123 flowid 1:1)S
0 415.433 M(# tc filter add dev eth1 protocol ip parent 1:0 prio 5 u32 ht 2:7b: \\)S
0 404.433 M(        match ip src 1.2.1.123 flowid 1:2)S
0 393.433 M(# tc filter add dev eth1 protocol ip parent 1:0 prio 5 u32 ht 2:7b: \\)S
0 382.433 M(        match ip src 1.2.3.123 flowid 1:3)S
0 371.433 M(# tc filter add dev eth1 protocol ip parent 1:0 prio 5 u32 ht 2:7b: \\)S
0 360.433 M(        match ip src 1.2.4.123 flowid 1:2)S
11 FS/F4 SF 0 334.4 M(Ceci est l'entr\351e 123, qui contient les correspondances pour )S
/F0 SF (1.2.0.13)S
/F4 SF (, )S
/F0 SF (1.2.1.123)S
/F4 SF (, )S
/F0 SF (1.2.2.123)S
/F4 SF ( et)S
/F0 SF 0 321.2 M(1.2.3.123)S
/F4 SF ( qui les envoient respectivement vers )S
/F0 SF (1:1)S
/F4 SF (, )S
/F0 SF (1:2)S
/F4 SF (, )S
/F0 SF (1:3)S
/F4 SF ( et )S
/F0 SF (1:2)S
/F4 SF (. Notez que nous devons sp\351cifier)S
0 308 M(notre seau de hachage en hexad\351cimal, )S
/F0 SF (0x7b)S
/F4 SF ( pour )S
/F0 SF (123)S
/F4 SF (.)S
0 281.6 M(Nous cr\351ons ensuite un << filtre de hachage >>qui dirige le trafic vers la bonne entr\351e de la table de hachage :)S
9.2 FS/F0 SF 0 257.033 M(# tc filter add dev eth1 protocol ip parent 1:0 prio 5 u32 ht 800:: \\)S
0 246.033 M(        match ip src 1.2.0.0/16 \\)S
0 235.033 M(        hashkey mask 0x000000ff at 12 \\)S
0 224.033 M(        link 2:)S
11 FS/F4 SF 0 198 M(Ok, certains nombres doivent \352tre expliqu\351s. La table de hachage par d\351faut est appel\351e )S
/F0 SF (800::)S
/F4 SF ( et tous les)S
0 184.8 M(filtres d\351marrent de l\340. Nous s\351lectionnons alors l'adresse source qui est en position 12, 13, 14 et 15 dans)S
0 171.6 M(l'en-t\352te IP, et indiquons que seule la derni\350re partie nous int\351resse. Ceci est envoy\351 vers la table de hachage)S
/F0 SF 0 158.4 M(2:)S
/F4 SF ( qui a \351t\351 cr\351\351e plus t\364t.)S
0 132 M(C'est plut\364t compliqu\351, mais cela marche en pratique et les performances seront \351poustouflantes. Notez que)S
0 118.8 M(cet exemple pourrait \352tre am\351lior\351 pour que chaque cha\356ne contienne un filtre, ce qui repr\351senterait le cas)S
0 105.6 M(id\351al !)S
15.8 FS/F9 SF 0 72.36 M(Filtrer le trafic IPv6)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Filtres hach\351s pour un filtrage massif tr\350s rapide)S
474.768 0 M(67)S
GR
SP
%%Page: (68) 68
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 591.56 M 487.0 2.0 F
0 472.52 M 487.0 2.0 F
13.2 FS/F9 SF 0 734.8 M(Comment se fait-il que ces filtres tc IPv6 ne fonctionnent pas ?)S
11 FS/F4 SF 0 707.96 M(La base de donn\351es des politiques de routage \(RPDB\) a remplac\351 le routage IPv4 et la structure d'adressage \340)S
0 694.76 M(l'int\351rieur du noyau Linux, ce qui a permis les merveilleuses fonctionnalit\351s d\351crites dans ce HOWTO.)S
0 681.56 M(Malheureusement, la pile IPv6 \340 l'int\351rieur de Linux a \351t\351 impl\351ment\351e en dehors de cette structure principale.)S
0 668.36 M(Bien qu'ils partagent des fonctionnalit\351s, la structure RPDB de base ne participe pas dans ou avec les)S
0 655.16 M(structures d'adressage et de routage de IPv6.)S
0 628.76 M(Ceci va s\373rement changer, nous devons juste attendre un peu plus longtemps.)S
0 602.36 M(FIXME : Des id\351es sur des personnes travaillant sur ce sujet ? Planifications ?)S
13.2 FS/F9 SF 0 571.76 M(Marquer les paquets IPv6 en utilisant ip6tables)S
11 FS/F4 SF 0 544.92 M(ip6tables est capable de marquer un paquet et de lui assigner un num\351ro :)S
9.2 FS/F0 SF 0 520.353 M( # ip6tables -A PREROUTING -i eth0 -t mangle -p tcp -j MARK --mark 1)S
11 FS/F4 SF 0 483.32 M(Ceci ne va cependant pas nous aider dans la mesure o\371 le paquet ne passera pas par la structure RPDB.)S
13.2 FS/F9 SF 0 452.72 M(Utiliser le s\351lecteur u32 pour rep\351rer le paquet IPv6)S
11 FS/F4 SF 0 425.88 M(IPv6 est normalement encapsul\351 dans un tunnel SIT et transport\351 \340 travers les r\351seaux IPv4. Voir la section)S
0 412.68 M(sur le tunnel IPv6 pour de plus amples informations quant \340 la configuration d'un tel tunnel. Ceci nous permet)S
0 399.48 M(de filtrer les paquets IPv4 en consid\351rant les paquets IPv6 comme la charge utile.)S
0 373.08 M(Le filtre suivant rep\350re tous les paquets IPv6 encapsul\351s dans des paquets IPv4 :)S
9.2 FS/F0 SF 0 348.513 M(# tc filter add dev $DEV parent 10:0 protocol ip prio 10 u32 \\)S
0 337.513 M(             match ip protocol 41 0xff flowid 42:42)S
11 FS/F4 SF 0 311.48 M(Continuons. Supposons que les paquets IPv6 soient envoy\351s gr\342ce \340 des paquets IPv4 et que ces paquets n'ont)S
0 298.28 M(pas d'options. On pourrait utiliser le filtre suivant pour rep\351rer ICMPv6 dans IPv6 dans IPv4 n'ayant aucune)S
0 285.08 M(option. 0x3a \(58\) est le type du champ en-t\352te suivant pour ICMPv6.)S
9.2 FS/F0 SF 0 260.513 M(# tc filter add dev $DEV parent 10:0 protocol ip prio 10 u32 \\)S
0 249.513 M(            match ip protocol 41 0xff \\)S
0 238.513 M(            match u8 0x05 0x0f at 0 \\)S
0 227.513 M(            match u8 0x3a 0xff at 26 \\)S
0 216.513 M(            flowid 42:42)S
11 FS/F4 SF 0 190.48 M(Rep\351rer l'adresse de destination IPv6 n\351cessite un peu plus de travail. Le filtre suivant rep\350re l'adresse de)S
0 177.28 M(destination 3ffe:202c:ffff:32:230:4fff:fe08:358d:)S
9.2 FS/F0 SF 0 152.713 M(# tc filter add dev $DEV parent 10:0 protocol ip prio 10 u32 \\)S
0 141.713 M(             match ip protocol 41 0xff \\)S
0 130.713 M(             match u8 0x05 0x0f at 0 \\)S
0 119.713 M(             match u8 0x3f 0xff at 44 \\)S
0 108.713 M(             match u8 0xfe 0xff at 45 \\)S
0 97.713 M(             match u8 0x20 0xff at 46 \\)S
0 86.713 M(             match u8 0x2c 0xff at 47 \\)S
0 75.713 M(             match u8 0xff 0xff at 48 \\)S
0 64.713 M(             match u8 0xff 0xff at 49 \\)S
0 53.713 M(             match u8 0x00 0xff at 50 \\)S
0 42.713 M(             match u8 0x32 0xff at 51 \\)S
0 31.713 M(             match u8 0x02 0xff at 52 \\)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(68)S
182.531 0 M(Comment se fait-il que ces filtres tc IPv6 ne fonctionnent pas ?)S
GR
SP
%%Page: (69) 69
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 545.8 M 487.0 2.0 F
0 375.79 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(             match u8 0x30 0xff at 53 \\)S
0 727.833 M(             match u8 0x4f 0xff at 54 \\)S
0 716.833 M(             match u8 0xff 0xff at 55 \\)S
0 705.833 M(             match u8 0xfe 0xff at 56 \\)S
0 694.833 M(             match u8 0x08 0xff at 57 \\)S
0 683.833 M(             match u8 0x35 0xff at 58 \\)S
0 672.833 M(             match u8 0x8d 0xff at 59 \\)S
0 661.833 M(             flowid 10:13)S
11 FS/F4 SF 0 635.8 M(La m\352me technique peut \352tre utilis\351e pour rep\351rer les r\351seaux. Par exemple 2001::)S
9.2 FS/F0 SF 0 611.233 M(# tc filter add dev $DEV parent 10:0 protocol ip prio 10 u32 \\)S
0 600.233 M(             match ip protocol 41 0xff \\)S
0 589.233 M(             match u8 0x05 0x0f at 0 \\)S
0 578.233 M(             match u8 0x20 0xff at 28 \\)S
0 567.233 M(             match u8 0x01 0xff at 29 \\)S
0 556.233 M(             flowid 10:13)S
19 FS/F9 SF 0 520.192 M(Chapitre 13. Param\350tres r\351seau du noyau)S
11 FS/F4 SF 0 492.19 M(Le noyau utilise de nombreux param\350tres qui peuvent \352tre ajust\351s en diff\351rentes circonstances. Bien que,)S
0 478.99 M(comme d'habitude, les param\350tres par d\351faut conviennent \340 99&percnt; des installations, nous ne pourrions)S
0 465.79 M(pas appeler ce document << HOWTO avanc\351 >> sans en dire un mot.)S
0 439.39 M(Les \351l\351ments int\351ressants sont dans )S
/F0 SF (/proc/sys/net)S
/F4 SF (, jetez-y un oeil. Tout ne sera pas document\351 ici au)S
0 426.19 M(d\351part, mais nous y travaillons.)S
0 399.79 M(En attendant, vous pouvez jeter un oeil dans les sources du noyau Linux et lire le fichier)S
/F0 SF 0 386.59 M(Documentation/filesystems/proc.txt)S
/F4 SF (. La plupart des fonctionnalit\351s y sont expliqu\351es.)S
15.8 FS/F9 SF 0 353.35 M(Filtrage de Chemin Inverse \()S
/Fb SF (Reverse Path Filtering)S
/F9 SF (\))S
11 FS/F4 SF 0 325.982 M(Par d\351faut, les routeurs routent tout, m\352me les paquets qui visiblement n'appartiennent pas \340 votre r\351seau. Un)S
0 312.782 M(exemple courant est l'espace des adresses IP priv\351es s'\351chappant sur Internet. Si vous avez une interface avec)S
0 299.582 M(une route pour )S
/F0 SF (195.96.96.0/24)S
/F4 SF ( dessus, vous ne vous attendrez pas \340 voir arriver des paquets venant de)S
/F0 SF 0 286.382 M(212.64.94.1)S
/F4 SF (.)S
0 259.982 M(Beaucoup d'utilisateurs veulent d\351sactiver cette fonctionnalit\351. Les d\351veloppeurs du noyau ont permis de le)S
0 246.782 M(faire facilement. Il y a des fichiers dans )S
/F0 SF (/proc)S
/F4 SF ( o\371 vous pouvez ordonner au noyau de le faire pour vous. La)S
0 233.582 M(m\351thode est appel\351e << Filtrage par Chemin Inverse >> \()S
/F6 SF (Reverse Path Filtering)S
/F4 SF (\). Pour faire simple, si la)S
0 220.382 M(r\351ponse \340 ce paquet ne sort pas par l'interface par laquelle il est entr\351, alors c'est un paquet << bogu\351 >> et il)S
0 207.182 M(sera ignor\351.)S
0 180.782 M(Les instructions suivantes vont activer cela pour toutes les interfaces courantes et futures.)S
9.2 FS/F0 SF 0 156.216 M(# for i in /proc/sys/net/ipv4/conf/*/rp_filter ; do)S
0 145.216 M(>  echo 2 > $i )S
0 134.216 M(> done)S
11 FS/F4 SF 0 108.182 M(En reprenant l'exemple du d\351but, si un paquet arrivant sur le routeur Linux par )S
/F0 SF (eth1)S
/F4 SF ( pr\351tend venir du r\351seau)S
0 94.982 M(Bureau+FAI, il sera \351limin\351. De m\352me, si un paquet arrivant du r\351seau Bureau pr\351tend \352tre de quelque part \340)S
0 81.782 M(l'ext\351rieur du pare-feu, il sera \351galement \351limin\351.)S
0 55.382 M(Ce qui est pr\351sent\351 ci-dessus est le filtrage de chemin inverse complet. Le param\351trage par d\351faut filtre)S
0 42.182 M(seulement sur les adresses IP des r\351seaux directement connect\351s. Ce param\351trage par d\351faut est utilis\351 parce)S
0 28.982 M(que le filtrage complet \351choue dans le cas d'un routage asym\351trique \(o\371 il y a des paquets arrivant par un)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Chapitre 13. Param\350tres r\351seau du noyau)S
474.768 0 M(69)S
GR
SP
%%Page: (70) 70
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 583.2 M 487.0 2.0 F
0 430.192 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(chemin et ressortant par un autre, comme dans le cas du trafic satellite ou si vous avez des routes dynamiques)S
0 723.8 M(\(bgp, ospf, rip\) dans votre r\351seau. Les donn\351es descendent vers la parabole satellite et les r\351ponses repartent)S
0 710.6 M(par des lignes terrestres normales\).)S
0 684.2 M(Si cette exception s'applique dans votre cas \(vous devriez \352tre au courant\), vous pouvez simplement d\351sactiver)S
0 671 M(le )S
/F0 SF (rp&lowbar;filter)S
/F4 SF ( sur l'interface d'arriv\351e des donn\351es satellite. Si vous voulez voir si des paquets)S
0 657.8 M(sont \351limin\351s, le fichier )S
/F0 SF (log&lowbar;martians)S
/F4 SF ( du m\352me r\351pertoire indiquera au noyau de les enregistrer)S
0 644.6 M(dans votre syslog.)S
9.2 FS/F0 SF 0 620.033 M(# echo 1 >/proc/sys/net/ipv4/conf/<interfacename>/log_martians)S
11 FS/F4 SF 0 594 M(FIXME: Est-ce que la configuration des fichiers dans .../conf/&lcub;default,all&rcub; suffit ? - martijn)S
15.8 FS/F9 SF 0 560.76 M(Configurations obscures)S
11 FS/F4 SF 0 533.392 M(Bon, il y a beaucoup de param\350tres qui peuvent \352tre modifi\351s. Nous essayons de tous les lister. Voir aussi une)S
0 520.192 M(documentation partielle dans )S
/F0 SF (Documentation/ip-sysctl.txt)S
/F4 SF (.)S
0 493.792 M(Certaines de ces configurations ont des valeurs par d\351faut diff\351rentes suivant que vous r\351pondez )S
/F0 SF (Yes)S
/F4 SF ( ou )S
/F0 SF (No)S
/F4 SF ( \340)S
0 480.592 M(la question )S
/F0 SF (Configure as router and not host)S
/F4 SF ( lors de la compilation du noyau.)S
0 454.192 M(Oskar Andreasson a une page sur ces options et il appara\356t qu'elle soit meilleure que la notre. De ce fait, allez)S
0 440.992 M(\351galement voir http://ipsysctl-tutorial.frozentux.net/.)S
13.2 FS/F9 SF 0 410.392 M(ipv4 g\351n\351rique)S
11 FS/F4 SF 0 383.552 M(En remarque g\351n\351rale, les fonctionnalit\351s de limitation de d\351bit ne fonctionnent pas sur l'interface)S
/F0 SF 0 370.352 M(loopback)S
/F4 SF (. N'essayez donc pas de les tester localement. Les limites sont exprim\351es en << tic-tac >> \()S
/F6 SF (jiffies)S
/F4 SF (\))S
0 357.152 M(et elles utilisent obligatoirement le)S
/F6 SF ( Token Bucket Filter)S
/F4 SF ( mentionn\351 plus t\364t.)S
0 330.752 M(&lsqb;NdT : le terme)S
/F6 SF ( jiffies)S
/F4 SF ( d\351signe un mouvement r\351gulier, faisant r\351f\351rence au << tic-tac >> d'une horloge.)S
0 317.552 M(Dans le noyau lui-m\352me, une variable globale nomm\351e )S
/F0 SF (jiffies)S
/F4 SF ( est incr\351ment\351e \340 chaque interruption)S
0 304.352 M(d'horloge])S
0 277.952 M(Le noyau a une horloge interne qui tourne \340 )S
/F0 SF (HZ)S
/F4 SF ( impulsions \(ou)S
/F6 SF ( jiffies)S
/F4 SF (\) par seconde. Sur Intel, )S
/F0 SF (HZ)S
/F4 SF ( est la plupart)S
0 264.752 M(du temps \351gale \340 )S
/F0 SF (100)S
/F4 SF (. Donc, configurer un fichier )S
/F0 SF (*&lowbar;rate)S
/F4 SF ( \340, disons 50, autorise 2 paquets par)S
0 251.552 M(seconde. Le)S
/F6 SF ( Token Bucket Filter)S
/F4 SF ( est \351galement configur\351 pour autoriser une rafale de donn\351es de 6 paquets au)S
0 238.352 M(plus, si suffisamment de jetons ont \351t\351 gagn\351s.)S
0 211.952 M(Plusieurs \351l\351ments de la liste suivante proviennent du fichier)S
/F0 SF 0 198.752 M(/usr/src/linux/Documentation/networking/ip-sysctl.txt)S
/F4 SF (, \351crit par Alexey Kuznetsov)S
/F0 SF 0 185.552 M(<kuznet@ms2.inr.ac.ru>)S
/F4 SF ( et Andi Kleen )S
/F0 SF (<ak@muc.de>)S
/F4 SF (.)S
/F0 SF 0 159.152 M(/proc/sys/net/ipv4/icmp&lowbar;destunreach&lowbar;rate)S
/F4 SF 36 145.952 M(Si le noyau d\351cide qu'il ne peut pas d\351livrer un paquet, il le rejettera et enverra \340 la source du paquet)S
36 132.752 M(un ICMP notifiant ce rejet.)S
/F0 SF 0 119.552 M(/proc/sys/net/ipv4/icmp&lowbar;echo&lowbar;ignore&lowbar;all)S
/F4 SF 36 106.352 M(N'agit en aucun cas comme \351cho pour les paquets. Ne configurez pas ceci par d\351faut. Cependant, si)S
36 93.152 M(vous \352tes utilis\351 comme relais dans une attaque de D\351ni de Services, cela peut \352tre utile.)S
/F0 SF 0 79.952 M(/proc/sys/net/ipv4/icmp&lowbar;echo&lowbar;ignore&lowbar;broadcasts)S
/F4 SF 0 66.752 M(&lsqb;Utile&rsqb;)S
36 53.552 M(Si vous pinguez l'adresse de diffusion d'un r\351seau, tous les h\364tes sont sens\351s r\351pondre. Cela permet de)S
36 40.352 M(coquettes attaques de d\351ni de service. Mettez cette valeur \340 1 pour ignorer ces messages de diffusion.)S
/F0 SF 0 27.152 M(/proc/sys/net/ipv4/icmp&lowbar;echoreply&lowbar;rate)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(70)S
235.76 0 M(Filtrage de Chemin Inverse \(Reverse Path Filtering\))S
GR
SP
%%Page: (71) 71
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 11 FS/F4 SF 36 737 M(Le d\351bit auquel les r\351ponses echo sont envoy\351es aux destinataires.)S
/F0 SF 0 723.8 M(/proc/sys/net/ipv4/icmp&lowbar;ignore&lowbar;bogus&lowbar;error&lowbar;responses)S
/F4 SF 36 710.6 M(Configurer ceci pour ignorer les erreurs ICMP d'h\364tes du r\351seau r\351agissant mal aux trames envoy\351es)S
36 697.4 M(vers ce qu'ils per\347oivent comme l'adresse de diffusion.)S
/F0 SF 0 684.2 M(/proc/sys/net/ipv4/icmp&lowbar;paramprob&lowbar;rate)S
/F4 SF 36 671 M(Un message ICMP relativement peu connu, qui est envoy\351 en r\351ponse \340 des paquets qui ont des)S
36 657.8 M(en-t\352tes IP ou TCP erron\351s. Avec ce fichier, vous pouvez contr\364ler le d\351bit auquel il est envoy\351.)S
/F0 SF 0 644.6 M(/proc/sys/net/ipv4/icmp&lowbar;timeexceed&lowbar;rate)S
/F4 SF 36 631.4 M(Voici la c\351l\350bre cause des << \351toiles Solaris >> dans traceroute. Limite le nombre de messages ICMP)S
36 618.2 M(Time Exceeded envoy\351s.)S
/F0 SF 0 605 M(/proc/sys/net/ipv4/igmp&lowbar;max&lowbar;memberships)S
/F4 SF 36 591.8 M(Nombre maximal de sockets igmp \(multidistribution\) en \351coute sur l'h\364te. FIXME: Est-ce vrai ?)S
/F0 SF 0 578.6 M(/proc/sys/net/ipv4/inet&lowbar;peer&lowbar;gc&lowbar;maxtime)S
/F4 SF 36 565.4 M(FIXME : Ajouter une petite explication sur le stockage des partenaires internet \(inet peer\) ? Intervalle)S
36 552.2 M(de temps minimum entre deux passages du ramasse-miettes. Cet intervalle est pris en compte lors)S
36 539 M(d'une faible \(voire inexistante\) utilisation du)S
/F6 SF ( pool)S
/F4 SF (. Mesur\351 en)S
/F6 SF ( jiffies)S
/F4 SF (. &lsqb;NdT : Le)S
/F6 SF ( pool)S
/F4 SF ( d\351signe ici)S
36 525.8 M(la liste des adresses IP des partenaires internet.])S
/F0 SF 0 512.6 M(/proc/sys/net/ipv4/inet&lowbar;peer&lowbar;gc&lowbar;mintime)S
/F4 SF 36 499.4 M(Intervalle de temps minimum entre deux passages du ramasse-miettes. Cet intervalle est pris en)S
36 486.2 M(compte lors d'une utilisation intensive du)S
/F6 SF ( pool)S
/F4 SF (. Mesur\351 en)S
/F6 SF ( jiffies)S
/F4 SF (.)S
/F0 SF 0 473 M(/proc/sys/net/ipv4/inet&lowbar;peer&lowbar;maxttl)S
/F4 SF 36 459.8 M(Dur\351e de conservation maximale des enregistrements. Les entr\351es non utilis\351es expireront au bout de)S
36 446.6 M(cet intervalle de temps \(c'est-\340-dire quand le nombre d'entr\351es dans le)S
/F6 SF ( pool)S
/F4 SF ( est tr\350s petit\). Mesur\351 en)S
/F6 SF 36 433.4 M(jiffies)S
/F4 SF (.)S
/F0 SF 0 420.2 M(/proc/sys/net/ipv4/inet&lowbar;peer&lowbar;minttl)S
/F4 SF 36 407 M(Dur\351e de conservation minimale des enregistrements. Devrait \352tre suffisante pour prendre en compte)S
36 393.8 M(le temps de vie des fragments sur l'h\364te qui doit r\351assembler les paquets. Cette dur\351e minimale est)S
36 380.6 M(garantie si le nombre d'\351l\351ments dans le)S
/F6 SF ( pool)S
/F4 SF ( est inf\351rieur au seuil fix\351 par)S
/F0 SF 36 367.4 M(inet&lowbar;peer&lowbar;threshold)S
/F4 SF (.)S
/F0 SF 0 354.2 M(/proc/sys/net/ipv4/inet&lowbar;peer&lowbar;threshold)S
/F4 SF 36 341 M(Taille approximative de l'espace de stockage des partenaires internet. A partir de ce seuil, les entr\351es)S
36 327.8 M(sont effac\351es. Ce seuil d\351termine la dur\351e de vie des entr\351es, ainsi que les intervalles de temps entre)S
36 314.6 M(deux d\351clenchements du ramasse-miettes. Plus il y a d'entr\351es, plus le temps de vie est faible et plus)S
36 301.4 M(l'intervalle du ramasse-miettes est faible.)S
/F0 SF 0 288.2 M(/proc/sys/net/ipv4/ip&lowbar;autoconfig)S
/F4 SF 36 275 M(Ce fichier contient la valeur 1 si l'h\364te a re\347u sa configuration IP par RARP, BOOTP, DHCP ou un)S
36 261.8 M(m\351canisme similaire. Autrement, il contient la valeur z\351ro.)S
/F0 SF 0 248.6 M(/proc/sys/net/ipv4/ip&lowbar;default&lowbar;ttl)S
/F4 SF 36 235.4 M(Dur\351e de vie \(TTL\) des paquets. Fixer \340 la valeur s\373re de 64. Augmentez-la si vous avez un r\351seau)S
36 222.2 M(immense, mais pas << pour s'amuser >> : les boucles sans fin d'un mauvais routage sont plus)S
36 209 M(dangereuses si le TTL est \351lev\351. Vous pouvez m\352me envisager de diminuer la valeur dans certaines)S
36 195.8 M(circonstances.)S
/F0 SF 0 182.6 M(/proc/sys/net/ipv4/ip&lowbar;dynaddr)S
/F4 SF 36 169.4 M(Vous aurez besoin de positionner cela si vous utilisez la connexion \340 la demande avec une adresse)S
36 156.2 M(d'interface dynamique. Une fois que votre interface a \351t\351 configur\351e, toutes les sockets TCP locaux)S
36 143 M(qui n'ont pas eu de paquets de r\351ponse seront retrait\351es pour avoir la bonne adresse. Cela r\351sout le)S
36 129.8 M(probl\350me pos\351 par une connexion d\351fectueuse ayant configur\351 une interface, suivie par une deuxi\350me)S
36 116.6 M(tentative r\351ussie \(avec une adresse IP diff\351rente\).)S
/F0 SF 0 103.4 M(/proc/sys/net/ipv4/ip&lowbar;forward)S
/F4 SF 36 90.2 M(Le noyau doit-il essayer de transmettre les paquets ? D\351sactiv\351 par d\351faut.)S
/F0 SF 0 77 M(/proc/sys/net/ipv4/ip&lowbar;local&lowbar;port&lowbar;range)S
/F4 SF 36 63.8 M(Intervalle des ports locaux pour les connexions sortantes. En fait, assez petit par d\351faut, 1024 \340 4999.)S
/F0 SF 0 50.6 M(/proc/sys/net/ipv4/ip&lowbar;no&lowbar;pmtu&lowbar;disc)S
/F4 SF 36 37.4 M(Configurez ceci si vous voulez d\351sactiver la d\351couverte du MTU de chemin, une technique pour)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(ipv4 g\351n\351rique)S
474.768 0 M(71)S
GR
SP
%%Page: (72) 72
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 11 FS/F4 SF 36 737 M(d\351terminer le plus grand MTU possible sur votre chemin. Voir aussi la section sur la d\351couverte du)S
36 723.8 M(MTU de chemin dans le chapitre)S
/F6 SF ( Recettes de cuisine>)S
/F4 SF (.)S
/F0 SF 0 710.6 M(/proc/sys/net/ipv4/ipfrag&lowbar;high&lowbar;thresh)S
/F4 SF 36 697.4 M(M\351moire maximum utilis\351e pour r\351assembler les fragments IP. Quand)S
/F0 SF 36 684.2 M(ipfrag&lowbar;high&lowbar;thresh)S
/F4 SF ( octets de m\351moire sont allou\351s pour cela, le)S
36 671 M(gestionnaire de fragments rejettera les paquets jusqu'\340 ce que)S
/F0 SF 36 657.8 M(ipfrag&lowbar;low&lowbar;thresh)S
/F4 SF ( soit atteint.)S
/F0 SF 0 644.6 M(/proc/sys/net/ipv4/ip&lowbar;nonlocal&lowbar;bind)S
/F4 SF 36 631.4 M(Configurez ceci si vous voulez que vos applications soient capables de se lier \340 une adresse qui)S
36 618.2 M(n'appartient pas \340 une interface de votre syst\350me. Ceci peut \352tre utile quand votre machine est sur un)S
36 605 M(lien non-permanent \(ou m\352me permanent\). Vos services sont donc capables de d\351marrer et de se lier \340)S
36 591.8 M(une adresse sp\351cifique quand votre lien est inactif.)S
/F0 SF 0 578.6 M(/proc/sys/net/ipv4/ipfrag&lowbar;low&lowbar;thresh)S
/F4 SF 36 565.4 M(M\351moire minimale utilis\351e pour r\351assembler les fragments IP.)S
/F0 SF 0 552.2 M(/proc/sys/net/ipv4/ipfrag&lowbar;time)S
/F4 SF 36 539 M(Temps en secondes du maintien d'un fragment IP en m\351moire.)S
/F0 SF 0 525.8 M(/proc/sys/net/ipv4/tcp&lowbar;abort&lowbar;on&lowbar;overflow)S
/F4 SF 36 512.6 M(Une option bool\351enne contr\364lant le comportement dans le cas de nombreuses connexions entrantes.)S
36 499.4 M(Quand celle-ci est activ\351e, le noyau envoie rapidement des paquets RST quand un service est)S
36 486.2 M(surcharg\351.)S
/F0 SF 0 473 M(/proc/sys/net/ipv4/tcp&lowbar;fin&lowbar;timeout)S
/F4 SF 36 459.8 M(Temps de maintien de l'\351tat )S
/F0 SF (FIN-WAIT-2)S
/F4 SF ( pour un socket dans le cas o\371 il a \351t\351 ferm\351 de notre c\364t\351.)S
36 446.6 M(Le partenaire peut \352tre d\351fectueux et ne jamais avoir ferm\351 son c\364t\351 ou m\352me mourir de mani\350re)S
36 433.4 M(inattendue. La valeur par d\351faut est de 60 secondes. La valeur usuelle utilis\351e dans le noyau 2.2 \351tait)S
36 420.2 M(de 180 secondes. Vous pouvez la remettre, mais rappelez vous que si votre machine a un serveur)S
36 407 M(WEB surcharg\351, vous risquez de d\351passer la m\351moire avec des kilotonnes de sockets morts. Les)S
36 393.8 M(sockets )S
/F0 SF (FIN-WAIT2)S
/F4 SF ( sont moins dangereux que les sockets )S
/F0 SF (FIN-WAIT1)S
/F4 SF ( parce qu'ils consomment au)S
36 380.6 M(maximum 1,5K de m\351moire, mais ils ont tendance \340 vivre plus longtemps. Cf)S
/F0 SF 36 367.4 M(tcp&lowbar;max&lowbar;orphans)S
/F4 SF (.)S
/F0 SF 0 354.2 M(/proc/sys/net/ipv4/tcp&lowbar;keepalive&lowbar;time)S
/F4 SF 36 341 M(Dur\351e entre l'envoi de deux messages)S
/F6 SF ( keepalive)S
/F4 SF ( quand l'option)S
/F6 SF ( keepalive)S
/F4 SF ( est activ\351e. Par d\351faut : 2)S
36 327.8 M(heures.)S
/F0 SF 0 314.6 M(/proc/sys/net/ipv4/tcp&lowbar;keepalive&lowbar;intvl)S
/F4 SF 36 301.4 M(A quelle fr\351quence les sondes sont retransmises lorsqu'il n'y a pas eu acquittement de sonde. Par)S
36 288.2 M(d\351faut : 75 secondes.)S
/F0 SF 0 275 M(/proc/sys/net/ipv4/tcp&lowbar;keepalive&lowbar;probes)S
/F4 SF 36 261.8 M(Combien de sondes TCP)S
/F6 SF ( keepalive)S
/F4 SF ( seront envoy\351es avant de d\351cider que la connexion est bris\351e. Par)S
36 248.6 M(d\351faut : 9. En multipliant par )S
/F0 SF (tcp&lowbar;keepalive&lowbar;intvl)S
/F4 SF (, cela donne le temps)S
36 235.4 M(pendant lequel un lien peut \352tre actif sans donner de r\351ponses apr\350s l'envoi d'un)S
/F6 SF ( keepalive)S
/F4 SF (.)S
/F0 SF 0 222.2 M(/proc/sys/net/ipv4/tcp&lowbar;max&lowbar;orphans)S
/F4 SF 36 209 M(Nombre maximum de sockets TCP qui ne sont pas reli\351s \340 un descripteur de fichier utilisateur, g\351r\351)S
36 195.8 M(par le syst\350me. Si ce nombre est d\351pass\351, les connexions orphelines sont imm\351diatement r\351initialis\351es)S
36 182.6 M(et un avertissement est envoy\351. Cette limite existe seulement pour pr\351venir des attaques de d\351ni de)S
36 169.4 M(services simples. Vous ne devez pas compter sur ceci ou diminuer cette limite artificiellement, mais)S
36 156.2 M(plut\364t l'augmenter \(probablement apr\350s avoir augment\351 la m\351moire\) si les conditions du r\351seau)S
36 143 M(r\351clament plus que cette valeur par d\351faut et r\351gler vos services r\351seau pour qu'ils d\351truisent sans)S
36 129.8 M(tarder ce type d'\351tat. Laissez-moi vous rappeler encore que chaque orphelin consomme jusqu'\340)S
36 116.6 M(environ 64K de m\351moire non)S
/F6 SF ( swappable)S
/F4 SF (.)S
/F0 SF 0 103.4 M(/proc/sys/net/ipv4/tcp&lowbar;orphan&lowbar;retries)S
/F4 SF 36 90.2 M(Combien d'essais avant de d\351truire une connexion TCP, ferm\351e par notre c\364t\351. La valeur par d\351faut de)S
36 77 M(7 correspond \340 un temps d'environ 50s \340 16 min suivant le RTO. Si votre machine supporte un serveur)S
36 63.8 M(Web, vous pouvez envisager de baisser cette valeur, dans la mesure o\371 de tels sockets peuvent)S
36 50.6 M(consommer des ressources significatives. Cf )S
/F0 SF (tcp&lowbar;max&lowbar;orphans)S
/F4 SF (.)S
/F0 SF 0 37.4 M(/proc/sys/net/ipv4/tcp&lowbar;max&lowbar;syn&lowbar;backlog)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(72)S
414.851 0 M(ipv4 g\351n\351rique)S
GR
SP
%%Page: (73) 73
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 11 FS/F4 SF 36 737 M(Nombre maximum de requ\352tes d'une connexion m\351moris\351e, qui n'avait pas encore re\347u d'accus\351 de)S
36 723.8 M(r\351ception du client connect\351. La valeur par d\351faut est de 1024 pour des syst\350mes avec plus de 128 Mo)S
36 710.6 M(de m\351moire et 128 pour des machines avec moins de m\351moire. Si un serveur souffre de surcharge,)S
36 697.4 M(essayez d'augmenter ce nombre. Attention ! Si vous positionnez une valeur sup\351rieure \340 1024, il serait)S
36 684.2 M(pr\351f\351rable de changer )S
/F0 SF (TCP&lowbar;SYNQ&lowbar;HSIZE)S
/F4 SF ( dans le fichier)S
/F0 SF 36 671 M(include/net/tcp.h)S
/F4 SF ( pour garder )S
/F0 SF (TCP&lowbar;SYNQ&lowbar;HSIZE*16 <=)S
36 657.8 M(tcp&lowbar;max&lowbar;syn&lowbar;backlog)S
/F4 SF ( et de recompiler de noyau.)S
/F0 SF 0 644.6 M(/proc/sys/net/ipv4/tcp&lowbar;max&lowbar;tw&lowbar;buckets)S
/F4 SF 36 631.4 M(Nombre maximum de sockets )S
/F0 SF (timewait)S
/F4 SF ( g\351r\351es par le syst\350me simultan\351ment. Si ce nombre est)S
36 618.2 M(d\351pass\351, le socket )S
/F0 SF (timewait)S
/F4 SF ( est imm\351diatement d\351truit et un message d'avertissement est envoy\351.)S
36 605 M(Cette limite n'existe que pour pr\351venir des attaques de d\351ni de services simples. Vous ne devez pas)S
36 591.8 M(diminuer cette limite artificiellement, mais plut\364t l'augmenter \(probablement apr\350s avoir augment\351 la)S
36 578.6 M(m\351moire\) si les conditions du r\351seau r\351clament plus que cette valeur par d\351faut.)S
/F0 SF 0 565.4 M(/proc/sys/net/ipv4/tcp&lowbar;retrans&lowbar;collapse)S
/F4 SF 36 552.2 M(Compatibilit\351 bug \340 bug avec certaines imprimantes d\351fectueuses. Tentative d'envoi de plus gros)S
36 539 M(paquets lors de la retransmission pour contourner le bug de certaines piles TCP.)S
/F0 SF 0 525.8 M(/proc/sys/net/ipv4/tcp&lowbar;retries1)S
/F4 SF 36 512.6 M(Combien d'essais avant de d\351cider que quelque chose est erron\351 et qu'il est n\351cessaire d'informer de)S
36 499.4 M(cette suspicion la couche r\351seau. La valeur minimale du RFC est de 3. C'est la valeur par d\351faut ; elle)S
36 486.2 M(correspond \340 un temps d'environ 3 sec \340 8 min suivant le RTO.)S
/F0 SF 0 473 M(/proc/sys/net/ipv4/tcp&lowbar;retries2)S
/F4 SF 36 459.8 M(Combien d'essais avant de d\351truire une connexion TCP active. Le RFC 1122 pr\351cise que la limite ne)S
36 446.6 M(devrait pas d\351passer 100 secondes. C'est un nombre trop petit. La valeur par d\351faut de 15 correspond \340)S
36 433.4 M(un temps de environ 13 \340 30 minutes suivant le RTO.)S
/F0 SF 0 420.2 M(/proc/sys/net/ipv4/tcp&lowbar;rfc1337)S
/F4 SF 36 407 M(Ce bool\351en active un rectificatif pour << l'assassinat hasardeux des time-wait dans tcp >>, d\351crit dans)S
36 393.8 M(le RFC 1337. S'il est activ\351, le noyau rejette les paquets RST pour les sockets \340 l'\351tat de )S
/F0 SF (time-wait)S
/F4 SF (.)S
36 380.6 M(Par d\351faut : 0)S
/F0 SF 0 367.4 M(/proc/sys/net/ipv4/tcp&lowbar;sack)S
/F4 SF 36 354.2 M(Utilise un ACK s\351lectif qui peut \352tre utilis\351 pour signifier que des paquets sp\351cifiques sont manquant.)S
36 341 M(Facilite ainsi une r\351cup\351ration rapide.)S
/F0 SF 0 327.8 M(/proc/sys/net/ipv4/tcp&lowbar;stdurg)S
/F4 SF 36 314.6 M(Utilise l'interpr\351tation du RFC)S
/F6 SF ( Host Requirements)S
/F4 SF ( du champ TCP pointeur urgent. La plupart des)S
36 301.4 M(h\364tes utilisent la vieille interpr\351tation BSD. Donc, si vous activez cette option, il se peut que Linux ne)S
36 288.2 M(communique plus correctement avec eux. Par d\351faut : FALSE \(FAUX\))S
/F0 SF 0 275 M(/proc/sys/net/ipv4/tcp&lowbar;syn&lowbar;retries)S
/F4 SF 36 261.8 M(Nombre de paquets SYN que le noyau enverra avant de tenter l'\351tablissement d'une nouvelle)S
36 248.6 M(connexion.)S
/F0 SF 0 235.4 M(/proc/sys/net/ipv4/tcp&lowbar;synack&lowbar;retries)S
/F4 SF 36 222.2 M(Pour ouvrir l'autre c\364t\351 de la connexion, le noyau envoie un SYN avec un ACK superpos\351)S
36 209 M(\()S
/F6 SF (piggyback)S
/F4 SF (\), pour accuser r\351ception du SYN pr\351c\351demment envoy\351. C'est la deuxi\350me partie de la)S
36 195.8 M(poign\351e de main \340 trois voies \()S
/F6 SF (threeway handshake)S
/F4 SF (\). Cette configuration d\351termine le nombre de)S
36 182.6 M(paquets SYN+ACK \340 envoyer avant que le noyau n'abandonne la connexion.)S
/F0 SF 0 169.4 M(/proc/sys/net/ipv4/tcp&lowbar;timestamps)S
/F4 SF 36 156.2 M(Les estampillages horaires sont utilis\351s, entre autres, pour se prot\351ger du rebouclage des num\351ros de)S
36 143 M(s\351quence. On peut concevoir qu'un lien \340 1 gigabit puisse de nouveau rencontrer un num\351ro de)S
36 129.8 M(s\351quence pr\351c\351dent avec une valeur hors-ligne parcequ'il \351tait d'une g\351n\351ration pr\351c\351dente.)S
36 116.6 M(L'estampillage horaire permet de reconna\356tre cet << ancien paquet >>.)S
/F0 SF 0 103.4 M(/proc/sys/net/ipv4/tcp&lowbar;tw&lowbar;recycle)S
/F4 SF 36 90.2 M(Mise en place du recyclage rapide des sockets )S
/F0 SF (TIME-WAIT)S
/F4 SF (. La valeur par d\351faut est 1. Celle-ci ne)S
36 77 M(devrait pas \352tre chang\351e sans le conseil/demande d'experts techniques.)S
/F0 SF 0 63.8 M(/proc/sys/net/ipv4/tcp&lowbar;window&lowbar;scaling)S
/F4 SF 36 50.6 M(TCP/IP autorise normalement des fen\352tres jusqu'\340 une taille de 65535 octets. Pour des r\351seaux)S
36 37.4 M(vraiment rapides, cela peut ne pas \352tre assez. Les options )S
/F0 SF (windows scaling)S
/F4 SF ( autorisent des)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(ipv4 g\351n\351rique)S
474.768 0 M(73)S
GR
SP
%%Page: (74) 74
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 726.2 M 487.0 2.0 F
0 167.16 M 487.0 2.0 F
11 FS/F4 SF 36 737 M(fen\352tres jusqu'au gigaoctet, ce qui est adapt\351 pour les produits \340 grande bande passante.)S
13.2 FS/F9 SF 0 706.4 M(Configuration des p\351riph\351riques)S
11 FS/F0 SF 0 679.56 M(DEV)S
/F4 SF ( peut d\351signer soit une interface r\351elle, soit )S
/F0 SF (all)S
/F4 SF (, soit )S
/F0 SF (default)S
/F4 SF (. )S
/F0 SF (Default)S
/F4 SF ( change \351galement les)S
0 666.36 M(param\350tres des interfaces qui seront cr\351\351es par la suite.)S
/F0 SF 0 639.96 M(/proc/sys/net/ipv4/conf/DEV/accept&lowbar;redirects)S
/F4 SF 36 626.76 M(Si un routeur d\351cide que vous l'utilisez \340 tort \(c'est-\340-dire qu'il a besoin de r\351-envoyer votre paquet sur)S
36 613.56 M(la m\352me interface\), il vous enverra un message )S
/F0 SF (ICMP Redirect)S
/F4 SF (. Cela pr\351sente cependant un petit)S
36 600.36 M(risque pour la s\351curit\351, et vous pouvez le d\351sactiver ou utiliser les redirections s\351curis\351es.)S
/F0 SF 0 587.16 M(/proc/sys/net/ipv4/conf/DEV/accept&lowbar;source&lowbar;route)S
/F4 SF 36 573.96 M(Plus vraiment utilis\351. On l'utilisait pour \352tre capable de donner \340 un paquet une liste d'adresses IP \340)S
36 560.76 M(visiter. Linux peut \352tre configur\351 pour satisfaire cette option IP.)S
/F0 SF 0 547.56 M(/proc/sys/net/ipv4/conf/DEV/bootp&lowbar;relay)S
/F4 SF 36 534.36 M(Accepte les paquets avec une adresse source 0.b.c.d et des adresses destinations qui ne correspondent)S
36 521.16 M(ni \340 cet h\364te, ni au r\351seau local. On suppose qu'un d\351mon de relais BOOTP interceptera et transmettra)S
36 507.96 M(de tels paquets.)S
36 481.56 M(La valeur par d\351faut est 0, puisque cette fonctionnalit\351 n'est pas encore impl\351ment\351e \(noyau 2.2.12\).)S
/F0 SF 0 468.36 M(/proc/sys/net/ipv4/conf/DEV/forwarding)S
/F4 SF 36 455.16 M(Active ou d\351sactive la transmission IP sur cette interface.)S
/F0 SF 0 441.96 M(/proc/sys/net/ipv4/conf/DEV/log&lowbar;martians)S
/F4 SF 36 428.76 M(Voir la section sur le)S
/F6 SF ( Filtrage de Chemin Inverse>)S
/F4 SF (.)S
/F0 SF 0 415.56 M(/proc/sys/net/ipv4/conf/DEV/mc&lowbar;forwarding)S
/F4 SF 36 402.36 M(Si vous faites de la transmission multidistribution \()S
/F6 SF (multicast)S
/F4 SF (\) sur cette interface.)S
/F0 SF 0 389.16 M(/proc/sys/net/ipv4/conf/DEV/proxy&lowbar;arp)S
/F4 SF 36 375.96 M(Si vous configurez ceci \340 1, cet interface r\351pondra aux requ\352tes ARP pour les adresses que le noyau)S
36 362.76 M(doit router. Peut \352tre tr\350s utile si vous mettez en place des << pseudo ponts ip >>. Prenez bien garde)S
36 349.56 M(d'avoir des masques de sous-r\351seau corrects avant d'activer cette option. Faites \351galement attention)S
36 336.36 M(que le rp_filter agisse aussi sur le requ\352tes ARP !)S
/F0 SF 0 323.16 M(/proc/sys/net/ipv4/conf/DEV/rp&lowbar;filter)S
/F4 SF 36 309.96 M(Voir la section sur le)S
/F6 SF ( Filtrage de Chemin Inverse>)S
/F4 SF (.)S
/F0 SF 0 296.76 M(/proc/sys/net/ipv4/conf/DEV/secure&lowbar;redirects)S
/F4 SF 36 283.56 M(Accepte les messages de redirection ICMP seulement pour les passerelles indiqu\351es dans la liste des)S
36 270.36 M(passerelles par d\351faut. Activ\351 par d\351faut.)S
/F0 SF 0 257.16 M(/proc/sys/net/ipv4/conf/DEV/send&lowbar;redirects)S
/F4 SF 36 243.96 M(Active la possibilit\351 d'envoyer les messages de redirections mentionn\351es ci-dessus.)S
/F0 SF 0 230.76 M(/proc/sys/net/ipv4/conf/DEV/shared&lowbar;media)S
/F4 SF 36 217.56 M(Si cela n'est pas activ\351, le noyau ne consid\350re pas que diff\351rents sous-r\351seaux peuvent communiquer)S
36 204.36 M(directement sur cette interface. La configuration par d\351faut est )S
/F0 SF (Yes)S
/F4 SF (.)S
/F0 SF 0 191.16 M(/proc/sys/net/ipv4/conf/DEV/tag)S
/F4 SF 36 177.96 M(FIXME: \340 remplir)S
13.2 FS/F9 SF 0 147.36 M(Politique de voisinage)S
11 FS/F0 SF 0 120.52 M(DEV)S
/F4 SF ( peut d\351signer soit une interface r\351elle, soit )S
/F0 SF (all)S
/F4 SF (, soit )S
/F0 SF (default)S
/F4 SF (. )S
/F0 SF (Default)S
/F4 SF ( change \351galement les)S
0 107.32 M(param\350tres des interfaces qui seront cr\351\351es par la suite.)S
/F0 SF 0 80.92 M(/proc/sys/net/ipv4/neigh/DEV/anycast&lowbar;delay)S
/F4 SF 36 67.72 M(Valeur maximum du d\351lai al\351atoire de r\351ponse exprim\351 en)S
/F6 SF ( jiffies)S
/F4 SF ( \(1/100 sec\) aux messages de)S
36 54.52 M(sollicitation des voisins. N'est pas encore impl\351ment\351 \(Linux ne poss\350de pas encore le support)S
/F6 SF 36 41.32 M(anycast)S
/F4 SF (\).)S
/F0 SF 0 28.12 M(/proc/sys/net/ipv4/neigh/DEV/app&lowbar;solicit)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(74)S
331.097 0 M(Configuration des p\351riph\351riques)S
GR
SP
%%Page: (75) 75
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 264.2 M 487.0 2.0 F
11 FS/F4 SF 36 737 M(D\351termine le nombre de requ\352tes \340 envoyer au d\351mon ARP de l'espace utilisateur. Utilisez 0 pour)S
36 723.8 M(d\351sactiver.)S
/F0 SF 0 710.6 M(/proc/sys/net/ipv4/neigh/DEV/base&lowbar;reachable&lowbar;time)S
/F4 SF 36 697.4 M(Une valeur de base utilis\351e pour le calcul du temps al\351atoire d'acc\350s comme sp\351cifi\351 dans le)S
36 684.2 M(RFC2461.)S
/F0 SF 0 671 M(/proc/sys/net/ipv4/neigh/DEV/delay&lowbar;first&lowbar;probe&lowbar;time)S
/F4 SF 36 657.8 M(D\351lai avant de tester pour la premi\350re fois si le voisin peut \352tre atteint. \(voir)S
/F0 SF 36 644.6 M(gc&lowbar;stale&lowbar;time)S
/F4 SF (\))S
/F0 SF 0 631.4 M(/proc/sys/net/ipv4/neigh/DEV/gc&lowbar;stale&lowbar;time)S
/F4 SF 36 618.2 M(D\351termine la fr\351quence \340 laquelle on doit v\351rifier les vieilles entr\351es ARP. Si une entr\351e est obsol\350te,)S
36 605 M(elle devra de nouveau \352tre r\351solue \(ce qui est utile quand une adresse IP a \351t\351 attribu\351e \340 une autre)S
36 591.8 M(machine\). Si )S
/F0 SF (ucast&lowbar;solicit)S
/F4 SF ( est sup\351rieur \340 0, alors on essaie d'abord d'envoyer un)S
36 578.6 M(paquet ARP directement \340 l'h\364te connu. Si cela \351choue, et que )S
/F0 SF (mcast&lowbar;solicit)S
/F4 SF ( est)S
36 565.4 M(sup\351rieur \340 0, alors une requ\352te ARP est multidiffus\351e.)S
/F0 SF 0 552.2 M(/proc/sys/net/ipv4/neigh/DEV/locktime)S
/F4 SF 36 539 M(Une entr\351e ARP n'est remplac\351e par une nouvelle que si l'ancienne est au moins pr\351sente depuis)S
/F0 SF 36 525.8 M(locktime)S
/F4 SF (. Cela \351vite trop d'\351criture dans le cache.)S
/F0 SF 0 512.6 M(/proc/sys/net/ipv4/neigh/DEV/mcast&lowbar;solicit)S
/F4 SF 36 499.4 M(Nombre maximum d'essais cons\351cutifs pour une sollicitation)S
/F6 SF ( multicast)S
/F4 SF (.)S
/F0 SF 0 486.2 M(/proc/sys/net/ipv4/neigh/DEV/proxy&lowbar;delay)S
/F4 SF 36 473 M(Temps maximum \(le temps r\351el est al\351atoire et compris entre 0 et )S
/F0 SF (proxytime)S
/F4 SF (\) avant de r\351pondre \340)S
36 459.8 M(une requ\352te ARP pour laquelle nous avons une entr\351e de proxy ARP. Peut \352tre utilis\351 dans certains)S
36 446.6 M(cas pour se pr\351munir des inondations r\351seaux.)S
/F0 SF 0 433.4 M(/proc/sys/net/ipv4/neigh/DEV/proxy&lowbar;qlen)S
/F4 SF 36 420.2 M(Longueur maximale de la file d'attente du temporisateur de cache arp en attente \(Voir)S
/F0 SF 36 407 M(proxy&lowbar;delay)S
/F4 SF (\).)S
/F0 SF 0 393.8 M(/proc/sys/net/ipv4/neigh/DEV/retrans&lowbar;time)S
/F4 SF 36 380.6 M(Le temps, exprim\351 en)S
/F6 SF ( jiffies)S
/F4 SF ( \(1/100 sec\), entre deux requ\352tes ARP. Utilis\351 pour la r\351solution)S
36 367.4 M(d'adresses et pour d\351terminer si un voisin est inaccessible.)S
/F0 SF 0 354.2 M(/proc/sys/net/ipv4/neigh/DEV/ucast&lowbar;solicit)S
/F4 SF 36 341 M(Nombre maximum de requ\352tes ARP unicast.)S
/F0 SF 0 327.8 M(/proc/sys/net/ipv4/neigh/DEV/unres&lowbar;qlen)S
/F4 SF 36 314.6 M(Longueur maximum de la file d'attente pour la requ\352te ARP en cours : le nombre de paquets qui sont)S
36 301.4 M(accept\351s des autres couches pendant la r\351solution ARP d'une adresse.)S
0 288.2 M(Internet QoS: Architectures and Mechanisms for Quality of Service, Zheng Wang, ISBN 1-55860-608-4)S
36 275 M(Livre traitant des sujets li\351s \340 la qualit\351 de service. Bien pour comprendre les concepts de base.)S
13.2 FS/F9 SF 0 244.4 M(Configuration du routage)S
11 FS/F0 SF 0 217.56 M(/proc/sys/net/ipv4/route/error&lowbar;burst)S
/F4 SF 36 204.36 M(Ces param\350tres sont utilis\351s pour limiter le nombre de messages d'avertissement \351crits dans le journal)S
36 191.16 M(du noyau par le code de routage. Plus le param\350tre )S
/F0 SF (error&lowbar;burst)S
/F4 SF ( est grand, moins il y)S
36 177.96 M(aura de messages. )S
/F0 SF (Error&lowbar;burst)S
/F4 SF ( contr\364le le moment o\371 les messages seront supprim\351s.)S
36 164.76 M(Les configurations par d\351faut se limitent \340 un message d'avertissement toutes les cinq secondes.)S
/F0 SF 0 151.56 M(/proc/sys/net/ipv4/route/error&lowbar;cost)S
/F4 SF 36 138.36 M(Ces param\350tres sont utilis\351s pour limiter le nombre de messages d'avertissement \351crits dans le journal)S
36 125.16 M(du noyau par le code de routage. Plus le param\350tre )S
/F0 SF (error&lowbar;cost)S
/F4 SF ( est grand, moins il y)S
36 111.96 M(aura de messages. )S
/F0 SF (error&lowbar;burst)S
/F4 SF ( contr\364le le moment o\371 les messages seront jet\351s. Les)S
36 98.76 M(configurations par d\351faut se limitent \340 un message d'avertissement toutes les cinq secondes.)S
/F0 SF 0 85.56 M(/proc/sys/net/ipv4/route/flush)S
/F4 SF 36 72.36 M(L'\351criture dans ce fichier provoque la vidange du cache du routage.)S
/F0 SF 0 59.16 M(/proc/sys/net/ipv4/route/gc&lowbar;elasticity)S
/F4 SF 36 45.96 M(Valeurs qui contr\364lent la fr\351quence et le comportement de l'algorithme)S
/F6 SF ( garbage collection)S
/F4 SF ( du cache)S
36 32.76 M(de routage. Ceci peut \352tre important en cas de d\351faut. Au moins )S
/F0 SF (gc&lowbar;timeout)S
/F4 SF ( secondes)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Politique de voisinage)S
474.768 0 M(75)S
GR
SP
%%Page: (76) 76
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 277.4 M 487.0 2.0 F
0 176.98 M 487.0 2.0 F
0 50.372 M 487.0 2.0 F
11 FS/F4 SF 36 737 M(s'\351couleront avant que le noyau ne passe \340 une autre route si la pr\351c\351dente n'est plus op\351rationnelle.)S
36 723.8 M(Configur\351 par d\351faut \340 300. Diminuez cette valeur si vous voulez passer plus rapidement ce type de)S
36 710.6 M(probl\350me.)S
36 684.2 M(Voir aussi  ce message par Ard van Breemen.)S
/F0 SF 0 671 M(/proc/sys/net/ipv4/route/gc&lowbar;interval)S
/F4 SF 36 657.8 M(Voir )S
/F0 SF (/proc/sys/net/ipv4/route/gc&lowbar;elasticity)S
/F4 SF (.)S
/F0 SF 0 644.6 M(/proc/sys/net/ipv4/route/gc&lowbar;min&lowbar;interval)S
/F4 SF 36 631.4 M(Voir )S
/F0 SF (/proc/sys/net/ipv4/route/gc&lowbar;elasticity)S
/F4 SF (.)S
/F0 SF 0 618.2 M(/proc/sys/net/ipv4/route/gc&lowbar;thresh)S
/F4 SF 36 605 M(Voir )S
/F0 SF (/proc/sys/net/ipv4/route/gc&lowbar;elasticity)S
/F4 SF (.)S
/F0 SF 0 591.8 M(/proc/sys/net/ipv4/route/gc&lowbar;timeout)S
/F4 SF 36 578.6 M(Voir )S
/F0 SF (/proc/sys/net/ipv4/route/gc&lowbar;elasticity)S
/F4 SF (.)S
/F0 SF 0 565.4 M(/proc/sys/net/ipv4/route/max&lowbar;delay)S
/F4 SF 36 552.2 M(D\351lai d'attente pour la vidange du cache du routage.)S
/F0 SF 0 539 M(/proc/sys/net/ipv4/route/max&lowbar;size)S
/F4 SF 36 525.8 M(Taille maximum du cache de routage. Les vieilles entr\351es seront purg\351es quand le cache aura atteint)S
36 512.6 M(cette taille.)S
/F0 SF 0 499.4 M(/proc/sys/net/ipv4/route/min&lowbar;adv&lowbar;mss)S
/F4 SF 36 486.2 M(FIXME: \340 remplir)S
/F0 SF 0 473 M(/proc/sys/net/ipv4/route/min&lowbar;delay)S
/F4 SF 36 459.8 M(D\351lai d'attente pour vider le cache de routage.)S
/F0 SF 0 446.6 M(/proc/sys/net/ipv4/route/min&lowbar;pmtu)S
/F4 SF 36 433.4 M(FIXME: \340 remplir)S
/F0 SF 0 420.2 M(/proc/sys/net/ipv4/route/mtu&lowbar;expires)S
/F4 SF 36 407 M(FIXME: \340 remplir)S
/F0 SF 0 393.8 M(/proc/sys/net/ipv4/route/redirect&lowbar;load)S
/F4 SF 36 380.6 M(Facteurs qui d\351terminent si plus de redirections ICMP doivent \352tre envoy\351es \340 un h\364te sp\351cifique.)S
36 367.4 M(Aucune redirection ne sera envoy\351e une fois que la limite de charge \()S
/F6 SF (load limit)S
/F4 SF (\) ou que le nombre)S
36 354.2 M(maximum de redirections aura \351t\351 atteint.)S
/F0 SF 0 341 M(/proc/sys/net/ipv4/route/redirect&lowbar;number)S
/F4 SF 36 327.8 M(Voir )S
/F0 SF (/proc/sys/net/ipv4/route/redirect&lowbar;load)S
/F4 SF (.)S
/F0 SF 0 314.6 M(/proc/sys/net/ipv4/route/redirect&lowbar;silence)S
/F4 SF 36 301.4 M(Temporisation pour les redirections. Au dela de cette p\351riode, les redirections seront de nouveau)S
36 288.2 M(envoy\351es, m\352me si elles ont \351t\351 stopp\351es parce que la charge ou le nombre limite a \351t\351 atteint.)S
19 FS/F9 SF 0 251.792 M(Chapitre 14. Gestionnaires de mise en file d'attente)S
0 228.982 M(avanc\351s & moins communs)S
11 FS/F4 SF 0 200.98 M(Si vous constatez que vous avez des besoins qui ne sont pas g\351r\351s par les files d'attente cit\351es pr\351c\351demment,)S
0 187.78 M(le noyau contient quelques autres files d'attente plus sp\351cialis\351es mentionn\351es ici.)S
15.8 FS/F1 SF 0 154.54 M(bfifo)S
/F9 SF (/)S
/F1 SF (pfifo)S
11 FS/F4 SF 0 127.172 M(Ces files d'attente sans classes sont plus simples que )S
/F0 SF (pfifo&lowbar;fast)S
/F4 SF ( dans la mesure o\371 elles n'ont)S
0 113.972 M(pas de bandes internes, tout le trafic \351tant vraiment \351quivalent. Elles ont cependant l'avantage important de)S
0 100.772 M(r\351aliser des statistiques. Donc, m\352me si vous n'avez pas besoin de mise en forme ou de donner une priorit\351,)S
0 87.572 M(vous pouvez employer ce gestionnaire pour d\351terminer l'arri\351r\351 \()S
/F6 SF (backlog)S
/F4 SF (\) de votre interface.)S
/F0 SF 0 61.172 M(pfifo)S
/F4 SF ( mesure en paquets et )S
/F0 SF (bfifo)S
/F4 SF ( en octets.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(76)S
99.734 0 M(Chapitre 14. Gestionnaires de mise en file d'attente avanc\351s & moins communs)S
GR
SP
%%Page: (77) 77
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 657.56 M 487.0 2.0 F
0 280.152 M 487.0 2.0 F
0 34.744 M 487.0 2.0 F
13.2 FS/F9 SF 0 734.8 M(Param\350tres & usage)S
11 FS/F0 SF 0 707.96 M(limit)S
/F4 SF 36 694.76 M(Sp\351cifie la taille de la file d'attente. Mesur\351e en octets pour )S
/F0 SF (bfifo)S
/F4 SF ( et en paquets pour )S
/F0 SF (pfifo)S
/F4 SF (. Par)S
36 681.56 M(d\351faut, correspond \340 des paquets de taille \351gale au param\350tre )S
/F0 SF (txqueuelen)S
/F4 SF ( de l'interface \(voir le)S
36 668.36 M(chapitre pfifo_fast>\) ou )S
/F0 SF (txqueuelen*mtu)S
/F4 SF ( octets pour )S
/F0 SF (bfifo)S
/F4 SF (.)S
15.8 FS/F9 SF 0 635.12 M(Algorithme Clark-Shenker-Zhang \(CSZ\))S
11 FS/F4 SF 0 607.752 M(Ceci est si th\351orique que m\352me Alexey \(l'auteur principal de CBQ\) pr\351tend ne pas le comprendre. De son)S
0 594.552 M(propre avis :)S
36 554.952 M(David D. Clark, Scott Shenker and Lixia Zhang)S
/F6 SF ( Supporting Real-Time Applications in an)S
36 541.752 M(Integrated Services Packet Network: Architecture and Mechanism)S
/F4 SF (.)S
36 515.352 M(Comme je le comprends, l'id\351e principale est de cr\351er des flux WFQ pour chaque service)S
36 502.152 M(garanti et d'allouer le reste de la bande passante au flux factice, appel\351 )S
/F0 SF (flow-0)S
/F4 SF (. Le Flux-0)S
36 488.952 M(inclut le trafic de service pr\351dictif et le trafic)S
/F6 SF ( best-effort)S
/F4 SF (. Il est trait\351 par un ordonnanceur de)S
36 475.752 M(priorit\351 qui alloue la bande passante de plus grande priorit\351 aux services pr\351dictifs, et le reste)S
36 462.552 M(aux paquets)S
/F6 SF ( best-effort)S
/F4 SF (.)S
36 436.152 M(Notez que dans CSZ, les flux ne sont)S
/F6 SF ( PAS)S
/F4 SF ( limit\351s \340 leur bande passante. On suppose que le)S
36 422.952 M(flux a pass\351 le contr\364le d'admission \340 la fronti\350re du r\351seau QoS et qu'il n'a pas besoin de)S
36 409.752 M(mises en forme suppl\351mentaires. N'importe quelles autres tentatives pour am\351liorer le flux ou)S
36 396.552 M(pour le mettre en forme gr\342ce \340 un seau de jetons lors d'\351tapes interm\351diaires introduiront des)S
36 383.352 M(retards non d\351sir\351s et augmenteront la gigue.)S
36 356.952 M(A l'heure actuelle, CSZ est le seul ordonnanceur qui fournit un v\351ritable service garanti. Les)S
36 343.752 M(autres impl\351mentations \(incluant CBQ\) n'assurent pas un d\351lai garanti et rendent la gigue)S
36 330.552 M(al\351atoire.)S
36 304.152 M(Ne semble pas actuellement un bon candidat \340 utiliser, \340 moins que vous n'ayez lu et compris)S
36 290.952 M(l'article mentionn\351.)S
15.8 FS/F1 SF 0 257.712 M(DSMARK)S
11 FS/F4 SF 36 217.144 M(Esteve Camps)S
/F0 SF 52.5 190.744 M(<marvin@grn.es>)S
52.5 177.544 M(<esteve@hades.udg.es>)S
/F4 SF 36 137.944 M(Ce texte est un extrait de ma th\350se sur le)S
/F6 SF ( support QoS dans Linux)S
/F4 SF (, Septembre 2000.)S
0 111.544 M(Documents sources :)S
36 85.144 M(Draft-almesberger-wajhak-diffserv-linux-01.txt.)S
/F18 SF 28.19 85.144 M(\267 )S
/F4 SF 36 71.944 M(Exemples de la distribution iproute2.)S
/F18 SF 28.19 71.944 M(\267 )S
/F4 SF 36 58.744 M(White Paper-QoS protocols and architectures et  Foires Aux Questions IP QoS, les deux par)S
/F6 SF ( Quality)S
36 45.544 M(of Service Forum)S
/F4 SF (.)S
/F18 SF 28.19 58.744 M(\267 )S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Param\350tres & usage)S
474.768 0 M(77)S
GR
SP
%%Page: (78) 78
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 670.76 M 487.0 2.0 F
0 468.12 M 487.0 2.0 F
0 159.88 M 487.0 2.0 F
13.2 FS/F9 SF 0 734.8 M(Introduction)S
11 FS/F4 SF 0 707.96 M(Avant tout, il serait pr\351f\351rable de lire les RFC \351crits sur ce sujet \(RFC2474, RFC2475, RFC2597 et RFC2598\))S
0 694.76 M(sur le  site web du groupe de travail DiffServ IETF et sur le  site web de Werner Almesberger \(Il a \351crit le)S
0 681.56 M(code permettant le support des Services Diff\351renci\351s sous Linux\).)S
13.2 FS/F9 SF 0 650.96 M(A quoi )S
/F1 SF (DSMARK)S
/F9 SF ( est-il reli\351 ?)S
11 FS/F0 SF 0 624.12 M(DSMARK)S
/F4 SF ( est un gestionnaire de mise en file d'attente qui offre les fonctionnalit\351s dont ont besoin les services)S
0 610.92 M(diff\351renci\351s \()S
/F6 SF (Differentiated Services)S
/F4 SF (\) \(\351galement appel\351s DiffServ ou tout simplement DS\).)S
/F6 SF ( DiffServ)S
/F4 SF ( est l'une)S
0 597.72 M(des deux architectures actuelles de la Qualit\351 de Services \(QoS :)S
/F6 SF ( Quality of Services)S
/F4 SF (\) \(l'autre est appel\351e)S
/F6 SF 0 584.52 M(services int\351gr\351s)S
/F4 SF ( \()S
/F6 SF (Integrated Services)S
/F4 SF (\). Elle se base sur la valeur du champ DS contenu dans l'en-t\352te IP du)S
0 571.32 M(paquet.)S
0 544.92 M(Une des premi\350res solutions dans IP pour offrir des niveaux de qualit\351 de services \351tait le champ)S
/F6 SF ( Type de)S
0 531.72 M(Service)S
/F4 SF ( \(octet TOS\) de l'en-t\352te IP. En modifiant la valeur de ce champ, nous pouvions choisir un niveau)S
0 518.52 M(\351lev\351/faible du d\351bit, du d\351lai ou de la fiabilit\351. Cependant, cela ne fournissait pas une flexibilit\351 suffisante)S
0 505.32 M(pour les besoins de nouveaux services \(comme les applications temps r\351el, les applications interactives et)S
0 492.12 M(autres\). Par la suite, de nouvelles architectures sont apparues. L'une d'elle a \351t\351)S
/F6 SF ( DiffServ)S
/F4 SF ( qui a gard\351 les bits)S
0 478.92 M(TOS et les a renomm\351s champ DS.)S
13.2 FS/F9 SF 0 448.32 M(Guide des services diff\351renci\351s)S
11 FS/F4 SF 0 421.48 M(Les services diff\351renci\351s sont orient\351s groupes. Cela signifie que nous ne savons rien des flux \(ce sera le but)S
0 408.28 M(des services int\351gr\351s \()S
/F6 SF (integrated Services)S
/F4 SF (\)\). Nous connaissons par contre les agr\351gations de flux et nous)S
0 395.08 M(adopterons des comportements diff\351rents suivant l'agr\351gation \340 laquelle appartient le paquet.)S
0 368.68 M(Quand un paquet arrive \340 un noeud frontalier \(noeud d'entr\351e du domaine DiffServ\) et entre dans un domaine)S
0 355.48 M(DiffServ, nous devrons avoir une politique, une mise en forme et/ou un marquage de ces paquets \(le marquage)S
0 342.28 M(fait r\351f\351rence \340 la mise en place d'une valeur dans le champ DS. Comme on le ferait pour des vaches :-\)\). Ce)S
0 329.08 M(sera cette marque/valeur que les noeuds internes de votre domaine DiffServ regarderons pour d\351terminer quel)S
0 315.88 M(comportement ou niveau de qualit\351 de service appliquer.)S
0 289.48 M(Comme vous pouvez le d\351duire, les Services Diff\351renci\351s impliquent un domaine sur lequel toutes les r\350gles)S
0 276.28 M(DS devront \352tre appliqu\351es. Vous pouvez raisonner de la fa\347on suivante : << Je classifierai tous les paquets)S
0 263.08 M(entrant dans mon domaine. Une fois qu'ils seront entr\351s dans mon domaine, ils seront soumis aux r\350gles que)S
0 249.88 M(ma classification impose et chaque noeud travers\351 appliquera son niveau de qualit\351 de service >>.)S
0 223.48 M(En fait, vous pouvez appliquer vos propres politiques dans vos domaines locaux, mais des)S
/F6 SF ( autorisations au)S
0 210.28 M(niveau service)S
/F4 SF ( devront \352tre consid\351r\351es lors de la connexion \340 d'autres domaines DS.)S
0 183.88 M(En ce moment, vous vous posez peut-\352tre beaucoup de questions. DiffServ est plus vaste que ce que j'ai)S
0 170.68 M(expliqu\351. En fait, vous pouvez comprendre que je ne peux pas r\351sumer plus de trois RFC en 50 lignes :-\).)S
13.2 FS/F9 SF 0 140.08 M(Travailler avec )S
/F1 SF (DSMARK)S
11 FS/F4 SF 0 113.24 M(Comme le sp\351cifie la bibliographie concernant DiffServ, nous diff\351rencions les noeuds frontaliers et les)S
0 100.04 M(noeuds int\351rieurs. Ce sont deux \351l\351ments importants dans le chemin qu'emprunte le trafic. Les deux r\351alisent)S
0 86.84 M(une classification quand un paquet arrive. Le r\351sultat peut \352tre utilis\351 \340 diff\351rents endroits lors du processus)S
0 73.64 M(DS avant que le paquet ne soit lib\351r\351 vers le r\351seau. Cela est possible car le nouveau code DiffServ fournit une)S
0 60.44 M(structure appel\351e )S
/F0 SF (sk&lowbar;buff)S
/F4 SF (, incluant un nouveau champ appel\351 )S
/F0 SF (skb->tcindex)S
/F4 SF (. Ce champ)S
0 47.24 M(m\351morisera le r\351sultat de la classification initiale et pourra \352tre utilis\351 \340 plusieurs reprises dans le traitement)S
0 34.04 M(DS.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(78)S
429.525 0 M(Introduction)S
GR
SP
%%Page: (79) 79
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 504 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(La valeur )S
/F0 SF (skb->tc&lowbar;index)S
/F4 SF ( sera initialement configur\351e par le gestionnaire de mise en file)S
0 723.8 M(d'attente )S
/F0 SF (DSMARK)S
/F4 SF (. Cette valeur sera extraite du champ DS de l'en-t\352te IP de tous les paquets re\347us. En outre,)S
0 710.6 M(le classificateur )S
/F0 SF (cls&lowbar;tcindex)S
/F4 SF ( lira tout ou une partie de la valeur )S
/F0 SF (skb->tcindex)S
/F4 SF ( et l'utilisera)S
0 697.4 M(pour s\351lectionner les classes.)S
0 671 M(Mais, avant tout, regardons la commande)S
/F5 SF ( qdisc DSMARK)S
/F4 SF ( et ses param\350tres :)S
9.2 FS/F0 SF 0 646.433 M(... dsmark indices INDICES [ default_index DEFAULT_INDEX ] [ set_tc_index ])S
11 FS/F4 SF 0 620.4 M(Que signifient ces param\350tres ?)S
/F0 SF 36 594 M(indices)S
/F4 SF ( : taille de la table des couples \(masque,valeur\). La valeur maximum est )S
/F0 SF (2\200n)S
/F4 SF (, o\371 )S
/F0 SF (n>=0)S
/F4 SF (.)S
/F18 SF 28.19 594 M(\267 )S
/F0 SF 36 580.8 M(default&lowbar;index)S
/F4 SF ( : index d'entr\351e par d\351faut de la table si aucune correspondance n'est)S
36 567.6 M(trouv\351e.)S
/F18 SF 28.19 580.8 M(\267 )S
/F0 SF 36 554.4 M(set&lowbar;tc&lowbar;index)S
/F4 SF ( : indique au gestionnaire )S
/F0 SF (DSMARK)S
/F4 SF ( de r\351cup\351rer le champs DS)S
36 541.2 M(et de l'enregistrer dans )S
/F0 SF (skb->tc&lowbar;index)S
/F4 SF (.)S
/F18 SF 28.19 554.4 M(\267 )S
/F4 SF 0 514.8 M(Regardons )S
/F0 SF (DSMARK)S
/F4 SF ( proc\351der.)S
13.2 FS/F9 SF 0 484.2 M(Comment )S
/F1 SF (SCH&lowbar;DSMARK)S
/F9 SF ( travaille.)S
11 FS/F4 SF 0 457.36 M(Ce gestionnaire de mise en file d'attente r\351alisera les \351tapes suivantes :)S
36 430.96 M(Si vous avez d\351clar\351 l'option )S
/F0 SF (set&lowbar;tc&lowbar;index)S
/F4 SF ( dans la commande)S
/F5 SF ( qdisc)S
/F4 SF (, le)S
36 417.76 M(champ DS est r\351cup\351r\351 et m\351moris\351 dans la variable )S
/F0 SF (skb->tc&lowbar;index)S
/F4 SF (.)S
/F18 SF 28.19 430.96 M(\267 )S
/F4 SF 36 404.56 M(Le classificateur est invoqu\351. Celui-ci sera ex\351cut\351 et retournera un identificateur de classe \()S
/F6 SF (class ID)S
/F4 SF (\))S
36 391.36 M(qui sera enregistr\351 dans la variable )S
/F0 SF (skb->tc&lowbar;index)S
/F4 SF (. Si aucun filtre correspondant n'est)S
36 378.16 M(trouv\351, nous consid\351rons l'option )S
/F0 SF (default&lowbar;index)S
/F4 SF ( comme \351tant l'identificateur de classe)S
36 364.96 M(\340 enregistrer. Si, ni )S
/F0 SF (set&lowbar;tc&lowbar;index)S
/F4 SF (, ni )S
/F0 SF (default&lowbar;index)S
/F4 SF ( n'ont \351t\351)S
36 351.76 M(d\351clar\351s, alors les r\351sultats peuvent \352tre non pr\351dictifs.)S
/F18 SF 28.19 404.56 M(\267 )S
/F4 SF 36 338.56 M(Apr\350s avoir \351t\351 envoy\351 dans le gestionnaire de file d'attente interne, o\371 le r\351sultat du filtre peut \352tre)S
36 325.36 M(r\351utilis\351, l'identificateur de classe retourn\351 par le gestionnaire est stock\351 dans la variable)S
/F0 SF 36 312.16 M(skb->tc&lowbar;index)S
/F4 SF (. Cette valeur sera utilis\351e plus tard pour indexer la table masque-valeur.)S
36 298.96 M(Le r\351sultat de l'op\351ration suivante sera assign\351 au paquet :)S
9.2 FS/F0 SF 36 274.393 M(  Nouveau_champ_DS = \( Ancien_champ_DS & masque \) | valeur)S
11 FS/F18 SF 28.19 338.56 M(\267 )S
/F4 SF 36 250.56 M(La nouvelle valeur r\351sultera donc d'un ET logique entre les valeurs du champ&lowbar;DS et du)S
36 237.36 M(masque, suivi d'un OU logique avec le param\350tre valeur. Regardez la figure suivante pour)S
36 224.16 M(comprendre tout ce processus :)S
/F18 SF 28.19 250.56 M(\267 )S
9.2 FS/F0 SF 0 199.593 M(                         skb->ihp->tos)S
0 188.593 M(- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - >)S
0 177.593 M(     |                                                       |     ^)S
0 166.593 M(     | -- Si vous d\351clarez set_tc_index, nous configurons    |     |  <-----Peut changer)S
0 155.593 M(     |    la valeur DS dans la variable skb->tc_index        |     |O       le champ DS)S
0 144.593 M(     |                                                      A|     |R)S
0 133.593 M(   +-|-+      +------+    +---+-+  File d'attente-+     +---N|-----|----+)S
0 122.593 M(   | | |      |filtre|--->|   | |-->  . . .  -->| |     |   D|     |    |)S
0 111.593 M(   | | |----->|  tc  |--->|   | |   interne     | |---->|    v     |    |)S
0 100.593 M(   | | |      |index |--->| | | +---------------+ |   ---->\(masque,valeur\)|)S
0 89.593 M(-->| O |      +------+    +-|-+--------------^----+  /  |  \(.  ,  .\)    |)S
0 78.593 M(   | | |          ^         |                |       |  |  \(.  ,  .\)    |)S
0 67.593 M(   | | +----------|---------|----------------|-------|--+  \(.  ,  .\)    |)S
0 56.593 M(   | | sch_dsmark |         |                |       |                  |)S
0 45.593 M(   +-|------------|---------|----------------|-------|------------------+)S
0 34.593 M(     |            |         | <- tc_index -> |       |)S
0 23.593 M(     |            |\(lecture\)|   peut changer |       |  <--------------Index de la table)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Travailler avec DSMARK)S
474.768 0 M(79)S
GR
SP
%%Page: (80) 80
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 526 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(     |            |         |                |       |                    des couples )S
0 727.833 M(     v            |         v                v       |                    \(masque,valeur\))S
0 716.833 M(- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ->)S
0 705.833 M(                         skb->tc_index)S
11 FS/F4 SF 0 679.8 M(Comment faire le marquage ? Il suffit de modifier le masque et la valeur associ\351s \340 la classe que vous voulez)S
0 666.6 M(marquer. Regardez la ligne de code suivante :)S
9.2 FS/F0 SF 0 642.033 M(tc class change dev eth0 classid 1:1 dsmark mask 0x3 value 0xb8)S
11 FS/F4 SF 0 616 M(Cela modifie le couple \(masque,valeur\) dans la table de hachage, et re-marque les paquets appartenant \340 la)S
0 602.8 M(classe 1:1. Vous devez "changer" ces valeurs en raison des valeurs par d\351faut que le couple \(masque, valeur\))S
0 589.6 M(obtient initialement \(voir le tableau ci-dessous\).)S
0 563.2 M(Nous allons maintenant expliquer comment le filtre TC&lowbar;INDEX travaille, et comment il s'int\350gre)S
0 550 M(dans tout cela. En outre, le filtre TC&lowbar;INDEX peut \352tre utilis\351 dans des configurations autres que celles)S
0 536.8 M(incluant les services DS.)S
13.2 FS/F9 SF 0 506.2 M(Le filtre TC&lowbar;INDEX)S
11 FS/F4 SF 0 479.36 M(Voici la commande de base pour d\351clarer un filtre TC&lowbar;INDEX :)S
9.2 FS/F0 SF 0 454.793 M(... tcindex [ hash SIZE ] [ mask MASK ] [ shift SHIFT ])S
0 443.793 M(            [ pass_on | fall_through ])S
0 432.793 M(            [ classid CLASSID ] [ police POLICE_SPEC ])S
11 FS/F4 SF 0 406.76 M(Ensuite, nous montrons l'exemple utilis\351 pour expliquer le mode op\351ratoire de TC&lowbar;INDEX. Soyez)S
0 393.56 M(attentif aux mots en gras : tc qdisc add dev eth0 handle 1:0 root dsmark indices 64)S
/F6 SF 0 380.36 M(set&lowbar;tc&lowbar;index)S
/F4 SF ( tc filter add dev eth0 parent 1:0 protocol ip prio 1 tcindex)S
/F6 SF ( mask 0xfc shift 2)S
/F4 SF ( tc)S
0 367.16 M(qdisc add dev eth0 parent 1:0 handle 2:0 cbq bandwidth 10Mbit cell 8 avpkt 1000 mpu 64 &num; Classe du)S
0 353.96 M(trafic EF tc class add dev eth0 parent 2:0 classid 2:1 cbq bandwidth 10Mbit rate 1500Kbit avpkt 1000 prio 1)S
0 340.76 M(bounded isolated allot 1514 weight 1 maxburst 10 &num; Gestionnaire de file d'attente fifo pour le trafic EF)S
0 327.56 M(tc qdisc add dev eth0 parent 2:1 pfifo limit 5 tc filter add dev eth0 parent 2:0 protocol ip prio 1)S
/F6 SF ( handle 0x2e)S
/F4 SF 0 314.36 M(tcindex)S
/F6 SF ( classid 2:1 pass&lowbar;on)S
/F4 SF ( \(Ce code n'est pas complet. Ce n'est qu'un extrait de l'exemple EFCBQ)S
0 301.16 M(inclus dans la distribution iproute2\).)S
0 274.76 M(Avant tout, supposons que nous recevons un paquet marqu\351 comme EF. Si vous lisez le RFC2598, vous)S
0 261.56 M(verrez que DSCP recommande une valeur de 101110 pour le trafic EF. Cela signifie que le champ DS sera)S
0 248.36 M(\351gal \340 10111000 \(rappelez- vous que les bits les moins significatifs de l'octet TOS ne sont pas utilis\351s dans)S
0 235.16 M(DS\) ou 0xb8 en notation hexad\351cimale.)S
9.2 FS/F0 SF 0 184.193 M(              FILTRE)S
0 173.193 M(              TC INDEX)S
0 162.193 M(   +---+      +-------+    +---+-+    +------+                +-+    +-------+)S
0 151.193 M(   |   |      |       |    |   | |    |FILTRE|  +-+    +-+    | |    |       |)S
0 140.193 M(   |   |----->| MASK  | -> |   | | -> |HANDLE|->| |    | | -> | | -> |       |)S
0 129.193 M(   |   |  .   | =0xfc |    |   | |    |0x2E  |  | +----+ |    | |    |       |)S
0 118.193 M(   |   |  .   |       |    |   | |    +------+  +--------+    | |    |       |)S
0 107.193 M(   |   |  .   |       |    |   | |                            | |    |       |)S
0 96.193 M(-->|   |  .   | SHIFT |    |   | |                            | |    |       |-->)S
0 85.193 M(   |   |  .   | =2    |    |   | +----------------------------+ |    |       |)S
0 74.193 M(   |   |      |       |    |   |       CBQ 2:0                  |    |       |)S
0 63.193 M(   |   |      +-------+    +---+--------------------------------+    |       |)S
0 52.193 M(   |   |                                                             |       |)S
0 41.193 M(   |   +-------------------------------------------------------------+       |)S
0 30.193 M(   |                          DSMARK 1:0                                     |)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(80)S
279.188 0 M(Comment SCH&lowbar;DSMARK travaille.)S
GR
SP
%%Page: (81) 81
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 9.2 FS/F0 SF 0 738.833 M(   +-------------------------------------------------------------------------+)S
11 FS/F4 SF 0 686.4 M(Le paquet arrive alors avec la valeur du champ DS configur\351e \340 0xb8. Comme je l'ai expliqu\351 auparavant, le)S
0 673.2 M(gestionnaire de mise en file d'attente dsmark, identifi\351 par 1:0 dans cet exemple, r\351cup\350re le champ DS et)S
0 660 M(l'enregistre dans la variable skb->tc&lowbar;index. L'\351tape suivante consistera \340 associer un filtre \340 ce)S
0 646.8 M(gestionnaire de mise en file d'attente \(la seconde ligne dans cet exemple\). Les op\351rations suivantes seront)S
0 633.6 M(r\351alis\351es :)S
9.2 FS/F0 SF 0 609.033 M(Valeur1 = skb->tc_index & MASK)S
0 598.033 M(Cl\351 = Valeur1 >> SHIFT)S
11 FS/F4 SF 0 545.6 M(Dans cet exemple, MASK=0xFC et SHIFT=2.)S
9.2 FS/F0 SF 0 521.033 M(Valeur1 = 10111000 & 11111100 = 10111000)S
0 510.033 M(Cl\351 = 10111000 >> 2 = 00101110 -> 0x2E en hexad\351cimal)S
11 FS/F4 SF 0 457.6 M(La valeur retourn\351e correspondra \340 un identificateur de filtre du gestionnaire de file d'attente interne \(dans)S
0 444.4 M(l'exemple, identifier par 2:0\). Si un filtre avec cet identificateur \(id\) existe, les conditions de contr\364le et de)S
0 431.2 M(performance seront v\351rifi\351es \(au cas o\371 le filtre inclurait ceci\) et l'identificateur de classe sera retourn\351 \(dans)S
0 418 M(notre exemple, classid 2:1\) et stock\351 dans la variable skb->tc&lowbar;index.)S
0 391.6 M(Si aucun filtre avec cet identificateur n'est trouv\351, le r\351sultat d\351pendra de la d\351claration de l'option)S
0 378.4 M(fall&lowbar;through. Si tel est le cas, la valeur Cl\351 est retourn\351e comme identificateur de classe. Si cela n'est)S
0 365.2 M(pas le cas, une erreur est retourn\351e et le traitement continue avec les filtres restant. Faites attention si vous)S
0 352 M(utilisez l'option fall&lowbar;through ; ceci ne peut \352tre fait que si une relation existe entre les valeurs de la)S
0 338.8 M(variable skb->tc&lowbar;index et les identificateurs de classe.)S
0 312.4 M(Les derniers param\350tres \340 commenter sont hash et pass&lowbar;on. Le premier est reli\351 \340 la taille de la table)S
0 299.2 M(de hachage. Pass&lowbar;on sera utilis\351 pour indiquer d'essayer le filtre suivant dans le cas o\371 aucun)S
0 286 M(identificateur de classe \351gal au r\351sultat du filtre ne serait trouv\351. L'action par d\351faut est fall&lowbar;through)S
0 272.8 M(\(regarder la table suivante\).)S
0 246.4 M(Finalement, regardons quelles sont les valeurs possibles pour la configuration de tous ces param\350tres)S
0 233.2 M(TCINDEX :)S
9.2 FS/F0 SF 0 208.633 M(Nom TC                  Valeur          D\351faut)S
0 197.633 M(-----------------------------------------------------------------)S
0 186.633 M(Hash                    1...0x10000     D\351pendant de l'impl\351mentation)S
0 175.633 M(Mask                    0...0xffff      0xffff)S
0 164.633 M(Shift                   0...15          0)S
0 153.633 M(Fall through / Pass_on  Flag            Fall_through)S
0 142.633 M(Classid                 Major:minor     Rien)S
0 131.633 M(Police                  .....           Rien)S
11 FS/F4 SF 0 79.2 M(Ce type de filtre est tr\350s puissant. Il est n\351cessaire d'explorer toutes les possibilit\351s. En outre, ce filtre n'est pas)S
0 66 M(seulement utilis\351 dans les configurations DiffServ. Vous pouvez l'utiliser comme n'importe quel autre filtre.)S
0 39.6 M(Je vous recommande de regarder les exemples DiffServ inclus dans la distribution iproute2. Je vous promets)S
0 26.4 M(que j'essaierai de compl\351ter ce texte d\350s que possible. Tout ce que j'ai expliqu\351 est le r\351sultat de nombreux)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Le filtre TC&lowbar;INDEX)S
474.768 0 M(81)S
GR
SP
%%Page: (82) 82
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 726.2 M 487.0 2.0 F
0 546.792 M 487.0 2.0 F
0 372.752 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(tests. Merci de me dire si je me suis tromp\351 quelque part.)S
15.8 FS/F9 SF 0 703.76 M(Gestionnaire de mise en file d'attente d'entr\351e \()S
/Fb SF (Ingress qdisc)S
/F9 SF (\))S
11 FS/F4 SF 0 676.392 M(Tous les gestionnaires de mise en file d'attente dont nous avons discut\351 jusqu'ici sont des gestionnaires de)S
0 663.192 M(sortie. Chaque interface peut \351galement avoir un gestionnaire de mise en file d'attente d'entr\351e qui n'est pas)S
0 649.992 M(utilis\351 pour envoyer les paquets \340 l'ext\351rieur du p\351riph\351rique r\351seau. Au lieu de cela, il vous autorise \340)S
0 636.792 M(appliquer des filtres tc aux paquets entrants par l'interface, ind\351pendamment de s'ils ont une destination locale)S
0 623.592 M(ou s'ils sont destin\351s \340 \352tre transmis.)S
0 597.192 M(Etant donn\351 que les filtres tc contiennent une impl\351mentation compl\350te du Filtre \340 Seau de Jetons, et qu'ils)S
0 583.992 M(sont \351galement capables de s'appuyer sur l'estimation du flux fourni par le noyau, il y a beaucoup de)S
0 570.792 M(fonctionnalit\351s disponibles. Ceci vous permet de r\351glementer le trafic entrant de fa\347on efficace, avant m\352me)S
0 557.592 M(qu'il n'entre dans la pile IP.)S
13.2 FS/F9 SF 0 526.992 M(Param\350tres & usage)S
11 FS/F4 SF 0 500.152 M(Le gestionnaire de mise en file d'attente d'entr\351e ne n\351cessite pas de param\350tres. Il diff\350re des autres)S
0 486.952 M(gestionnaires dans le fait qu'il n'occupe pas la racine du p\351riph\351rique. Attachez-le comme ceci :)S
9.2 FS/F0 SF 0 462.385 M(# tc qdisc add dev eth0 ingress)S
11 FS/F4 SF 0 436.352 M(Ceci vous autorise \340 avoir d'autres gestionnaires de sortie sur votre p\351riph\351rique en plus du gestionnaire)S
0 423.152 M(d'entr\351e.)S
0 396.752 M(Pour un exemple invent\351 sur la fa\347on dont le gestionnaire d'entr\351e peut \352tre utilis\351, voir le chapitre Recettes de)S
0 383.552 M(cuisine.)S
15.8 FS/Fb SF 0 350.312 M(Random Early Detection)S
/F9 SF ( \(RED\))S
11 FS/F4 SF 0 322.944 M(Ce chapitre est con\347u comme une introduction au routage de dorsales \(backbones\). Ces liaisons impliquent)S
0 309.744 M(souvent des bandes passantes sup\351rieures \340 100 m\351gabits/s, ce qui n\351cessite une approche diff\351rente de celle)S
0 296.544 M(de votre modem ADSL \340 la maison.)S
0 270.144 M(Le comportement normal des files d'attente de routeurs est appel\351 "tail-drop" \(NdT : \351limine le reste\). Le)S
0 256.944 M("tail-drop" consiste \340 mettre en file d'attente un certain volume de trafic et \340 \351liminer tout ce qui d\351borde. Ce)S
0 243.744 M(n'est pas du tout \351quitable et cela conduit \340 des retransmissions de synchronisation. Quand une retransmission)S
0 230.544 M(de synchronisation a lieu, la brusque rafale de rejet d'un routeur qui a atteint sa limite entra\356nera une rafale de)S
0 217.344 M(retransmissions retard\351e qui inondera \340 nouveau le routeur congestionn\351.)S
0 190.944 M(Dans le but d'en finir avec les congestions occasionnelles des liens, les routeurs de dorsales int\350grent souvent)S
0 177.744 M(des files d'attente de grande taille. Malheureusement, bien que ces files d'attente offrent un bon d\351bit, elles)S
0 164.544 M(peuvent augmenter sensiblement les temps de latence et entra\356ner un comportement tr\350s saccad\351 des)S
0 151.344 M(connexions TCP pendant la congestion.)S
0 124.944 M(Ces probl\350mes avec le "tail-drop" deviennent de plus en plus pr\351occupants avec l'augmentation de l'utilisation)S
0 111.744 M(d'applications hostiles au r\351seau. Le noyau Linux nous offre la technique RED, abr\351viation de Random Early)S
0 98.544 M(Detect ou d\351tection pr\351coce directe.)S
0 72.144 M(RED n'est pas la solution miracle \340 tous ces probl\350mes. Les applications qui n'int\350grent pas correctement la)S
0 58.944 M(technique de "l'exponential backoff" obtiennent toujours une part trop grande de bande passante. Cependant,)S
0 45.744 M(avec la technique RED elles ne provoquent pas trop de d\351g\342ts sur le d\351bit et les temps de latence des autres)S
0 32.544 M(connexions.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(82)S
188.108 0 M(Gestionnaire de mise en file d'attente d'entr\351e \(Ingress qdisc\))S
GR
SP
%%Page: (83) 83
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 290.6 M 487.0 2.0 F
0 150.792 M 487.0 2.0 F
0 50.584 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(RED \351limine statistiquement des paquets du flux avant qu'il n'atteigne sa limite "dure" \(hard\). Sur une dorsale)S
0 723.8 M(congestionn\351e, cela entra\356ne un ralentissement en douceur de la liaison et \351vite les retransmissions de)S
0 710.6 M(synchronisation. La technique RED aide aussi TCP \340 trouver une vitesse "\351quitable" plus rapidement : en)S
0 697.4 M(permettant d'\351liminer des paquets plus t\364t, il conserve une file d'attente plus courte et des temps de latence)S
0 684.2 M(mieux contr\364l\351s. La probabilit\351 qu'un paquet soit \351limin\351 d'une connexion particuli\350re est proportionnelle \340 la)S
0 671 M(bande passante utilis\351e par cette connexion plut\364t qu'au nombre de paquets qu'elle envoie.)S
0 644.6 M(La technique RED est une bonne gestion de file d'attente pour les dorsales, o\371 vous ne pouvez pas vous)S
0 631.4 M(permettre le co\373t d'une m\351morisation d'\351tat par session qui est n\351cessaire pour une mise en file d'attente)S
0 618.2 M(vraiment \351quitable.)S
0 591.8 M(Pour utiliser RED, vous devez r\351gler trois param\350tres : Min, Max et burst. Min est la taille minimum de la file)S
0 578.6 M(d'attente en octets avant que les rejets n'aient lieu, Max est le maximum "doux" \(soft\) en dessous duquel)S
0 565.4 M(l'algorithme s'efforcera de rester, et burst est le nombre maximum de paquets envoy\351s "en rafale".)S
0 539 M(Vous devriez configurer Min en calculant le plus grand temps de latence acceptable pour la mise en file)S
0 525.8 M(d'attente, multipli\351 par votre bande passante. Par exemple, sur mon lien ISDN \340 64 Kbits/s, je voudrais avoir)S
0 512.6 M(un temps de latence de base de mise en file d'attente de 200 ms. Je configure donc Min \340 1600 octets \(= 0,2 x)S
0 499.4 M(64000 / 8\). Imposer une valeur Min trop petite va d\351grader le d\351bit et une valeur Min trop grande va d\351grader)S
0 486.2 M(le temps de latence. Sur une liaison lente, choisir un coefficient Min petit ne peut pas remplacer une r\351duction)S
0 473 M(du MTU pour am\351liorer les temps de r\351ponse.)S
0 446.6 M(Vous devriez configurer Max \340 au moins deux fois Min pour \351viter les synchronisations. Sur des liens lents)S
0 433.4 M(avec de petites valeurs de Min, il peut \352tre prudent d'avoir Max quatre fois plus grand que Min ou plus.)S
0 407 M(Burst contr\364le la r\351ponse de l'algorithme RED aux rafales. Burst doit \352tre choisi plus grand que min/avpkt)S
0 393.8 M(\(paquet moyen\). Exp\351rimentalement, j'ai trouv\351 que \(min+min+max\)/\(3*avpkt\) marche bien.)S
0 367.4 M(De plus, vous devez configurer limit et avpkt. Limit est une valeur de s\351curit\351 : s'il y a plus de Limit octets)S
0 354.2 M(dans la file, RED reprend la technique "tail-drop". Je choisis une valeur typique \351gale \340 8 fois Max. Avpkt)S
0 341 M(devrait \352tre fix\351 \340 la taille moyenne d'un paquet. 1000 fonctionne correctement sur des liaisons Internet haut)S
0 327.8 M(d\351bit ayant un MTU de 1500 octets.)S
0 301.4 M(Lire l'article sur la file d'attente RED par Sally Floyd et Van Jacobson pour les informations techniques.)S
15.8 FS/F9 SF 0 268.16 M(Generic Random Early Detection)S
11 FS/F4 SF 0 240.792 M(Il n'y a pas grand chose de connu sur GRED. Il ressemble \340 GRED avec plusieurs files d'attente internes,)S
0 227.592 M(celles-ci \351tant choisies en se basant sur le champ tcindex de Diffserv. Selon une diapositive trouv\351e ici, il)S
0 214.392 M(poss\350de les capacit\351s)S
/F6 SF ( Distributed Weighted RED)S
/F4 SF ( de Cisco, ainsi que les capacit\351s RIO de Clark.)S
0 187.992 M(Chaque file d'attente virtuelle peut avoir ses propres "Drop Parameters".)S
0 161.592 M(FIXME: Demandez \340 Jamal or Werner de nous en dire plus)S
15.8 FS/F9 SF 0 128.352 M(Emulation VC/ATM)S
11 FS/F4 SF 0 100.984 M(Ceci est l'effort principal de Werner Almesberger pour vous autoriser \340 construire des circuits virtuels)S
0 87.784 M(au-dessus des sockets TCP/IP. Le circuit virtuel est un concept venant de la th\351orie des r\351seaux ATM.)S
0 61.384 M(Pour plus d'informations, voir la page ATM sur Linux.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Random Early Detection \(RED\))S
474.768 0 M(83)S
GR
SP
%%Page: (84) 84
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 456.392 M 487.0 2.0 F
0 378.782 M 487.0 2.0 F
15.8 FS/F9 SF 0 732.16 M(Weighted Round Robin \(WRR\))S
11 FS/F4 SF 0 704.792 M(Ce gestionnaire de mise en file d'attente n'est pas inclus dans les noyaux standards, mais peut \352tre t\351l\351charg\351e)S
0 691.592 M(\340 partir de ce lien. Ce gestionnaire de mise en file d'attente n'a \351t\351 test\351 qu'avec les noyaux 2.2, mais marchera)S
0 678.392 M(probablement \351galement avec les noyaux 2.4/2.5.)S
0 651.992 M(La file d'attente WRR partage la bande passante entre ses classes en utilisant la technique du tourniquet)S
0 638.792 M(pond\351r\351. Ceci est similaire \340 la file d'attente CBQ qui contient des classes sur lesquelles l'on peut associer)S
0 625.592 M(arbitrairement des files d'attente. Toutes les classes qui ont suffisamment de demandes obtiendront la bande)S
0 612.392 M(passante proportionnellement au poids associ\351 des classes. Les poids peuvent \352tre configur\351s manuellement en)S
0 599.192 M(utilisant le programme )S
/F0 SF (tc)S
/F4 SF (. Ils peuvent \351galement \352tre configur\351s pour d\351cro\356tre automatiquement pour les)S
0 585.992 M(classes transf\351rant moins de donn\351es.)S
0 559.592 M(La file d'attente a un classificateur int\351gr\351 qui assigne les paquets venant ou allant vers diff\351rentes machines \340)S
0 546.392 M(diff\351rentes classes. On peut utiliser soit l'adresse MAC soit l'adresse IP de l'adresse source ou de destination.)S
0 533.192 M(L'adresse MAC ne peut cependant \352tre utilis\351e que quand la boite Linux est un pont ethernet. Les classes sont)S
0 519.992 M(automatiquement assign\351es aux machines en fonction des paquets vus.)S
0 493.592 M(Ce gestionnaire de mise en file d'attente peut \352tre tr\350s utile au site comme les r\351sidences \351tudiantes o\371 des)S
0 480.392 M(individus sans liens particuliers partagent une connexion Internet. Un ensemble de scripts pour configurer un)S
0 467.192 M(tel cas de figure pour ce genre de site est propos\351 dans la distribution WRR.)S
19 FS/F9 SF 0 430.784 M(Chapitre 15. Recettes de cuisine)S
11 FS/F4 SF 0 402.782 M(Cette section contient des << recettes de cuisine >> qui peuvent vous aider \340 r\351soudre vos probl\350mes. Un livre)S
0 389.582 M(de cuisine ne remplace cependant pas une r\351elle compr\351hension, essayez donc d'assimiler ce qui suit.)S
15.8 FS/F9 SF 0 356.342 M(Faire tourner plusieurs sites avec diff\351rentes SLA)S
0 337.334 M(\(autorisations\))S
11 FS/F4 SF 0 309.966 M(Vous pouvez faire cela de plusieurs mani\350res. Apache poss\350de un module qui permet de le supporter, mais)S
0 296.766 M(nous montrerons comment Linux peut le faire pour d'autres services. Les commandes ont \351t\351 reprises d'une)S
0 283.566 M(pr\351sentation de Jamal Hadi, dont la r\351f\351rence est fournie ci-dessous.)S
0 257.166 M(Disons que nous avons deux clients avec : http, ftp et du streaming audio. Nous voulons leur vendre une)S
0 243.966 M(largeur de bande passante limit\351e. Nous le ferons sur le serveur lui-m\352me.)S
0 217.566 M(Le client )S
/F0 SF (A)S
/F4 SF ( doit disposer d'au moins 2 m\351gabits, et le client )S
/F0 SF (B)S
/F4 SF ( a pay\351 pour 5 m\351gabits. Nous s\351parons nos)S
0 204.366 M(clients en cr\351ant deux adresses IP virtuelles sur notre serveur.)S
9.2 FS/F0 SF 0 179.799 M(# ip address add 188.177.166.1 dev eth0)S
0 168.799 M(# ip address add 188.177.166.2 dev eth0)S
11 FS/F4 SF 0 142.766 M(C'est \340 vous d'associer les diff\351rents serveurs \340 la bonne adresse IP. Tous les d\351mons courants supportent cela.)S
0 116.366 M(Nous pouvons tout d'abord attacher une mise en file d'attente CBQ \340 )S
/F0 SF (eth0)S
/F4 SF ( :)S
9.2 FS/F0 SF 0 91.799 M(# tc qdisc add dev eth0 root handle 1: cbq bandwidth 10Mbit cell 8 avpkt 1000 \\)S
0 80.799 M(  mpu 64)S
11 FS/F4 SF 0 54.766 M(Nous cr\351ons ensuite les classes pour nos clients :)S
9.2 FS/F0 SF 0 30.199 M(# tc class add dev eth0 parent 1:0 classid 1:1 cbq bandwidth 10Mbit rate \\)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(84)S
328.039 0 M(Chapitre 15. Recettes de cuisine)S
GR
SP
%%Page: (85) 85
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 501.8 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(  2MBit avpkt 1000 prio 5 bounded isolated allot 1514 weight 1 maxburst 21)S
0 727.833 M(# tc class add dev eth0 parent 1:0 classid 1:2 cbq bandwidth 10Mbit rate \\)S
0 716.833 M(  5Mbit avpkt 1000 prio 5 bounded isolated allot 1514 weight 1 maxburst 21)S
11 FS/F4 SF 0 690.8 M(Nous ajoutons les filtres pour nos deux classes :)S
9.2 FS/F0 SF 0 666.233 M(##FIXME: Pourquoi cette ligne, que fait-elle ? Qu'est-ce qu'un)S
0 655.233 M(diviseur ?)S
0 644.233 M(##FIXME: Un diviseur est li\351 \340 une table de hachage et au nombre de)S
0 633.233 M(seaux -ahu)S
0 622.233 M(# tc filter add dev eth0 parent 1:0 protocol ip prio 5 handle 1: u32 divisor 1)S
0 611.233 M(# tc filter add dev eth0 parent 1:0 prio 5 u32 match ip src 188.177.166.1)S
0 600.233 M(  flowid 1:1)S
0 589.233 M(# tc filter add dev eth0 parent 1:0 prio 5 u32 match ip src 188.177.166.2)S
0 578.233 M(  flowid 1:2)S
11 FS/F4 SF 0 552.2 M(Et voil\340 qui est fait.)S
0 525.8 M(FIXME: Pourquoi pas un filtre token bucket ? Y a t-il un retour par d\351faut \340 )S
/F0 SF (pfifo&lowbar;fast)S
/F4 SF ( quelque)S
0 512.6 M(part ?)S
15.8 FS/F9 SF 0 479.36 M(Prot\351ger votre machine des inondations SYN)S
11 FS/F4 SF 0 451.992 M(D'apr\350s la documentation iproute d'Alexey adapt\351e \340 netfilter. Si vous utilisez ceci, prenez garde d'ajuster les)S
0 438.792 M(nombres avec des valeurs raisonnables pour votre syst\350me.)S
0 412.392 M(Si vous voulez prot\351ger tout un r\351seau, oubliez ce script, qui est plus adapt\351 \340 un h\364te seul.)S
0 385.992 M(Il appara\356t que la toute derni\350re version de l'outil iproute2 est n\351cessaire pour que ceci fonctionne avec le)S
0 372.792 M(noyau 2.4.0.)S
9.2 FS/F0 SF 0 348.225 M(#! /bin/sh -x)S
0 337.225 M(#)S
0 326.225 M(# script simple utilisant les capacit\351s de Ingress.)S
0 315.225 M(# Ce script montre comment on peut limiter le flux entrant des SYN.)S
0 304.225 M(# Utile pour la protection des TCP-SYN. Vous pouvez utiliser IPchains)S
0 293.225 M(# pour b\351n\351ficier de puissantes fonctionnalit\351s sur les SYN.)S
0 282.225 M(#)S
0 271.225 M(# chemins vers les divers utilitaires)S
0 260.225 M(# \300 changer en fonction des v\364tres)S
0 249.225 M(#)S
0 238.225 M(TC=/sbin/tc)S
0 227.225 M(IP=/sbin/ip)S
0 216.225 M(IPTABLES=/sbin/iptables)S
0 205.225 M(INDEV=eth2)S
0 194.225 M(#)S
0 183.225 M(# marque tous les paquets SYN entrant \340 travers $INDEV avec la valeur 1)S
0 172.225 M(############################################################ )S
0 161.225 M($iptables -A PREROUTING -i $INDEV -t mangle -p tcp --syn \\)S
0 150.225 M(  -j MARK --set-mark 1)S
0 139.225 M(############################################################ )S
0 128.225 M(#)S
0 117.225 M(# installe la file d'attente ingress sur l'interface associ\351e)S
0 106.225 M(############################################################ )S
0 95.225 M($TC qdisc add dev $INDEV handle ffff: ingress)S
0 84.225 M(############################################################ )S
0 73.225 M(#)S
0 62.225 M(# Les paquets SYN ont une taille de 40 octets \(320 bits\), donc trois SYN )S
0 51.225 M(# ont une taille de 960 bits \(approximativement 1Kbit\) ; nous limitons donc)S
0 40.225 M(# les SYNs entrants \340 3 par seconde \(pas vraiment utile, mais sert \340)S
0 29.225 M(# montrer ce point -JHS)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Faire tourner plusieurs sites avec diff\351rentes SLA\(autorisations\))S
474.768 0 M(85)S
GR
SP
%%Page: (86) 86
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 563.4 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(############################################################ )S
0 727.833 M($TC filter add dev $INDEV parent ffff: protocol ip prio 50 handle 1 fw \\)S
0 716.833 M(police rate 1kbit burst 40 mtu 9k drop flowid :1)S
0 705.833 M(############################################################ )S
0 672.833 M(#)S
0 661.833 M(echo "---- qdisc parameters Ingress  ----------")S
0 650.833 M($TC qdisc ls dev $INDEV)S
0 639.833 M(echo "---- Class parameters Ingress  ----------")S
0 628.833 M($TC class ls dev $INDEV)S
0 617.833 M(echo "---- filter parameters Ingress ----------")S
0 606.833 M($TC filter ls dev $INDEV parent ffff:)S
0 584.833 M(#supprime la file d'attente ingress )S
0 573.833 M(#$TC qdisc del $INDEV ingress)S
15.8 FS/F9 SF 0 540.96 M(Limiter le d\351bit ICMP pour emp\352cher les d\351nis de service)S
11 FS/F4 SF 0 513.592 M(R\351cemment, les attaques distribu\351es de d\351ni de service sont devenues une nuisance importante sur Internet.)S
0 500.392 M(En filtrant proprement et en limitant le d\351bit de votre r\351seau, vous pouvez \340 la fois \351viter de devenir victime)S
0 487.192 M(ou source de ces attaques.)S
0 460.792 M(Vous devriez filtrer vos r\351seaux de telle sorte que vous n'autorisiez pas les paquets avec une adresse IP source)S
0 447.592 M(non locale \340 quitter votre r\351seau. Cela emp\352che les utilisateurs d'envoyer de mani\350re anonyme des)S
0 434.392 M(cochonneries sur Internet.)S
0 407.992 M(La limitation de d\351bit peut faire encore mieux, comme vu plus haut. Pour vous rafra\356chir la m\351moire, revoici)S
0 394.792 M(notre diagramme ASCII :)S
9.2 FS/F0 SF 0 343.825 M([Internet] ---<E3, T3, n'importe quoi>--- [routeur Linux] --- [Bureau+FAI])S
0 332.825 M(                                         eth1          eth0)S
11 FS/F4 SF 0 280.392 M(Nous allons d'abord configurer les parties pr\351-requises :)S
9.2 FS/F0 SF 0 229.425 M(# tc qdisc add dev eth0 root handle 10: cbq bandwidth 10Mbit avpkt 1000)S
0 218.425 M(# tc class add dev eth0 parent 10:0 classid 10:1 cbq bandwidth 10Mbit rate \\)S
0 207.425 M(  10Mbit allot 1514 prio 5 maxburst 20 avpkt 1000)S
11 FS/F4 SF 0 154.992 M(Si vous avez des interfaces de 100 Mbits ou plus, ajustez ces nombres. Maintenant, vous devez d\351terminer)S
0 141.792 M(combien de trafic ICMP vous voulez autoriser. Vous pouvez r\351aliser des mesures avec tcpdump, en \351crivant)S
0 128.592 M(les r\351sultats dans un fichier pendant un moment, et regarder combien de paquets ICMP passent par votre)S
0 115.392 M(r\351seau. Ne pas oublier d'augmenter la longueur du "snapshot". Si la mesure n'est pas possible, vous pouvez)S
0 102.192 M(consacrer par exemple 5&percnt; de votre bande passante disponible. Configurons notre classe :)S
9.2 FS/F0 SF 0 77.625 M(# tc class add dev eth0 parent 10:1 classid 10:100 cbq bandwidth 10Mbit rate \\)S
0 66.625 M(  100Kbit allot 1514 weight 800Kbit prio 5 maxburst 20 avpkt 250 \\)S
0 55.625 M(  bounded)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(86)S
266.901 0 M(Prot\351ger votre machine des inondations SYN)S
GR
SP
%%Page: (87) 87
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 651.4 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(Cela limite le d\351bit \340 100 Kbits sur la classe. Maintenant, nous avons besoin d'un filtre pour assigner le trafic)S
0 723.8 M(ICMP \340 cette classe :)S
9.2 FS/F0 SF 0 699.233 M(# tc filter add dev eth0 parent 10:0 protocol ip prio 100 u32 match ip)S
0 688.233 M(  protocol 1 0xFF flowid 10:100)S
15.8 FS/F9 SF 0 628.96 M(Donner la priorit\351 au trafic interactif)S
11 FS/F4 SF 0 601.592 M(Si beaucoup de donn\351es arrivent \340 votre lien ou en partent, et que vous essayez de faire de la maintenance via)S
0 588.392 M(telnet ou ssh, cela peut poser probl\350me : d'autres paquets bloquent vos frappes clavier. Cela ne serait-il pas)S
0 575.192 M(mieux si vos paquets interactifs pouvaient se faufiler dans le trafic de masse ? Linux peut faire cela pour vous.)S
0 548.792 M(Comme pr\351c\351demment, nous avons besoin de manipuler le trafic dans les deux sens. Evidemment, cela)S
0 535.592 M(marche mieux s'il y a des machines Linux aux deux extr\351mit\351s du lien, bien que d'autres UNIX soient)S
0 522.392 M(capables de faire la m\352me chose. Consultez votre gourou local Solaris/BSD pour cela.)S
0 495.992 M(Le gestionnaire standard pfifo&lowbar;fast a trois "bandes" diff\351rentes. Le trafic de la bande 0 est transmis en)S
0 482.792 M(premier, le trafic des bandes 1 et 2 \351tant trait\351 apr\350s. Il est vital que votre trafic interactif soit dans la bande 0 !)S
0 469.592 M(Ce qui suit est adapt\351 du \(bient\364t obsol\350te\) Ipchains-HOWTO :)S
0 443.192 M(Il y a quatre bits rarement utilis\351s dans l'en-t\352te IP, appel\351s bits de Type de Service \(TOS\). Ils affectent la)S
0 429.992 M(mani\350re dont les paquets sont trait\351s. Les quatre bits sont "D\351lai Minimum", "D\351bit Maximum", "Fiabilit\351)S
0 416.792 M(Maximum" et "Co\373t Minimum". Seul un de ces bits peut \352tre positionn\351. Rob van Nieuwkerk, l'auteur du)S
0 403.592 M(code TOS-mangling dans ipchains, le configure comme suit :)S
9.2 FS/F0 SF 0 352.625 M(Le "D\351lai Minimum" est particuli\350rement important pour moi. Je le)S
0 341.625 M(positionne \340 1 pour les paquets interactifs sur mon routeur \(Linux\))S
0 330.625 M(qui envoie le trafic vers l'ext\351rieur. Je suis derri\350re un modem \340)S
0 319.625 M(33,6 Kbps. Linux r\351partit les paquets dans trois files)S
0 308.625 M(d'attente. De cette mani\350re, j'obtiens des performances acceptables)S
0 297.625 M(pour le trafic interactif tout en t\351l\351chargeant en m\352me temps.)S
11 FS/F4 SF 0 245.192 M(L'utilisation la plus commune est de configurer les connexions telnet et ftp \340 "D\351lai Minimum" et les donn\351es)S
0 231.992 M(FTP \340 "D\351bit Maximum". Cela serait fait comme suit, sur mon routeur :)S
9.2 FS/F0 SF 0 181.025 M(# iptables -A PREROUTING -t mangle -p tcp --sport telnet \\)S
0 170.025 M(  -j TOS --set-tos Minimize-Delay)S
0 159.025 M(# iptables -A PREROUTING -t mangle -p tcp --sport ftp \\)S
0 148.025 M(  -j TOS --set-tos Minimize-Delay)S
0 137.025 M(# iptables -A PREROUTING -t mangle -p tcp --sport ftp-data \\)S
0 126.025 M(  -j TOS --set-tos Maximize-Throughput)S
11 FS/F4 SF 0 73.592 M(En fait, cela ne marche que pour les donn\351es venant d'un telnet ext\351rieur vers votre ordinateur local. Dans)S
0 60.392 M(l'autre sens, \347a se fait tout seul : telnet, ssh, et consorts configurent le champ TOS automatiquement pour les)S
0 47.192 M(paquets sortants.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Limiter le d\351bit ICMP pour emp\352cher les d\351nis de service)S
474.768 0 M(87)S
GR
SP
%%Page: (88) 88
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 581 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(Si vous avez un client incapable de le faire, vous pouvez toujours le faire avec netfilter. Sur votre machine)S
0 723.8 M(locale :)S
9.2 FS/F0 SF 0 672.833 M(# iptables -A OUTPUT -t mangle -p tcp --dport telnet \\)S
0 661.833 M(  -j TOS --set-tos Minimize-Delay)S
0 650.833 M(# iptables -A OUTPUT -t mangle -p tcp --dport ftp \\)S
0 639.833 M(  -j TOS --set-tos Minimize-Delay)S
0 628.833 M(# iptables -A OUTPUT -t mangle -p tcp --dport ftp-data \\)S
0 617.833 M(  -j TOS --set-tos Maximize-Throughput)S
15.8 FS/F9 SF 0 558.56 M(Cache web transparent utilisant netfilter, iproute2, ipchains et)S
0 539.552 M(squid)S
11 FS/F4 SF 0 512.184 M(Cette section a \351t\351 envoy\351e par le lecteur Ram Narula de "Internet for Education" \(Internet pour l'\351ducation\))S
0 498.984 M(\(Thailande\).)S
0 472.584 M(La technique habituelle pour r\351aliser ceci dans Linux est probablement l'utilisation d'ipchains APRES s'\352tre)S
0 459.384 M(assur\351 que le trafic sortant du port 80 \(web\) est rout\351 \340 travers le serveur faisant fonctionner squid.)S
0 432.984 M(Il y a 3 m\351thodes communes pour \352tre s\373r que le trafic sortant du port 80 est rout\351 vers le serveur faisant)S
0 419.784 M(fonctionner squid et une quatri\350me est introduite ici.)S
0 393.384 M(La passerelle le fait.)S
36 380.184 M(Si vous pouvez dire \340 votre passerelle que les paquets sortants \340 destination du port 80 doivent \352tre)S
36 366.984 M(envoy\351s vers l'adresse IP du serveur squid.)S
36 340.584 M(MAIS)S
36 314.184 M(Ceci am\350nerait une charge suppl\351mentaire sur le routeur et des routeurs commerciaux peuvent m\352me)S
36 300.984 M(ne pas supporter ceci.)S
0 287.784 M(Utiliser un commutateur Couche 4.)S
36 274.584 M(Les commutateurs Couche 4 peuvent manipuler ceci sans aucun probl\350me.)S
36 248.184 M(MAIS)S
36 221.784 M(Le co\373t pour un tel \351quipement est en g\351n\351ral tr\350s \351lev\351. Typiquement, un commutateur couche 4)S
36 208.584 M(co\373te normalement plus cher qu'un serveur classique + un bon serveur linux.)S
0 195.384 M(Utiliser le serveur cache comme passerelle r\351seau)S
36 182.184 M(Vous pouvez forcer TOUT le trafic \340 travers le serveur cache)S
36 155.784 M(MAIS)S
36 129.384 M(Ceci est plut\364t risqu\351 dans la mesure o\371 Squid utilise beaucoup de ressources CPU, ce qui peut)S
36 116.184 M(conduire \340 une baisse des performances de tout le r\351seau. Le serveur peut \351galement ne plus)S
36 102.984 M(fonctionner et personne sur le r\351seau ne pourra acc\351der \340 Internet si cela a lieu.)S
0 89.784 M(Routeur Linux+NetFilter.)S
36 76.584 M(En utilisant Netfilter, une autre technique peut \352tre impl\351ment\351e. Celle-ci consiste \340 utiliser Netfilter)S
36 63.384 M(pour "marquer" les paquets \340 destination du port 80 et \340 utiliser iproute2 pour router les paquets)S
36 50.184 M("marqu\351s" vers le serveur Squid.)S
9.2 FS/F0 SF 0 25.617 M(|----------------|)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(88)S
315.829 0 M(Donner la priorit\351 au trafic interactif)S
GR
SP
%%Page: (89) 89
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 9.2 FS/F0 SF 0 738.833 M(| Impl\351mentation |)S
0 727.833 M(|----------------|)S
0 705.833 M( Adresses utilis\351es)S
0 694.833 M( 10.0.0.1 naret \(serveur NetFilter\))S
0 683.833 M( 10.0.0.2 silom \(serveur Squid\))S
0 672.833 M( 10.0.0.3 donmuang \(routeur connect\351 \340 Internet\))S
0 661.833 M( 10.0.0.4 kaosarn \(un autre serveur sur le r\351seau\))S
0 650.833 M( 10.0.0.5 RAS)S
0 639.833 M( 10.0.0.0/24 r\351seau principal)S
0 628.833 M( 10.0.0.0/19 r\351seau total)S
0 606.833 M(|----------------|)S
0 595.833 M(|Sch\351ma du r\351seau|)S
0 584.833 M(|----------------|)S
0 562.833 M(Internet)S
0 551.833 M(|)S
0 540.833 M(donmuang)S
0 529.833 M(|)S
0 518.833 M(------------hub/commutateur----------)S
0 507.833 M(|        |             |       |)S
0 496.833 M(naret   silom        kaosarn  RAS etc.)S
11 FS/F4 SF 0 470.8 M(Premi\350rement, faire en sorte que tout le trafic passe par naret en \351tant s\373r que c'est la passerelle par d\351faut, \340)S
0 457.6 M(l'exception de silom. La passerelle par d\351faut de silom doit \352tre donmuang \(10.0.0.3\) ou ceci cr\351erait une)S
0 444.4 M(boucle du trafic web.)S
0 418 M(\(Tous les serveurs sur mon r\351seau avaient 10.0.0.1 comme passerelle par d\351faut qui \351tait l'ancienne adresse du)S
0 404.8 M(routeur donmuang. Cela m'a conduit \340 attribuer 10.0.0.3 comme adresse IP \340 donmuang et \340 donner 10.0.0.1)S
0 391.6 M(comme adresse IP \340 naret.\))S
9.2 FS/F0 SF 0 340.633 M(Silom)S
0 329.633 M(-----)S
0 318.633 M(-configurer squid et ipchains )S
11 FS/F4 SF 0 266.2 M(Pour la configuration du serveur Squid sur silom, soyez s\373r que celui-ci supporte le cache/proxy transparent)S
0 253 M(\(transparent caching/proxying\). Le port par d\351faut pour squid est en g\351n\351ral 3128. Tout le trafic pour le port)S
0 239.8 M(80 doit donc \352tre redirig\351 localement vers le port 3128. Ceci peut \352tre fait en utilisant ipchains comme suit :)S
9.2 FS/F0 SF 0 188.833 M(silom# ipchains -N allow1)S
0 177.833 M(silom# ipchains -A allow1 -p TCP -s 10.0.0.0/19 -d 0/0 80 -j REDIRECT 3128)S
0 166.833 M(silom# ipchains -I input -j allow1)S
11 FS/F4 SF 0 114.4 M(Ou, avec netfilter:)S
9.2 FS/F0 SF 0 89.833 M(silom# iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 3128)S
11 FS/F4 SF 0 37.4 M(\(note: vous pouvez avoir \351galement d'autres entr\351es\))S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Cache web transparent utilisant netfilter, iproute2, ipchains etsquid)S
474.768 0 M(89)S
GR
SP
%%Page: (90) 90
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 11 FS/F4 SF 0 737 M(Pour plus d'informations sur la configuration du serveur Squid, se r\351f\351rer \340 la page FAQ Squid sur)S
0 723.8 M(http://squid.nlanr.net\).)S
0 697.4 M(Soyez s\373r que l"ip forwarding" est actif sur votre serveur et que la passerelle par d\351faut pour ce serveur est)S
0 684.2 M(donmuand \(PAS naret\).)S
9.2 FS/F0 SF 0 633.233 M(Naret)S
0 622.233 M(-----)S
0 611.233 M(- configurer squid et ipchains )S
0 600.233 M(- d\351sactiver les messages icmp REDIRECT \(si besoin\))S
11 FS/F4 SF 36 521.4 M("Marquer" les paquets \340 destination du port 80 avec la valeur 2)S
9.2 FS/F0 SF 36 496.833 M(naret# iptables -A PREROUTING -i eth0 -t mangle -p tcp --dport 80 \\)S
36 485.833 M( -j MARK --set-mark 2)S
11 FS/F4 SF 25 521.4 M(1. )S
36 446.6 M(Configurer iproute2 de sorte qu'il route les paquets avec la marque 2 vers silom)S
9.2 FS/F0 SF 36 422.033 M(naret# echo 202 www.out >> /etc/iproute2/rt_tables)S
36 411.033 M(naret# ip rule add fwmark 2 table www.out)S
36 400.033 M(naret# ip route add default via 10.0.0.2 dev eth0 table www.out)S
36 389.033 M(naret# ip route flush cache)S
11 FS/F4 SF 36 363 M(Si donmuang et naret sont sur le m\352me r\351seau, naret ne doit pas envoyer de messages icmp)S
36 349.8 M(REDIRECT. Ceux-ci doivent \352tre d\351sactiv\351s par :)S
9.2 FS/F0 SF 36 325.233 M(naret# echo 0 > /proc/sys/net/ipv4/conf/all/send_redirects)S
36 314.233 M(naret# echo 0 > /proc/sys/net/ipv4/conf/default/send_redirects)S
36 303.233 M(naret# echo 0 > /proc/sys/net/ipv4/conf/eth0/send_redirects)S
11 FS/F4 SF 25 446.6 M(2. )S
0 224.4 M(La configuration est termin\351e, v\351rifions-la.)S
9.2 FS/F0 SF 0 173.433 M(Sur naret:)S
0 151.433 M(naret# iptables -t mangle -L)S
0 140.433 M(Chain PREROUTING \(policy ACCEPT\))S
0 129.433 M(target     prot opt source               destination         )S
0 118.433 M(MARK       tcp  --  anywhere             anywhere           tcp dpt:www MARK set 0x2 )S
0 96.433 M(Chain OUTPUT \(policy ACCEPT\))S
0 85.433 M(target     prot opt source               destination         )S
0 63.433 M(naret# ip rule ls)S
0 52.433 M(0:      from all lookup local )S
0 41.433 M(32765:  from all fwmark        2 lookup www.out )S
0 30.433 M(32766:  from all lookup main )S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(90)S
162.962 0 M(Cache web transparent utilisant netfilter, iproute2, ipchains etsquid)S
GR
SP
%%Page: (91) 91
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 515 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(32767:  from all lookup default )S
0 716.833 M(naret# ip route list table www.out)S
0 705.833 M(default via 203.114.224.8 dev eth0 )S
0 683.833 M(naret# ip route   )S
0 672.833 M(10.0.0.1 dev eth0  scope link )S
0 661.833 M(10.0.0.0/24 dev eth0  proto kernel  scope link  src 10.0.0.1)S
0 650.833 M(127.0.0.0/8 dev lo  scope link )S
0 639.833 M(default via 10.0.0.3 dev eth0 )S
0 617.833 M(\(soyez s\373r que silom appartiens \340 l'une des lignes ci-dessus. Dans ce cas,)S
0 606.833 M(c'est la ligne avec 10.0.0.0/24\))S
0 584.833 M(|------|)S
0 573.833 M(|-FAIT-|)S
0 562.833 M(|------|)S
13.2 FS/F9 SF 0 495.2 M(Sch\351ma du trafic apr\350s l'impl\351mentation)S
9.2 FS/F0 SF 0 443.793 M(|---------------------------------------|)S
0 432.793 M(|Sch\351ma du trafic apr\350s l'impl\351mentation|)S
0 421.793 M(|---------------------------------------|)S
0 399.793 M(INTERNET)S
0 388.793 M(/\\)S
0 377.793 M(||)S
0 366.793 M(\\/)S
0 355.793 M(-----------------routeur donmuang---------------------)S
0 344.793 M(/\\                                      /\\         ||)S
0 333.793 M(||                                      ||         ||)S
0 322.793 M(||                                      \\/         ||)S
0 311.793 M(naret                                  silom       ||)S
0 300.793 M(*trafic \340 destination du port 80=====>\(cache\)      ||)S
0 289.793 M(/\\                                      ||         ||)S
0 278.793 M(||                                      \\/         \\/)S
0 267.793 M(\\\\===================================kaosarn, RAS, etc.)S
11 FS/F4 SF 0 215.36 M(Noter que le r\351seau est asym\351trique car il y a un saut suppl\351mentaire sur le chemin sortant.)S
9.2 FS/F0 SF 0 164.393 M(Voici le cheminement d'un paquet traversant le r\351seau de kaosarn allant et)S
0 153.393 M(venant d'Internet.)S
0 131.393 M(Pour le trafic web/http :)S
0 120.393 M(requ\352te http kaosarn->naret->silom->donmuang->Internet)S
0 109.393 M(r\351ponse http de Internet->donmuang->silom->kaosarn)S
0 87.393 M(Pour les requ\352tes non web/http \(par ex. telnet\) :)S
0 76.393 M(donn\351es sortantes kaosarn->naret->donmuang->Internet)S
0 65.393 M(donn\351es entrantes d'Internet->donmuang->kaosarn)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Sch\351ma du trafic apr\350s l'impl\351mentation)S
474.768 0 M(91)S
GR
SP
%%Page: (92) 92
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 739.4 M 487.0 2.0 F
0 303.384 M 487.0 2.0 F
15.8 FS/F9 SF 0 716.96 M(Circonvenir aux probl\350mes de la d\351couverte du MTU de chemin)S
0 697.952 M(en configurant un MTU par routes)S
11 FS/F4 SF 0 670.584 M(Pour envoyer de grande quantit\351 de donn\351es, Internet fonctionne g\351n\351ralement mieux quand de grands)S
0 657.384 M(paquets sont utilis\351s. Chaque paquet implique une d\351cision de routage. Le transfert d'un fichier de 1Mo peut)S
0 644.184 M(entra\356ner soit l'envoi de 700 paquets, en maximisant la taille des paquets, soit de 4000 paquets en utilisant la)S
0 630.984 M(plus petite taille possible.)S
0 604.584 M(Cependant, tous les \351l\351ments d'Internet ne supportent pas une capacit\351 utile \(payload\) de 1460 octets par)S
0 591.384 M(paquet. Il est de plus n\351cessaire d'essayer de trouver le plus grand paquet qui "conviendra" le mieux, dans le)S
0 578.184 M(but d'optimiser la connexion.)S
0 551.784 M(Ce processus est appel\351 "D\351couverte du MTU de chemin", o\371 MTU signifie 'Maximum Transfert Unit' \(Unit\351)S
0 538.584 M(de transfert maximum\).)S
0 512.184 M(Quand un routeur rencontre un paquet qui est trop gros pour \352tre envoy\351 en un seul morceau, ET que celui-ci)S
0 498.984 M(a \351t\351 marqu\351 avec le bit "Don't Fragment", il retourne un message ICMP indiquant qu'il a \351t\351 oblig\351 de rejeter)S
0 485.784 M(le paquet. L'h\364te \351metteur prend acte de cette indication en envoyant des paquets plus petits et, par it\351ration,)S
0 472.584 M(peut trouver la taille optimum du paquet pour une connexion \340 travers un chemin particulier.)S
0 446.184 M(Ceci fonctionnait correctement jusqu'\340 ce que Internet soit d\351couvert par des vandales qui s'efforcent de)S
0 432.984 M(perturber les communications. Ceci a conduit les administrateurs \340, soit bloquer, soit mettre en forme le trafic)S
0 419.784 M(ICMP lors d'essais malencontreux dans le but d'am\351liorer la s\351curit\351 ou la robustesse de leurs services)S
0 406.584 M(Internet.)S
0 380.184 M(La cons\351quence, maintenant, est que la d\351couverte du MTU de chemin fonctionne de moins en moins bien, et)S
0 366.984 M(\351choue pour certaines routes, conduisant \340 d'\351tranges sessions TCP/IP qui tombent peu de temps apr\350s.)S
0 340.584 M(Bien que je n'aie pas de preuves de ceci, deux sites avec qui j'avais l'habitude d'avoir des probl\350mes faisaient)S
0 327.384 M(fonctionner \340 la fois Alteon et Acedirectors avant les syst\350mes affect\351s. Peut-\352tre quelqu'un avec plus de)S
0 314.184 M(connaissances peut fournir des indices quant \340 la raison de ce qui se passe.)S
13.2 FS/F9 SF 0 283.583 M(Solution)S
11 FS/F4 SF 0 256.743 M(Quand vous rencontrez des sites qui pr\351sentent ce probl\350me, vous pouvez d\351sactiver la d\351couverte du MTU)S
0 243.543 M(de chemin en le configurant manuellement. Koos van den Hout a \340 peu pr\350s \351crit :)S
36 203.943 M(Le probl\350me suivant : j'ai configur\351 le mtu et mru de ma ligne d\351di\351e fonctionnant avec ppp \340)S
36 190.743 M(296 dans la mesure o\371 le d\351bit est de seulement 33k6 et que je ne peux pas influencer la file)S
36 177.543 M(d'attente de l'autre c\364t\351. A 296, la r\351ponse \340 l'appui d'une touche intervient dans un d\351lai)S
36 164.343 M(raisonnable.)S
36 137.943 M(Et, de mon c\364t\351, j'ai un routeur avec translation d'adresse \(masquage\) fonctionnant \(bien s\373r\))S
36 124.743 M(sous Linux.)S
36 98.343 M(R\351cemment, j'ai s\351par\351 le serveur du routeur de sorte que la plupart des applications)S
36 85.143 M(fonctionnent sur une machine diff\351rente de celle qui r\351alise le routage.)S
36 58.743 M(J'ai alors eu des probl\350mes en me connectant sur l'irc. Grosse panique ! Je vous assure que)S
36 45.543 M(certains essais trouvaient que j'\351tais connect\351 \340 l'irc, me montrant m\352me comme connect\351 sur)S
36 32.343 M(l'irc mais je ne recevais pas le "motd" \(message of the day, message du jour\) de l'irc. J'ai)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(92)S
8.313 0 M(Circonvenir aux probl\350mes de la d\351couverte du MTU de chemin en configurant un MTU par routes)S
GR
SP
%%Page: (93) 93
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 413.8 M 487.0 2.0 F
11 FS/F4 SF 36 737 M(v\351rifi\351 ce qui pouvait \352tre erron\351 et ai not\351 que j'avais d\351j\340 eu des soucis li\351s au MTU en)S
36 723.8 M(contactant certains sites web. Je n'avais aucun souci pour les atteindre quand le MTU \351tait \340)S
36 710.6 M(1500, le probl\350me n'apparaissant que lorsque le MTU \351tait configur\351 \340 296. Puisque les)S
36 697.4 M(serveurs irc bloquent tout le trafic dont il n'ont pas besoin pour leurs op\351rations imm\351diates,)S
36 684.2 M(ils bloquent aussi l'icmp.)S
36 657.8 M(J'ai manoeuvr\351 pour convaincre les responsables d'un serveur web que ceci \351tait la cause d'un)S
36 644.6 M(probl\350me, mais les responsables du serveur irc n'avaient pas l'intention de r\351parer ceci.)S
36 618.2 M(Donc, je devais \352tre s\373r que le trafic masqu\351 sortant partait avec le mtu faible du lien externe.)S
36 605 M(Mais, je voulais que le trafic ethernet local ait le MTU normal \(pour des choses comme le)S
36 591.8 M(trafic nfs\).)S
36 565.4 M(Solution :)S
9.2 FS/F0 SF 36 540.833 M(ip route add default via 10.0.0.1 mtu 296)S
11 FS/F4 SF 36 488.4 M(\(10.0.0.1 \351tant ma passerelle par d\351faut, l'adresse interne de mon routeur masquant\))S
0 462 M(En g\351n\351ral, il est possible d'outrepasser la d\351couverte du MTU de chemin en configurant des routes)S
0 448.8 M(sp\351cifiques. Par exemple, si seuls certains r\351seaux posent probl\350mes, ceci devrait aider :)S
9.2 FS/F0 SF 0 424.233 M(ip route add 195.96.96.0/24 via 10.0.0.1 mtu 1000)S
15.8 FS/F9 SF 0 391.36 M(Circonvenir aux probl\350mes de la d\351couverte du MTU de chemin)S
0 372.352 M(en imposant le MSS \(pour les utilisateurs de l'ADSL, du c\342ble,)S
0 353.344 M(de PPPoE & PPtP\))S
11 FS/F4 SF 0 325.976 M(Comme expliqu\351 au-dessus, la d\351couverte du MTU de chemin ne marche pas aussi bien que cela devrait \352tre.)S
0 312.776 M(Si vous savez qu'un saut de votre r\351seau a un MTU limit\351 \(<1500\), vous ne pouvez pas compter sur la)S
0 299.576 M(d\351couverte du MTU de chemin pour le d\351couvrir.)S
0 273.176 M(Outre le MTU, il y a encore un autre moyen de configurer la taille maximum du paquet, par ce qui est appel\351)S
0 259.976 M(le MSS \(Maximum Segment Size, Taille Maximum du Segment\). C'est un champ dans les options TCP du)S
0 246.776 M(paquet SYN.)S
0 220.376 M(Les noyaux Linux r\351cents, et quelques pilotes de p\351riph\351rique PPPoE \(notamment, l'excellent Roaring)S
0 207.176 M(Penguin\) impl\351mentent la possibilit\351 de 'fixer le MSS'.)S
0 180.776 M(Le bon c\364t\351 de tout ceci est que, en positionnant la valeur MSS, vous d\356tes \340 l'h\364te distant de mani\350re)S
0 167.576 M(\351quivoque "n'essaie pas de m'envoyer des paquets plus grands que cette valeur". Aucun trafic ICMP n'est)S
0 154.376 M(n\351cessaire pour faire fonctionner cela.)S
0 127.976 M(Malheureusement, c'est de la bidouille \351vidente -- \347a d\351truit la propri\351t\351 \253bout-en-bout\273 de la connexion en)S
0 114.776 M(modifiant les paquets. Ayant dit cela, nous utilisons cette astuce dans beaucoup d'endroit et cela fonctionne)S
0 101.576 M(comme un charme.)S
0 75.176 M(Pour que tout ceci fonctionne, vous aurez besoin au moins de iptables-1.2.1a et de Linux 2.4.3 ou plus. La)S
0 61.976 M(ligne de commande basique est :)S
9.2 FS/F0 SF 0 37.409 M(# iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS  --clamp-mss-to-pmtu)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Solution)S
474.768 0 M(93)S
GR
SP
%%Page: (94) 94
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 570 M 487.0 2.0 F
0 173.584 M 487.0 2.0 F
11 FS/F4 SF 0 710.6 M(Ceci calcule le MSS appropri\351 pour votre lien. Si vous vous sentez courageux ou que vous pensez \352tre le)S
0 697.4 M(mieux plac\351 pour juger, vous pouvez aussi faire quelque chose comme ceci :)S
9.2 FS/F0 SF 0 646.433 M(# iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --set-mss 128)S
11 FS/F4 SF 0 594 M(Ceci configure le MSS du paquet SYN \340 128. Utilisez ceci si vous avez de la voix sur IP \(VoIP\) avec de tous)S
0 580.8 M(petits paquets, et de grands paquets http qui provoquent des coupures dans vos communications vocales.)S
15.8 FS/F9 SF 0 547.56 M(Le Conditionneur de Trafic Ultime : Faible temps de latence,)S
0 528.552 M(T\351l\351chargement vers l'amont et l'aval rapide)S
11 FS/F4 SF 0 501.184 M(Note : ce script a r\351cemment \351t\351 mis \340 niveau et il ne marchait avant qu'avec les clients Linux de votre)S
0 487.984 M(r\351seau ! Vous devriez donc le mettre \340 jour si vous avez des machines Windows ou des Macs dans votre)S
0 474.784 M(r\351seau qui n'\351taient pas capables de t\351l\351charger plus rapidement pendant que d'autres \351taient en train de)S
0 461.584 M(t\351l\351charger vers l'amont.)S
0 435.184 M(J'ai essay\351 de cr\351er le Saint Graal :)S
0 408.784 M(Maintenir \340 tout moment un faible temps de latence pour le trafic interactif)S
36 395.584 M(Ceci signifie que la r\351cup\351ration ou la transmission de fichiers ne doivent pas perturber SSH ou m\352me)S
36 382.384 M(telnet. Ceci est la chose la plus importante, car m\352me un temps de latence de 200ms est important)S
36 369.184 M(pour pouvoir travailler confortablement.)S
0 355.984 M(Autoriser le 'surf' \340 des vitesses raisonnables pendant que l'on t\351l\351charge vers l'amont ou vers l'aval)S
36 342.784 M(M\352me si http est un trafic de masse, les autres trafics ne doivent pas trop le noyer.)S
0 329.584 M(Etre s\373r que le t\351l\351chargement vers l'amont ne va pas faire du tort aux t\351l\351chargements vers l'aval et aux autres)S
0 316.384 M(\351l\351ments autour)S
36 303.184 M(Le principal ph\351nom\350ne observ\351 est la forte r\351duction de la vitesse de t\351l\351chargement vers l'aval)S
36 289.984 M(quand il y a du trafic montant.)S
0 263.583 M(Il s'av\350re que tout ceci est possible, au prix d'une minuscule r\351duction de la bande passante. La pr\351sence de)S
0 250.383 M(grandes files d'attente sur les dispositifs d'acc\350s domestiques, comme le c\342ble ou les modems DSL, explique)S
0 237.183 M(pourquoi les t\351l\351chargements vers l'amont, vers l'aval et ssh se p\351nalisent mutuellement.)S
0 210.783 M(La prochaine partie explique en profondeur ce qui provoque les retards, et comment nous pouvons les)S
0 197.583 M(corriger. Vous pouvez sans danger la passer et aller directement au script si vous vous fichez de la fa\347on dont)S
0 184.383 M(la magie op\350re.)S
13.2 FS/F9 SF 0 153.784 M(Pourquoi cela ne marche t-il pas bien par d\351faut ?)S
11 FS/F4 SF 0 126.944 M(Les FAI savent que leurs performances ne sont seulement jug\351es que sur la vitesse \340 laquelle les personnes)S
0 113.744 M(peuvent t\351l\351charger vers l'aval. En plus de la bande passante disponible, la vitesse de t\351l\351chargement est)S
0 100.544 M(lourdement influenc\351e par la perte des paquets, qui g\352ne s\351rieusement les performances de TCP/IP. Les)S
0 87.343 M(grandes files d'attente peuvent aider \340 pr\351venir la perte des paquets, et augmenter les t\351l\351chargements. Les)S
0 74.143 M(FAI configurent donc de grandes files d'attente.)S
0 47.743 M(Ces grandes files d'attente endommagent cependant l'interactivit\351. Une frappe doit d'abord parcourir la file)S
0 34.543 M(d'attente du flux montant, ce qui peut prendre plusieurs secondes, et aller jusqu'\340 l'h\364te distant. Elle est alors)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(94)S
-219.387 0 M(Circonvenir aux probl\350mes de la d\351couverte du MTU de cheminen imposant le MSS \(pour les utilisateurs de l'ADSL, du c\342ble,de PPPoE & PPtP\))S
GR
SP
%%Page: (95) 95
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 11 FS/F4 SF 0 737 M(trait\351e, conduisant \340 un paquet de retour qui doit traverser la file d'attente du flux descendant, localis\351e chez)S
0 723.8 M(votre FAI, avant qu'elle n'apparaisse sur l'\351cran.)S
0 697.4 M(Cet HOWTO nous enseigne plusieurs mani\350res de modifier et traiter la file d'attente mais, malheureusement,)S
0 684.2 M(toutes les files d'attente ne nous sont pas accessibles. Les files d'attente du FAI sont sans limites et la file)S
0 671 M(d'attente du flux montant r\351side probablement dans votre modem c\342ble ou votre p\351riph\351rique DSL. Il se peut)S
0 657.8 M(que vous soyez capable ou non de le configurer. La plupart du temps, ce ne sera pas le cas.)S
0 631.4 M(Et apr\350s ? Etant donn\351 que nous ne pouvons pas contr\364ler ces files d'attente, elles doivent dispara\356tre et \352tre)S
0 618.2 M(transf\351r\351es sur notre routeur Linux. Heureusement, ceci est possible.)S
0 591.8 M(Limiter la vitesse de t\351l\351chargement vers l'amont \(upload\))S
36 578.6 M(En limitant notre vitesse de t\351l\351chargement vers l'amont \340 une vitesse l\351g\350rement plus faible que la)S
36 565.4 M(vitesse r\351elle disponible, il n'y a pas de files d'attente mises en place dans notre modem. La file)S
36 552.2 M(d'attente est maintenant transf\351r\351e vers Linux.)S
0 539 M(Limiter la vitesse de t\351l\351chargement vers l'aval \(download\))S
36 525.8 M(Ceci est l\351g\350rement plus rus\351 dans la mesure o\371 nous ne pouvons pas vraiment influencer la vitesse \340)S
36 512.6 M(laquelle Internet nous envoie les donn\351es. Nous pouvons cependant rejeter les paquets qui arrivent)S
36 499.4 M(trop vite, ce qui provoque le ralentissement de TCP/IP jusqu'au d\351bit d\351sir\351. Comme nous ne voulons)S
36 486.2 M(pas supprimer inutilement du trafic, nous configurons une vitesse de rafale \('burst'\) plus grande.)S
0 459.8 M(Maintenant que nous avons fait ceci, nous avons \351limin\351 totalement la file d'attente du flux descendant \(sauf)S
0 446.6 M(pour de courtes rafales de donn\351es\), et obtenu la possibilit\351 de g\351rer la file d'attente du flux montant avec)S
0 433.4 M(toute la puissance Linux.)S
0 407 M(Il nous reste \340 nous assurer que le trafic interactif se retrouve au d\351but de la file d'attente du flux montant.)S
0 393.8 M(Pour \352tre s\373r que le flux montant ne va pas p\351naliser le flux descendant, nous d\351pla\347ons \351galement les paquets)S
0 380.6 M(ACK au d\351but de la file d'attente. C'est ce qui provoque normalement un \351norme ralentissement quand du)S
0 367.4 M(trafic de masse est g\351n\351r\351 dans les deux sens. Les paquets ACK du trafic descendant rentrent en concurrence)S
0 354.2 M(avec le trafic montant et sont donc ralentis.)S
0 327.8 M(Si nous avons fait tout ceci, nous obtenons les mesures suivantes en utilisant l'excellente connexion ADSL de)S
0 314.6 M(xs4all, en Hollande :)S
9.2 FS/F0 SF 0 263.633 M(Temps de latence de base :)S
0 252.633 M(round-trip min/avg/max = 14.4/17.1/21.7 ms)S
0 230.633 M(Sans le conditionneur de trafic, lors d'un t\351l\351chargement vers l'aval :)S
0 219.633 M(round-trip min/avg/max = 560.9/573.6/586.4 ms)S
0 197.633 M(Sans le conditionneur de trafic, lors d'un t\351l\351chargement vers l'amont :)S
0 186.633 M(round-trip min/avg/max = 2041.4/2332.1/2427.6 ms)S
0 164.633 M(Avec le conditionneur, lors d'un t\351l\351chargement vers l'amont \340 220kbit/s :)S
0 153.633 M(round-trip min/avg/max = 15.7/51.8/79.9 ms)S
0 131.633 M(Avec le conditionneur, lors d'un t\351l\351chargement vers l'aval \340 850kbit/s :)S
0 120.633 M(round-trip min/avg/max = 20.4/46.9/74.0 ms)S
0 98.633 M(Lors d'un t\351l\351chargement vers l'amont, les t\351l\351chargements vers l'aval s'effectuent \340 environ)S
0 87.633 M(80 % de la vitesse maximale disponible et 90% pour les t\351l\351chargements vers)S
0 76.633 M(l'amont. Le temps de latence augmente alors jusqu'\340 850 ms ; je n'ai pas encore)S
0 65.633 M(d\351termin\351 la raison de ce ph\351nom\350ne.)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Pourquoi cela ne marche t-il pas bien par d\351faut ?)S
474.768 0 M(95)S
GR
SP
%%Page: (96) 96
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 647 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(Ce que vous pouvez attendre de ce script d\351pend largement de votre vitesse de lien r\351elle. Quand vous)S
0 723.8 M(t\351l\351chargez vers l'amont \340 pleine vitesse, il y aura toujours un paquet devant votre frappe de clavier. Ceci est)S
0 710.6 M(la limite basse de votre temps de latence. Pour la calculer, divisez votre MTU par la vitesse du flux montant.)S
0 697.4 M(Les valeurs classiques seront un peu plus \351lev\351es que \347a. Diminuez votre MTU pour un meilleur effet !)S
0 671 M(Voici deux versions de ce script, une avec l'excellent HTB de Devik, et l'autre avec CBQ qui est pr\351sent dans)S
0 657.8 M(chaque noyau Linux, contrairement \340 HTB. Les deux ont \351t\351 test\351s et marchent correctement.)S
13.2 FS/F9 SF 0 627.2 M(Le script \(CBQ\))S
11 FS/F4 SF 0 600.36 M(Marche avec tous les noyaux. A l'int\351rieur du gestionnaire de mise en file d'attente CBQ, nous pla\347ons deux)S
0 587.16 M(SFQ pour \352tre s\373r que de multiples flux de masse ne vont pas mutuellement se p\351naliser.)S
0 560.76 M(Le trafic descendant est r\351glement\351 en utilisant un filtre tc contenant un Token Bucket Filter.)S
0 534.36 M(Vous pourriez am\351liorer ce script en ajoutant 'bounded' aux lignes qui d\351marrent avec 'tc class add .. classid)S
0 521.16 M(1:20'. Si vous avez diminu\351 votre MTU, diminuez aussi les nombres allot & avpkt !)S
9.2 FS/F0 SF 0 470.193 M(#!/bin/bash )S
0 448.193 M(# La configuration ultime pour votre connexion Internet domestique)S
0 437.193 M(# )S
0 426.193 M(# Configurez les valeurs suivantes avec des valeurs l\351g\350rement inf\351rieures que )S
0 415.193 M(# vos vitesses de flux montant et descendant. Exprim\351 en kilobits.)S
0 404.193 M(DOWNLINK=800)S
0 393.193 M(UPLINK=220)S
0 382.193 M(DEV=ppp0)S
0 360.193 M(# Nettoie les gestionnaires de sortie et d'entr\351s, cache les erreurs)S
0 349.193 M(tc qdisc del dev $DEV root    2> /dev/null > /dev/null)S
0 338.193 M(tc qdisc del dev $DEV ingress 2> /dev/null > /dev/null)S
0 316.193 M(###### Flux montant \(uplink\))S
0 294.193 M(# installe CBQ \340 la racine)S
0 272.193 M(tc qdisc add dev $DEV root handle 1: cbq avpkt 1000 bandwidth 10mbit )S
0 250.193 M(# Le trafic est mis en forme \340 une vitesse de $UPLINK. Ceci \351vite)S
0 239.193 M(# d'\351normes files d'attente dans votre modem DSL qui p\351nalisent le temps de)S
0 228.193 M(# latence.)S
0 217.193 M(# Classe principale)S
0 195.193 M(tc class add dev $DEV parent 1: classid 1:1 cbq rate ${UPLINK}kbit \\)S
0 184.193 M(allot 1500 prio 5 bounded isolated )S
0 162.193 M(# classe de priorit\351 sup\351rieure 1:10:)S
0 140.193 M(tc class add dev $DEV parent 1:1 classid 1:10 cbq rate ${UPLINK}kbit \\)S
0 129.193 M(   allot 1600 prio 1 avpkt 1000)S
0 107.193 M(# la classe par d\351faut et pour le trafic de masse 1:20. Re\347oit l\351g\350rement)S
0 96.193 M(# moins que le trafic et a une priorit\351 plus faible :)S
0 85.193 M(# bulk and default class 1:20 - gets slightly less traffic, )S
0 74.193 M(#  and a lower priority:)S
0 52.193 M(tc class add dev $DEV parent 1:1 classid 1:20 cbq rate $[9*$UPLINK/10]kbit \\)S
0 41.193 M(   allot 1600 prio 2 avpkt 1000)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(96)S
411.21 0 M(Le script \(CBQ\))S
GR
SP
%%Page: (97) 97
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 169.6 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(# Les deux sont g\351r\351es par SFQ :)S
0 727.833 M(tc qdisc add dev $DEV parent 1:10 handle 10: sfq perturb 10)S
0 716.833 M(tc qdisc add dev $DEV parent 1:20 handle 20: sfq perturb 10)S
0 694.833 M(# D\351marrage des filtres)S
0 683.833 M(# le bit D\351lai Minimum du champ TOS \(ssh, PAS scp\) est dirig\351 vers)S
0 672.833 M(# 1:10 :)S
0 661.833 M(tc filter add dev $DEV parent 1:0 protocol ip prio 10 u32 \\)S
0 650.833 M(      match ip tos 0x10 0xff  flowid 1:10)S
0 639.833 M(# ICMP \(ip protocol 1\) est dirig\351 vers la classe interactive 1:10 de telle)S
0 628.833 M(# sorte que nous pouvons r\351aliser des mesures et impressionner nos)S
0 617.833 M(# amis :)S
0 606.833 M(tc filter add dev $DEV parent 1:0 protocol ip prio 11 u32 \\)S
0 595.833 M(        match ip protocol 1 0xff flowid 1:10)S
0 573.833 M(# Pour acc\351l\351rer les t\351l\351chargements vers l'aval lors de la pr\351sence d'un)S
0 562.833 M(# flux montant, les paquets ACK sont plac\351s dans la classe)S
0 551.833 M(# interactive :)S
0 529.833 M(tc filter add dev $DEV parent 1: protocol ip prio 12 u32 \\)S
0 518.833 M(   match ip protocol 6 0xff \\)S
0 507.833 M(   match u8 0x05 0x0f at 0 \\)S
0 496.833 M(   match u16 0x0000 0xffc0 at 2 \\)S
0 485.833 M(   match u8 0x10 0xff at 33 \\)S
0 474.833 M(   flowid 1:10)S
0 452.833 M(# Le reste est consid\351r\351 'non-interactif' cad 'de masse' et fini dans 1:20)S
0 430.833 M(tc filter add dev $DEV parent 1: protocol ip prio 13 u32 \\)S
0 419.833 M(   match ip dst 0.0.0.0/0 flowid 1:20)S
0 397.833 M(########## Flux descendant \(downlink\) #############)S
0 386.833 M(# Ralentir le flux descendant \340 une valeur l\351g\350rement plus faible que votre)S
0 375.833 M(# vitesse r\351elle de mani\350re \340 \351viter la mise en file d'attente chez notre)S
0 364.833 M(# FAI. Faites des tests pour voir la vitesse maximum \340 laquelle vous pouvez)S
0 353.833 M(# le configurer. Les FAI ont tendance \340 avoir *d'\351normes* files d'attente)S
0 342.833 M(# pour s'assurer de la rapidit\351 des gros t\351l\351chargements.)S
0 331.833 M(#)S
0 320.833 M(# attache la r\351glementation d'entr\351e \(ingress policer\) :)S
0 298.833 M(tc qdisc add dev $DEV handle ffff: ingress)S
0 276.833 M(# Filtre *tout* \(0.0.0.0/0\), rejette tout ce qui arrive trop)S
0 265.833 M(# rapidement :)S
0 243.833 M(tc filter add dev $DEV parent ffff: protocol ip prio 50 u32 match ip src \\)S
0 232.833 M(   0.0.0.0/0 police rate ${DOWNLINK}kbit burst 10k drop flowid :1)S
11 FS/F4 SF 0 206.8 M(Si vous voulez que ce script soit ex\351cut\351 par ppp \340 la connexion, copiez-le dans /etc/ppp/ip-up.d.)S
0 180.4 M(Si les deux derni\350res lignes conduisent \340 une erreur, mettez \340 jour l'outil tc avec la derni\350re version !)S
13.2 FS/F9 SF 0 149.8 M(Le script \(HTB\))S
11 FS/F4 SF 0 122.96 M(Le script suivant nous permet d'atteindre tous nos buts en utilisant la merveilleuse file d'attente HTB. Voir le)S
0 109.76 M(chapitre correspondant. Cela vaut la peine de mettre \340 jour votre noyau !)S
9.2 FS/F0 SF 0 85.193 M(#!/bin/bash)S
0 63.193 M(# La configuration ultime pour votre connexion Internet domestique)S
0 52.193 M(# )S
0 41.193 M(# Configurez les valeurs suivantes avec des valeurs l\351g\350rement inf\351rieures que )S
0 30.193 M(# vos vitesses de flux montant et descendant. Exprim\351 en kilobits.)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Le script \(HTB\))S
474.768 0 M(97)S
GR
SP
%%Page: (98) 98
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 9.2 FS/F0 SF 0 738.833 M(DOWNLINK=800)S
0 727.833 M(UPLINK=220)S
0 716.833 M(DEV=ppp0)S
0 694.833 M(#Nettoie les gestionnaires de sortie et d'entr\351s, cache les erreurs)S
0 683.833 M(tc qdisc del dev $DEV root    2> /dev/null > /dev/null)S
0 672.833 M(tc qdisc del dev $DEV ingress 2> /dev/null > /dev/null)S
0 650.833 M(###### Flux montant \(uplink\))S
0 628.833 M(# installe HTB \340 la racine, le trafic ira par d\351faut vers 1:20 :)S
0 606.833 M(tc qdisc add dev $DEV root handle 1: htb default 20)S
0 584.833 M(# Le trafic est mis en forme \340 une vitesse de $UPLINK. Ceci \351vite)S
0 573.833 M(# d'\351normes files d'attente dans votre modem DSL qui p\351nalisent le temps de)S
0 562.833 M(# latence.)S
0 540.833 M(tc class add dev $DEV parent 1: classid 1:1 htb rate ${UPLINK}kbit burst 6k)S
0 518.833 M(# la classe de haute priorit\351 1:10 :)S
0 496.833 M(tc class add dev $DEV parent 1:1 classid 1:10 htb rate ${UPLINK}kbit \\)S
0 485.833 M(   burst 6k prio 1)S
0 463.833 M(# bulk & default class 1:20 - gets slightly less traffic, )S
0 452.833 M(# and a lower priority:)S
0 430.833 M(tc class add dev $DEV parent 1:1 classid 1:20 htb rate $[9*$UPLINK/10]kbit \\)S
0 419.833 M(   burst 6k prio 2)S
0 397.833 M(# Les deux sont g\351r\351es par SFQ :)S
0 386.833 M(tc qdisc add dev $DEV parent 1:10 handle 10: sfq perturb 10)S
0 375.833 M(tc qdisc add dev $DEV parent 1:20 handle 20: sfq perturb 10)S
0 353.833 M(# le bit D\351lai Minimum du champ TOS \(ssh, PAS scp\) est dirig\351 vers)S
0 342.833 M(# 1:10 :)S
0 331.833 M(tc filter add dev $DEV parent 1:0 protocol ip prio 10 u32 \\)S
0 320.833 M(      match ip tos 0x10 0xff  flowid 1:10)S
0 298.833 M(# ICMP \(ip protocol 1\) est dirig\351 vers la classe interactive 1:10 de telle)S
0 287.833 M(# sorte que nous pouvons r\351aliser des mesures et impressionner nos)S
0 276.833 M(# amis :)S
0 265.833 M(tc filter add dev $DEV parent 1:0 protocol ip prio 10 u32 \\)S
0 254.833 M(        match ip protocol 1 0xff flowid 1:10)S
0 232.833 M(# Pour acc\351l\351rer les t\351l\351chargements vers l'aval lors de la pr\351sence d'un)S
0 221.833 M(# flux montant, les paquets ACK sont plac\351s dans la classe)S
0 210.833 M(# interactive :)S
0 188.833 M(tc filter add dev $DEV parent 1: protocol ip prio 10 u32 \\)S
0 177.833 M(   match ip protocol 6 0xff \\)S
0 166.833 M(   match u8 0x05 0x0f at 0 \\)S
0 155.833 M(   match u16 0x0000 0xffc0 at 2 \\)S
0 144.833 M(   match u8 0x10 0xff at 33 \\)S
0 133.833 M(   flowid 1:10)S
0 111.833 M(# Le reste est consid\351r\351 'non-interactif' cad 'de masse' et fini dans 1:20)S
0 78.833 M(########## Flux descendant \(downlink\) #############)S
0 67.833 M(# Ralentir le flux descendant \340 une valeur l\351g\350rement plus faible que votre)S
0 56.833 M(# vitesse r\351lle de mani\350re \340 \351viter la mise en file d'attente chez notre)S
0 45.833 M(# FAI. Faites des tests pour voir la vitesse maximum \340 laquelle vous pouvez)S
0 34.833 M(# le configurer. Les FAI ont tendance \340 avoir *d'\351normes* files d'attente)S
0 23.833 M(# pour s'assurer de la rapidit\351 des gros t\351l\351chargements.)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(98)S
413.047 0 M(Le script \(HTB\))S
GR
SP
%%Page: (99) 99
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 576.6 M 487.0 2.0 F
0 111.192 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(#)S
0 727.833 M(# attache la r\351glementation d'entr\351e \(ingress policer\) :)S
0 705.833 M(tc qdisc add dev $DEV handle ffff: ingress)S
0 683.833 M(# Filtre *tout* \(0.0.0.0/0\), rejette tout ce qui arrive trop)S
0 672.833 M(# rapidement :)S
0 650.833 M(tc filter add dev $DEV parent ffff: protocol ip prio 50 u32 match ip src \\)S
0 639.833 M(   0.0.0.0/0 police rate ${DOWNLINK}kbit burst 10k drop flowid :1)S
11 FS/F4 SF 0 613.8 M(Si vous voulez que ce script soit ex\351cut\351 par ppp \340 la connexion, copiez-le dans /etc/ppp/ip-up.d.)S
0 587.4 M(Si les deux derni\350res lignes conduisent \340 une erreur, mettez \340 jour l'outil tc avec la derni\350re version !)S
15.8 FS/F9 SF 0 554.16 M(Limitation du d\351bit pour un h\364te ou un masque de sous-r\351seau)S
11 FS/F4 SF 0 526.792 M(Bien que ceci soit d\351crit en d\351tail ailleurs et dans nos pages de manuel, cette question est souvent pos\351e.)S
0 513.592 M(Heureusement, il y a une r\351ponse simple qui ne n\351cessite pas la compr\351hension compl\350te du contr\364le de trafic.)S
0 487.192 M(Ce script de trois lignes met en place la limitation du d\351bit :)S
9.2 FS/F0 SF 0 462.625 M(          tc qdisc add dev $DEV root handle 1: cbq avpkt 1000 bandwidth 10mbit )S
0 440.625 M(          tc class add dev $DEV parent 1: classid 1:1 cbq rate 512kbit \\)S
0 429.625 M(          allot 1500 prio 5 bounded isolated )S
0 407.625 M(          tc filter add dev $DEV parent 1: protocol ip prio 16 u32 \\)S
0 396.625 M(          match ip dst 195.96.96.97 flowid 1:1)S
11 FS/F4 SF 0 359.592 M(La premi\350re ligne installe un gestionnaire de mise en file d'attente bas\351 sur des classes sur votre interface, et)S
0 346.392 M(indique au noyau que, pour ses calculs, il peut la consid\351rer comme une interface \340 10 Mbits/s. Cependant, il)S
0 333.192 M(n'y aura pas de grands dommages si vous indiquez une valeur erron\351e. Donner la vraie valeur permettra)S
0 319.992 M(d'avoir des choses plus pr\351cises.)S
0 293.592 M(La seconde ligne cr\351e une classe de 512kbit/s avec des valeurs par d\351faut raisonnables. Pour les d\351tails, voir)S
0 280.392 M(les pages de manuel cbq et Chapitre 9>.)S
0 253.992 M(La derni\350re ligne indique quel trafic devra passer par la classe r\351alisant la mise en forme. Le trafic qui n'est)S
0 240.792 M(s\351lectionn\351 par cette r\350gle n'est PAS mis en forme. Pour avoir des s\351lections plus compliqu\351es \(sous-r\351seaux,)S
0 227.592 M(ports sources ou de destinations\), voir la section intitul\351e)S
/F6 SF ( Toutes les commandes de filtres dont vous aurez)S
0 214.392 M(normalement besoin)S
/F4 SF ( dans Chapitre 9>.)S
0 187.992 M(Si vous avez chang\351 quelque chose et que vous vouliez recharger le script, ex\351cutez la commande)S
/F5 SF ( tc qdisc del)S
0 174.792 M(dev $DEV root)S
/F4 SF ( pour supprimer votre configuration actuelle.)S
0 148.392 M(Le script peut \352tre am\351lior\351 en ajoutant une derni\350re ligne optionnelle)S
/F5 SF ( tc qdisc add dev $DEV parent 1:1 sfq)S
0 135.192 M(perturb 10)S
/F4 SF (. Voir la section intitul\351e)S
/F6 SF ( Mise en file d'attente stochastiquement \351quitable \(Stochastic Fairness)S
0 121.992 M(Queueing\))S
/F4 SF ( dans Chapitre 9> pour savoir ce que cela fait.)S
15.8 FS/F9 SF 0 88.752 M(Exemple d'une solution de translation d'adresse avec de la QoS)S
11 FS/F4 SF 0 61.384 M(Je m'appelle Pedro Larroy)S
/F0 SF 0 34.984 M(<piotr%member.fsf.org>)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Limitation du d\351bit pour un h\364te ou un masque de sous-r\351seau)S
474.768 0 M(99)S
GR
SP
%%Page: (100) 100
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 501.8 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(. Je d\351cris ici une configuration dans le cas o\371 de nombreux utilisateurs seraient connect\351s \340 Internet \340 travers)S
0 723.8 M(un routeur Linux qui poss\350de une adresse publique et qui r\351alise de la translation d'adresse \(NAT\). J'utilise)S
0 710.6 M(cette configuration QoS pour fournir l'acc\350s \340 198 utilisateurs dans une cit\351 universitaire dans laquelle je vis et)S
0 697.4 M(o\371 j'administre le r\351seau. Les utilisateurs sont de gros consommateurs de programmes "peer to peer" et un)S
0 684.2 M(contr\364le de trafic correct est n\351cessaire. J'esp\350re que ceci servira d'exemples pratiques \340 tous les lecteurs)S
0 671 M(int\351ress\351s par le lartc.)S
0 644.6 M(Dans un premier temps, la configuration sera r\351alis\351e pas \340 pas et, \340 la fin, j'expliquerai comment rendre ce)S
0 631.4 M(processus automatique au d\351marrage. Le r\351seau utilis\351 pour cet exemple est un r\351seau local connect\351 \340)S
0 618.2 M(Internet \340 travers un routeur Linux ayant une adresse publique. L'ajout d'un ensemble de r\350gles iptables)S
0 605 M(permettrait facilement l'extension \340 plusieurs adresses IP publiques. Les \351l\351ments suivants sont n\351cessaires :)S
0 578.6 M(Linux 2.4.18 ou une version du noyau sup\351rieure install\351e)S
36 565.4 M(Si vous utilisez le noyau 2.4.18, vous devrez appliquer la mise \340 jour HTB.)S
0 552.2 M(iproute)S
36 539 M(Soyez \351galement s\373r que le binaire "tc" est compatible avec HTB. Un binaire pr\351 compil\351 est)S
36 525.8 M(distribu\351 avec HTB.)S
0 512.6 M(iptables)S
13.2 FS/F9 SF 0 482 M(Commen\347ons l'optimisation de cette rare bande passante)S
11 FS/F4 SF 0 455.16 M(Tout d'abord, nous allons configurer des gestionnaires de mise en file d'attente dans lesquels nous allons)S
0 441.96 M(classifier le trafic. Nous cr\351ons un gestionnaire htb compos\351 de 6 classes avec des priorit\351s croissantes. Nous)S
0 428.76 M(avons alors des classes qui obtiendront le d\351bit allou\351 et qui pourront, de plus, utiliser la bande passante dont)S
0 415.56 M(les autres classes n'ont pas besoin. Rappelons que les classes de plus hautes priorit\351s \(correspondant aux)S
0 402.36 M(nombres prio les plus faibles\) obtiendront en premier l'exc\350s de bande passante. Notre liaison ADSL \340 un flux)S
0 389.16 M(descendant de 2Mbits/s et un flux montant de 300 kbits/s. J'utilise un d\351bit de seuil \(ceil rate\) de 240 kbits/s)S
0 375.96 M(car, au-del\340 de cette limite, les probl\350mes de latence commence \340 prendre de l'ampleur. Ceci est d\373 au)S
0 362.76 M(remplissage d'un tampon plac\351 quelque part entre nous et les h\364tes distants.)S
0 336.36 M(Ajuster la variable CEIL \340 75% de votre bande passante montante maximum et ajuster le nom de l'interface)S
0 323.16 M(\(eth0 dans la suite\) \340 celle qui a l'adresse publique Internet. Ex\351cutez ce qui suit dans un shell root :)S
9.2 FS/F0 SF 0 298.593 M(                        CEIL=240)S
0 287.593 M(                        tc qdisc add dev eth0 root handle 1: htb default 15)S
0 276.593 M(                        tc class add dev eth0 parent 1: classid 1:1 htb rate ${CEIL}kbit ceil ${CEIL}kbit)S
0 265.593 M(                        tc class add dev eth0 parent 1:1 classid 1:10 htb rate 80kbit ceil 80kbit prio 0)S
0 254.593 M(                        tc class add dev eth0 parent 1:1 classid 1:11 htb rate 80kbit ceil ${CEIL}kbit prio 1)S
0 243.593 M(                        tc class add dev eth0 parent 1:1 classid 1:12 htb rate 20kbit ceil ${CEIL}kbit prio 2)S
0 232.593 M(                        tc class add dev eth0 parent 1:1 classid 1:13 htb rate 20kbit ceil ${CEIL}kbit prio 2)S
0 221.593 M(                        tc class add dev eth0 parent 1:1 classid 1:14 htb rate 10kbit ceil ${CEIL}kbit prio 3)S
0 210.593 M(                        tc class add dev eth0 parent 1:1 classid 1:15 htb rate 30kbit ceil ${CEIL}kbit prio 3)S
0 199.593 M(                        tc qdisc add dev eth0 parent 1:12 handle 120: sfq perturb 10)S
0 188.593 M(                        tc qdisc add dev eth0 parent 1:13 handle 130: sfq perturb 10)S
0 177.593 M(                        tc qdisc add dev eth0 parent 1:14 handle 140: sfq perturb 10)S
0 166.593 M(                        tc qdisc add dev eth0 parent 1:15 handle 150: sfq perturb 10)S
11 FS/F4 SF 0 129.56 M(Nous avons juste cr\351\351 une arborescence htb avec un seul niveau de profondeur. Quelque chose comme ceci :)S
9.2 FS/F0 SF 0 104.993 M(                        +-----------+)S
0 93.993 M(                        | racine 1: |)S
0 82.993 M(                        +-----------+)S
0 71.993 M(                             |)S
0 60.993 M(                        +---------------------------------------+)S
0 49.993 M(                        | classe 1:1                            |)S
0 38.993 M(                        +---------------------------------------+)S
0 27.993 M(                          |      |      |      |      |      |      )S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(100)S
175.865 0 M(Exemple d'une solution de translation d'adresse avec de la QoS)S
GR
SP
%%Page: (101) 101
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 378.6 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(                        +----+ +----+ +----+ +----+ +----+ +----+)S
0 727.833 M(                        |1:10| |1:11| |1:12| |1:13| |1:14| |1:15| )S
0 716.833 M(                        +----+ +----+ +----+ +----+ +----+ +----+ )S
11 FS/F4 SF 0 679.8 M(classid 1:10 htb rate 80kbit ceil 80kbit prio 0)S
36 666.6 M(Ceci est la classe de priorit\351 la plus \351lev\351e. Les paquets de cette classe auront le plus faible d\351lai et)S
36 653.4 M(obtiendront en premier l'exc\350s de bande passante. C'est donc une bonne id\351e de limiter le d\351bit de)S
36 640.2 M(seuil de cette classe. Nous enverrons dans cette classe les paquets qui ont un avantage \340 avoir un)S
36 627 M(faible d\351lai, tel que le trafic interactif :)S
/F6 SF ( ssh, telnet, dns, quake3, irc, et les paquets avec le bit SYN)S
36 613.8 M(activ\351)S
/F4 SF (.)S
0 600.6 M(classid 1:11 htb rate 80kbit ceil ${CEIL}kbit prio 1)S
36 587.4 M(Nous avons ici la premi\350re classe dans laquelle nous commen\347ons \340 mettre du trafic de masse. Dans)S
36 574.2 M(mon exemple, j'ai le trafic provenant de mon serveur web local et les requ\352tes pour les pages web :)S
36 561 M(respectivement le port source 80 et le port destination 80.)S
0 547.8 M(classid 1:12 htb rate 20kbit ceil ${CEIL}kbit prio 2)S
36 534.6 M(Dans cette classe, je mettrai le trafic configur\351 avec le champ TOS "D\351bit Maximum" activ\351, ainsi)S
36 521.4 M(que le reste du trafic provenant des)S
/F6 SF ( processus locaux)S
/F4 SF ( de mon routeur vers Internet. Les classes)S
36 508.2 M(suivantes ne recevront donc que du trafic rout\351 par cette machine.)S
0 495 M(classid 1:13 htb rate 20kbit ceil ${CEIL}kbit prio 2)S
36 481.8 M(Cette classe est pour le trafic des autres machines "NAT\351es" \(NdT : b\351n\351ficiant du service de)S
36 468.6 M(translation d'adresse\) qui ont besoin d'une priorit\351 plus grande dans leur trafic de masse.)S
0 455.4 M(classid 1:14 htb rate 10kbit ceil ${CEIL}kbit prio 3)S
36 442.2 M(Le trafic mail \(SMTP, pop3,...\) et les paquets configur\351s avec le champ TOS "Co\373t Minimum" seront)S
36 429 M(envoy\351s dans cette classe.)S
0 415.8 M(classid 1:15 htb rate 30kbit ceil ${CEIL}kbit prio 3)S
36 402.6 M(Finalement, nous avons ici le trafic de masse des machines "NAT\351es" se trouvant derri\350re le routeur.)S
36 389.4 M(Les paquets li\351s \340 kazaa, edonkey et autres iront ici pour ne pas interf\351rer avec les autres services.)S
13.2 FS/F9 SF 0 358.8 M(Classification des paquets)S
11 FS/F4 SF 0 331.96 M(Nous avons configur\351 le gestionnaire de mise en file d'attente, mais aucune classification de paquets n'a)S
0 318.76 M(encore \351t\351 faite. Pour l'instant, tous les paquets sortants passent par la classe 1:15 \(car, nous avons utilis\351 : tc)S
0 305.56 M(qdisc add dev eth0 root handle 1: htb)S
/F6 SF ( default 15)S
/F4 SF (\). Nous devons donc maintenant indiquer o\371 doivent aller les)S
0 292.36 M(paquets. Ceci est la partie la plus importante.)S
0 265.96 M(Nous allons maintenant configurer les filtres de tel sorte que nous puissions classifier les paquets avec)S
0 252.76 M(iptables. Je pr\351f\350re vraiment le faire avec iptables car celui-ci est tr\350s souple et que nous avons un compteur)S
0 239.56 M(de paquets pour chaque r\350gle. De plus, avec la cible RETURN, les paquets n'ont pas besoin de traverser toutes)S
0 226.36 M(les r\350gles. Nous ex\351cutons les commandes suivantes :)S
9.2 FS/F0 SF 0 201.793 M(                        tc filter add dev eth0 parent 1:0 protocol ip prio 1 handle 1 fw classid 1:10)S
0 190.793 M(                        tc filter add dev eth0 parent 1:0 protocol ip prio 2 handle 2 fw classid 1:11)S
0 179.793 M(                        tc filter add dev eth0 parent 1:0 protocol ip prio 3 handle 3 fw classid 1:12)S
0 168.793 M(                        tc filter add dev eth0 parent 1:0 protocol ip prio 4 handle 4 fw classid 1:13)S
0 157.793 M(                        tc filter add dev eth0 parent 1:0 protocol ip prio 5 handle 5 fw classid 1:14)S
0 146.793 M(                        tc filter add dev eth0 parent 1:0 protocol ip prio 6 handle 6 fw classid 1:15)S
11 FS/F4 SF 0 109.76 M(Nous indiquons simplement au noyau que les paquets qui ont une valeur FWMARK sp\351cifique \(handle x fw\))S
0 96.56 M(vont dans la classe sp\351cifi\351e \(classid x:x\). Voyons maintenant comment marquer les paquets avec iptables.)S
0 70.16 M(Tout d'abord, nous devons comprendre comment les paquets traversent les filtres avec iptables :)S
9.2 FS/F0 SF 0 45.593 M(                                +------------+                +---------+               +-------------+)S
0 34.593 M(                        Paquets-| PREROUTING |--- D\351cision----| FORWARD |-------+-------| POSTROUTING |- Paquets)S
0 23.593 M(                        entrant +------------+   de routage   +-\255-------+       |       +-------------+  sortants  )S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Commen\347ons l'optimisation de cette rare bande passante)S
468.652 0 M(101)S
GR
SP
%%Page: (102) 102
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 9.2 FS/F0 SF 0 738.833 M(                                                     |                          |)S
0 727.833 M(                                                +-------+                    +--------+   )S
0 716.833 M(                                                | INPUT |-- Processus locaux-| OUTPUT |)S
0 705.833 M(                                                +-------+                    +--------+)S
11 FS/F4 SF 0 657.8 M(Je suppose que toutes vos tables ont leur politique par d\351faut configur\351e \340 ACCEPT \(-P ACCEPT\), ce qui)S
0 644.6 M(devrait \352tre le cas si vous n'avez pas encore touch\351 \340 iptables. Notre r\351seau priv\351 est une classe B avec)S
0 631.4 M(l'adresse 172.17.0.0/16 et notre adresse publique est 212.170.21.172.)S
0 605 M(Nous indiquons au noyau de faire de la translation d'adresse)S
/F6 SF ( NAT)S
/F4 SF (; les clients du r\351seau priv\351 peuvent alors)S
0 591.8 M(commencer \340 dialoguer avec l'ext\351rieur.)S
9.2 FS/F0 SF 0 567.233 M(                        echo 1 > /proc/sys/net/ipv4/ip_forward)S
0 556.233 M(                        iptables -t nat -A POSTROUTING -s 172.17.0.0/255.255.0.0 -o eth0 -j SNAT --to-source 212.170.21.172)S
11 FS/F4 SF 0 519.2 M(V\351rifions maintenant que les paquets transitent bien \340 travers 1:15 :)S
9.2 FS/F0 SF 0 494.633 M(                        tc -s class show dev eth0)S
11 FS/F4 SF 0 457.6 M(Vous pouvez commencer \340 marquer les paquets en ajoutant les r\350gles dans la cha\356ne PREROUTING de la)S
0 444.4 M(table mangle.)S
9.2 FS/F0 SF 0 419.833 M(                        iptables -t mangle -A PREROUTING -p icmp -j MARK --set-mark 0x1)S
0 408.833 M(                        iptables -t mangle -A PREROUTING -p icmp -j RETURN)S
11 FS/F4 SF 0 371.8 M(Vous devriez maintenant \352tre capable de voir l'\351volution du compteur de paquets quand vous pinguez des sites)S
0 358.6 M(sur Internet depuis les machines du r\351seau priv\351. V\351rifiez que le compteur de paquets augmente dans 1:10 :)S
9.2 FS/F0 SF 0 334.033 M(                        tc -s class show dev eth0)S
11 FS/F4 SF 0 297 M(Nous avons mis -j RETURN de mani\350re \340 ce que les paquets ne traversent pas toutes les r\350gles. Les paquets)S
0 283.8 M(icmp ne scruteront pas les autres r\350gles d\351finies sous RETURN. Gardez ceci \340 l'esprit. Nous commen\347ons)S
0 270.6 M(maintenant \340 ajouter d'autres r\350gles pour g\351rer les champs TOS :)S
9.2 FS/F0 SF 0 246.033 M(                        iptables -t mangle -A PREROUTING -m tos --tos Minimize-Delay -j MARK --set-mark 0x1)S
0 235.033 M(                        iptables -t mangle -A PREROUTING -m tos --tos Minimize-Delay -j RETURN)S
0 224.033 M(                        iptables -t mangle -A PREROUTING -m tos --tos Minimize-Cost -j MARK --set-mark 0x5)S
0 213.033 M(                        iptables -t mangle -A PREROUTING -m tos --tos Minimize-Cost -j RETURN)S
0 202.033 M(                        iptables -t mangle -A PREROUTING -m tos --tos Maximize-Throughput -j MARK --set-mark 0x6)S
0 191.033 M(                        iptables -t mangle -A PREROUTING -m tos --tos Maximize-Throughput -j RETURN)S
11 FS/F4 SF 0 154 M(Donnons la priorit\351 aux paquets SSH :)S
9.2 FS/F0 SF 0 129.433 M(                        iptables -t mangle -A PREROUTING -p tcp -m tcp --sport 22 -j MARK --set-mark 0x1)S
0 118.433 M(                        iptables -t mangle -A PREROUTING -p tcp -m tcp --sport 22 -j RETURN)S
11 FS/F4 SF 0 81.4 M(Une bonne id\351e est de donner la priorit\351 aux paquets initiant une connexion tcp, \340 savoir ceux qui ont le bit)S
0 68.2 M(SYN activ\351 :)S
9.2 FS/F0 SF 0 43.633 M(                        iptables -t mangle -I PREROUTING -p tcp -m tcp --tcp-flags SYN,RST,ACK SYN -j MARK --set-mark 0x1)S
0 32.633 M(                        iptables -t mangle -I PREROUTING -p tcp -m tcp --tcp-flags SYN,RST,ACK SYN -j RETURN)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(102)S
359.224 0 M(Classification des paquets)S
GR
SP
%%Page: (103) 103
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 534.8 M 487.0 2.0 F
0 314.56 M 487.0 2.0 F
0 191.12 M 487.0 2.0 F
11 FS/F4 SF 0 712.8 M(Et ainsi de suite. Apr\350s la mise en place des r\350gles dans la cha\356ne PREROUTING de la table "mangle", nous)S
0 699.6 M(terminons par :)S
9.2 FS/F0 SF 0 675.033 M(                        iptables -t mangle -A PREROUTING -j MARK --set-mark 0x6)S
11 FS/F4 SF 0 638 M(Ainsi, le trafic non marqu\351 est dirig\351 vers 1:15. En fait, cette derni\350re \351tape n'est pas n\351cessaire puisque la)S
0 624.8 M(classe par d\351faut est 1:15. Un marquage est quand m\352me r\351alis\351 de mani\350re \340 avoir une coh\351rence pour)S
0 611.6 M(l'ensemble de la configuration. De plus, il est utile d'avoir une comptabilit\351 pour cette r\350gle.)S
0 585.2 M(C'est une bonne id\351e de faire de m\352me avec la cha\356ne OUTPUT. R\351p\351tez ces commandes avec -A OUTPUT \340)S
0 572 M(la place de PREROUTING \(s/PREROUTING/OUTPUT/\). Le trafic g\351n\351r\351 localement \(sur le routeur Linux\))S
0 558.8 M(sera alors \351galement classifi\351. Je termine la cha\356ne OUTPUT par -j MARK --set-mark 0x3 de tel sorte que le)S
0 545.6 M(trafic local ait une priorit\351 plus grande.)S
13.2 FS/F9 SF 0 515 M(Am\351liorer notre configuration)S
11 FS/F4 SF 0 488.16 M(Toute notre configuration est maintenant op\351rationnelle. Prenez du temps pour regarder les graphes et)S
0 474.96 M(observer o\371 votre bande passante est la plus utilis\351e et cela correspond \340 vos souhaits. J'ai fait ceci pendant de)S
0 461.76 M(nombreuses heures, ce qui m'a permis d'avoir une connexion Internet fonctionnant tr\350s bien. Autrement, vous)S
0 448.56 M(serez confront\351 en permanence \340 des "timeout" et des allocations de bande passante presque nulles pour les)S
0 435.36 M(nouvelles connexions tcp.)S
0 408.96 M(Si vous rep\351rez des classes qui sont pleines la plupart du temps, ce peut \352tre une bonne id\351e de leur attacher)S
0 395.76 M(un autre gestionnaire de mise en file d'attente de mani\350re \340 ce que le partage de la bande passante soit plus)S
0 382.56 M(\351quitable :)S
9.2 FS/F0 SF 0 357.993 M(                        tc qdisc add dev eth0 parent 1:13 handle 130: sfq perturb 10)S
0 346.993 M(                        tc qdisc add dev eth0 parent 1:14 handle 140: sfq perturb 10)S
0 335.993 M(                        tc qdisc add dev eth0 parent 1:15 handle 150: sfq perturb 10)S
13.2 FS/F9 SF 0 294.76 M(Rendre tout ceci actif au d\351marrage)S
11 FS/F4 SF 0 267.92 M(Il est certain que ceci peut \352tre fait de diff\351rentes fa\347ons. Dans mon cas, j'ai un shell script)S
/F0 SF 0 254.72 M(/etc/init.d/packetfilter)S
/F4 SF ( qui accepte les arguments [start | stop | stop-tables | start-tables |)S
0 241.52 M(reload-tables]. Celui-ci configure les gestionnaires de mise en file d'attente et charge les modules du noyau)S
0 228.32 M(n\351cessaires et se comporte donc comme une d\351mon. Le m\352me script charge les r\350gles iptables \340 partir de)S
/F0 SF 0 215.12 M(/etc/network/iptables-rules)S
/F4 SF (. Je vais l'embellir un peu et le rendrait disponible sur ma page web)S
0 201.92 M(ici)S
19 FS/F9 SF 0 165.512 M(Chapitre 16. Construire des ponts et des pseudo)S
0 142.702 M(ponts avec du Proxy ARP)S
11 FS/F4 SF 0 114.7 M(Les ponts sont des p\351riph\351riques qui peuvent \352tre install\351s dans un r\351seau sans aucune reconfiguration. Un)S
0 101.5 M(commutateur r\351seau est basiquement un pont multi-ports. Un pont est souvent un commutateur avec 2 ports.)S
0 88.3 M(Cependant, Linux supporte tr\350s bien plusieurs interfaces dans un pont, le conduisant \340 fonctionner comme un)S
0 75.1 M(vrai commutateur.)S
0 48.7 M(Les ponts sont souvent d\351ploy\351s quand on est confront\351 \340 un r\351seau d\351faillant qui a besoin d'\352tre r\351par\351 sans)S
0 35.5 M(aucune modification. Dans la mesure o\371 un pont est un \351quipement de niveau 2, la couche sous la couche IP,)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Chapitre 16. Construire des ponts et des pseudo ponts avec du Proxy ARP)S
468.652 0 M(103)S
GR
SP
%%Page: (104) 104
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 581 M 487.0 2.0 F
0 441.192 M 487.0 2.0 F
0 354.184 M 487.0 2.0 F
0 42.776 M 487.0 2.0 F
11 FS/F4 SF 0 737 M(les routeurs et serveurs ne sont pas conscients de son existence. Ceci signifie que vous pouvez bloquer ou)S
0 723.8 M(modifier certains paquets de mani\350re transparente ou mettre en forme le trafic.)S
0 697.4 M(Un autre \351l\351ment positif est qu'un pont peut souvent \352tre remplac\351 par un c\342ble crois\351 ou un hub quand il)S
0 684.2 M(tombe en panne.)S
0 657.8 M(L'aspect n\351gatif est que la mise en place d'un pont peut engendrer beaucoup de confusion, \340 moins qu'il ne soit)S
0 644.6 M(tr\350s bien configur\351. Le pont n'appara\356t pas dans les traceroute, mais pourtant des paquets disparaissent sans)S
0 631.4 M(raison ou sont chang\351s en allant d'un point A \340 un point B \('ce r\351seau est HANTE !\). Vous devriez \351galement)S
0 618.2 M(vous demander si une organisation qui "ne veut rien changer" fait le bon choix.)S
0 591.8 M(Le)S
/F6 SF ( pont Linux 2.4/2.5)S
/F4 SF ( est document\351 sur cette page.)S
15.8 FS/F9 SF 0 558.56 M(Etat des ponts et iptables)S
11 FS/F4 SF 0 531.192 M(Au moment de Linux 2.4.20, le pont et iptables ne se "voient" pas l'un l'autre sans une aide. Si vous "pontez")S
0 517.992 M(les paquets de eth0 \340 eth1, ils ne "passent" pas par iptables. Ceci signifie que vous ne pouvez pas faire de)S
0 504.792 M(filtrage, de translation d'adresse \(NAT\), de d\351sossage ou quoique ce soit d'autres. Ceci a \351t\351 corrig\351 dans les)S
0 491.592 M(versions 2.5.45 et sup\351rieures.)S
0 465.192 M(Vous devriez \351galement regarder 'ebtables', qui est encore un autre projet. Il vous permettra de faire des)S
0 451.992 M(choses vraiment terribles comme MACNAT et 'brouting'. C'est vraiment effroyable.)S
15.8 FS/F9 SF 0 418.752 M(Pont et mise en forme)S
11 FS/F4 SF 0 391.384 M(Ca marche comme dans les r\351clames. Soyez s\373r du c\364t\351 attribu\351 \340 chaque interface. Autrement, il se peut que)S
0 378.184 M(vous mettiez en forme le trafic sortant au niveau de votre interface interne, ce qui ne marchera pas. Utilisez)S
0 364.984 M(tcpdump si n\351cessaire.)S
15.8 FS/F9 SF 0 331.744 M(Pseudo-pont avec du Proxy-ARP)S
11 FS/F4 SF 0 304.376 M(Si vous voulez juste impl\351menter un pseudo pont, allez jusqu'\340 la section "Impl\351mentez-le". Cependant, il est)S
0 291.176 M(sage de lire un peu la fa\347on dont il fonctionne en pratique.)S
0 264.776 M(Un pseudo pont travaille de mani\350re un peu diff\351rente. Par d\351faut, un pont transmet les paquets sans les alt\351rer)S
0 251.576 M(d'une interface \340 une autre. Il ne regarde que l'adresse mat\351rielle des paquets pour d\351terminer o\371 ils doivent)S
0 238.376 M(aller. Ceci signifie que vous pouvez "pontez" un trafic que Linux ne comprend pas, aussi longtemps qu'il y a)S
0 225.176 M(une adresse mat\351rielle.)S
0 198.776 M(Un "pseudo pont" travaille diff\351remment et ressemble plus \340 un routeur cach\351 qu'\340 un pont. Mais, comme un)S
0 185.576 M(pont, il a un impact faible sur l'architecture du r\351seau.)S
0 159.176 M(Le fait qu'il ne soit pas un pont pr\351sente l'avantage que les paquets traversent r\351ellement le noyau, et peuvent)S
0 145.976 M(\352tre filtr\351s, modifi\351s, redirig\351s ou rerout\351s.)S
0 119.576 M(Un pont r\351el peut \351galement r\351aliser ces tours de force, mais il a besoin d'un code sp\351cial, comme le Ethernet)S
0 106.376 M(Frame Diverter ou la mise \340 jour mentionn\351e au-dessus.)S
0 79.976 M(Un autre avantage d'un pseudo pont est qu'il ne transmet pas les paquets qu'il ne comprend pas, nettoyant ainsi)S
0 66.776 M(votre r\351seau de beaucoup de cochonneries. Dans le cas o\371 vous auriez besoin de ces cochonneries \(comme les)S
0 53.576 M(paquets SAP ou Netbeui\), utilisez un vrai pont.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(104)S
363.481 0 M(Etat des ponts et iptables)S
GR
SP
%%Page: (105) 105
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 525.56 M 487.0 2.0 F
0 45.72 M 487.0 2.0 F
13.2 FS/F9 SF 0 734.8 M(ARP & Proxy-ARP)S
11 FS/F4 SF 0 707.96 M(Quand un h\364te veut dialoguer avec un autre h\364te sur le m\352me segment physique, il envoie un paquet du)S
0 694.76 M(Protocole de R\351solution d'Adresse \(ARP\) qui, en simplifiant quelque peu, est lu comme ceci : "Qui a 10.0.0.1,)S
0 681.56 M(le dire \340 10.0.0.7". En r\351ponse \340 ceci, 10.0.0.1 renvoie un petit paquet "ici".)S
0 655.16 M(10.0.0.7 envoie alors des paquets \340 l'adresse mat\351rielle mentionn\351e dans le paquet "ici". Il met dans un cache)S
0 641.96 M(cette adresse mat\351rielle pour un temps relativement long et, apr\350s l'expiration du cache, repose sa question.)S
0 615.56 M(Quand on construit un pseudo pont, on configure le pont pour qu'il r\351ponde \340 ces paquets ARP, les h\364tes du)S
0 602.36 M(r\351seau envoyant alors leurs paquets au pont. Le pont traite alors ces paquets et les envoie \340 l'interface adapt\351e.)S
0 575.96 M(Donc, en r\351sum\351, quand un h\364te d'un c\364t\351 du pont demande l'adresse mat\351rielle d'un h\364te se situant de l'autre)S
0 562.76 M(c\364t\351, le pont r\351pond avec un paquet qui dit "transmets le moi".)S
0 536.36 M(De cette fa\347on, tout le trafic de donn\351es est transmis \340 la bonne place et il traverse toujours le pont.)S
13.2 FS/F9 SF 0 505.76 M(Impl\351mentez-le)S
11 FS/F4 SF 0 478.92 M(Les versions anciennes du noyau linux permettait de faire du proxy ARP uniquement \340 une granularit\351 sous)S
0 465.72 M(r\351seaux. Ainsi, pour configurer un pseudo pont, il fallait sp\351cifier les bonnes routes vers les deux c\364t\351s du)S
0 452.52 M(pont, et \351galement cr\351er les r\350gles proxy-ARP correspondantes. C'\351tait p\351nible, d\351j\340 par la quantit\351 de texte)S
0 439.32 M(qu'il fallait taper, puis parce qu'il \351tait facile de se tromper et cr\351er des configurations erron\351es, o\371 le pont)S
0 426.12 M(r\351pondait \340 des requ\352tes pour des r\351seaux qu'il ne savait pas router.)S
0 399.72 M(Avec Linux 2.4 \(et peut-\352tre bien le 2.2\), cette possibilit\351 a \351t\351 retir\351e et a \351t\351 remplac\351e par une option dans)S
0 386.52 M(le r\351pertoire /proc, appel\351e "proxy-arp". La proc\351dure pour construire un pseudo pont est maintenant :)S
36 360.12 M(Assigner une adresse \340 chaque interface, la "gauche" et la "droite")S
25 360.12 M(1. )S
36 346.92 M(Cr\351er des routes pour que votre machine connaisse quels h\364tes r\351sident \340 gauche et quels h\364tes)S
36 333.72 M(r\351sident \340 droite)S
25 346.92 M(2. )S
36 320.52 M(Activer le proxy-ARP sur chaque interface echo 1 > /proc/sys/net/ipv4/conf/ethL/proxy&lowbar;arp)S
36 307.32 M(echo 1 > /proc/sys/net/ipv4/conf/ethR/proxy&lowbar;arp o\371 L et R d\351signent les num\351ros de)S
36 294.12 M(l'interface du c\364t\351 gauche \(Left\) et de celle du c\364t\351 droit \(Right\))S
25 320.52 M(3. )S
0 241.32 M(N'oubliez pas \351galement d'activer l'option ip&lowbar;forwarding ! Quand on convertit un vrai pont, il se peut)S
0 228.12 M(que vous trouviez cette option d\351sactiv\351e dans la mesure o\371 il n'y en a pas besoin pour un pont.)S
0 201.72 M(Une autre chose que vous devriez consid\351rer lors de la conversion est que vous aurez besoin d'effacer le cache)S
0 188.52 M(arp des ordinateurs du r\351seau. Le cache arp peut contenir d'anciennes adresses mat\351rielles du pont qui ne sont)S
0 175.32 M(plus correctes.)S
0 148.92 M(Sur un Cisco, ceci est r\351alis\351 en utilisant la commande 'clear arp-cache' et, sous linux, en utilisant 'arp -d)S
0 135.72 M(ip.adresse'. Vous pouvez aussi attendre l'expiration manuelle du cache, ce qui peut \352tre plut\364t long.)S
0 109.32 M(Il se peut que vous d\351couvriez \351galement que votre r\351seau \351tait mal configur\351 si vous avez/aviez l'habitude de)S
0 96.12 M(sp\351cifier les routes sans les masques de sous-r\351seau. Dans le pass\351, certaines versions de)S
/F5 SF ( route)S
/F4 SF ( pouvaient)S
0 82.92 M(correctement deviner le masque ou, au contraire, se tromper sans pour autant vous le notifier. Quand vous)S
0 69.72 M(faites du routage chirurgical comme d\351crit plus haut, il est *vital* que vous v\351rifiez vos masques de)S
0 56.52 M(sous-r\351seau.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(ARP & Proxy-ARP)S
468.652 0 M(105)S
GR
SP
%%Page: (106) 106
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 267.79 M 487.0 2.0 F
19 FS/F9 SF 0 728.992 M(Chapitre 17. Routage Dynamique - OSPF et BGP)S
11 FS/F4 SF 0 700.99 M(Si votre r\351seau commence \340 devenir vraiment gros ou si vous commencez \340 consid\351rer Internet comme votre)S
0 687.79 M(propre r\351seau, vous avez besoin d'outils qui routent dynamiquement vos donn\351es. Les sites sont souvent reli\351s)S
0 674.59 M(entre eux par de multiples liens, et de nouveaux liens surgissent en permanence.)S
0 648.19 M(L'Internet utilise la plupart du temps les standards OSPF \(RFC 2328\) et BGP4 \(RFC 1771\). Linux supporte)S
0 634.99 M(les deux, par le biais de )S
/F0 SF (gated)S
/F4 SF ( et )S
/F0 SF (zebra)S
/F4 SF (.)S
0 608.59 M(Ce sujet est pour le moment hors du propos de ce document, mais laissez-nous vous diriger vers des travaux)S
0 595.39 M(de r\351f\351rence :)S
0 568.99 M(Vue d'ensemble :)S
0 542.59 M(Cisco Systems Cisco Systems Designing large-scale IP Internetworks)S
0 516.19 M(Pour OSPF :)S
0 489.79 M(Moy, John T. "OSPF. The anatomy of an Internet routing protocol" Addison Wesley. Reading, MA. 1998.)S
0 463.39 M(Halabi a aussi \351crit un tr\350s bon guide sur la conception du routage OSPF, mais il semble avoir \351t\351 effac\351 du)S
0 450.19 M(site Web de Cisco.)S
0 423.79 M(Pour BGP :)S
0 397.39 M(Halabi, Bassam "Internet routing architectures" Cisco Press \(New Riders Publishing\). Indianapolis, IN. 1997.)S
0 370.99 M(Il existe aussi)S
0 344.59 M(Cisco Systems)S
0 318.19 M(Using the Border Gateway Protocol for Interdomain Routing)S
0 291.79 M(Bien que les exemples soient sp\351cifiques \340 Cisco, ils sont remarquablement semblables au langage de)S
0 278.59 M(configuration de Zebra :-\))S
15.8 FS/F9 SF 0 245.35 M(Configurer OSPF avec Zebra)S
11 FS/F4 SF 0 217.982 M(Contactez-moi si les informations qui suivent ne sont pas exactes ou si vous avez des suggestions. Zebra est)S
0 204.782 M(un formidable logiciel de routage dynamique \351crit par Kunihiro Ishiguro, Toshiaki Takada et Yasuhiro Ohara.)S
0 191.582 M(Configurer OSPF avec zebra est simple et rapide mais, en pratique, il y a de nombreux param\350tres dans le cas)S
0 178.382 M(o\371 vous auriez des besoins sp\351cifiques. OSPF est l'abr\351viation de Open Shortest Path First et quelques une de)S
0 165.182 M(ses fonctionnalit\351s sont :)S
0 138.782 M(hi\351rarchique)S
36 125.582 M(Les r\351seaux sont regroup\351s par)S
/F6 SF ( zones)S
/F4 SF ( \()S
/F6 SF (areas)S
/F4 SF (\), qui sont interconnect\351es par une)S
/F6 SF ( zone \351pine dorsale)S
/F4 SF ( qui)S
36 112.382 M(sera appel\351e)S
/F6 SF ( zone 0)S
/F4 SF (. Tout le trafic passe par la zone 0 et tous les routeurs de cette zone ont les)S
36 99.182 M(informations de routage de toutes les autres zones.)S
0 85.982 M(convergence rapide)S
36 72.782 M(Les routes sont propag\351es tr\350s rapidement, compar\351 \340 RIP par exemple.)S
0 59.582 M(\351conomie de bande passante)S
36 46.382 M(Utilise la multi-distribution \340 la place de la diffusion, ce qui \351vite de submerger les autres h\364tes avec)S
36 33.182 M(des informations de routage sans int\351r\352t pour eux. La multi-distribution r\351duit ainsi le d\351bit sur le)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(106)S
245.506 0 M(Chapitre 17. Routage Dynamique - OSPF et BGP)S
GR
SP
%%Page: (107) 107
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 541.4 M 487.0 2.0 F
0 417.96 M 487.0 2.0 F
11 FS/F4 SF 36 737 M(r\351seau. De m\352me,)S
/F6 SF ( les routeurs internes)S
/F4 SF ( \(ceux dont toutes les interfaces sont situ\351es dans la m\352me)S
36 723.8 M(zone\) n'obtiennent pas d'informations sur les autres zones. Les routeurs avec des interfaces dans plus)S
36 710.6 M(d'une zone sont appel\351s)S
/F6 SF ( Area Border Routers)S
/F4 SF (. Ils poss\350dent les informations de topologie sur les)S
36 697.4 M(zones auxquelles ils sont connect\351s.)S
0 684.2 M(Utilisation intensive de CPU)S
36 671 M(OSPF est bas\351 sur l'algorithme de Dijkstra Shortest Path First, qui est co\373teux en temps de calcul)S
36 657.8 M(compar\351 aux autres algorithmes de routage. Ce n'est pas forc\351ment mauvais, dans la mesure o\371 le plus)S
36 644.6 M(court chemin est calcul\351 uniquement pour chaque zone. Donc, pour les r\351seaux de petite \340 moyenne)S
36 631.4 M(taille, ce ne sera pas un probl\350me ; vous ne vous en rendrez pas compte.)S
0 618.2 M(Information d'\351tat de lien)S
36 605 M(OSPF prend en compte les caract\351ristiques sp\351cifiques des r\351seaux et interfaces, telles que la bande)S
36 591.8 M(passante, les d\351fauts de liens et le co\373t mon\351taire.)S
0 578.6 M(Protocole ouvert et logiciel sous license GPL)S
36 565.4 M(OSPF est un protocole ouvert et Zebra est un logiciel sous license GPL, ce qui repr\351sente un avantage)S
36 552.2 M(\351vident par rapport aux protocoles et logiciels propri\351taires.)S
13.2 FS/F9 SF 0 521.6 M(Pr\351requis)S
11 FS/F4 SF 0 494.76 M(Noyau Linux :)S
36 481.56 M(Compil\351 avec CONFIG_NETLINK_DEV and CONFIG_IP_MULTICAST \(Je ne sais pas si d'autres)S
36 468.36 M(\351l\351ments sont \351galement n\351cessaires\).)S
0 455.16 M(Iproute)S
0 441.96 M(Zebra)S
36 428.76 M(R\351cup\351rez-le avec votre gestionnaire de paquet favori ou \340 partir de http://www.zebra.org.)S
13.2 FS/F9 SF 0 398.16 M(Configurer Zebra)S
11 FS/F4 SF 0 371.32 M(Prenons le r\351seau suivant comme exemple :)S
9.2 FS/F0 SF 0 346.753 M(                        ----------------------------------------------------)S
0 335.753 M(                        | 192.168.0.0/24                                   |)S
0 324.753 M(                        |                                                  |)S
0 313.753 M(                        |      Zone 0    100BaseTX Commut\351                 |)S
0 302.753 M(                        |     Epine dorsale     Ethernet                   |)S
0 291.753 M(                        ----------------------------------------------------)S
0 280.753 M(                          |           |                |              |)S
0 269.753 M(                          |           |                |              |)S
0 258.753 M(                          |eth1       |eth1            |eth0          |)S
0 247.753 M(                          |100BaseTX  |100BaseTX       |100BaseTX     |100BaseTX)S
0 236.753 M(                          |.1         |.2              |.253          |)S
0 225.753 M(                         ---------   ------------   -----------      ----------------)S
0 214.753 M(                         |R Omega|   |R Atlantis|   |R Legolas|      |R Frodo       |)S
0 203.753 M(                         ---------   ------------   -----------      ----------------)S
0 192.753 M(                          |eth0         |eth0             |             |          |)S
0 181.753 M(                          |             |                 |             |          |)S
0 170.753 M(                          |2MbDSL/ATM   |100BaseTX        |10BaseT      |10BaseT   |10BaseT)S
0 159.753 M(                        ------------   ------------------------------------       -------------------------------)S
0 148.753 M(                        | Internet |   | 172.17.0.0/16        Zone 1      |       | 192.168.1.0/24 wlan  Zone 2 |)S
0 137.753 M(                        ------------   |     R\351seau etudiant \(dortoir\)    |       |   Sans fil de Barcelone     |)S
0 126.753 M(                                       ------------------------------------       -------------------------------)S
11 FS/F4 SF 0 89.72 M(Ne soyez pas effray\351 par ce diagramme, Zebra r\351alise la plus grande partie du travail automatiquement ; ce)S
0 76.52 M(qui ne demandera aucun travail de saisie des routes avec Zebra. Il serait p\351nible de maintenir toutes ces routes)S
0 63.32 M(\340 la main au quotidien. La chose la plus importante \340 ma\356triser clairement, c'est la topologie du r\351seau. Faites)S
0 50.12 M(particuli\350rement attention \340 la zone 0, puisque c'est la plus importante. Dans un premier temps, configurez)S
0 36.92 M(Zebra en \351ditant zebra.conf et en l'adaptant \340 vos besoins :)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Configurer OSPF avec Zebra)S
468.652 0 M(107)S
GR
SP
%%Page: (108) 108
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 268.6 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(                        hostname omega)S
0 727.833 M(                        password xxx )S
0 716.833 M(                        enable password xxx)S
0 705.833 M(                        !)S
0 694.833 M(                        ! Interface's description.)S
0 683.833 M(                        !)S
0 672.833 M(                        !interface lo)S
0 661.833 M(                        ! description test of desc.)S
0 650.833 M(                        !)S
0 639.833 M(                        interface eth1)S
0 628.833 M(                        multicast)S
0 617.833 M(                        !)S
0 606.833 M(                        ! Static default route)S
0 595.833 M(                        !)S
0 584.833 M(                        ip route 0.0.0.0/0 212.170.21.129)S
0 573.833 M(                        !)S
0 562.833 M(                        log file /var/log/zebra/zebra.log)S
11 FS/F4 SF 0 525.8 M(Debian n\351cessite \351galement l'\351dition de )S
/F0 SF (/etc/zebra/daemons)S
/F4 SF ( pour qu'ils soient lanc\351s au d\351marrage :)S
9.2 FS/F0 SF 0 501.233 M(                        zebra=yes)S
0 490.233 M(                        ospfd=yes)S
11 FS/F4 SF 0 453.2 M(Nous devons maintenant editer ospfd.conf si vous utilisez encore IPV4 ou ospf6d.conf si vous travaillez avec)S
0 440 M(IPV6. Mon fichier ospfd.conf ressemble \340 ceci :)S
9.2 FS/F0 SF 0 415.433 M(                        hostname omega)S
0 404.433 M(                        password xxx)S
0 393.433 M(                        enable password xxx)S
0 382.433 M(                        !)S
0 371.433 M(                        router ospf)S
0 360.433 M(                          network 192.168.0.0/24 area 0)S
0 349.433 M(                          network 172.17.0.0/16 area 1)S
0 338.433 M(                        !)S
0 327.433 M(                        ! log stdout)S
0 316.433 M(                        log file /var/log/zebra/ospfd.log)S
11 FS/F4 SF 0 279.4 M(Ceci indique \340 ospf la topologie de notre r\351seau.)S
13.2 FS/F9 SF 0 248.8 M(Ex\351cuter Zebra)S
11 FS/F4 SF 0 221.96 M(Nous devons maintenant d\351marrer Zebra soit \340 la main en tapant "zebra -d", soit avec un script comme)S
0 208.76 M("/etc/init.d/zebra start". En regardant attentivement les logs de ospdfd, on peut voir les \351l\351ments suivants :)S
9.2 FS/F0 SF 0 184.193 M(                        2002/12/13 22:46:24 OSPF: interface 192.168.0.1 join AllSPFRouters Multicast group.)S
0 173.193 M(                        2002/12/13 22:46:34 OSPF: SMUX_CLOSE with reason: 5   )S
0 162.193 M(                        2002/12/13 22:46:44 OSPF: SMUX_CLOSE with reason: 5)S
0 151.193 M(                        2002/12/13 22:46:54 OSPF: SMUX_CLOSE with reason: 5   )S
0 140.193 M(                        2002/12/13 22:47:04 OSPF: SMUX_CLOSE with reason: 5   )S
0 129.193 M(                        2002/12/13 22:47:04 OSPF: DR-Election[1st]: Backup 192.168.0.1)S
0 118.193 M(                        2002/12/13 22:47:04 OSPF: DR-Election[1st]: DR     192.168.0.1)S
0 107.193 M(                        2002/12/13 22:47:04 OSPF: DR-Election[2nd]: Backup 0.0.0.0)S
0 96.193 M(                        2002/12/13 22:47:04 OSPF: DR-Election[2nd]: DR     192.168.0.1)S
0 85.193 M(                        2002/12/13 22:47:04 OSPF: interface 192.168.0.1 join AllDRouters Multicast group.)S
0 74.193 M(                        2002/12/13 22:47:06 OSPF: DR-Election[1st]: Backup 192.168.0.2)S
0 63.193 M(                        2002/12/13 22:47:06 OSPF: DR-Election[1st]: DR     192.168.0.1)S
0 52.193 M(                        2002/12/13 22:47:06 OSPF: Packet[DD]: Negotiation done \(Slave\).)S
0 41.193 M(                        2002/12/13 22:47:06 OSPF: nsm_change_status\(\): scheduling new router-LSA origination)S
0 30.193 M(                        2002/12/13 22:47:11 OSPF: ospf_intra_add_router: Start)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(108)S
403.862 0 M(Configurer Zebra)S
GR
SP
%%Page: (109) 109
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 11 FS/F4 SF 0 712.8 M(Ignorez le message SMUX_CLOSE pour l'instant dans la mesure o\371 il concerne SNMP. Nous pouvons voir)S
0 699.6 M(que 192.168.0.1 est)S
/F6 SF ( routeur d\351sign\351)S
/F4 SF ( \()S
/F6 SF (Designated Router)S
/F4 SF (\) et que 192.168.0.2 est le)S
/F6 SF ( le routeur d\351sign\351 de)S
0 686.4 M(sauvegarde)S
/F4 SF ( \()S
/F6 SF (Backup Designated Router)S
/F4 SF (\).)S
0 660 M(Nous pouvons \351galement interagir avec zebra et ospfd en ex\351cutant :)S
9.2 FS/F0 SF 0 635.433 M($ )S
(telnet localhost zebra)S
0 624.433 M($ )S
(telnet localhost ospfd)S
11 FS/F4 SF 0 587.4 M(Voyons comment les routes se sont propag\351es en se connectant \340 zebra :)S
9.2 FS/F0 SF 0 562.833 M(                        root@atlantis:~# telnet localhost zebra)S
0 551.833 M(                        Trying 127.0.0.1...)S
0 540.833 M(                        Connected to atlantis.)S
0 529.833 M(                        Escape character is '^]'.)S
0 507.833 M(                        Hello, this is zebra \(version 0.92a\).)S
0 496.833 M(                        Copyright 1996-2001 Kunihiro Ishiguro.)S
0 474.833 M(                        User Access Verification)S
0 452.833 M(                        Password: )S
0 441.833 M(                        atlantis> show ip route)S
0 430.833 M(                        Codes: K - kernel route, C - connected, S - static, R - RIP, O - OSPF,)S
0 419.833 M(                               B - BGP, > - selected route, * - FIB route)S
0 397.833 M(                        K>* 0.0.0.0/0 via 192.168.0.1, eth1)S
0 386.833 M(                        C>* 127.0.0.0/8 is directly connected, lo)S
0 375.833 M(                        O   172.17.0.0/16 [110/10] is directly connected, eth0, 06:21:53)S
0 364.833 M(                        C>* 172.17.0.0/16 is directly connected, eth0)S
0 353.833 M(                        O   192.168.0.0/24 [110/10] is directly connected, eth1, 06:21:53)S
0 342.833 M(                        C>* 192.168.0.0/24 is directly connected, eth1)S
0 331.833 M(                        atlantis> show ip ospf border-routers)S
0 320.833 M(                        ============ OSPF router routing table =============)S
0 309.833 M(                        R    192.168.0.253         [10] area: \(0.0.0.0\), ABR)S
0 298.833 M(                                                   via 192.168.0.253, eth1)S
0 287.833 M(                                                         [10] area: \(0.0.0.1\), ABR)S
0 276.833 M(                                                   via 172.17.0.2, eth0)S
11 FS/F4 SF 0 239.8 M(ou directement avec iproute :)S
9.2 FS/F0 SF 0 215.233 M(                        root@omega:~# ip route)S
0 204.233 M(                        212.170.21.128/26 dev eth0  proto kernel  scope link  src 212.170.21.172 )S
0 193.233 M(                        192.168.0.0/24 dev eth1  proto kernel  scope link  src 192.168.0.1 )S
0 182.233 M(                        172.17.0.0/16 via 192.168.0.2 dev eth1  proto zebra  metric 20 )S
0 171.233 M(                        default via 212.170.21.129 dev eth0  proto zebra )S
0 160.233 M(                        root@omega:~# )S
11 FS/F4 SF 0 123.2 M(Nous pouvons voir les routes Zebra, qui n'\351taient pas pr\351sentes auparavant. Il est vraiment agr\351able de voir)S
0 110 M(appara\356tre les routes quelques secondes apr\350s le lancement de zebra et ospfd. Vous pouvez v\351rifier la)S
0 96.8 M(connectivit\351 avec les autres h\364tes en utilisant ping. Les routes zebra sont automatiques. Vous pouvez ajouter)S
0 83.6 M(un autre routeur au r\351seau, configurez Zebra et voil\340 !)S
0 57.2 M(Astuce : vous pouvez utiliser :)S
9.2 FS/F0 SF 0 32.633 M(                        tcpdump -i eth1 ip[9] == 89)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Ex\351cuter Zebra)S
468.652 0 M(109)S
GR
SP
%%Page: (110) 110
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 649.2 M 487.0 2.0 F
0 482.992 M 487.0 2.0 F
0 214.352 M 487.0 2.0 F
11 FS/F4 SF 0 712.8 M(pour analyser les paquets OSPF. Le num\351ro du protocole OSPF est 89 et le champ du protocole est le 9i\350me)S
0 699.6 M(octet de l'en-t\352te ip.)S
0 673.2 M(OSPF poss\350de de nombreux param\350tres, sp\351cialement pour les grands r\351seaux. Dans de prochains)S
0 660 M(d\351veloppements du HOWTO, nous montrerons des m\351thodes de r\351glages fins d'OSPF.)S
15.8 FS/F9 SF 0 626.76 M(Configurer BGP4 avec Zebra)S
11 FS/F4 SF 0 599.392 M(Le Border Gateway Protocol Version 4 \(BGP4\) est un protocole de routage dynamique d\351crit dans la RFC)S
0 586.192 M(1771. Il permet la distribution des informations de connectivit\351, c'est \340 dire les tables de routage, vers d'autres)S
0 572.992 M(noeuds BGP4 actifs. Il peut \352tre utilis\351 comme un EGP ou un IGP. Dans le mode EGP, chaque noeud doit)S
0 559.792 M(avoir son propre num\351ro de syst\350me autonome \()S
/F6 SF ( utonomous System \(AS\))S
/F4 SF (\). BGP4 supporte ????????? et)S
0 546.592 M(l'aggr\351gation de routes \(r\351unir plusieurs routes en une seule\). > The Border Gateway Protocol Version 4)S
0 533.392 M(\(BGP4\) is a dynamic routing > protocol described in RFC 1771. It allows the distribution of > reachability)S
0 520.192 M(information, i.e. routing tables, to other BGP4 > enabled nodes. It can either be used as EGP or IGP, in EGP)S
0 506.992 M(mode > each node must have its own Autonomous System \(AS\) number. > BGP4 supports Classless Inter)S
0 493.792 M(Domain Routing \(CIDR\) and route > aggregation \(merge multiple routes into one\).)S
13.2 FS/F9 SF 0 463.192 M(sch\351ma r\351seau \(Exemple\))S
11 FS/F4 SF 0 436.352 M(Le sch\351ma r\351seau suivant est utilis\351 pour les exemples \340 suivre. AS 1 et 50 ont plusieurs voisins mais nous)S
0 423.152 M(avons seulement besoin de configurer 1 et 50 comme nos voisins. Les noeuds communiquent entre eux par)S
0 409.952 M(des tunnels dans cet exemple, mais ce n'est pas une obligation.)S
0 383.552 M(Note : les num\351ros AS utilis\351s dans cet exemple sont r\351serv\351s. Veuillez obtenir vos propres num\351ros AS du)S
0 370.352 M(RIPE si vous installez des liens officiels.)S
9.2 FS/F0 SF 0 345.785 M(                   --------------------)S
0 334.785 M(                   | 192.168.23.12/24 |)S
0 323.785 M(                   |    AS: 23        |)S
0 312.785 M(                   --------------------)S
0 301.785 M(                     /             \\)S
0 290.785 M(                    /               \\)S
0 279.785 M(                   /                 \\)S
0 268.785 M(         ------------------       ------------------)S
0 257.785 M(         | 192.168.1.1/24 |-------| 10.10.1.1/16   |)S
0 246.785 M(         |    AS: 1       |       |    AS: 50      |)S
0 235.785 M(         ------------------       ------------------)S
13.2 FS/F9 SF 0 194.552 M(Configuration \(Exemple\))S
11 FS/F4 SF 0 167.712 M(La configuration suivante est \351crite pour le noeud 192.168.23.12/24 et elle sera facile \340 adapter pour les autres)S
0 154.512 M(noeuds.)S
0 128.112 M(Elle commence par des \351l\351ments g\351n\351raux comme le nom de l'h\364te, les mots de passe et les options de debug :)S
9.2 FS/F0 SF 0 103.545 M( ! hostname)S
0 92.545 M( hostname anakin)S
0 70.545 M( ! login password)S
0 59.545 M( password xxx)S
0 37.545 M( ! enable password \(super user mode\))S
0 26.545 M( enable password xxx)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(110)S
345.166 0 M(Configurer BGP4 avec Zebra)S
GR
SP
%%Page: (111) 111
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 0 233.4 M 487.0 2.0 F
9.2 FS/F0 SF 0 727.833 M( ! path to logfile)S
0 716.833 M( log file /var/log/zebra/bgpd.log)S
0 694.833 M( ! debugging: be verbose \(can be removed afterwards\))S
0 683.833 M( debug bgp events)S
0 672.833 M( debug bgp filters)S
0 661.833 M( debug bgp fsm)S
0 650.833 M( debug bgp keepalives)S
0 639.833 M( debug bgp updates)S
11 FS/F4 SF 0 602.8 M(La liste de contr\364le d'acc\350s \()S
/F6 SF (Access list)S
/F4 SF (\) est utilis\351e pour limiter la redistribution aux r\351seaux priv\351s \(RFC)S
0 589.6 M(1918\).)S
9.2 FS/F0 SF 0 565.033 M( ! RFC 1918 networks)S
0 554.033 M( access-list local_nets permit 192.168.0.0/16)S
0 543.033 M( access-list local_nets permit 172.16.0.0/12)S
0 532.033 M( access-list local_nets permit 10.0.0.0/8)S
0 521.033 M( access-list local_nets deny any)S
11 FS/F4 SF 0 495 M(L'etape suivante consiste \340 configurer chaque AS :)S
9.2 FS/F0 SF 0 470.433 M( ! Own AS number)S
0 459.433 M( router bgp 23)S
0 437.433 M(     ! IP address of the router)S
0 426.433 M(     bgp router-id 192.168.23.12)S
0 404.433 M(     ! announce our own network to other neighbors)S
0 393.433 M(     network 192.168.23.0/24)S
0 371.433 M(     ! advertise all connected routes \(= directly attached interfaces\))S
0 360.433 M(     redistribute connected)S
0 338.433 M(     ! advertise kernel routes \(= manually inserted routes\))S
0 327.433 M(     redistribute kernel)S
11 FS/F4 SF 0 301.4 M(Chaque section 'router bgp' contient une liste de voisins auquels le routeur est connect\351 :)S
9.2 FS/F0 SF 0 276.833 M(     neighbor 192.168.1.1 remote-as 1)S
0 265.833 M(     neighbor 192.168.1.1 distribute-list local_nets in)S
0 254.833 M(     neighbor 10.10.1.1   remote-as 50)S
0 243.833 M(     neighbor 10.10.1.1   distribute-list local_nets in)S
13.2 FS/F9 SF 0 213.6 M(V\351rification de la configuration)S
11 FS/F4 SF 0 186.76 M(Note : vtysh est un multiplexeur qui connecte toutes les interfaces utilisateur de zebra ensemble.)S
9.2 FS/F0 SF 0 162.193 M( anakin# sh ip bgp summary )S
0 151.193 M( BGP router identifier 192.168.23.12, local AS number 23)S
0 140.193 M( 2 BGP AS-PATH entries)S
0 129.193 M( 0 BGP community entries)S
0 107.193 M( Neighbor        V    AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd)S
0 96.193 M( 10.10.0.1       4    50      35      40        0    0    0 00:28:40        1)S
0 85.193 M( 192.168.1.1     4     1   27574   27644        0    0    0 03:26:04       14)S
0 63.193 M( Total number of neighbors 2)S
0 52.193 M( anakin#)S
0 41.193 M( anakin# sh ip bgp neighbors 10.10.0.1)S
0 30.193 M( BGP neighbor is 10.10.0.1, remote AS 50, local AS 23, external link)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Configuration \(Exemple\))S
468.652 0 M(111)S
GR
SP
%%Page: (112) 112
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 490.8 M 487.0 2.0 F
9.2 FS/F0 SF 0 738.833 M(   BGP version 4, remote router ID 10.10.0.1)S
0 727.833 M(   BGP state = Established, up for 00:29:01)S
0 716.833 M(   ....)S
0 705.833 M( anakin#)S
11 FS/F4 SF 0 668.8 M(Voyons quelles routes nous avons obtenues de nos voisins :)S
9.2 FS/F0 SF 0 644.233 M( anakin# sh ip ro bgp )S
0 633.233 M( Codes: K - kernel route, C - connected, S - static, R - RIP, O - OSPF,)S
0 622.233 M(        B - BGP, > - selected route, * - FIB route)S
0 600.233 M( B>* 172.16.0.0/14 [20/0] via 192.168.1.1, tun0, 2d10h19m)S
0 589.233 M( B>* 172.30.0.0/16 [20/0] via 192.168.1.1, tun0, 10:09:24)S
0 578.233 M( B>* 192.168.5.10/32 [20/0] via 192.168.1.1, tun0, 2d10h27m)S
0 567.233 M( B>* 192.168.5.26/32 [20/0] via 192.168.1.1, tun0, 10:09:24)S
0 556.233 M( B>* 192.168.5.36/32 [20/0] via 192.168.1.1, tun0, 2d10h19m)S
0 545.233 M( B>* 192.168.17.0/24 [20/0] via 192.168.1.1, tun0, 3d05h07m)S
0 534.233 M( B>* 192.168.17.1/32 [20/0] via 192.168.1.1, tun0, 3d05h07m)S
0 523.233 M( B>* 192.168.32.0/24 [20/0] via 192.168.1.1, tun0, 2d10h27m)S
0 512.233 M( anakin#)S
19 FS/F9 SF 0 465.192 M(Chapitre 18. Autres possibilit\351s)S
11 FS/F4 SF 0 437.19 M(Ce chapitre est une liste des projets ayant une relation avec le routage avanc\351 et la mise en forme du trafic)S
0 423.99 M(sous Linux. Certains de ces liens m\351riteraient des chapitres sp\351cifiques, d'autres sont tr\350s bien document\351s, et)S
0 410.79 M(n'ont pas besoin de HOWTO en plus.)S
0 384.39 M(Impl\351mentation VLAN 802.1Q pour Linux \(site\))S
36 371.19 M(VLAN est une fa\347on tr\350s sympa de diviser vos r\351seaux d'une mani\350re plus virtuelle que physique. De)S
36 357.99 M(bonnes informations sur les VLAN pourront \352tre trouv\351es ici. Avec cette impl\351mentation, votre boite)S
36 344.79 M(Linux pourra dialoguer VLAN avec des machines comme les Cisco Catalyst, 3Com:)S
36 331.59 M(&lcub;Corebuilder, Netbuilder II, SuperStack II switch 630&rcub;, Extreme Ntwks Summit 48,)S
36 318.39 M(Foundry: &lcub;ServerIronXL, FastIron&rcub;.)S
0 305.19 M(Impl\351mentation alternative VLAN 802.1Q pour Linux\(site\))S
36 291.99 M(Une impl\351mentation alternative de VLAN pour Linux. Ce projet a d\351marr\351 suite au d\351saccord avec)S
36 278.79 M(l'architecture et le style de codage du projet VLAN '\351tabli', avec comme r\351sultat une structure de)S
36 265.59 M(l'ensemble plus clair. Mise \340 jour : a \351t\351 inclus dans le noyau 2.4.14 \(peut-\352tre dans le 2.4.13\).)S
36 239.19 M(Un bon HOWTO \340 propos des VLAN peut \352tre trouv\351 ici.)S
36 212.79 M(Mise \340 jour : a \351t\351 inclue dans le noyau \340 partir de la version 2.4.14 \(peut-\352tre 13\).)S
0 199.59 M(Serveur Linux Virtuel \(Linux Virtual Server \)\(site\))S
36 186.39 M(Ces personnes sont tr\350s talentueuses. Le Serveur Virtuel Linux est un serveur \340 haute disponibilit\351,)S
36 173.19 M(hautement \351volutif, construit autour d'une grappe \(cluster\) de serveurs, avec un \351quilibreur de charge)S
36 159.99 M(tournant sur le syst\350me d'exploitation Linux. L'architecture du cluster est transparente pour les)S
36 146.79 M(utilisateurs finaux, qui ne voient qu'un simple serveur virtuel.)S
36 120.39 M(En r\351sum\351, que vous ayez besoin d'\351quilibrer votre charge ou de contr\364ler votre trafic, LVS aura une)S
36 107.19 M(mani\350re de le faire. Certaines de leurs techniques sont positivement diaboliques !. Par exemple, ils)S
36 93.99 M(permettent \340 plusieurs machines d'avoir une m\352me adresse IP, mais en d\351sactivant l'ARP dessus.)S
36 80.79 M(Seule la machine LVS qui a, elle, l'ARP actif, d\351cide de l'h\364te qui manipulera le paquet entrant.)S
36 67.59 M(Celui-ci est envoy\351 avec la bonne adresse MAC au serveur choisi. Le trafic sortant passe directement)S
36 54.39 M(par le routeur, et non par la machine LVS, qui, par cons\351quent n'a pas besoin de voir vos 5Gbit/s de)S
36 41.19 M(donn\351es allant sur Internet. Cette machine LVS ne peut alors pas \352tre un goulot d'\351tranglement.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(112)S
335.387 0 M(Chapitre 18. Autres possibilit\351s)S
GR
SP
%%Page: (113) 113
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 11 FS/F4 SF 36 737 M(L'impl\351mentation de LVS n\351cessite une mise \340 jour pour les noyaux 2.0 et 2.2, alors qu'un module)S
36 723.8 M(Netfilter est disponible dans le 2.4. Il n'y a donc pas besoin de mise \340 jour pour cette version du)S
36 710.6 M(noyau. Le support 2.4 est encore en d\351veloppement. Battez-vous donc avec et envoyez vos)S
36 697.4 M(commentaires ou vos mises \340 jour.)S
0 684.2 M(CBQ.init \(site\))S
36 671 M(Configurer CBQ peut \352tre un peu intimidant, sp\351cialement si votre seul souhait est de mettre en forme)S
36 657.8 M(le trafic d'ordinateurs plac\351s derri\350re un routeur. CBQ.init peut vous aider \340 configurer Linux \340 l'aide)S
36 644.6 M(d'une syntaxe simplifi\351e.)S
36 618.2 M(Par exemple, si vous voulez que tous les ordinateurs de votre r\351seau 192.168.1.0/24 \(sur eth1)S
36 605 M(10 Mbits\) aient leur vitesse de t\351l\351chargement limit\351e \340 28 Kbits, remplissez le fichier de)S
36 591.8 M(configuration de CBQ.init avec ce qui suit :)S
9.2 FS/F0 SF 36 540.833 M(DEVICE=eth1,10Mbit,1Mbit)S
36 529.833 M(RATE=28Kbit)S
36 518.833 M(WEIGHT=2Kbit)S
36 507.833 M(PRIO=5)S
36 496.833 M(RULE=192.168.1.0/24)S
11 FS/F4 SF 36 444.4 M(Utiliser simplement ce programme si le 'comment et pourquoi' ne vous int\351resse pas. Nous utilisons)S
36 431.2 M(CBQ.init en production et il marche tr\350s bien. On peut m\352me faire des choses plus avanc\351es, comme)S
36 418 M(la mise en forme d\351pendant du temps. La documentation est directement int\351gr\351e dans le script, ce qui)S
36 404.8 M(explique l'absence d'un fichier README.)S
0 391.6 M(Scripts faciles de mise en forme Chronox\(site\))S
36 378.4 M(Stephan Mueller \(smueller@chronox.de\) a \351crit deux scripts utiles, "limit.conn" et "shaper". Le)S
36 365.2 M(premier vous permet de ma\356triser une session de t\351l\351chargement, comme ceci :)S
9.2 FS/F0 SF 36 314.233 M(# limit.conn -s SERVERIP -p SERVERPORT -l LIMIT)S
11 FS/F4 SF 36 261.8 M(Il fonctionne avec Linux 2.2 et 2.4.)S
36 235.4 M(Le second script est plus compliqu\351 et peut \352tre utilis\351 pour mettre en place des files d'attente)S
36 222.2 M(diff\351rentes bas\351es sur les r\350gles iptables. Celles-ci sont utilis\351es pour marquer les paquets qui sont)S
36 209 M(alors mis en forme.)S
0 195.8 M(Impl\351mentation du Protocole Redondant Routeur Virtuel \(site\))S
36 182.6 M(Ceci est purement pour la redondance. Deux machines avec leurs propres adresses IP et MAC cr\351ent)S
36 169.4 M(une troisi\350me adresse IP et MAC virtuelle. Bien que destin\351 \340 l'origine uniquement aux routeurs, qui)S
36 156.2 M(ont besoin d'adresses MAC constantes, cela marche \351galement pour les autres serveurs.)S
36 129.8 M(La beaut\351 de cette approche est l'incroyable facilit\351 de la configuration. Pas de compilation de noyau)S
36 116.6 M(ou de n\351cessit\351 de mise \340 jour, tout se passe dans l'espace utilisateur.)S
36 90.2 M(Lancer simplement ceci sur toutes les machines participant au service :)S
9.2 FS/F0 SF 36 65.633 M(# vrrpd -i eth0 -v 50 10.0.0.22)S
11 FS/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Chapitre 18. Autres possibilit\351s)S
468.652 0 M(113)S
GR
SP
%%Page: (114) 114
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 0 473.2 M 487.0 2.0 F
0 91.99 M 487.0 2.0 F
11 FS/F4 SF 36 737 M(Et vous voil\340 op\351rationnel ! 10.0.0.22 est maintenant g\351r\351 par l'un de vos serveurs, probablement le)S
36 723.8 M(premier \340 avoir lanc\351 le d\351mon vrrp. D\351connectez maintenant cet ordinateur du r\351seau et tr\350s)S
36 710.6 M(rapidement, l'adresse 10.0.0.22 et l'adresse MAC seront g\351r\351es par l'un des autres ordinateurs.)S
36 684.2 M(J'ai essay\351 ceci et il a \351t\351 actif et op\351rationnel en 1 minute. Pour une raison \351trange, ma passerelle par)S
36 671 M(d\351faut a \351t\351 supprim\351e. Cependant, l'option -n permet de pr\351venir cela.)S
36 644.6 M(Voici une d\351faillance en "direct" :)S
9.2 FS/F0 SF 36 593.633 M(64 bytes from 10.0.0.22: icmp_seq=3 ttl=255 time=0.2 ms)S
36 582.633 M(64 bytes from 10.0.0.22: icmp_seq=4 ttl=255 time=0.2 ms)S
36 571.633 M(64 bytes from 10.0.0.22: icmp_seq=5 ttl=255 time=16.8 ms)S
36 560.633 M(64 bytes from 10.0.0.22: icmp_seq=6 ttl=255 time=1.8 ms)S
36 549.633 M(64 bytes from 10.0.0.22: icmp_seq=7 ttl=255 time=1.7 ms)S
11 FS/F4 SF 36 497.2 M(Pas *un* paquet ping n'a \351t\351 perdu ! Apr\350s 4 paquets, j'ai d\351connect\351 mon P200 du r\351seau, et mon 486)S
36 484 M(a pris le relais, ce qui est visible par l'augmentation du temps de latence.)S
19 FS/F9 SF 0 447.592 M(Chapitre 19. Lectures suppl\351mentaires)S
11 FS/F4 SF 0 419.59 M(http://snafu.freedom.org/linux2.2/iproute-notes.html)S
36 406.39 M(Contient beaucoup d'informations techniques, et de commentaires sur le noyau.)S
0 393.19 M(http://www.davin.ottawa.on.ca/ols/)S
36 379.99 M(Transparents de Jamal Hadi Salim, un des auteurs du contr\364leur de trafic de Linux.)S
0 366.79 M(http://defiant.coinet.com/iproute2/ip-cref/)S
36 353.59 M(Version HTML de la documentation LaTeX d'Alexeys ; explique une partie d'iproute2 en d\351tails.)S
0 340.39 M(http://www.aciri.org/floyd/cbq.html)S
36 327.19 M(Sally Floyd a une bonne page sur CBQ, incluant ses publications originales. Aucune n'est sp\351cifique \340)S
36 313.99 M(Linux, mais il y a un travail de discussion sur la th\351orie et l'utilisation de CBQ. Contenu tr\350s)S
36 300.79 M(technique, mais une bonne lecture pour ceux qui sont int\351ress\351s.)S
0 287.59 M(Differentiated Services on Linux)S
36 274.39 M(This document par Werner Almesberger, Jamal Hadi Salim et Alexey Kuznetsov. D\351crit les fonctions)S
36 261.19 M(DiffServ du noyau Linux, entre autres les gestionnaires de mise en file d'attente TBF, GRED,)S
/F0 SF 36 247.99 M(DSMARK)S
/F4 SF ( et le classificateur tcindex.)S
0 234.79 M(http://ceti.pl/~ekravietz/cbq/NET4_tc.html)S
36 221.59 M(Un autre HOWTO, en polonais ! Vous pouvez cependant copier/coller les lignes de commandes, elles)S
36 208.39 M(fonctionnent de la m\352me fa\347on dans toutes les langues. L'auteur travaille en collaboration avec nous)S
36 195.19 M(et sera peut \352tre bient\364t un auteur de sections de cet HOWTO.)S
0 181.99 M(IOS Committed Access Rate)S
36 168.79 M(Des gens de Cisco qui ont pris la louable habitude de mettre leur documentation en ligne. La syntaxe)S
36 155.59 M(de Cisco est diff\351rente mais les concepts sont identiques, sauf qu'on fait mieux, et sans mat\351riel)S
36 142.39 M(coutant le prix d'une voiture :-\))S
0 129.19 M(TCP/IP Illustrated, volume 1, W. Richard Stevens, ISBN 0-201-63346-9)S
36 115.99 M(Sa lecture est indispensable si vous voulez r\351ellement comprendre TCP/IP, et de plus elle est)S
36 102.79 M(divertissante.)S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(114)S
298.086 0 M(Chapitre 19. Lectures suppl\351mentaires)S
GR
SP
%%Page: (115) 115
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 19 FS/F9 SF 0 728.992 M(Chapitre 20. Remerciements)S
11 FS/F4 SF 0 700.99 M(Notre but est de faire la liste de toutes les personnes qui ont contribu\351 \340 ce HOWTO, ou qui nous ont aid\351s \340)S
0 687.79 M(expliquer le fonctionnement des choses. Alors qu'il n'existe pas actuellement de tableau d'honneur Netfilter,)S
0 674.59 M(nous souhaitons saluer les personnes qui apportent leur aide.)S
36 621.79 M(Junk Alins)S
/F0 SF 36 595.39 M(<juanjo@mat.upc.es>)S
/F18 SF 28.19 621.79 M(\267 )S
/F4 SF 36 582.19 M(Joe Van Andel)S
/F18 SF 28.19 582.19 M(\267 )S
/F4 SF 36 568.99 M(Michael T. Babcock)S
/F0 SF 36 542.59 M(<mbabcock@fibrespeed.net>)S
/F18 SF 28.19 568.99 M(\267 )S
/F4 SF 36 529.39 M(Christopher Barton)S
/F0 SF 36 502.99 M(<cpbarton%uiuc.edu>)S
/F18 SF 28.19 529.39 M(\267 )S
/F4 SF 36 489.79 M(Peter Bieringer)S
/F0 SF 36 463.39 M(<pb:bieringer.de>)S
/F18 SF 28.19 489.79 M(\267 )S
/F4 SF 36 450.19 M(Ard van Breemen)S
/F0 SF 36 423.79 M(<ard%kwaak.net>)S
/F18 SF 28.19 450.19 M(\267 )S
/F4 SF 36 410.59 M(Ron Brinker)S
/F0 SF 36 384.19 M(<service%emcis.com>)S
/F18 SF 28.19 410.59 M(\267 )S
/F4 SF 36 370.99 M(?ukasz Bromirski)S
/F0 SF 36 344.59 M(<l.bromirski@mr0vka.eu.org>)S
/F18 SF 28.19 370.99 M(\267 )S
/F4 SF 36 331.39 M(Lennert Buytenhek)S
/F0 SF 36 304.99 M(<buytenh@gnu.org>)S
/F18 SF 28.19 331.39 M(\267 )S
/F4 SF 36 291.79 M(Esteve Camps)S
/F0 SF 36 265.39 M(<esteve@hades.udg.es>)S
/F18 SF 28.19 291.79 M(\267 )S
/F4 SF 36 252.19 M(Ricardo Javier Cardenes)S
/F0 SF 36 225.79 M(<ricardo%conysis.com>)S
/F18 SF 28.19 252.19 M(\267 )S
/F4 SF 36 212.59 M(Stef Coene)S
/F0 SF 36 186.19 M(<stef.coene@docum.org>)S
/F18 SF 28.19 212.59 M(\267 )S
/F4 SF 36 172.99 M(Don Cohen)S
/F0 SF 36 146.59 M(<don-lartc%isis.cs3-inc.com>)S
/F18 SF 28.19 172.99 M(\267 )S
/F4 SF 36 133.39 M(Jonathan Corbet)S
/F0 SF 36 106.99 M(<lwn%lwn.net>)S
/F18 SF 28.19 133.39 M(\267 )S
/F4 SF 36 93.79 M(Gerry N5JXS Creager)S
/F0 SF 36 67.39 M(<gerry%cs.tamu.edu>)S
/F18 SF 28.19 93.79 M(\267 )S
/F4 SF 36 54.19 M(Marco Davids)S
/F0 SF 36 27.79 M(<marco@sara.nl>)S
/F18 SF 28.19 54.19 M(\267 )S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Chapitre 20. Remerciements)S
468.652 0 M(115)S
GR
SP
%%Page: (116) 116
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 11 FS/F4 SF 36 737 M(Jonathan Day)S
/F0 SF 36 710.6 M(<jd9812@my-deja.com>)S
/F18 SF 28.19 737 M(\267 )S
/F4 SF 36 697.4 M(Martin aka devik Devera)S
/F0 SF 36 671 M(<devik@cdi.cz>)S
/F18 SF 28.19 697.4 M(\267 )S
/F4 SF 36 657.8 M(Hannes Ebner)S
/F0 SF 36 631.4 M(<he%fli4l.de>)S
/F18 SF 28.19 657.8 M(\267 )S
/F4 SF 36 618.2 M(Derek Fawcus)S
/F0 SF 36 591.8 M(<dfawcus%cisco.com>)S
/F18 SF 28.19 618.2 M(\267 )S
/F4 SF 36 578.6 M(David Fries)S
/F0 SF 36 552.2 M(<dfries%mail.win.org>)S
/F18 SF 28.19 578.6 M(\267 )S
/F4 SF 36 539 M(Stephan "Kobold" Gehring)S
/F0 SF 36 512.6 M(<Stephan.Gehring@bechtle.de>)S
/F18 SF 28.19 539 M(\267 )S
/F4 SF 36 499.4 M(Jacek Glinkowski)S
/F0 SF 36 473 M(<jglinkow%hns.com>)S
/F18 SF 28.19 499.4 M(\267 )S
/F4 SF 36 459.8 M(Andrea Glorioso)S
/F0 SF 36 433.4 M(<sama%perchetopi.org>)S
/F18 SF 28.19 459.8 M(\267 )S
/F4 SF 36 420.2 M(Thomas Graaf)S
/F0 SF 36 393.8 M(<tgraf%suug.ch>)S
/F18 SF 28.19 420.2 M(\267 )S
/F4 SF 36 380.6 M(Sandy Harris)S
/F0 SF 36 354.2 M(<sandy%storm.ca>)S
/F18 SF 28.19 380.6 M(\267 )S
/F4 SF 36 341 M(Nadeem Hasan)S
/F0 SF 36 314.6 M(<nhasan@usa.net>)S
/F18 SF 28.19 341 M(\267 )S
/F4 SF 36 301.4 M(Erik Hensema)S
/F0 SF 36 275 M(<erik%hensema.xs4all.nl>)S
/F18 SF 28.19 301.4 M(\267 )S
/F4 SF 36 261.8 M(Vik Heyndrickx)S
/F0 SF 36 235.4 M(<vik.heyndrickx@edchq.com>)S
/F18 SF 28.19 261.8 M(\267 )S
/F4 SF 36 222.2 M(Spauldo Da Hippie)S
/F0 SF 36 195.8 M(<spauldo%usa.net>)S
/F18 SF 28.19 222.2 M(\267 )S
/F4 SF 36 182.6 M(Koos van den Hout)S
/F0 SF 36 156.2 M(<koos@kzdoos.xs4all.nl>)S
/F18 SF 28.19 182.6 M(\267 )S
/F4 SF 36 143 M(Stefan Huelbrock <shuelbrock%datasystems.de>)S
/F18 SF 28.19 143 M(\267 )S
/F4 SF 36 129.8 M(Ayotunde Itayemi)S
/F0 SF 36 103.4 M(<aitayemi:metrong.com>)S
/F18 SF 28.19 129.8 M(\267 )S
/F4 SF 36 90.2 M(Alexander W. Janssen <yalla%ynfonatic.de>)S
/F18 SF 28.19 90.2 M(\267 )S
/F4 SF 36 77 M(Andreas Jellinghaus <aj%dungeon.inka.de>)S
/F18 SF 28.19 77 M(\267 )S
/F4 SF 36 63.8 M(Gareth John <gdjohn%zepler.org>)S
/F18 SF 28.19 63.8 M(\267 )S
/F4 SF 36 50.6 M(Dave Johnson)S
/F18 SF 28.19 50.6 M(\267 )S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(116)S
347.014 0 M(Chapitre 20. Remerciements)S
GR
SP
%%Page: (117) 117
%%PageBoundingBox: 72 36 559 806
GS
72 36 T
0.00 0.00 0.00 C 11 FS/F0 SF 36 737 M(<dj@www.uk.linux.org>)S
/F4 SF 36 723.8 M(Martin Josefsson <gandalf%wlug.westbo.se>)S
/F18 SF 28.19 723.8 M(\267 )S
/F4 SF 36 710.6 M(Andi Kleen <ak%suse.de>)S
/F18 SF 28.19 710.6 M(\267 )S
/F4 SF 36 697.4 M(Andreas J. Koenig <andreas.koenig%anima.de>)S
/F18 SF 28.19 697.4 M(\267 )S
/F4 SF 36 684.2 M(Pawel Krawczyk <kravietz%alfa.ceti.pl>)S
/F18 SF 28.19 684.2 M(\267 )S
/F4 SF 36 671 M(Amit Kucheria <amitk@ittc.ku.edu>)S
/F18 SF 28.19 671 M(\267 )S
/F4 SF 36 657.8 M(Edmund Lau <edlau%ucf.ics.uci.edu>)S
/F18 SF 28.19 657.8 M(\267 )S
/F4 SF 36 644.6 M(Philippe Latu <philippe.latu%linux-france.org>)S
/F18 SF 28.19 644.6 M(\267 )S
/F4 SF 36 631.4 M(Arthur van Leeuwen <arthurvl%sci.kun.nl>)S
/F18 SF 28.19 631.4 M(\267 )S
/F4 SF 36 618.2 M(Jose Luis Domingo Lopez)S
/F0 SF 36 591.8 M(<jdomingo@24x7linux.com>)S
/F18 SF 28.19 618.2 M(\267 )S
/F4 SF 36 578.6 M(Robert Lowe)S
/F0 SF 36 552.2 M(<robert.h.lowe@lawrence.edu>)S
/F18 SF 28.19 578.6 M(\267 )S
/F4 SF 36 539 M(Jason Lunz <j@cc.gatech.edu>)S
/F18 SF 28.19 539 M(\267 )S
/F4 SF 36 525.8 M(Stuart Lynne <sl@fireplug.net>)S
/F18 SF 28.19 525.8 M(\267 )S
/F4 SF 36 512.6 M(Alexey Mahotkin <alexm@formulabez.ru>)S
/F18 SF 28.19 512.6 M(\267 )S
/F4 SF 36 499.4 M(Predrag Malicevic <pmalic@ieee.org>)S
/F18 SF 28.19 499.4 M(\267 )S
/F4 SF 36 486.2 M(Patrick McHardy <kaber@trash.net>)S
/F18 SF 28.19 486.2 M(\267 )S
/F4 SF 36 473 M(Andreas Mohr <andi%lisas.de>)S
/F18 SF 28.19 473 M(\267 )S
/F4 SF 36 459.8 M(James Morris <jmorris@intercode.com.au>)S
/F18 SF 28.19 459.8 M(\267 )S
/F4 SF 36 446.6 M(Andrew Morton <akpm%zip.com.au>)S
/F18 SF 28.19 446.6 M(\267 )S
/F4 SF 36 433.4 M(Wim van der Most)S
/F18 SF 28.19 433.4 M(\267 )S
/F4 SF 36 420.2 M(Stephan Mueller <smueller@chronox.de>)S
/F18 SF 28.19 420.2 M(\267 )S
/F4 SF 36 407 M(Togan Muftuoglu <toganm%yahoo.com>)S
/F18 SF 28.19 407 M(\267 )S
/F4 SF 36 393.8 M(Chris Murray <cmurray@stargate.ca>)S
/F18 SF 28.19 393.8 M(\267 )S
/F4 SF 36 380.6 M(Patrick Nagelschmidt <dto%gmx.net>)S
/F18 SF 28.19 380.6 M(\267 )S
/F4 SF 36 367.4 M(Ram Narula <ram@princess1.net>)S
/F18 SF 28.19 367.4 M(\267 )S
/F4 SF 36 354.2 M(Jorge Novo <jnovo@educanet.net>)S
/F18 SF 28.19 354.2 M(\267 )S
/F4 SF 36 341 M(Patrik <ph@kurd.nu>)S
/F18 SF 28.19 341 M(\267 )S
/F4 SF 36 327.8 M(P?l Osgy?ny <oplab%westel900.net>)S
/F18 SF 28.19 327.8 M(\267 )S
/F4 SF 36 314.6 M(Lutz Pre\337ler <Lutz.Pressler%SerNet.DE>)S
/F18 SF 28.19 314.6 M(\267 )S
/F4 SF 36 301.4 M(Jason Pyeron <jason%pyeron.com>)S
/F18 SF 28.19 301.4 M(\267 )S
/F4 SF 36 288.2 M(Rod Roark <rod%sunsetsystems.com>)S
/F18 SF 28.19 288.2 M(\267 )S
/F4 SF 36 275 M(Pavel Roskin <proski@gnu.org>)S
/F18 SF 28.19 275 M(\267 )S
/F4 SF 36 261.8 M(Rusty Russell <rusty%rustcorp.com.au>)S
/F18 SF 28.19 261.8 M(\267 )S
/F4 SF 36 248.6 M(Mihai RUSU <dizzy%roedu.net>)S
/F18 SF 28.19 248.6 M(\267 )S
/F4 SF 36 235.4 M(Rob Pitman <rob%pitman.co.za>)S
/F18 SF 28.19 235.4 M(\267 )S
/F4 SF 36 222.2 M(Jamal Hadi Salim <hadi%cyberus.ca>)S
/F18 SF 28.19 222.2 M(\267 )S
/F4 SF 36 209 M(Ren? Serral <rserral%ac.upc.es>)S
/F18 SF 28.19 209 M(\267 )S
/F4 SF 36 195.8 M(David Sauer <davids%penguin.cz>)S
/F18 SF 28.19 195.8 M(\267 )S
/F4 SF 36 182.6 M(Sheharyar Suleman Shaikh <sss23@drexel.edu>)S
/F18 SF 28.19 182.6 M(\267 )S
/F4 SF 36 169.4 M(Stewart Shields <MourningBlade%bigfoot.com>)S
/F18 SF 28.19 169.4 M(\267 )S
/F4 SF 36 156.2 M(Nick Silberstein <nhsilber%yahoo.com>)S
/F18 SF 28.19 156.2 M(\267 )S
/F4 SF 36 143 M(Konrads Smelkov <konrads@interbaltika.com>)S
/F18 SF 28.19 143 M(\267 )S
/F4 SF 36 129.8 M(William Stearns)S
/F0 SF 36 103.4 M(<wstearns@pobox.com>)S
/F18 SF 28.19 129.8 M(\267 )S
/F4 SF 36 90.2 M(Andreas Steinmetz <ast%domdv.de>)S
/F18 SF 28.19 90.2 M(\267 )S
/F4 SF 36 77 M(Matthew Strait <straitm%mathcs.carleton.edu>)S
/F18 SF 28.19 77 M(\267 )S
/F4 SF 36 63.8 M(Jason Tackaberry <tack@linux.com>)S
/F18 SF 28.19 63.8 M(\267 )S
/F4 SF 36 50.6 M(Charles Tassell <ctassell%isn.net>)S
/F18 SF 28.19 50.6 M(\267 )S
/F4 SF 36 37.4 M(Glen Turner <glen.turner%aarnet.edu.au>)S
/F18 SF 28.19 37.4 M(\267 )S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(Chapitre 20. Remerciements)S
468.652 0 M(117)S
GR
SP
%%Page: (118) 118
%%PageBoundingBox: 36 36 523 806
GS
36 36 T
0.00 0.00 0.00 C 11 FS/F4 SF 36 737 M(Tea Sponsor: Eric Veldhuyzen <eric%terra.nu>)S
/F18 SF 28.19 737 M(\267 )S
/F4 SF 36 723.8 M(Thomas Walpuski <thomas%bender.thinknerd.de>)S
/F18 SF 28.19 723.8 M(\267 )S
/F4 SF 36 710.6 M(Song Wang <wsong@ece.uci.edu>)S
/F18 SF 28.19 710.6 M(\267 )S
/F4 SF 36 697.4 M(Chris Wilson)S
/F0 SF 36 671 M(<chris@netservers.co.uk>)S
/F18 SF 28.19 697.4 M(\267 )S
/F4 SF 36 657.8 M(Lazar Yanackiev)S
/F0 SF 36 631.4 M(<Lyanackiev%gmx.net>)S
/F18 SF 28.19 657.8 M(\267 )S
/F4 SF 36 618.2 M(Pedro Larroy)S
/F0 SF 36 591.8 M(<piotr%member.fsf.org>)S
/F4 SF 72 565.4 M(Chaptitre 15, section 10: Exemple d'une solution de translation d'adresse avec de la QoS)S
/F18 SF 60.967 565.4 M(\250 )S
/F4 SF 72 552.2 M(Chaptitre 17, section 1: Configurer OSPF avec Zebra)S
/F18 SF 60.967 552.2 M(\250 )S
28.19 618.2 M(\267 )S
/F8 SF 91.568 759 M(HOWTO du routage avanc\351 et du contr\364le de trafic sous Linux)S
0 0 M(118)S
347.014 0 M(Chapitre 20. Remerciements)S
GR
SP
%%Trailer
%%EOF

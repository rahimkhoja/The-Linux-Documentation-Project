<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<TITLE>garl1</TITLE>
</HEAD>
<BODY TEXT="#000000" LINK="#0000ff" VLINK="#800080" BGCOLOR="#ffffff">
<TABLE CELLSPACING=0 BORDER=0 CELLPADDING=4 WIDTH=737>
  <TR> 
    <TD WIDTH="46%" VALIGN="TOP"> 
      <P><a href="garl00.htm"><IMG SRC="left.gif" WIDTH=36 HEIGHT=34 border="0"></a> 
    </TD>
    <TD WIDTH="11%" VALIGN="TOP"> 
      <P ALIGN="CENTER"><a href="garl.htm"><IMG SRC="up.gif" WIDTH=34 HEIGHT=36 border="0"></a> 
    </TD>
    <TD WIDTH="43%" VALIGN="TOP"> 
      <P ALIGN="RIGHT"><a href="garl02.htm"><IMG SRC="right.gif" WIDTH=36 HEIGHT=34 border="0"></a> 
    </TD>
  </TR>
</TABLE>
<FONT FACE="Verdana" SIZE=2> 
<P>&nbsp;</P>
</FONT><B><FONT FACE="Arial" SIZE=4 COLOR="#000080"> 
<P ALIGN="CENTER">Cap&iacute;tulo 1</P>
</font></B> 
<P> 
<HR>
<dir></dir>
<p></P>
<B><U><FONT FACE="Verdana" SIZE=2> 
<P>Introducci&oacute;n a las Redes</P>
</FONT></u></B>
<dir> 
    <p><font face="Verdana" size="2"><a href="garl01.htm#1.1">1.1 Historia</a><br>
      <a href="garl01.htm#1.2">1.2 Redes UUCP</a></font></p>
    <dir> 
      <dir> 
        <p><font face="Verdana" size="2"><a href="garl01.htm#1.2.1">1.2.1 Como 
          usar UUCP</a></font></p>
      </dir>
    </dir>
    <p><font face="Verdana" size="2"><a href="garl01.htm#1.3">1.3 Redes TCP/IP</a></font></p>
    <dir> 
      <dir> 
        <p><font face="Verdana" size="2"><a href="garl01.htm#1.3.1">1.3.1 Introducci&oacute;n 
          a las Redes TCP/IP</a><br>
          <a href="garl01.htm#1.3.2">1.3.2 Ethernets</a><br>
          <a href="garl01.htm#1.3.3">1.3.3 Otros tipos de Hardware</a><br>
          <a href="garl01.htm#1.3.4">1.3.4 El Protocolo IP (Internet Protocol)</a><br>
          <a href="garl01.htm#1.3.5">1.3.5 IP en L&iacute;neas Serie, SLIP</a><br>
          <a href="garl01.htm#1.3.6">1.3.6 El Protocolo de Control de Transmisi&oacute;n, 
          TCP</a><br>
          <a href="garl01.htm#1.3.7">1.3.7 El Protocolo de Datagramas de Usuario, 
          UDP</a><br>
          <a href="garl01.htm#1.3.8">1.3.8 M&aacute;s sobre Puertos</a><br>
          <a href="garl01.htm#1.3.9">1.3.9 La Librer&iacute;a de Sockets</a></font></p>
      </dir>
    </dir>
    <p><font face="Verdana" size="2"><a href="garl01.htm#1.4">1.4 Redes con Linux</a></font></p>
    <dir> 
      <dir> 
        <p><font face="Verdana" size="2"><a href="garl01.htm#1.4.1">1.4.1 Diferentes 
          Etapas de Desarrollo</a><br>
          <a href="garl01.htm#1.4.2">1.4.2 Donde Conseguir el C&oacute;digo</a></font></p>
      </dir>
    </dir>
    <p><font face="Verdana" size="2"><a href="garl01.htm#1.5">1.5 Mantenimiento 
      del Sistema</a></font></p>
    <dir> 
      <dir> 
        <p><font face="Verdana" size="2"><a href="garl01.htm#1.5.1">1.5.1 Seguridad 
          del Sistema</a></font></p>
      </dir>
    </dir>
    <p><font face="Verdana" size="2"><a href="garl01.htm#1.6">1.6 Vistazo a los 
      Siguientes Cap&iacute;tulos</a></font></p>
</dir>
<b><u><FONT FACE="Verdana" SIZE=2 COLOR="#008080"> 
<P><a name="1.1"></a>1.1 Historia</P>
</font></u></B><FONT FACE="Verdana" SIZE=2> 
<P>La idea de red es probablemente tan vieja como la de las telecomunicaciones. 
  Consideremos a la gente que viv&iacute;a en la edad de piedra, donde los tambores 
  se habr&iacute;an utilizado para transmitir mensajes entre individuos. Suponga 
  que el cavern&iacute;cola A quiere invitar al cavern&iacute;cola B a un partido 
  de lanzamiento de rocas contra el otro, pero viven demasiado lejos como para 
  que B oiga a A golpear su tambor. ¿Cuales son las opciones de A? Podr&iacute;a 
</P>
<DIR> 
  <DIR> 
    <P>1) ir a la choza de B, <BR>
      2) hacerse con un tambor m&aacute;s grande, o <BR>
      3) pedirle a C, que vive a mitad de camino entre los dos, que retransmita 
      el mensaje. La &uacute;ltima opci&oacute;n es lo que se llama una red.</P>
  </DIR>
</DIR>
<P>Claro, que ya ha pasado un tiempo desde los primeros intentos de nuestros antepasados.</P>
<P>Hoy en d&iacute;a tenemos ordenadores que hablan entre s&iacute; a trav&eacute;s 
  de vastas conexiones de cables, fibras &oacute;pticas, microondas, y otros medios 
  parecidos, para quedar para el partido del s&aacute;bado.</P>
<P>A continuaci&oacute;n trataremos sobre las maneras en que esto se realiza, 
  pero olvid&aacute;ndonos de los cables, as&iacute; como de la parte del partido.</P>
<P>En esta Gu&iacute;a escribiremos sobre dos tipos de redes: las basadas en UUCP, 
  y las basadas en TCP/IP. Estos son conjuntos de protocolos y paquetes de software 
  que proporcionan medios para transportar datos entre dos ordenadores. En este 
  cap&iacute;tulo veremos ambos tipos y discutiremos sus principios fundamentales.</P>
<P>Definiremos una red como un conjunto de nodos que son capaces de comunicarse 
  entre s&iacute;, a menudo contando con los servicios de varios nodos especializados 
  que conmutan datos entre los participantes. Los nodos suelen ser ordenadores, 
  aunque no es necesario; podemos considerar tambi&eacute;n terminales X o impresoras 
  inteligentes como nodos. Peque&ntilde;as aglomeraciones de nodos tambi&eacute;n 
  se llaman instalaciones.1</P>
<P>La comunicaci&oacute;n seria imposible sin alg&uacute;n tipo de lenguaje o 
  c&oacute;digo. En las redes de ordenadores, estos lenguajes son llamados colectivamente 
  protocolos. Sin embargo, no deber&iacute;a pensar en protocolos escritos, sino 
  m&aacute;s bien en el c&oacute;digo de comportamiento altamente formalizado 
  que se observa cuando se encuentran los jefes de estado. De un modo muy similar, 
  los protocolos usados por las redes de ordenadores no son sino normas muy estrictas 
  para el intercambio de mensajes entre dos o m&aacute;s nodos.</P>
<P>&nbsp;</P>
</FONT><B><U><FONT FACE="Verdana" SIZE=2 COLOR="#008080"> 
<P><a name="1.2"></a>1.2 Redes UUCP</P>
</font></u></B><FONT FACE="Verdana" SIZE=2> 
<P>UUCP es una abreviatura de Unix-to-Unix Copy (Copia de Unix a Unix). Comenz&oacute; 
  siendo un paquete de programas para transferir ficheros sobre l&iacute;neas 
  serie, programar esas transferencias, e iniciar la ejecuci&oacute;n de programas 
  en el lugar remoto. Ha experimentado grandes cambios desde su primera implementaci&oacute;n 
  a finales de los setenta, pero aun es bastante espartano en los servicios que 
  ofrece. Su principal aplicaci&oacute;n es todav&iacute;a en redes de &aacute;rea 
  metropolitana (WAN) basadas en enlaces telef&oacute;nicos.</P>
<P>&nbsp;UUCP comenz&oacute; a desarrollarse por los Laboratorios Bell en 1977 
  para la comunicaci&oacute;n entre sus laboratorios de desarrollo de Unix. A 
  mediados de 1978, esta red ya conectaba a mas de 80 centros. Se ejecutaban aplicaciones 
  de correo electr&oacute;nico, as&iacute; como de impresi&oacute;n remota; sin 
  embargo, el uso principal del sistema era distribuir software nuevo y mejoras.2 
  Hoy d&iacute;a, UUCP ya no est&aacute; confinado en el entorno UNIX. Hay versiones 
  comerciales disponibles para diversas plataformas, incluyendo AmigaOS, DOS, 
  TOS de Atari, etc.</P>
<P>Una de las principales desventajas de las redes UUCP es su bajo ancho de banda. 
  Por un lado, el equipo telef&oacute;nico establece un limite r&iacute;gido en 
  la tasa m&aacute;xima de transferencia. Por otro lado, los enlaces UUCP raramente 
  son conexiones permanentes; en su lugar, los nodos se llaman entre s&iacute; 
  a intervalos regulares. Es por ello, que la mayor&iacute;a del tiempo que le 
  lleva a un mensaje viajar por una red UUCP permanece atrapado en el disco de 
  alg&uacute;n nodo, esperando al establecimiento de la pr&oacute;xima conexi&oacute;n.</P>
<P>A pesar de estas limitaciones, aun hay muchas redes UUCP funcionando en todo 
  el mundo, utilizado principalmente por aficionados, ya que ofrecen acceso de 
  red a usuarios privados a precios razonables. La raz&oacute;n fundamental de 
  la popularidad del UUCP es que es barat&iacute;simo comparado con tener el ordenador 
  conectado al Gran Cable de Internet. Para hacer de su ordenador un nodo UUCP, 
  todo lo que necesita es un m&oacute;dem, software UUCP, y otro nodo UUCP que 
  desee suministrarle correo y noticias.</P>
<P>_____________________________________________<BR>
  1 N. del T.: Del ingl&eacute;s site<BR>
  2 No parece que con el tiempo haya cambiado mucho esto. . .</P>
<P>&nbsp;</P>
<I><U> 
<P><a name="1.2.1"></a>1.2.1 Como usar UUCP</P>
</u></I> 
<P>La idea que hay detr&aacute;s de UUCP es bastante simple: como su nombre indica, 
  b&aacute;sicamente copia ficheros de un nodo a otro, pero tambi&eacute;n permite 
  realizar ciertas acciones en el nodo remoto.</P>
<P>Suponga que le esta permitido que su m&aacute;quina acceda a un nodo hipot&eacute;tico 
  llamado swim, y le va ha hacer ejecutar el comando de impresi&oacute;n lpr para 
  Ud. Entonces, podr&iacute;a escribir lo siguiente en su l&iacute;nea de comandos 
  para que le imprima este libro en swim:3</P>
<DIR> 
  <DIR> 
    <P>$ uux -r swim!lpr !netguide.dvi</P>
  </DIR>
</DIR>
<P>Esto hace que uux, un comando del repertorio UUCP, planifique un trabajo para 
  swim. Este trabajo consta del fichero de entrada, netguide.dvi, y la petici&oacute;n 
  de enviar este fichero a lpr. La opci&oacute;n -r indica a uux que no llame 
  al sistema remoto inmediatamente, sino que almacene el trabajo hasta que se 
  establezca la pr&oacute;xima conexi&oacute;n. A esto se le llama spooling, o 
  almacenamiento en la cola.</P>
<P>Otra propiedad de UUCP es que permite reenviar trabajos y ficheros a trav&eacute;s 
  de varios nodos, suponiendo que &eacute;stos colaboren. Asumiremos que swim, 
  el nodo del ejemplo anterior, tiene un enlace UUCP con groucho, el cual mantiene 
  un gran numero de aplicaciones UNIX. Para transferir el fichero tripwire-1.0.tar.gz 
  hasta su m&aacute;quina deber&iacute;a indicarlo as&iacute;:</P>
<DIR> 
  <DIR> 
    <P>$ uucp -mr swim!groucho!~/security/tripwire-1.0.tar.gz trip.tgz</P>
  </DIR>
</DIR>
<P>El trabajo creado pedir&aacute; a swim que traiga el fichero desde groucho, 
  y lo env&iacute;e hasta su m&aacute;quina, donde UUCP lo almacenara en trip.tgz 
  y le notificar&aacute; por correo la llegada del fichero. Esto ocurrir&aacute; 
  en tres pasos. Primero, su m&aacute;quina env&iacute;a el trabajo a swim.</P>
<P>La siguiente vez que swim establezca contacto con groucho, se transferir&aacute; 
  el fichero de groucho a swim. El &uacute;ltimo paso es la transferencia del 
  mismo desde swim hasta su m&aacute;quina.</P>
<P>Los servicios m&aacute;s importantes que proporcionan las redes UUCP hoy en 
  d&iacute;a son el correo electr&oacute;nico y las noticias. Lo introduciremos 
  brevemente y despu&eacute;s lo veremos en mas detalle.</P>
<P>El correo electr&oacute;nico - e-mail4 para abreviar - le permite intercambiar 
  mensajes con usuarios de nodos remotos sin tener realmente que saber como acceder 
  a estos nodos. La tarea de dirigir un mensaje desde su m&aacute;quina destino 
  la realiza enteramente el sistema de manejo de correo. En un entorno UUCP, el 
  correo generalmente se transporta ejecutando el comando rmail en el nodo vecino, 
  pas&aacute;ndole la direcci&oacute;n del receptor y el mensaje. Rmail reenviar&aacute; 
  entonces el mensaje a otro nodo, y seguir&aacute; as&iacute;, hasta que alcance 
  el nodo destino. </P>
<P>_____________________________________________<BR>
  3 Si usa bash, la shell GNU Bourne Again SHell, tendr&iacute;a que quitar los 
  signos de exclamaci&oacute;n, porque los usa como su car&aacute;cter de hist&oacute;rico.<BR>
  4 En el idioma castellano comienzan a aparecer adaptaciones mas o menos afortunadas, 
  como e-milio</P>
<P>&nbsp;</P>
<P>Veremos esto en detalle en el cap&iacute;tulo 13.</P>
<P>La mejor forma de definir el servicio de noticias es considerarlo como un sistema 
  de tabl&oacute;n de anuncios distribuido. Muy a menudo, este termino se refiere 
  a las noticias de Usenet, que es, con mucho, la mas conocida red de intercambio 
  de noticias, con un n&uacute;mero de nodos participantes estimado en 120.0005. 
  Los or&iacute;genes de Usenet se remontan a 1979, cuando, tras la aparici&oacute;n 
  del UUCP con el nuevo Unix V7, tres estudiantes graduados tuvieron la idea de 
  un intercambio de informaci&oacute;n general entre la comunidad Unix. Estos 
  escribieron algunos scripts, creando el primer sistema de noticias en red. En 
  1980, esta red conectaba duke, unc, y phs, y dos Universidades de Carolina del 
  Norte, de forma aislada. Usenet creci&oacute; m&aacute;s todav&iacute;a posteriormente. 
  Aunque su origen fue como una red basada en UUCP, ya no esta limitada a un &uacute;nico 
  tipo de redes.</P>
<P>La unidad b&aacute;sica de informaci&oacute;n es el articulo, que puede ser 
  enviado a una jerarqu&iacute;a de grupos de noticias dedicadas a temas espec&iacute;ficos. 
  La mayor&iacute;a de los nodos reciben &uacute;nicamente una selecci&oacute;n 
  de todos los grupos de noticias, que transportan una media de 60Mb6 de art&iacute;culos 
  por d&iacute;a.</P>
<P>En el mundo UUCP, las noticias generalmente se env&iacute;an a trav&eacute;s 
  de un enlace UUCP, recolectando todos los art&iacute;culos de los grupos de 
  noticias solicitados, y empaquet&aacute;ndolos en varios lotes7 . Estos se env&iacute;an 
  al lugar receptor, donde se pasan al comando rnews que los desempaqueta y procesa 
  posteriormente.</P>
<P>Finalmente, UUCP es tambi&eacute;n el medio elegido por muchos servidores de 
  ficheros que ofrecen acceso publico. Generalmente podr&aacute; acceder a ellos 
  llamando con UUCP, accediendo como usuario invitado, y transferi&eacute;ndose 
  los archivos desde un &aacute;rea de ficheros p&uacute;blicamente accesible. 
  Estas cuentas de invitado tienen, a menudo, un nombre de acceso y password como 
  UUCP/nuucp o algo similar.</P>
<P>&nbsp;</P>
</FONT><B><U><FONT FACE="Verdana" SIZE=2 COLOR="#008080"> 
<P><a name="1.3"></a>1.3 Redes TCP/IP</P>
</font></u></B><FONT FACE="Verdana" SIZE=2> 
<P>Aunque UUCP puede resultar una elecci&oacute;n razonable para enlaces de red 
  mediante llamada de bajo coste, hay muchas situaciones en las que su t&eacute;cnica 
  de almacenamiento y reenv&iacute;o se muestra demasiado inflexible, por ejemplo 
  en Redes de Area Local (LANs, o RALs). Estas redes est&aacute;n compuestas generalmente 
  por un peque&ntilde;o numero de maquinas localizadas en el mismo edificio, o 
  incluso en la misma planta, que est&aacute;n interconectadas para proporcionar 
  un entorno de trabajo homog&eacute;neo. Es t&iacute;pico que se quiera compartir 
  ficheros entre estos nodos, o ejecutar aplicaciones distribuidas en diferentes 
  m&aacute;quinas.</P>
<P>_____________________________________________<BR>
  5 Teniendo en cuenta que hace tiempo que se escribi&oacute; este libro, es seguro 
  que son muchos m&aacute;s.<BR>
  6 De nuevo son datos no actualizados<BR>
  7 N. del T.: Del ingl&eacute;s batches</P>
<P>&nbsp;</P>
<P>Estas tareas requieren una aproximaci&oacute;n completamente diferente a las 
  redes. En lugar de reenviar ficheros completos con una descripci&oacute;n del 
  trabajo, todos los datos se fragmentan en peque&ntilde;as unidades (paquetes), 
  que se env&iacute;an inmediatamente al nodo destino, donde son reensamblados. 
  Este tipo de redes son llamadas redes de intercambio de paquetes. Entre otras 
  cosas, esto permite ejecutar aplicaciones interactivas a trav&eacute;s de la 
  red. El coste de esto supone, por supuesto, una complejidad adicional al software.</P>
<P>La soluci&oacute;n que han adoptado los sistemas UNIX _ y muchos no-un?x _ 
  es conocida como TCP/IP. En esta secci&oacute;n echaremos un vistazo a sus conceptos 
  b&aacute;sicos. </P>
<P>&nbsp;</P>
<I><U> 
<P><a name="1.3.1"></a>1.3.1 Introducci&oacute;n a las Redes TCP/IP</P>
</u></I> 
<P>El TCP/IP tiene sus or&iacute;genes en un proyecto de investigaci&oacute;n 
  fundado en Estados Unidos por el DARPA (Defense Advanced Research Projects Agency, 
  Agencia de Proyectos Avanzados de Investigaci&oacute;n en Defensa) en 1969. 
  Esta fue una red experimental, la red ARPANET, que paso a ser operativa en 1975, 
  despu&eacute;s de haber demostrado ser un &eacute;xito.</P>
<P>En 1983, fue adoptado como est&aacute;ndar el nuevo conjunto de protocolos 
  TCP/IP, y todos los nodos de la red pasaron a utilizarlo. Cuando ARPANET por 
  fin dio paso a Internet (con la propia ARPANET integr&aacute;ndose en su existencia 
  en 1990), el uso del TCP/IP se hab&iacute;a extendido a redes m&aacute;s all&aacute; 
  de la propia Internet. Las m&aacute;s destacables son las redes locales UNIX, 
  pero con la llegada de los equipos telef&oacute;nicos digitales r&aacute;pidos, 
  como la RDSI, tambi&eacute;n tiene un futuro prometedor como transporte en redes 
  telef&oacute;nicas.</P>
<P>Para ilustrar las explicaciones que demos en las siguientes secciones, tomaremos 
  como ejemplo una red t&iacute;pica: la de una universidad, concretamente la 
  hipot&eacute;tica Universidad Groucho Marx (GMU) situada, por ejemplo, en alg&uacute;n 
  lugar de Libertonia. En esta universidad, la mayor&iacute;a de los departamentos 
  mantienen sus propias redes de &aacute;rea local, mientras que algunos comparten 
  una, y otros poseen varias. Todos ellos est&aacute;n interconectados, y est&aacute;n 
  enganchados a Internet a trav&eacute;s de un solo enlace de alta velocidad.</P>
<P>Supongamos una m&aacute;quina Linux conectada a una LAN de nodos UNIX en el 
  Departamento de Matem&aacute;ticas, y su nombre es erdos. Para acceder a un 
  nodo del Departamento de F&iacute;sicas, por ejemplo quark, introducir&aacute; 
  el siguiente comando:</P>
<DIR> 
  <DIR> 
    <P>$ rlogin quark.physics<BR>
      Last login: Mon Feb 2 21:06:19 on tty1<BR>
      Linux 2.0.0 #1 Sun Dec 7 19:07:05 MET 1997 (POSIX)<BR>
      [...]</P>
  </DIR>
</DIR>
<P>En la l&iacute;nea de comandos, introducir&aacute; su nombre de acceso, pongamos 
  que es Andr&eacute;s, y su clave. Entonces dispondr&aacute; de una shell de 
  quark, sobre la que puede escribir como si estuviera sentado en la consola del 
  sistema. Tras salir de la shell volver&aacute; a tener la l&iacute;nea de comandos 
  de su propia m&aacute;quina. Acaba de utilizar una de las aplicaciones de interactividad 
  instant&aacute;nea que proporciona TCP/IP: el acceso remoto.</P>
<P>Mientras este conectado a quark, podr&iacute;a tambi&eacute;n desear ejecutar 
  una aplicaci&oacute;n X, como un programa de dibujo de funciones, o un visor 
  de Postscript. Para indicar a esta aplicaci&oacute;n que desea ver las ventanas 
  en su monitor local, debe modificar la variable de entorno DISPLAY:</P>
<DIR> 
  <DIR> 
    <P>$ export DISPLAY=erdos.maths:0.0</P>
  </DIR>
</DIR>
<P>Si pone en marcha ahora su aplicaci&oacute;n, esta contactara con su servidor 
  X en lugar del de quark, y mostrara todas las ventanas en su monitor. Por supuesto, 
  esto requiere que este ejecutando X11 en erdos. La clave esta en que TCP/IP 
  permite a quark y a erdos enviarse paquetes X11 en ambos sentidos para darle 
  a Ud. la impresi&oacute;n de que esta en un &uacute;nico sistema. La red es 
  casi transparente en este caso.</P>
<P>Otra aplicaci&oacute;n muy importante en redes TCP/IP es NFS, abreviatura de 
  Network File System (Sistema de Ficheros de Red). Es otra forma de hacer trasparente 
  la red, porque b&aacute;sicamente permite montar jerarqu&iacute;as de directorios 
  de otras maquinas, de modo que aparezcan como sistemas de ficheros locales. 
  Por ejemplo, todos los directorios "home", o personales, de los usuarios pueden 
  estar en una m&aacute;quina servidor central, desde la cual montan los directorios 
  el resto de maquinas de la LAN. El efecto de esto es que los usuarios pueden 
  acceder a cualquier m&aacute;quina, y encontrarse a s&iacute; mismos en el mismo 
  directorio.</P>
<P>De forma similar, es posible instalar aplicaciones que requieren gran cantidad 
  de espacio en disco (tales como TEX) en una &uacute;nica m&aacute;quina, y exportar 
  estos directorios a otras maquinas.</P>
<P>Volveremos sobre NFS en el cap&iacute;tulo 11.</P>
<P>Por supuesto, esto son solo ejemplos de lo que se puede hacer en un entorno 
  de redes TCP/IP: las posibilidades son casi ilimitadas.</P>
<P>Ahora echaremos una mirada mas de cerca al modo en que trabaja TCP/IP. Esto 
  es necesario para comprender como y por que tiene que configurar su m&aacute;quina. 
  Comenzaremos examinando el hardware, y poco a poco recorreremos todo el camino.</P>
<P>&nbsp;</P>
<I><U> 
<P><a name="1.3.2"></a>1.3.2 Ethernets</P>
</u></I> 
<P>El tipo de hardware mas utilizado en LANs es lo que com&uacute;nmente conocemos 
  como Ethernet. Consta de un solo cable con los nodos colgando de &eacute;l a 
  trav&eacute;s de conectores, clavijas o transceptores. Las ethernet simples, 
  son baratas de instalar, lo que unido a un flujo de transferencia neto de 10 
  Megabits por segundo avala gran parte de su popularidad.</P>
<P>Hay tres tipos de Ethernet, en funci&oacute;n de su cable, llamadas gruesas, 
  finas y de par trenzado. Tanto el fino como el grueso utilizan cable coaxial, 
  difiriendo en el grosor y el modo de conectar este cable a los nodos. El Ethernet 
  fino emplea conectores "BNC" con forma de T, que se pinchan en el cable y se 
  enganchan a los conectores de la parte trasera del ordenador. El Ethernet grueso 
  requiere que realice un peque&ntilde;o agujero en el cable, y conecte un transceptor 
  utilizando un "conector vampiro". Entonces se pueden conectar uno o m&aacute;s 
  nodos al transceptor. Los cables Ethernet fino y grueso pueden alcanzar una 
  distancia de 200 y 500 metros, respectivamente, y es por ello que se les llama 
  tambi&eacute;n 10base-2 y 10base-5. El par trenzado usa un cable hecho de dos 
  hilos de cobre como las que se encuentran en las instalaciones telef&oacute;nicas 
  ordinarias, pero generalmente necesitan hardware adicional. Tambi&eacute;n se 
  conoce como 10base-T.</P>
<P>A pesar de que a&ntilde;adir un nodo a una Ethernet gruesa es un poco lioso, 
  eso no tirar&aacute; abajo la red; sin embargo, para a&ntilde;adir un nodo en 
  una instalaci&oacute;n de cable fino, se debe interrumpir el servicio de red 
  al menos por unos minutos ya que se debe cortar el cable para insertar el conector.</P>
<P>La mayor&iacute;a de gente prefiere el Ethernet fino porque es barato: las 
  tarjetas de PC pueden encontrarse por unos 50 d&oacute;lares americanos (unas 
  5000 pesetas), o incluso menos, y el cable esta por unos centavos el metro. 
  Sin embargo, para instalaciones de gran escala, es m&aacute;s apropiado el Ethernet 
  grueso. Por ejemplo, la Ethernet del Departamento de Matem&aacute;ticas de la 
  GMU utiliza Ethernet gruesa, de modo que no se interrumpe el tr&aacute;fico 
  cada vez que se a&ntilde;ade un nodo a la red.</P>
<P>Uno de los inconvenientes de la tecnolog&iacute;a Ethernet es su limitada longitud 
  de cable, que imposibilita cualquier uso fuera de las LANs. Sin embargo, pueden 
  enlazarse varios segmentos de Ethernet entre s&iacute; utilizando repetidores, 
  puentes o encaminadores8. Los repetidores simplemente copian las se&ntilde;ales 
  entre dos o m&aacute;s segmentos, de forma que todos los segmentos juntos act&uacute;an 
  como si fuese una &uacute;nica Ethernet. Debido a requisitos de tiempos, no 
  puede haber mas de cuatro repetidores entre cualquier par de nodos de la red. 
  Los puentes y encaminadores son mas sofisticados, analizan los datos de entrada 
  y los reenv&iacute;an solo si el nodo receptor no esta en la Ethernet local.</P>
<P>Ethernet funciona como un sistema de bus, donde un nodo puede mandar paquetes 
  (o tramas) de hasta 1500 bytes a otro nodo de la misma Ethernet. Cada nodo se 
  direcciona por una direcci&oacute;n de seis bytes grabada en el firmware de 
  su tarjeta Ethernet. Estas direcciones se especifican generalmente como una 
  secuencia de n&uacute;meros hexadecimales de dos d&iacute;gitos separados por 
  dos puntos, como en aa:bb:cc:dd:ee:ff.</P>
<P>_____________________________________________<BR>
  8 N. del T.: Respectivamente, repeaters, bridges y routers</P>
<P>&nbsp;</P>
<P>Una trama enviada por una estaci&oacute;n la ven todas las estaciones conectadas, 
  pero solo el nodo destinatario la toma y la procesa. Si dos estaciones intentan 
  emitir al mismo tiempo, se produce una colisi&oacute;n, que se resuelve por 
  parte de las dos estaciones abortando el env&iacute;o, y reintent&aacute;ndolo 
  al cabo de un rato.</P>
<P>&nbsp;</P>
<I><U> 
<P><a name="1.3.3"></a>1.3.3 Otros tipos de Hardware</P>
</u></I> 
<P>En instalaciones mayores, como la Universidad de Groucho Marx, Ethernet no 
  es el &uacute;nico tipo de red que puede utilizarse. En la Universidad de Groucho 
  Marx cada LAN de un departamento esta enlazada a la troncal del campus, que 
  es un cable de fibra &oacute;ptica funcionando en FDDI (Fiber Distributed Data 
  Interface). FDDI emplea un enfoque totalmente diferente para transmitir datos, 
  que b&aacute;sicamente implica el env&iacute;o de un numero de testigos, de 
  modo que una estaci&oacute;n solo pueda enviar una trama si captura un testigo. 
  La principal ventaja de FDDI es una velocidad de hasta 100 Mbps, y una longitud 
  de cable m&aacute;xima de hasta 200 km.</P>
<P>Para enlaces de red de larga distancia, se utiliza frecuentemente un tipo distinto 
  de equipos, que se basa en el est&aacute;ndar X.25. Muchas de las llamadas Redes 
  Publicas de Datos, como Tymnet en Estados Unidos, Datex-P en Alemania, o Iberpac 
  en Espa&ntilde;a, ofrecen este servicio. X.25 requiere un hardware especial, 
  llamado Ensamblador/Desensamblador de Paquetes o PAD. X.25 define un conjunto 
  de protocolos de red de derecho propio, pero sin embargo se usa frecuentemente 
  para conectar redes bajo TCP/IP y otros protocolos. Ya que los paquetes IP no 
  se pueden convertir de forma simple en X.25 (y viceversa), estos deben ser encapsulados 
  en paquetes X.25 y enviados a trav&eacute;s de la red.</P>
<P>&nbsp;</P>
<P>Frecuentemente, los radioaficionados usan sus propios equipos de radio para 
  conectar sus ordenadores en red; esto se llama packet radio o ham radio. El 
  protocolo utilizado por el packet radio es el llamado AX.25, que deriva del 
  X.25.</P>
<P>Otras t&eacute;cnicas implican el uso de las lentas pero baratas l&iacute;neas 
  serie para acceder bajo demanda. Esto requiere aun otros protocolos para la 
  transmisi&oacute;n de paquetes, como SLIP o PPP, que se describen mas adelante.</P>
<P>&nbsp;</P>
<I><U> 
<P><a name="1.3.4"></a>1.3.4 El Protocolo IP (Internet Protocol)</P>
</u></I> 
<P>Por supuesto, Ud. no querr&aacute; que su red este limitada a una Ethernet. 
  Idealmente, Ud. desear&iacute;a poder acceder a la red sin importarle ni el 
  hardware del que dispone ni el n&uacute;mero de subestaciones. Por ejemplo, 
  en instalaciones grandes como la Universidad de Groucho Marx, habr&aacute; varias 
  Ethernets separadas, que han de conectarse de alguna manera. En la GMU, el departamento 
  de matem&aacute;ticas tiene dos Ethernets: una red de maquinas r&aacute;pidas 
  para profesores y graduados, y otra con maquinas mas lentas para estudiantes. 
  Ambas redes est&aacute;n colgadas de la red troncal FDDI del campus.</P>
<P>Esta conexi&oacute;n se gestiona con un nodo dedicado, denominado pasarela, 
  o gateway, que maneja los paquetes entrantes y salientes copi&aacute;ndolos 
  entre las dos Ethernets y el cable de fibra &oacute;ptica. Por ejemplo, si se 
  encuentra en el Departamento de Matem&aacute;ticas, y quiere acceder a quark 
  situada en la LAN del Departamento de F&iacute;sicas desde su m&aacute;quina 
  Linux, el software de red no puede mandar paquetes a quark directamente, porque 
  no esta en la misma Ethernet. Por tanto, tiene que confiar en la pasarela para 
  que act&uacute;e como retransmisor. La pasarela (llam&eacute;mosla sophus) reenv&iacute;a 
  entonces estos paquetes a su pasarela homologa niels del Departamento de F&iacute;sicas, 
  usando la troncal, y por fin niels los entrega a la m&aacute;quina destino. 
  El flujo de datos entre erdos y quark se muestra en la figura 1.1 (con disculpas 
  a Guy L. Steele).</P>
<P>Este esquema de env&iacute;o de datos al nodo remoto se llama encaminamiento, 
  y en este contexto a los paquetes se les denomina a menudo datagramas. Para 
  facilitar las cosas, el intercambio de datagramas esta gobernado por un &uacute;nico 
  protocolo que es independiente del hardware utilizado: IP, o Internet Protocol. 
  En el cap&iacute;tulo 2, trataremos el IP y el encaminamiento en mayor detalle.</P>
<P>El principal beneficio del IP es que convierte a redes f&iacute;sicamente distintas 
  en una red aparentemente homog&eacute;nea. A esto se le llama internetworking 
  (interconexi&oacute;n de redes), y a la resultante "meta-red" se la denomina 
  Internet. Observe aqu&iacute; la sutil diferencia entre una Internet y La Internet. 
  El &uacute;ltimo es el nombre oficial de una Internet global particular.</P>
<P>Claro que el IP tambi&eacute;n necesita un esquema de direccionamiento independiente 
  del hardware. Esto se consigue asignando a cada nodo un n&uacute;mero &uacute;nico 
  de 32 bits, que define su direcci&oacute;n IP. Una direcci&oacute;n IP se escribe 
  normalmente como 4 n&uacute;meros en decimal, uno por cada divisi&oacute;n de 
  8 bits, y separados por puntos. Por ejemplo, quark podr&iacute;a tener una direcci&oacute;n 
  IP 0x954C0C04, que se escribir&iacute;a como 149.76.12.4. A este formato se 
  le llama notaci&oacute;n de puntos.</P>
<P>Se dar&aacute; cuenta de que ahora tenemos tres tipos distintos de direcciones: 
  primero, tenemos el nombre del nodo, quark, despu&eacute;s tenemos las direcciones 
  IP, y por fin est&aacute;n las direcciones hardware, como la direcci&oacute;n 
  Ethernet de 6 bytes. De alguna forma todas ellas deben relacionarse, de modo 
  que cuando escriba rlogin quark, se le pueda pasar la direcci&oacute;n IP al 
  software de red; y cuando el nivel IP env&iacute;e datos a la Ethernet del Departamento 
  de F&iacute;sicas, de alg&uacute;n modo tiene que encontrar a que direcci&oacute;n 
  Ethernet corresponde la direcci&oacute;n IP. Lo cual no resulta trivial.</P>
<P>&nbsp;</P>
</FONT> 
<P ALIGN="CENTER"><a name="i.1.1"></a><IMG SRC="fig1.1.gif" WIDTH=503 HEIGHT=360></P>
<FONT FACE="Verdana" SIZE=2> 
<P>Figura 1.1: Los tres pasos para enviar un datagrama desde erdos a quark.</P>
<P>&nbsp;</P>
<P>No entraremos en esto aqu&iacute;, sino que lo dejamos para el cap&iacute;tulo 
  2. De momento, es suficiente con indicar que estos pasos para encontrar las 
  direcciones se llaman resoluci&oacute;n de nombres, para mapear nombres de nodo 
  con direcciones IP, y resoluci&oacute;n de direcciones, para hacer corresponder 
  estas &uacute;ltimas con direcciones hardware.</P>
<P>&nbsp;</P>
<I><U> 
<P><a name="1.3.5"></a>1.3.5 IP en L&iacute;neas Serie, SLIP</P>
</u></I> 
<P>Para l&iacute;neas serie se usa frecuentemente el est&aacute;ndar "de facto" 
  conocido como SLIP o Serial Line IP (IP sobre l&iacute;nea serie). Una modificaci&oacute;n 
  del SLIP es el CSLIP, o SLIP Comprimido, que realiza compresi&oacute;n de las 
  cabeceras IP para aprovechar el bajo ancho de banda que proporcionan los enlaces 
  serie.9 Un protocolo serie distinto es el PPP, o Point-to-Point Protocol (Protocolo 
  Punto a Punto). PPP dispone de muchas mas caracter&iacute;sticas que SLIP, incluyendo 
  una fase de negociaci&oacute;n del enlace. Su principal ventaja sobre SLIP es, 
  sin embargo, que no se limita a transportar datagramas IP, sino que se dise&ntilde;o 
  para permitir la transmisi&oacute;n de cualquier tipo de datagramas.</P>
<P>&nbsp;</P>
<I><U> 
<P><a name="1.3.6"></a>1.3.6 El Protocolo de Control de Transmisi&oacute;n, TCP</P>
</u></I> 
<P>Pero la historia no se acaba con el env&iacute;o de datagramas de un nodo a 
  otro. Si desea acceder a quark, necesita disponer de una conexi&oacute;n fiable 
  entre su proceso rlogin en erdos y el proceso de shell en quark. Para ello, 
  la informaci&oacute;n enviada en uno y otro sentido debe dividirse en paquetes 
  en el origen, y ser reensamblada en un flujo de caracteres por el receptor. 
  Esto que parece trivial, implica varias tareas complejas.</P>
<P>Una cosa importante a saber sobre IP es que, por si solo, no es fiable. Suponga 
  que diez personas de su Ethernet comienzan a transferirse la &uacute;ltima versi&oacute;n 
  de XFree86 del servidor de FTP de GMU. La cantidad de trafico generada por esto 
  podr&iacute;a ser excesiva para que la maneje la pasarela, porque es demasiado 
  lenta, y anda escasa de memoria. Si en ese momento Ud. env&iacute;a un paquete 
  a quark, sophus podr&iacute;a tener agotado el espacio del buffer durante un 
  instante y por tanto no seria capaz de reenviarlo. IP resuelve este problema 
  simplemente descart&aacute;ndolo. El paquete se pierde irrevocablemente. Lo 
  cual traslada la responsabilidad de comprobar la integridad y exactitud de los 
  datos a los nodos extremos, y su retransmisi&oacute;n en caso de error.</P>
<P>_____________________________________________<BR>
  9 SLIP est&aacute; descrito en la norma RFC 1055. La compresi&oacute;n de cabeceras 
  CSLIP, basada en el, se describe en la RFC 1144.</P>
<P>&nbsp;</P>
<P>De esto se encarga otro protocolo, TCP, o Transmission Control Protocol (Protocolo 
  de Control de la Transmisi&oacute;n), que construye un servicio fiable por encima 
  de IP. La propiedad esencial de TCP es que usa IP para darle la impresi&oacute;n 
  de una conexi&oacute;n simple entre los procesos en su equipo y la m&aacute;quina 
  remota, de modo que no tiene que preocuparse de como y sobre que ruta viajan 
  realmente sus datos. Una conexi&oacute;n TCP funciona b&aacute;sicamente como 
  una tuber&iacute;a de doble sentido en la que ambos procesos pueden escribir 
  y leer; puede imaginarla como una conversaci&oacute;n telef&oacute;nica.</P>
<P>TCP identifica los extremos de tal conexi&oacute;n por las direcciones IP de 
  los dos nodos implicados, y el numero de los llamados puertos de cada nodo. 
  Los puertos se pueden ver como puntos de enganche para conexiones de red. Si 
  vamos a explotar el ejemplo del tel&eacute;fono un poco mas, uno puede comparar 
  las direcciones IP con los prefijos de &aacute;rea (los n&uacute;meros representar&iacute;an 
  ciudades), y los n&uacute;meros de puerto con los c&oacute;digos locales (n&uacute;meros 
  que representan tel&eacute;fonos de personas concretas).</P>
<P>En el ejemplo de rlogin, la aplicaci&oacute;n cliente (rlogin) abre un puerto 
  en erdos, y se conecta al puerto 513 de quark, en el que se sabe que esta escuchando 
  el servidor rlogind. </P>
<P>Esto establece una conexi&oacute;n TCP. Usando esta conexi&oacute;n, rlogind 
  realiza el procedimiento de autorizaci&oacute;n, y entonces muestra la shell. 
  La entrada y salida est&aacute;ndar de la shell se redirigen a la conexi&oacute;n 
  TCP, de modo que cualquier cosa que escriba a rlogin en su m&aacute;quina ser&aacute; 
  pasado a trav&eacute;s del canal TCP y entregado a la shell como entrada est&aacute;ndar.</P>
<P>&nbsp;</P>
<I><U> 
<P><a name="1.3.7"></a>1.3.7 El Protocolo de Datagramas de Usuario, UDP</P>
</u></I> 
<P>Tambi&eacute;n es cierto que TCP no es el &uacute;nico protocolo de usuario 
  en redes TCP/IP. Aunque adecuado para aplicaciones como rlogin, la sobrecarga 
  que impone es prohibitiva para aplicaciones como NFS. Por contra, &eacute;ste 
  usa un protocolo derivado de TCP llamado UDP, o User Datagram Protocol (Protocolo 
  de Datagramas de Usuario). De igual modo que TCP, UDP tambi&eacute;n permite 
  que una aplicaci&oacute;n contacte con un servicio en un puerto concreto de 
  la m&aacute;quina remota, pero no establece una conexi&oacute;n para ello. En 
  cambio, puede usarlo para enviar paquetes sueltos al servicio destino - de ah&iacute; 
  su nombre.</P>
<P>Suponga que ha montado la jerarqu&iacute;a del directorio TEX del servidor 
  de NFS central del departamento, galois, y desea ver un documento que describe 
  como usar LATEX. Arranca su editor, y lee el fichero completo. Sin embargo, 
  le llevar&iacute;a demasiado tiempo establecer una conexi&oacute;n TCP con galois, 
  enviar el fichero, y liberarla de nuevo. En cambio, se hace una petici&oacute;n 
  a galois, que env&iacute;a el fichero en un par de paquetes UDP, que es mucho 
  mas r&aacute;pido. Sin embargo, UDP no se hizo para controlar la perdida o corrupci&oacute;n 
  de paquetes. Es responsabilidad de la aplicaci&oacute;n - en este caso NFS - 
  tener en cuenta esto.</P>
<P>&nbsp;</P>
<I><U> 
<P><a name="1.3.8"></a>1.3.8 M&aacute;s sobre Puertos</P>
</u></I> 
<P>Los puertos se pueden ver como puntos de anclaje para conexiones de red. Si 
  una aplicaci&oacute;n quiere ofrecer un cierto servicio, se engancha a un puerto 
  y espera a los clientes (a esto tambi&eacute;n se le llama escuchar en un puerto). 
  Un cliente que quiera usar este servicio consigue un puerto libre en su nodo 
  local, y se conecta al puerto del servidor en el nodo remoto. </P>
<P>Una propiedad importante de los puertos es que una vez que se ha establecido 
  una conexi&oacute;n entre el cliente y el servidor, otra copia del servidor 
  puede engancharse al puerto servidor y esperar a mas clientes. Esto permite, 
  por ejemplo, varios accesos remotos simult&aacute;neos al mismo nodo, usando 
  todos ellos el mismo puerto 513. TCP es capaz de distinguir unas conexiones 
  de otras, ya que todas ellas provienen de diferentes puertos o nodos. Por ejemplo, 
  si accede dos veces a quark desde erdos, entonces el primer cliente rlogin usara 
  el puerto local 1023, y el segundo usara el puerto numero 1022; sin embargo, 
  ambos se conectaran al mismo puerto 513 de quark.</P>
<P>Este ejemplo muestra el uso de puertos como puntos de encuentro, donde un cliente 
  contacta con un puerto especifico para obtener un servicio especifico. Para 
  que un cliente sepa el numero de puerto adecuado, se ha tenido que llegar a 
  un acuerdo entre los administradores de los dos sistemas para asignar estos 
  n&uacute;meros. Para servicios ampliamente usados, como rlogin, estos n&uacute;meros 
  tienen que administrarse centralmente. Esto lo realiza el IETF (o Internet Engineering 
  Task Force), que regularmente publica un RFC (Request For Comment) denominado 
  Assigned Numbers (N&uacute;meros Asignados). Describe, entre otras cosas, los 
  n&uacute;meros de puerto asignados a servicios reconocidos. Linux utiliza un 
  fichero que mapea nombres con n&uacute;meros, llamado /etc/services. Se describe 
  en la secci&oacute;n 9.3.</P>
<P>Merece la pena indicar que aunque las conexiones TCP y UDP se basan en puertos, 
  estos n&uacute;meros no entran en conflicto. Esto significa que el puerto TCP 
  513, por ejemplo, es diferente del puerto UDP 513. De hecho, estos puertos sirven 
  como puntos de acceso para dos servicios diferentes, como rlogin (TCP) y rwho 
  (UDP).</P>
<P>&nbsp;</P>
<I><U> 
<P><a name="1.3.9"></a>1.3.9 La Librer&iacute;a de Sockets</P>
</u></I> 
<P>En sistemas operativos UNIX, el software que realiza todas las tareas y protocolos 
  descritos anteriormente es generalmente parte del kernel, y por tanto tambi&eacute;n 
  del de Linux. El interface de programaci&oacute;n m&aacute;s com&uacute;n en 
  el mundo UNIX es la Librer&iacute;a de Socket de Berkeley, Berkeley Socket Library. 
  Su nombre proviene de una analog&iacute;a popular que ve los puertos como enchufes, 
  y conectarse a un puerto como enchufarse. Proporciona la llamada bind(2) para 
  especificar un nodo remoto, un protocolo de transporte, y un servicio al que 
  un programa pueda conectarse o escuchar (usando connect(2), listen(2), y accept(2)). 
  La librer&iacute;a de sockets, sin embargo, es algo mas general, ya que proporciona 
  no solo una clase de sockets basados en TCP/IP (los sockets AF_INET ), sino 
  tambi&eacute;n una clase que maneja conexiones locales a la m&aacute;quina (la 
  clase AF_UNIX ). Algunas implementaciones pueden manejar tambi&eacute;n otras 
  clases, como el protocolo XNS ((Xerox Networking System), o X.25.</P>
<P>En Linux, la librer&iacute;a de sockets es parte de la librer&iacute;a C est&aacute;ndar 
  libc. Actualmente solo soporta los sockets AF_INET y AF_UNIX, pero se hacen 
  esfuerzos para incorporar el soporte de los protocolos de red de Novell, de 
  modo que se a&ntilde;adir&iacute;an eventualmente una o mas clases de sockets.</P>
<P>&nbsp;</P>
</FONT><B><U><FONT FACE="Verdana" SIZE=2 COLOR="#008080"> 
<P><a name="1.4"></a>1.4 Redes con Linux</P>
</font></u></B><FONT FACE="Verdana" SIZE=2> 
<P>Siendo el resultado del esfuerzo concentrado de programadores de todo el mundo, 
  Linux no habr&iacute;a sido posible sin la red global. As&iacute; que no sorprende 
  que ya en los primeros pasos del desarrollo, varias personas comenzaran a trabajar 
  para dotarlo de capacidades de red. Casi desde el principio exist&iacute;a ya 
  una implementaci&oacute;n de UUCP para Linux; y fue en el oto&ntilde;o de 1992 
  cuando se comenz&oacute; a desarrollar el soporte de TCP/IP, cuando Ross Biro 
  y otros crearon lo que ahora se conoce como Net-1.</P>
<P>Despu&eacute;s de que Ross dejara el desarrollo activo en Mayo de 1993, Fred 
  van Kempen comenz&oacute; a trabajar en una nueva implementaci&oacute;n, reescribiendo 
  gran parte del c&oacute;digo. Este esfuerzo continuado se conoce como Net-2. 
  En el verano de 1992 sali&oacute; la primera versi&oacute;n publica de Net-2d 
  (como parte del kernel 0.99.10), y ha sido mantenida y ampliada por varias personas, 
  muy especialmente por Alan Cox, dando lugar al Net-2Debugged. Tras una dura 
  correcci&oacute;n y numerosas mejoras en el c&oacute;digo, cambio su nombre 
  a Net-3 despu&eacute;s de que saliese Linux 1.0. Esta es la versi&oacute;n del 
  c&oacute;digo de red que se incluye actualmente en las versiones oficiales del 
  kernel.</P>
<P>Net-3 ofrece controladores de dispositivo para una amplia variedad de tarjetas 
  Ethernet, as&iacute; como SLIP (para enviar trafico de red sobre l&iacute;neas 
  serie), y PLIP (para l&iacute;neas paralelo). Con Net-3, Linux tiene una implementaci&oacute;n 
  de TCP/IP que se comporta muy bien en entornos de red de &aacute;rea local, 
  mostr&aacute;ndose superior a algunos de los Unix comerciales para PCs.</P>
<P>El desarrollo se mueve actualmente hacia la estabilidad necesaria para su funcionamiento 
  fiable en nodos de Internet.</P>
<P>Adem&aacute;s de estas facilidades, hay varios proyectos en marcha que mejoraran 
  la versatilidad de Linux. Un controlador para PPP (el protocolo punto a punto, 
  otra forma de enviar tr&aacute;fico de red sobre l&iacute;neas serie) est&aacute; 
  en estado Beta actualmente, y otro controlador AX.25 para ham radio est&aacute; 
  en estado Alfa. Alan Cox tambi&eacute;n ha implementado un controlador para 
  el protocolo IPX de Novell, pero el esfuerzo para un paquete de red completo 
  compatible con el de Novell se ha paralizado por el momento, debido a la negativa 
  de Novell a facilitar la documentaci&oacute;n necesaria. Otro proyecto muy prometedor 
  es samba, un servidor de NetBIOS gratis para Unix, escrito por Andrew Tridgell.10</P>
<P>&nbsp;</P>
<I><U> 
<P><a name="1.4.1"></a>1.4.1 Diferentes Etapas de Desarrollo</P>
</u></I> 
<P>Mientras tanto, Fred sigui&oacute; desarrollando, continuando con el Net-2e, 
  que dispone de un dise&ntilde;o mas revisado de la capa de red. En el momento 
  de escribir esto, Net-2e es a&uacute;n software Beta. Lo mas notable sobre Net-2e 
  es la incorporaci&oacute;n del DDI, el Device Driver Interface (Interface del 
  controlador de dispositivo). DDI ofrece un acceso y un m&eacute;todo de configuraci&oacute;n 
  uniforme a todos los dispositivos y protocolos de red.</P>
<P>Otra implementaci&oacute;n mas de red TCP/IP es la realizada por Matthias Urlichs, 
  quien escribi&oacute; un controlador de RDSI para Linux y FreeBSD. Para ello, 
  integro algo del c&oacute;digo de red de BSD en el kernel de Linux.</P>
<P>En un futuro previsible, sin embargo, Net-3 parece que llegara para quedarse. 
  Alan trabaja actualmente en una implementaci&oacute;n del protocolo AX.25 usado 
  por radioaficionados.</P>
<P>Sin duda, la modularizaci&oacute;n, aun por desarrollar para el kernel, traer&aacute; 
  tambi&eacute;n nuevos impulsos al c&oacute;digo de red. Los m&oacute;dulos le 
  permiten a&ntilde;adir controladores al kernel en tiempo de ejecuci&oacute;n.</P>
<P>Aunque todas estas diferentes implementaciones de red intentan dar el mismo 
  servicio, hay grandes diferencias entre ellas a nivel de kernel y dispositivos. 
  Adem&aacute;s, no podr&aacute; configurar un sistema con un kernel Net-2e con 
  utilidades de Net-2d o Net-3, y viceversa. Esto solo se aplica a comandos que 
  tienen mucho que ver con el funcionamiento interno del kernel; las aplicaciones 
  y los comandos de red comunes como rlogin o telnet se ejecutan en cualquiera 
  de ellos.</P>
<P>A pesar de todo, todas estas diferentes versiones de red no deben preocuparle. 
  A no ser que este participando en el desarrollo activo, no tendr&aacute; que 
  preocuparse de que versi&oacute;n del c&oacute;digo TCP/IP esta utilizando. 
  Las versiones oficiales del kernel siempre estar&aacute;n acompa&ntilde;adas 
  de un conjunto de herramientas de red que son compatibles con el c&oacute;digo 
  de red presente en el propio kernel.</P>
<P>&nbsp;</P>
<I><U> 
<P><a name="1.4.2"></a>1.4.2 Donde Conseguir el C&oacute;digo</P>
</u></I> 
<P>La &uacute;ltima versi&oacute;n del c&oacute;digo de red Linux se puede obtener 
  mediante FTP an&oacute;nimo de varios sitios. El servidor oficial del Net-3 
  es sunacm.swan.ac.uk, copiado en sunsite.unc.edu en el directorio system/Network/sunacm. 
  El &uacute;ltimo parche para el Net-2e y los binarios se encuentran disponibles 
  en ftp.aris.com. El c&oacute;digo de red basado en BSD de Matthias Urlichs se 
  puede conseguir en ftp.ira.uka.de, directorio /pub/system/linux/netbsd.</P>
<P>Se pueden encontrar los &uacute;ltimos kernels en nic.funet.fi, en el directorio 
  /pub/OS/Linux/PEOPLE/Linus; Los nodos sunsite y tsx-11.mit.edu tienen copias 
  de este directorio.</P>
<p>_____________________________________________<BR>
  10 NetBIOS es el protocolo en el que se basan las aplicaciones como lanmanager 
  y Windows para Trabajo en Grupo.</p>
<P>&nbsp;</P>
<B><U><FONT COLOR="#008080"><a name="1.5"></a>1.5 Mantenimiento del Sistema</font></u></B> 
<P>En este libro, vamos a tratar principalmente los temas de instalaci&oacute;n 
  y configuraci&oacute;n. Sin embargo la administraci&oacute;n es mucho mas importante 
  _ despu&eacute;s de instalar un servicio, tambi&eacute;n hay que mantenerlo 
  funcionando. Para la mayor&iacute;a de ellos, solo se necesitara una peque&ntilde;a 
  atenci&oacute;n, mientras que algunos, como el correo y las news, requieren 
  realizar tareas rutinarias para mantener actualizado el sistema. Discutiremos 
  estas tareas en los cap&iacute;tulos finales.</P>
<P>La tarea m&iacute;nima de mantenimiento es comprobar regularmente el sistema 
  y los ficheros de registro de cada aplicaci&oacute;n buscando condiciones de 
  error y eventos inusuales. Por lo general, es posible hacer esto escribiendo 
  un par de scripts de shell y ejecut&aacute;ndolos peri&oacute;dicamente mediante 
  el comando cron. La distribuci&oacute;n fuente de algunas aplicaciones importantes 
  como smail o C News, ya contiene esos scripts. Solo tendr&aacute; que retocarlos 
  para adecuarlos a sus necesidades y preferencias.</P>
<P>La salida de cualquiera de sus trabajos del cron se deber&iacute;a enviar a 
  una cuenta de administraci&oacute;n. Por defecto, muchas aplicaciones enviaran 
  informes, estad&iacute;sticas de uso, o res&uacute;menes del fichero de registro 
  a la cuenta de root. Esto solo tiene sentido si accede como root frecuentemente; 
  una idea mucho mejor es redirigir el correo del root a su cuenta personal estableciendo 
  un alias de correo como se describe en el cap&iacute;tulo 14.</P>
<P>Por muy cuidadoso que sea configurando su m&aacute;quina, la ley de Murphy 
  garantiza que surgir&aacute; alg&uacute;n problema en cualquier momento. Por 
  lo tanto, el mantenimiento de un sistema implica tambi&eacute;n estar disponible 
  para quejas. Generalmente la gente espera que se pueda contactar con el administrador 
  del sistema al menos por correo electr&oacute;nico (como root), pero tambi&eacute;n 
  hay otras direcciones que se usan con frecuencia para informar a la persona 
  responsable de un aspecto concreto del mantenimiento. Por ejemplo, las quejas 
  sobre una configuraci&oacute;n de correo que funciona mal se dirigir&aacute;n 
  generalmente al postmaster (encargado del correo); y los problemas con el sistema 
  de noticias pueden ser comunicados a newsmaster o usenet. El correo a hostmaster 
  se deber&iacute;a redirigir a la persona encargada de los servicios b&aacute;sicos 
  de red del nodo, y del servicio de nombres DNS si esta corriendo un servidor 
  de nombres.</P>
<P>&nbsp;</P>
<I><U> 
<P><a name="1.5.1"></a>1.5.1 Seguridad del Sistema</P>
</u></I> 
<P>Otro aspecto muy importante de la administraci&oacute;n de sistemas en un entorno 
  de red es proteger al sistema y a sus usuarios de intrusos. Los sistemas administrados 
  sin ning&uacute;n cuidado ofrecen muchos huecos a los malintencionados: los 
  ataques van desde averiguar las claves hasta acceder a nivel de Ethernet, y 
  el da&ntilde;o causado puede ser desde mensajes de correo falsos hasta perdida 
  de datos o violaci&oacute;n de la privacidad de los usuarios. Mencionaremos 
  algunos problemas concretos cuando discutamos el contexto en el que pueden ocurrir, 
  y algunas defensas comunes contra ellos.</P>
<P>Esta secci&oacute;n comentara algunos ejemplos y t&eacute;cnicas b&aacute;sicas 
  para pelearse con la seguridad del sistema. Por supuesto, los temas relatados 
  no pueden tratar exhaustivamente todos los aspectos de seguridad con los que 
  uno se puede encontrar; sirven meramente para ilustrar los problemas que pueden 
  surgir. Por tanto, la lectura de un buen libro sobre seguridad es absolutamente 
  obligada, especialmente en un sistema en red. "Practical UNIX Security" de Simon 
  Garfinkel (v&eacute;ase [Spaf93]) es una de las lecturas recomendadas.</P>
<P>La seguridad del sistema comienza con una buena administraci&oacute;n del mismo. 
  Esto incluye comprobar la propiedad y permisos de todos los ficheros y directorios 
  vitales, monitorizar el uso de cuentas privilegiadas, etc. El programa COPS, 
  por ejemplo, comprobara su sistema de ficheros y ficheros de configuraci&oacute;n 
  comunes en busca de permisos inusuales u otras anomal&iacute;as. Tambi&eacute;n 
  es conveniente usar un sistema de claves que fuerce ciertas reglas en las claves 
  de los usuarios que las hagan dif&iacute;ciles de adivinar. El sistema de claves 
  ocultas (shadow password), por ejemplo, requiere que una clave tenga al menos 
  cinco letras, y contienen tanto may&uacute;sculas como min&uacute;sculas y n&uacute;meros.</P>
<P>Cuando un servicio se hace accesible a la red, aseg&uacute;rese de darle el 
  "menor privilegio", lo que quiere decir que no se permita hacer cosas que no 
  son imprescindibles para que trabaje como se dise&ntilde;o. Por ejemplo, deber&iacute;a 
  hacer sus programas con setuid root o alguna otra cuenta privilegiada solo si 
  realmente lo necesitan. Tambi&eacute;n, si quiere usar un servicio solo para 
  una aplicaci&oacute;n muy limitada, no dude en configurarla tan restrictivamente 
  como su aplicaci&oacute;n especial lo permita. Por ejemplo, si quiere permitir 
  a maquinas sin disco arrancar desde su m&aacute;quina, debe facilitar el TFTP 
  (Trivial File Transfer Service) de modo que pueda obtener los ficheros de configuraci&oacute;n 
  b&aacute;sicos del directorio /boot. Sin embargo, cuando se usa sin restringir, 
  TFTP permite a cualquier usuario de cualquier lugar del mundo leer cualquier 
  fichero de su sistema. Si esto no es lo que desea, ¿por que no restringir el 
  servicio TFTP al directorio /boot?11</P>
<P>Pensando en la misma l&iacute;nea, podr&iacute;a restringir ciertos servicios 
  a usuarios que acceden desde ciertos nodos, digamos que solo para su red local. 
  En el cap&iacute;tulo 9, presentaremos tcpd, que hace esto para una variedad 
  de aplicaciones de red.</P>
<P>_____________________________________________<BR>
  11 Volveremos sobre esto en el cap&iacute;tulo 9.</P>
<P>&nbsp;</P>
<P>Otro punto importante es evitar software "peligroso". Claro que cualquier software 
  que utilice puede ser peligroso, porque el software puede tener fallos que algunos 
  listos pueden explotar para acceder a su sistema. Cosas como &eacute;sta ocurren, 
  y no hay protecci&oacute;n segura contra ello. Este problema afecta al software 
  libre y a productos comerciales por igual. 12 </P>
<P>Sin embargo, programas que requieren privilegio especial son inherentemente 
  mas peligrosos que otros, ya que un agujero de estos puede tener consecuencias 
  dr&aacute;sticas.13 Si instala un programa setuid con prop&oacute;sitos de red, 
  sea doblemente cuidadoso y no deje de leerse toda la documentaci&oacute;n, de 
  modo que no cree una brecha en la seguridad por accidente.</P>
<P>Nunca olvide que sus precauciones pueden fallar, por muy cuidadoso que haya 
  sido. Por eso deber&iacute;a asegurarse de que detecta pronto a los intrusos. 
  Comprobar los ficheros de actividad es un buen comienzo, pero el intruso probablemente 
  sea bastante listo, y borrar&aacute; cualquier huella que haya dejado. Sin embargo, 
  hay herramientas como tripwire14 que permite comprobar ficheros vitales del 
  sistema para ver si sus contenidos o permisos han cambiado. tripwire realiza 
  varios checksums15 fuertes sobre estos ficheros y los almacena en una base de 
  datos. En las siguientes ejecuciones, se reeval&uacute;an y comparan los checksums 
  con los almacenados para detectar cualquier modificaci&oacute;n.</P>
<P>&nbsp;</P>
</FONT><B><U><FONT FACE="Verdana" SIZE=2 COLOR="#008080"> 
<P><a name="1.6"></a>1.6 Vistazo a los Siguientes Cap&iacute;tulos</P>
</font></u></B><FONT FACE="Verdana" SIZE=2> 
<P>Los siguientes cap&iacute;tulos tendr&aacute;n que ver con configurar Linux 
  para redes TCP/IP, y con la ejecuci&oacute;n de algunas aplicaciones importantes. 
  Antes de que se manche las manos con la edici&oacute;n de ficheros y similares, 
  examinaremos IP algo mas de cerca en el cap&iacute;tulo 2. Si ya sabe como funciona 
  el encaminamiento IP, y como se realiza la resoluci&oacute;n de direcciones, 
  quiz&aacute; desee saltarse este cap&iacute;tulo.</P>
<P>El cap&iacute;tulo 3 trata los aspectos mas b&aacute;sicos de configuraci&oacute;n, 
  como construir un kernel y configurar su tarjeta Ethernet. La configuraci&oacute;n 
  de los puertos serie se relata en un cap&iacute;tulo aparte, ya que la discusi&oacute;n 
  no se aplica solo a redes TCP/IP, sino que tambi&eacute;n es relevante para 
  UUCP.</P>
<P>El cap&iacute;tulo 5 le ayudara a configurar su m&aacute;quina para redes TCP/IP. 
  Contiene pasos de instalaci&oacute;n para nodos aislados (solamente con enlace 
  local), y nodos conectados a una Ethernet. Tambi&eacute;n le presentara unas 
  pocas herramientas &uacute;tiles que puede utilizar para comprobar y retocar 
  su configuraci&oacute;n. El siguiente cap&iacute;tulo expone como configurar 
  la resoluci&oacute;n de nombres, y explica como montar un servidor de nombres.</P>
<P>_____________________________________________<BR>
  12 Ha habido sistemas UNIX comerciales, por los que hay que pagar un mont&oacute;n 
  de dinero, que ven&iacute;an con un script de shell con setuid-root que permit&iacute;a 
  a los usuarios obtener privilegios de root utilizando un conocido truco.<BR>
  13 En 1988, el gusano RTM llevo a gran parte de Internet a un colapso, en parte 
  por explotar un agujero que hab&iacute;a en algunos programas sendmail. Este 
  agujero ya ha sido reparado con creces.<BR>
  14 Escrita por Gene Kim y Gene Spafford.<BR>
  15 N. del T.: Sumas de bytes con objeto de comprobar alguna modificaci&oacute;n 
  no "autorizada" en el fichero.</P>
<P>&nbsp;</P>
<P>Esto va seguido de dos cap&iacute;tulos que tratan de la configuraci&oacute;n 
  y uso de SLIP y PPP, respectivamente. El cap&iacute;tulo 7 explica como establecer 
  conexiones SLIP, y da una referencia detallada de dip, una herramienta que le 
  permite automatizar la mayor&iacute;a de pasos necesarios.</P>
<P>El cap&iacute;tulo 8 cubre PPP y pppd, el demonio que se necesita para ello.</P>
<P>El cap&iacute;tulo 9 da una corta introducci&oacute;n a la instalaci&oacute;n 
  de las aplicaciones de red mas importantes, como rlogin, rcp, etc. Esto tambi&eacute;n 
  abarca la gesti&oacute;n de los servicios por el inetd, y como puede restringir 
  ciertos servicios de seguridad relevante a un grupo de nodos de confianza.</P>
<P>Los dos cap&iacute;tulos siguientes hablan de NIS, el sistema de informaci&oacute;n 
  de red (Network Information System), y NFS, el sistema de ficheros de red (Network 
  File System). NIS es una herramienta &uacute;til para distribuir informaci&oacute;n 
  de administraci&oacute;n, como las claves de usuario, en red de &aacute;rea 
  local. NFS le permite compartir sistemas de ficheros entre varios nodos de su 
  red.</P>
<P>El cap&iacute;tulo 12 le dar&aacute; una amplia introducci&oacute;n a la administraci&oacute;n 
  del UUCP de Taylor, una implementaci&oacute;n gratis del paquete UUCP.</P>
<P>El resto del libro ser&aacute; un viaje guiado por temas como el correo electr&oacute;nico 
  y las Noticias de Usenet. El cap&iacute;tulo 13 le conduce a los conceptos centrales 
  del correo electr&oacute;nico, como que aspecto tiene una direcci&oacute;n de 
  correo, y como se las arregla el sistema de manejo de correo para llevar su 
  mensaje hasta el destinatario.</P>
<P>Los cap&iacute;tulos 14 y 15 cubren respectivamente la puesta en marcha de 
  smail y sendmail, dos agentes de transporte de correo que puede utilizar en 
  Linux. Este libro explica ambos, ya que smail es mas f&aacute;cil de instalar 
  para un principiante, mientras que sendmail es m&aacute;s flexible.</P>
<P>Los cap&iacute;tulos 16 y 17 explican la forma en que se manejan las noticias 
  en Usenet, y como instalar y usar C News, un paquete de software popular para 
  la gesti&oacute;n de las noticias de Usenet. El cap&iacute;tulo 18 trata brevemente 
  de como instalar un demonio NNTP para ofrecer el acceso a lectura de noticias 
  para su red local. El cap&iacute;tulo 19 muestra finalmente como configurar 
  y mantener varios lectores de noticias.</P>
</FONT> 
</BODY>
</HTML>

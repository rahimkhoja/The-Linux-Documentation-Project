<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
 <META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <META NAME="GENERATOR" CONTENT="lfparser_2.50">
 <META NAME="LFCATEGORY" CONTENT="SoftwareDevelopment">
 <link rel="icon" href="../../common/images/lf-16.png" type="image/png">
 <TITLE>lf350, SoftwareDevelopment: Plattformunabh&auml;ngige Softwareentwicklung</TITLE>
<style type="text/css">
<!--
 td.top {font-family: Arial,Geneva,Verdana,Helvetica,sans-serif; font-size:12 }
 pre { font-family:monospace,Courier }
 pre.code { font-family:monospace,Courier;background-color:#aedbe8; }
 p.cl { color:#EE9500 }
 table.left { margin-right:0.3cm }
 a.nodec { text-decoration:none }
 p.trans { font-size:8pt; text-align:right }
 p.clbox { width:50%; alignment:center; background-color:#FFD700; 
           border-style:none; border-width:medium; border-color:#FFD700; 
           padding:0.5cm;  text-align:center }
 p.code { width:80%; alignment:center; background-color:#aedbe8; 
          border-style:none; border-width:medium; border-color:#aedbe8; 
          padding:0.1cm;  text-align:left }
 p.foot { background-color:#AAAAAA; color:#FFFFFF; border-style:none; 
          border-width:medium; border-color:#AAAAAA; padding:0.5cm ; 
          margin-top:0.1cm; margin-right:1cm; margin-left:1cm; 
          text-align:center }
 div.tbbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   margin: 2px 5px 2px 5px;
   text-align: center;
   width: 20em;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
 div.bbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   float: left;
   margin: 2px 5px 2px 5px;
   text-align: center;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
-->
</style>
 
</HEAD>
<BODY bgcolor="#ffffff" text="#000000">
 <!-- this is generated html code. NEVER use this file for your
 translation work. Instead get the file with the same article number
 and .meta.shtml in its name. Translate this meta file and then
 use lfparser program to generate the final article -->
 <!-- lfparser can be obtained from http://main.linuxfocus.org/~guido/dev/lfparser.html -->

<!-- this is used by a number of tools:
 =LF=AUTHOR: Michael     Tschater
 =LF=CAT___: SoftwareDevelopment
 =LF=TITLE_: Plattformunabh&auml;ngige Softwareentwicklung
 =LF=NUMBER: 350
 =LF=ANAME_: article350.shtml
 =LF=PARSER: 2.50
 -->

<!-- 2pdaIgnoreStart -->

<!-- start navegation bar, current, style=2 -->
 <!-- top navegation bar -->
 <TABLE summary="topbar_1" cellspacing="0" cellpadding="0" border="0" align="center" width="90%">
   <TR bgcolor="#2e2292">
     <TD class="top"><TABLE summary="topbar_1_logo" cellspacing="0" cellpadding="0" border="0" width=
       "100%">
         <TR><TD width="319"><a href="../../index.shtml"><IMG src="../../common/images/logolftop_319x45.gif"
           alt="[LinuxFocus-icon]" width="319" height="45" align="left" 
           border="0"></a></TD>

           <TD class="top">
             <TABLE summary="topbar_1_links" width="100%">
               <TR align="right">
                 <TD class="top">
                 
                 <A class="nodec" href="../../index.shtml"><FONT color=
                 "#DDDDDD" size="2">&lt;--</FONT></A> &nbsp;| 
                 <A class="nodec" href="../map.html"><FONT color=
                 "#DDDDDD" size="2">Plan</FONT></A> &nbsp;| 
                 <A class="nodec" href="../indice.html"><FONT color=
                 "#DDDDDD" size="2">Index</FONT></A> &nbsp;| 
                 <A class="nodec" href="../Search/index.html"><FONT color=
                 "#DDDDDD" size="2">Suchen</FONT></A> </TD>
                 
               </TR>

               <TR align="right">
                 <TD class="top">
                   <HR width="100%" noshade size="1">
                 </TD>
               </TR>
             </TABLE>
           </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end top navegation bar -->
 <!-- blue bar -->
 <TABLE summary="topbar_2" cellspacing="0" cellpadding="0" border="0" align="center"
 width="90%">
   <TR bgcolor="#00ffff">
     <TD><IMG src="../../common/images/transpix.gif" width="1" height=
     "2" alt=""></TD>
   </TR>
 </TABLE>
 <!-- end blue bar -->
 <!-- bottom navegation bar -->
 <TABLE summary="topbar_3" cellspacing="0" cellpadding="0" border="0" align="center"
 width="94%">
   <TR bgcolor="#000000">
     <TD>
       <TABLE summary="topbar_3_links" cellspacing="0" cellpadding="1" border="0" width=
       "100%">
         <TR align="center">
           <TD WIDTH="20%"><A class="nodec" href="../News/index.shtml"><FONT color=
           "#FFFFFF">Nachrichten</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Archives/index.html"><FONT color=
           "#FFFFFF">Archiv</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Links/index.shtml"><FONT color=
           "#FFFFFF">Links</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../aboutus.html"><FONT color=
           "#FFFFFF">&Uuml;ber uns</FONT></A> </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end bottom navegation bar -->
<!-- stop navegation bar -->

<!-- SSI_INFO -->

<!-- tr_staticssi include virtual -->
<!-- tr_staticssi exec cmd -->
<!-- addedByLfdynahead ver 1.5 --><TABLE ALIGN="right" border=0><TR><TD ALIGN="right"><FONT SIZE="-1" FACE="Arial,Helvetica">Dieses Dokument ist verf&uuml;bar auf: <A href="../../English/October2004/article350.shtml">English</a> &nbsp;<A href="../../ChineseGB/October2004/article350.shtml">ChineseGB</a> &nbsp;<A href="../../Deutsch/October2004/article350.shtml">Deutsch</a> &nbsp;<A href="../../Francais/October2004/article350.shtml">Francais</a> &nbsp;<A href="../../Italiano/October2004/article350.shtml">Italiano</a> &nbsp;<A href="../../Russian/October2004/article350.shtml">Russian</a> &nbsp;</FONT></TD></TR></TABLE><br>
 


<!-- SSI_INFO STOP -->
<!-- 2pdaIgnoreStop -->

<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_START -->
<TABLE ALIGN="LEFT" BORDER="0" WIDTH="195" summary="about the author" class="left">
<TR>
<TD>

<img src="../../common/images2/MichaelTschater.jpg" alt="[Photo of the Author]" width="182" height="186">
<BR>von  Michael Tschater <br> <small>&lt;tschater/at/web.de&gt;</small>
<BR><BR>
<I>&Uuml;ber den Autor:</I><BR>
<!-- aboutauthor_start -->
<p>Michael besch&auml;ftigt sich haupts&auml;chlich mit hardwarenaher
    Software-Entwicklung (Firmware). Bei seinem aktuellen Projekt
    muss zus&auml;tzlich eine Strategieentscheidung &uuml;ber eine
    Entwicklungsumgebung getroffen werden, mit der zuk&uuml;nftig ein
    Front-End zum Ansteuern seiner Firmware programmiert werden
    soll.<br></p>
<!-- aboutauthor_stop -->
<!-- TRANSLATED_TO de -->
<!-- TRANSLATED_TO_STOP -->
<!-- INDEX_START -->
<BR><i>Inhalt</i>:
<UL>
  <LI><A HREF="#350lfindex0">Einleitung</A></LI>
  <LI><A HREF="#350lfindex1">Programmiersprachen</A></LI>
  <LI><A HREF="#350lfindex2">Eine Beispielanwendung</A></LI>
  <LI><A HREF="#350lfindex3">C/C++ Bibliotheken</A></LI>
  <LI><A HREF="#350lfindex4">Trolltech Qt</A></LI>
  <LI><A HREF="#350lfindex5">&Uuml;bersicht &uuml;ber Qt</A></LI>
  <LI><A HREF="#350lfindex6">wxWidgets</A></LI>
  <LI><A HREF="#350lfindex7">&Uuml;bersicht &uuml;ber wxWidgets</A></LI>
  <LI><A HREF="#350lfindex8">GTK+ (mit gtkmm)</A></LI>
  <LI><A HREF="#350lfindex9">&Uuml;bersicht &uuml;ber GTK+</A></LI>
  <LI><A HREF="#350lfindex10">FLTK</A></LI>
  <LI><A HREF="#350lfindex11">&Uuml;bersicht &uuml;ber FLTK</A></LI>
  <LI><A HREF="#350lfindex12">FOX Toolkit</A></LI>
  <LI><A HREF="#350lfindex13">&Uuml;bersicht &uuml;ber FOX</A></LI>
  <LI><A HREF="#350lfindex14">Weitere M&ouml;glichkeiten</A></LI>
  <LI><A HREF="#350lfindex15">JAVA</A></LI>
  <LI><A HREF="#350lfindex16">Plattformunabh&auml;ngigkeit</A></LI>
  <LI><A HREF="#350lfindex17">Objektorientierung </A></LI>
  <LI><A HREF="#350lfindex18">Sprachsyntax</A></LI>
  <LI><A HREF="#350lfindex19">Klassenbibliothek </A></LI>
  <LI><A HREF="#350lfindex20">Sicherheit</A></LI>
  <LI><A HREF="#350lfindex21">Eignung f&uuml;r Projekte
    </A></LI>
  <LI><A HREF="#350lfindex22">Java Development Kit (JDK)</A></LI>
  <LI><A HREF="#350lfindex23">JHelloWorld</A></LI>
  <LI><A HREF="#350lfindex24">JavaScript und Java</A></LI>
  <LI><A HREF="#350lfindex25">Normierungsversuche</A></LI>
  <LI><A HREF="#350lfindex26">Dekompilierung</A></LI>
  <LI><A HREF="#350lfindex27">Wundersprache oder kurzfristiger Hype?
    </A></LI>
  <LI><A HREF="#350lfindex28">Grafische Oberfl&auml;chen mit Java</A></LI>
  <LI><A HREF="#350lfindex29">SWT und Eclipse</A></LI>
  <LI><A HREF="#350lfindex30">Abk&uuml;rzung in Zusammenhang mit JAVA</A></LI>
  <LI><A HREF="#350lfindex31">&Uuml;bersicht &uuml;ber JAVA</A></LI>
  <LI><A HREF="#350lfindex32">Kylix</A></LI>
  <LI><A HREF="#350lfindex33">&Uuml;bersicht &uuml;ber Kylix
    </A></LI>
  <LI><A HREF="#350lfindex34">Smalltalk</A></LI>
  <LI><A HREF="#350lfindex35">&Uuml;bersicht &uuml;ber Smalltalk</A></LI>
  <LI><A HREF="#350lfindex36">Mozilla</A></LI>
  <LI><A HREF="#350lfindex37">&Uuml;bersicht &uuml;ber Mozilla
    </A></LI>
  <LI><A HREF="#350lfindex38">Microsofts Antwort</A></LI>
  <LI><A HREF="#350lfindex39">Was ist .NET ?</A></LI>
  <LI><A HREF="#350lfindex40">Was ist Visual Sudio .NET ?</A></LI>
  <LI><A HREF="#350lfindex41">Unterschiede zwischen Visual Basic (VB) und VB.NET</A></LI>
  <LI><A HREF="#350lfindex42">Welche Programmiersprache eignet sich am besten?</A></LI>
  <LI><A HREF="#350lfindex43">.NET und Linux</A></LI>
  <LI><A HREF="#350lfindex44">&Uuml;bersicht &uuml;ber .NET</A></LI>
  <LI><A HREF="#350lfindex45">Zusammenfassung</A></LI>
  <LI><A HREF="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=350">Talkback f&uuml;r diesen Artikel</A></LI>
</UL>

</TD></TR></TABLE>
<!-- INDEX_STOP -->
<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_STOP -->
<!-- HEAD_OF_THE_ARTICLE_START -->
<br>&nbsp;
<table border="0"><tr><td>
<H2>Plattformunabh&auml;ngige Softwareentwicklung</H2>
 <img hspace="10" alt="[Illustration]" src="../../common/images2/article350/osindep.gif" width="269" height="240">
<!-- ABSTRACT OF THE ARTICLE -->
<P><i>Zusammenfassung</i>:
<P>
<!-- articleabstract_start -->

    Nahezu alle Ger&auml;te in der Industrie lassen sich heutzutage &uuml;ber
    ein Netzwerk steuern. Die Bedienoberfl&auml;che l&auml;uft dabei auf
    Standard-Hardware und arbeitet als reiner Client, der
    zeitunkritisch Daten sendet (z.B. Initialisierungsparameter)
    und empf&auml;ngt (z.B. Me&szlig;ergebnisse). Im folgenden Schaubild ist
    die hier angesprochene Kommunikation gr&uuml;n gekennzeichnet.<br><br><img alt="[gui frontend]" src="../../common/images2/article350/frontend_de.jpg" width="560" height="220"><br>
    Bei Softwareprojekten stellt sich vielfach die Frage, welche
    Betriebssysteme unterst&uuml;tzt werden sollen. W&auml;hrend der Leser
    dieses Artikels wohl in Richtung Linux tendieren d&uuml;rfte, werden
    aber auch andere Betriebssysteme (haupts&auml;chlich Windows)
    gefordert. Prinzipiell spielt das verwendete Betriebssystem f&uuml;r
    den genannten Anwendungsfall keine gro&szlig;e Rolle, es mu&szlig;
    lediglich gew&auml;hrleistet sein, da&szlig; der Benutzer intuitiv in
    gewohnter Weise zu den gew&uuml;nschten Ergebnissen kommt.<br><br>
    Der folgende Artikel soll aufzeigen, dass es keine Entscheidung
    f&uuml;r eine einzelne Plattform geben muss, sondern dass es ohne
    weiteres m&ouml;glich ist Software zu schreiben, die sich auf
    mehreren Betriebssystemen &uuml;bersetzen l&auml;&szlig;t. Als Zielplattform
    beschr&auml;nkt sich der Artikel auf Standard PCs mit Linux und
    Windows. Es sollte auch m&ouml;glich sein die erstellten Anwendungen
    auf einem Mac unter MacOSX zu &uuml;bersetzen, dies kann aber aus
    Mangel an Hardware nicht untersucht werden.<br>
<!-- articleabstract_stop -->

<br><!-- HR divider --><center><font color="#8282e0"><b>_________________ _________________ _________________</b></font></center><br>
</td></tr></table>
<!-- HEAD_OF_THE_ARTICLE_STOP -->
<!-- BODY_OF_THE_ARTICLE_START -->


    <A NAME="350lfindex0">&nbsp;</A>
<H2>Einleitung</H2>

    Bei betriebssystemunabh&auml;ngigen Bibliotheken unterscheidet man
    zwei Ans&auml;tze zum Darstellen von Steuerelementen in
    Dialogen:<br>

    <ol>
      <li>Native Bibliotheken: F&uuml;r die Darstellung von Elementen
      werden die entsprechenden Routinen des Betriebssystems
      genutzt. Dadurch ist gew&auml;hrleistet, dass alle Steuerelemente
      aussehen wie in den Standard-Applikation dieses
      Betriebssystems. Eine native Bibliothek stellt Steuerelemente
      unter Linux anders dar als unter Windows 2000 oder Windows
      XP.<br>
      </li>

      <li>Die zweite M&ouml;glichkeit ist ein entsprechendes
      Look&amp;Feel selbst zu programmieren, d.h. s&auml;mtliche
      Steuerelemente werden von der Bibliothek gezeichnet und sehen
      unter allen Betriebssystemen gleich aus.<br>
      </li>
    </ol>
    Neben den technischen Merkmalen der Bibliotheken spielen in der
    Praxis noch weitere Faktoren eine Rolle, die ebenfalls
    verglichen werden sollen:<br>

    <ul>
      <li>Entwicklungsungebung: Eine integrierte
      Entwicklungsumgebung (z.B. mit GUI Builder, Makefile
      Generator) vereinfacht die Softwareentwicklung.</li>

      <li>Dokumentation und Support: Bei auftretenden Problemen ist
      schnelle Hilfe n&ouml;tig.</li>

      <li>Kosten: W&auml;hrend die meisten Bibliotheken f&uuml;r private
      Anwendungen frei verf&uuml;gbar sind, fallen beim gewerblichen
      Einsatz teilweise Kosten an. Bei Grundsatzentscheidungen zu
      Softwareprojekten gilt es solche Kosten vor den
      Entscheidungstr&auml;gern zu rechtfertigen.</li>

      <li>Tats&auml;chlicher Aufwand beim Portieren zwischen den
      Systemen.</li>
    </ul>
    Im konkreten Fall wird auf einen weiteren Punkt Wert gelegt,
    der jedoch nicht f&uuml;r alle Projekte zutreffen wird:<br>

    <ul>
      <li>Die erzeugte Software soll native Steuerelemente
      verwenden um sich nahtlos in die jeweilige Systemarchitektur
      einzugliedern. Der Benutzer soll keine Unterschiede zwischen
      dieser Software und der existierenden Software auf dem System
      erkennen k&ouml;nnen.<br>
      </li>
    </ul>
    Stellt man die Bibliotheken in einem Schichtenmodell dar,
    ergibt sich folgendes Bild:<br>
    <br>


    <center>
      <img src="../../common/images2/article350/layer_de.jpg" alt="layer-model" width="496" height="214">
    </center>

    <A NAME="350lfindex1">&nbsp;</A>
<H2>Programmiersprachen</H2>

    Das erste Auswahlkriterium ist die Programmiersprache. Hier
    bieten sich bereits mehrere M&ouml;glichkeiten auf die im Anchluss
    konkret eingegangen wird:<br>

    <ol>
      <li>C/C++ Bibliotheken.</li>

      <li>Java</li>

      <li>Kylix</li>

      <li>Smalltalk<br>
      </li>

      <li>Mozilla</li>
    </ol>
    Die Alternativen zu C und C++ werden etwas ausf&uuml;hrlicher
    angesprochen, da sie auch unter Software-Entwicklern weniger
    bekannt sind.<br>
    <br>

    <A NAME="350lfindex2">&nbsp;</A>
<H2>Eine Beispielanwendung</H2>

    Um die einzelnen Softwarepakete praktisch vergleichen zu k&ouml;nnen
    wird mit allen Bibliotheken eine Beispielanwendung erzeugt. Die
    implementierte Anwendung verf&uuml;gt &uuml;ber keinerlei Funktionalit&auml;t,
    zeigt aber die wichtigsten Steuerelemente. F&uuml;r die Windows
    Seite wird zudem eine reine Windows Software (Visual C++ 6.0,
    MFC Klassenbibliothek) erzeugt, an der sich die anderen Pakete
    bez&uuml;glich des Look&amp;Feels messen m&uuml;ssen. Als Linux
    Distributionen kommen RedHat Fedora Core 2 und Debian 3.0 zum
    Einsatz.<br>
    <br>


    <center>
      <table border="0">
        <tr>
          <td><a href=
          "../../common/images2/article350/msvc_win2000.jpg"><img alt="Windows 2000 Screenshot" src="../../common/images2/article350/msvc_win2000_th.jpg"  width="280" height="210"></a></td>

          <td><a href=
          "../../common/images2/article350/msvc_winxp.jpg"><img alt="Windows XP Screenshot" src="../../common/images2/article350/msvc_winxp_th.jpg"  width="280" height="210"></a></td>
        </tr>
      </table>
      <br>
      Windows 2000 und Windows XP Screenshot (Quellcode f&uuml;r Visual
      C++ <a href=
      "../../common/src2/article350/msvc_src.zip">hier</a>).<br>
      <br>
    </center>

    <A NAME="350lfindex3">&nbsp;</A>
<H2>C/C++ Bibliotheken</H2>


    <A NAME="350lfindex4">&nbsp;</A>
<H3>Trolltech Qt</H3>

    Qt ist eine Klassenbibliothek der norwegischen Firma Trolltech
    f&uuml;r die plattform&uuml;bergreifende Programmierung unter C++. Der
    Linux Windows Manager KDE basiert auf dem Qt Paket.
    Urspr&uuml;nglich wurde Qt unter einer Lizenz vertrieben, die f&uuml;r
    viele Linuxanwender nicht akzeptabel war. Aus diesem Grund
    wurde die GTK+ Bibliothek entwickelt, die Grundlage f&uuml;r den
    Gnome Windows Manager ist. Inzwischen ist sowohl die Linux- als
    auch die MacOS-Version unter der GPL inklusive Quelltexten
    verf&uuml;gbar, Qt f&uuml;r Windows wird nach wie vor kommerziell
    vertrieben. Zur Evaluaierung kann eine zeitlich befristete
    Testversion von der Webseite heruntergeladen werden, dabei wird
    unterschieden zwischen Evaluierungen f&uuml;r anschlie&szlig;ende
    kommerzielle Nutzung und Evaluierung f&uuml;r akademische Zwecke. Im
    folgenden wird auf die kommerzielle Evaluierungsversion
    eingegangen, die eine Registrierung erfordert.<br>
    <br>
    Neben den Versionen f&uuml;r Windows, Linux (Unix) und Mac ist eine
    embedded Version verf&uuml;gbar, die auf embedded Linux Varianten
    l&auml;uft und eine schlankere Fensterverwaltung bietet.<br>
    <br>
    Unter Linux verl&auml;uft die Installation wie erwartet v&ouml;llig
    problemlos. Im Programmpaket enthalten ist der GUI Generator Qt
    Designer. Die enthaltene umfangreiche Dokumentation gef&auml;llt
    durch eine detaillierte Beschreibung von Beispielprojekten,
    einem Kapitel zum Schnelleinstieg, sowie einer
    Klassen&uuml;bersicht. Der Qt Designer ist leider keine komplette
    Entwicklungsumgebung, f&uuml;r die Code-Generierung muss eine Shell
    bem&uuml;ht werde. Als Ouput des GUI Generators erh&auml;lt man eine XML
    Beschreibung der erstellten grafischen Oberfl&auml;che. Aus dieser
    Beschreibung wird &uuml;ber das Qt-Tool qmake ein g&uuml;ltige Makefile
    erzeugt. Das Makefile erzeugt aus der Oberfl&auml;chen-Beschreibung
    zun&auml;chst C++ Quellcode-Dateien (Qt-Tool: uic) und ruft
    anschlie&szlig;end den Meta Object Compiler (Qt-Tool: moc) auf, der
    Qt spezifische Spracherweiterungen in C++ Quellcode umsetzt
    (z.B. Signal-Slot-Mechanismus). Erst danach kann ein Standard
    make aufgerufen werden.<br>
    <br>
    M&ouml;chte man die Source-Files von Hand generieren ist folgende
    Sequenz n&ouml;tig (Ausgangsbasis ist MyDialog.ui):<br>

    <ul>
      <li>uic MyDialog.ui &gt; MyDialog.h</li>

      <li>uic -impl MyDialog.h MyDialog.ui &gt; MyDialog.cpp</li>

      <li>moc -o moc_MyDialog.cpp MyDialog.h<br>
      </li>
    </ul>
    Bei der Installation unter Windows ben&ouml;tigt das Toolkit einen
    Benutzer- und Firmennamen sowie eine Seriennummer. Diese Daten
    werden von Trolltech per Email nach der Registrierung
    mitgeteilt. Wider Erwarten l&auml;uft die Installation auf den
    Testsystemen nicht reibungslos ab. Eine Windows 2000
    Installation mit Visual C++ 6.0 Entwicklungsumgebung wird zwar
    korrekt erkannt, dem Wizard gelingt es aber nicht, die
    Beispielprojekte zu &uuml;bersetzen und die Installation muss
    abgebrochen werden. Auf einem zweiten System mit Windows 2000
    wird eine Visual C++ 5.0 Umgebung erst gar nicht erkannt. In
    beiden F&auml;llen muss also Hand angelegt werden um zu einem
    lauff&auml;higen System zu gelangen. Wie bei der Linux Version wird
    auch unter Windows die Entwicklungsumgebung Qt Designer
    mitgeliefert. Die Dokumentation ist offensichtlich die gleiche
    wie unter Linux. Die Windows spezifischen Informationen gehen
    etwas unter. So muss der Visual C++ Programmierer intensiv
    suchen, um die wichtigen Zeilen "For Visual Studio users, qmake
    can also generate '.dsp' files, for example: qmake -t vcapp -o
    hello.dsp hello.pro" zu finden. <br>
    <br>


    <center>
      <table>
        <tr>
          <td><a href=
          "../../common/images2/article350/qt_linux.png"><img src="../../common/images2/article350/qt_linux_th.png" alt="qt linux"  width="280" height="210"></a></td>

          <td><a href=
          "../../common/images2/article350/qt_win.jpg"><img src="../../common/images2/article350/qt_win_th.jpg" alt="qt win"  width="280" height="210"></a></td>
        </tr>
      </table>
      Linux und Windows 2000 Screenshot (Quellcode f&uuml;r QtDesigner
      <a href=
      "../../common/src2/article350/qt_src.tar.gz">hier</a>).<br>
    </center>

    <A NAME="350lfindex5">&nbsp;</A>
<H3>&Uuml;bersicht &uuml;ber Qt</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Name:<br>
          </td>

          <td>Trolltech Qt<br>
          </td>
        </tr>

        <tr>
          <td>Version:<br>
          </td>

          <td>3.3.2<br>
          </td>
        </tr>

        <tr>
          <td>Betriebssysteme:<br>
          </td>

          <td>Linux, Win32, MacOS, Solaris, IRIX, AIX, HP-UX<br>
          </td>
        </tr>

        <tr>
          <td>Programmiersprache:<br>
          </td>

          <td>C++<br>
          </td>
        </tr>

        <tr>
          <td>Lizenz:<br>
          </td>

          <td>GPL oder propriet&auml;re Lizenz (kommerziell)<br>
          </td>
        </tr>

        <tr>
          <td>Vorteile:</td>

          <td>
            <ul>
              <li>Basisbibliothek f&uuml;r den KDE Windows Manager unter
              Linux</li>

              <li>Installationspakete in allen Linux
              Standard-Distributionen vorhanden (Installation sehr
              einfach)<br>
              </li>

              <li>generische Controls unter Windows</li>

              <li>M&auml;chtige Entwicklungsumgebung(en)</li>

              <li>bew&auml;hrt<br>
              </li>

              <li>Migrationsunterst&uuml;tzung f&uuml;r Win32 MFC Anwendungen
              (Qt/MFC Migration Framework) erm&ouml;glicht das
              schrittweise Umsetzen von MFC Quellcode.<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Nachteile:<br>
          </td>

          <td>
            <ul>
              <li>evtl. Lizenzkosten (teuer)</li>

              <li>Evaluierungssoftware l&auml;&szlig;t sich unter Windows
              nicht fehlerfrei installieren<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Entwicklungsumgebung:<br>
          </td>

          <td>z.B. QtDesigner, KDevelop<br>
          </td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><a href=
          "http://www.trolltech.com">http://www.trolltech.com</a></td>
        </tr>

        <tr>
          <td>Dokumentation:<br>
          </td>

          <td>Manuals, Tutorials, Mailing Listen<br>
          z.B. <a href=
          "http://doc.trolltech.com/3.3/index.html">http://doc.trolltech.com/3.3/index.html</a><br>

          </td>
        </tr>

        <tr>
          <td>Referenzprojekte:<br>
          </td>

          <td>
            <ul>
              <li>KDE Desktop (Default z.B. bei SuSE)<br>
              </li>

              <li>Opera Browser</li>

              <li>Photoshop Album</li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Verbreitung:<br>
          </td>

          <td>sehr gro&szlig;e Verbreitung<br>
          </td>
        </tr>
      </tbody>
    </table>

    <A NAME="350lfindex6">&nbsp;</A>
<H3>wxWidgets</H3>

    Seit mittlerweilen 12 Jahren ist das wxWidgets Toolkit
    verf&uuml;gbar, jedoch erst vor wenigen Monaten bekam das Paket
    seinen heutigen Namen. Der bis dahin verwendete Name wxWindows
    wurde nach "Gespr&auml;chen" mit Microsoft aufgegeben. wxWidgets
    verf&uuml;gt &uuml;ber eine riesige Sammlung an Klassen f&uuml;r alle
    Bereiche. Neben der m&auml;chtigen Dokumentation sind sehr viele
    Beispielanwendungen verf&uuml;gbar. Die Liste der
    Referenzanwendungen macht deutlich, dass es hier um ein
    ausgereiftes Softwarepaket handelt. <br>
    <br>
    Die Programmierung erfolgt in C++ und ist &auml;hnlich der Visual
    C++ Programmierung unter Windows. Ein Umstieg d&uuml;rfte hier die
    geringsten Probleme verursachen.<br>
    <br>
    Nach der Installation der Version wxWindows2.4.2 unter RedHat
    Fedora Core 2 treten beim &Uuml;bersetzen der Beispielprogramme
    Fehler auf. Die Ursache der Fehler liegt in GTK+ Aufrufen, die
    in der von RedHat gepatchten Version von GTK+ privat und somit
    nicht zugelassen sind. Hier zeigt sich, das die Dynamik der
    Open Source Gemeinde durchaus auch Probleme verursachen kann.
    Die Probleme sollten aber nicht &uuml;berbewertet werden. Mit der
    Installation einer Standard GTK+ Bibliothek d&uuml;rfte alles glatt
    laufen. F&uuml;r die weitere Untersuchung im Rahmen dieses Artikel
    wird stattdessen auf die Debian Distribution Version 3.0
    gewechselt. Hier funktioniert alles auf Anhieb.<br>
    <br>
    Ebenfalls problemlos verl&auml;uft die Installation unter Windows.
    Das Generieren der Bibliotheken und Beispielprogamme
    funktioniert musterg&uuml;ltig. <br>
    <br>


    <center>
      <table>
        <tr>
          <td><a href=
          "../../common/images2/article350/wx_linux.png"><img src="../../common/images2/article350/wx_linux_th.png" alt="wxWidgets on Linux screenshot" hspace="5"  width="280" height="224">
          </a></td>

          <td><a href=
          "../../common/images2/article350/wx_win32.jpg"><img src="../../common/images2/article350/wx_win32_th.jpg" alt="wxWidgets on Windows screenshot" hspace="5"  width="280" height="210">
          </a></td>
        </tr>
      </table>
      <br>
       Linux und Windows 2000 Screenshot (Quellcode <a href=
      "../../common/src2/article350/wx_src.zip">hier</a>).<br>
    </center>
    <br>

    <A NAME="350lfindex7">&nbsp;</A>
<H3>&Uuml;bersicht &uuml;ber wxWidgets</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Name:<br>
          </td>

          <td>wxWidgets<br>
          </td>
        </tr>

        <tr>
          <td>Version:<br>
          </td>

          <td>2.4.2<br>
          </td>
        </tr>

        <tr>
          <td>Betriebssysteme:<br>
          </td>

          <td>Linux, Win32, embedded Devices<br>
          </td>
        </tr>

        <tr>
          <td>Programmiersprache:<br>
          </td>

          <td>C++<br>
          </td>
        </tr>

        <tr>
          <td>Lizenz:<br>
          </td>

          <td>LGPL<br>
          </td>
        </tr>

        <tr>
          <td>Vorteile:</td>

          <td>
            <ul>
              <li>einfache Handhabung (viele Beispiele).<br>
              </li>

              <li>sehr gute Dokumentation.</li>

              <li><br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Nachteile:<br>
          </td>

          <td>
            <ul>
              <li>Probleme bei der Kombination Fedora Core 2 -
              wxWindows2.4.2<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Entwicklungsumgebung:<br>
          </td>

          <td><br>
          </td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><a href=
          "http://www.wxwidgets.org">http://www.wxwidgets.org</a><br>

          </td>
        </tr>

        <tr>
          <td>Dokumentation:<br>
          </td>

          <td>Manuals, Tutorials, Mailing Listen, Wiki<br>
          z.B. <a href=
          "http://wiki.wxwidgets.org">http://wiki.wxwidgets.org</a></td>
        </tr>

        <tr>
          <td>Referenzprojekte:<br>
          </td>

          <td>AOL Communicator<br>
          </td>
        </tr>

        <tr>
          <td>Verbreitung:<br>
          </td>

          <td>geringe Verbreitung<br>
          </td>
        </tr>
      </tbody>
    </table>

    <p><br>
    </p>

    <A NAME="350lfindex8">&nbsp;</A>
<H3>GTK+ (mit gtkmm)</H3>

    Die Abk&uuml;rzung GTK steht f&uuml;r "The GIMP Toolkit". Die beiden
    bekanntesten Projekte sind der Gnome Windows Manager, der in
    allen Standard Linux Distributionen enthalten ist, und die
    professionelle Grafikanwendung GIMP. Gnome ist neben KDE (siehe
    Qt) die zweite gro&szlig;e Desktop-Umgebung unter Linux. Sie wird von
    vielen Distributionen als Standard-Umgebung installiert. Mit
    Einf&uuml;hrung der Version 2 von GTK+ ist das Look&amp;Feel
    wesentlich verbessert worden. <br>
    <br>
    Eine Besonderheit von GTK+ ist, dass es komplett in C
    implementiert wurde. Konsequenterweise erzeugt der GUI-Builder
    glade2 ebenfalls C-Code. Durch Verwendung von gtkmm (fr&uuml;her
    GTK--) l&auml;&szlig;t sich aber ebenfalls in C++ programmieren.<br>
    <br>
    Ganz im Gegensatz zum professionellen Auftreten von GTK+ f&uuml;r
    Linux scheint es mit 'GTK+ for Win32' nicht weit her zu sein.
    Klickt man auf der GTK+-Hauptseite auf diesen Link erscheint
    sofort die Warnung: "<b>The program(s) might crash unexpectedly
    or behave otherwise strangely.</b> (But of course, so do many
    commercial programs on Windows.) The stability seems to depend
    a lot on the machine, display drivers, other software
    installed, and whatnot." (Stand 2004-09-06). Der wagemutige
    Software-Entwickler klickt nat&uuml;rlich dennoch auf die Download
    Seite und bekommt eine lange Liste an einzelnen
    Softwarekomponenten zum Download angeboten. Ein
    zusammenh&auml;ngendes Paket sucht man vergebens. Stattdessen liest
    man die Anweisung, eine Reihe von Softwarekomponenten zu
    installieren und gegebenfalls, wenn bestimmte Sachen fehlen,
    die Download-Seite eben noch einmal zu besuchen. Dies passt zur
    Aussage der 'GTK+ for Windows' - Webseite: "You are expected to
    be pretty experienced to be able to use GTK+ in your own
    programs. This isn't Visual Basic.".  Nach einer Installation
    der Basiskomponeneten und einem erfolglosen Versuch eine
    Beispielanwendung zu starten, d&uuml;rfte den meisten Entwicklern
    allm&auml;hlich die Lust auf eine tiefere Einarbeitung vergangen
    sein. Die v&ouml;llig unprofessionelle Aufmachung der 'GTK+ for
    Win32' Einzelkomponenten (von einem Paket kann keine Rede sein)
    disqualifiziert das Software-Paket und jeglicher
    (professionelle) Einsatz ist ausgeschlossen.<br>
    <br>


    <center>
      <a href="../../common/images2/article350/gtk.png"><img alt="GTK+ screenshot" src="../../common/images2/article350/gtk_th.png" width="280" height="210"></a><br>
       GTK+ Screenshot f&uuml;r Linux (Quellcode f&uuml;r glade2 <a href=
      "../../common/src2/article350/gtk_src.tar.gz">hier</a>)
    </center>

    <A NAME="350lfindex9">&nbsp;</A>
<H3>&Uuml;bersicht &uuml;ber GTK+</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Name:<br>
          </td>

          <td>GTK+ - The GIMP Toolkit<br>
          </td>
        </tr>

        <tr>
          <td>Betriebssysteme:<br>
          </td>

          <td>Linux, Win32<br>
          </td>
        </tr>

        <tr>
          <td>Programmiersprache:<br>
          </td>

          <td>C (C++ mit gtkmm)<br>
          </td>
        </tr>

        <tr>
          <td>Lizenz:<br>
          </td>

          <td>LGPL<br>
          </td>
        </tr>

        <tr>
          <td>Vorteile:<br>
          </td>

          <td>
            <ul>
              <li>Basisbibliothek f&uuml;r den Gnome Windows Manager
              unter Linux</li>

              <li>Installationspakete in allen
              Standard-Distributionen vorhanden (Installation sehr
              einfach)<br>
              </li>

              <li>generische Controls unter Windows</li>

              <li>bew&auml;hrt (unter Linux)<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Nachteile:<br>
          </td>

          <td>
            <ul>
              <li>Win32-Implementierung ist unhandlich l&auml;uft nicht
              stabil (Stand 09-2004)<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Entwicklungsumgebung:<br>
          </td>

          <td>z.B. glade2 (GUI Builder), Anjuta</td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><a href=
          "http://www.gtk.org">http://www.gtk.org</a></td>
        </tr>

        <tr>
          <td>Dokumentation:<br>
          </td>

          <td>Manuals, Tutorials, Mailing Listen<br>
          z.B. <a href=
          "http://developer.gnome.org/doc/API/2.0/gtk/index.html">http://developer.gnome.org/doc/API/2.0/gtk/index.html</a><br>

          </td>
        </tr>

        <tr>
          <td>Referenzprojekte:<br>
          </td>

          <td>
            <ul>
              <li>Gnome Desktop</li>

              <li>GIMP</li>

              <li>Gnumeric<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Verbreitung:<br>
          </td>

          <td>Linux: sehr gro&szlig;e Verbreitung, Windows: sehr geringe
          Verbreitung<br>
          </td>
        </tr>
      </tbody>
    </table>
    <br>
    <br>

    <A NAME="350lfindex10">&nbsp;</A>
<H3><a name="FLTK"></a>FLTK</H3>

    Beim FLTK Toolkit (Fast, Light Tool Kit) handelt es sich um ein
    weitestgehend unbekanntes Paket, dass als Nachfolger von <a
    href="http://freshmeat.net/projects/xforms/">XForms</a>
    implementiert wurde. Auf der Web-Seite bekommt man die
    kompletten Sourcen zum Download angeboten. Die Gr&ouml;&szlig;e von 2.3MB
    (.tar.gz, Linux) bzw. 3MB (.zip, Win32) macht dem Namen alle
    Ehre. Unter Linux erfolgt die Installation problemlos:
    auspacken und "make" aufrufen, fertig. Danach stehen dem
    Benutzer die Bibliotheken, Beispielanwendungen, der GUI-Builder
    "fluid" und ein Programmierhandbuch zur Verf&uuml;gung. Dass bei
    dieser Gr&ouml;&szlig;e die Anzahl der zur Verf&uuml;gung gestellten Klassen
    geringer ist als bei den Schwergewichten Qt und wxWindows
    d&uuml;rfte klar sein. Die enthaltenen Klassen decken den
    GUI-Bereich ab, d.h. Fenster, Men&uuml;s, Controls, OpenGL und
    Darstellung von Bildern. Klassen f&uuml;r Netzwerk-Kommunikation und
    &auml;hnliches sind nicht vorhanden.<br>
    <br>
    Unter Windows l&auml;uft die Installation nicht ganz so rund. Bei
    Verwendung der Visual C++ Entwicklungsumgebung muss lediglich
    ein Hauptprojekt &uuml;bersetzt werden, dabei kommt es aber zu
    Problemen mit den Grafikbibliotheken. Der Einfachheit halber
    k&ouml;nnen diese in der Konfigurationsdatei config.h auskommentiert
    werden. <br>
    Eine weitere Besonderheit der Windows-Variante ist, dass sich
    beim Starten eines Projekts stets auch ein DOS-Fenster &ouml;ffnet,
    wenn die FLTK-Bibliothek in der DEBUG Variante erstellt wurde.
    Dies ist kein Bug, sondern ein Feature: Auf diese Art wird
    gew&auml;hrleistet, dass Anwendungen die von der Konsole gestartet
    werden auf stderr und stdout schreiben k&ouml;nnen.<br>
    <br>
    Insgesamt gesehen macht das FLTK Toolkit einen sehr
    durchdachten Eindruck. Die Dokumentation hebt insbesondere die
    geringe Gr&ouml;&szlig;e der Executables (80kB f&uuml;r ein "hello world") und
    schlanke schnelle 2D und 3D Grafik (OpenGL/Mesa) hervor.
    Desweiteren wird auf eine gute Portierbarkeit hingewiesen.<br>


    <center>
      <table border="0" cellpadding="2" cellspacing="2">
        <tr>
          <td><a href=
          "../../common/images2/article350/fltk_linux.png"><img alt="Linux FLTK Screenshot" src="../../common/images2/article350/fltk_linux_th.png" width="280" height="210">
          </a><br>
          </td>

          <td><a href=
          "../../common/images2/article350/fltk_win32.jpg"><img alt="Windows FLTK Screenshot" src="../../common/images2/article350/fltk_win32_th.jpg" width="280" height="210">
          </a><br>
          </td>
        </tr>
      </table>
      <br>
       Linux und Windows 2000 Screenshot (Quellcode <a href=
      "../../common/src2/article350/fltk_src.tar.gz">hier</a>).<br>
    </center>
    <br>

    <A NAME="350lfindex11">&nbsp;</A>
<H3>&Uuml;bersicht &uuml;ber FLTK</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Name:<br>
          </td>

          <td>Fast Light Tool Kit</td>
        </tr>

        <tr>
          <td>Version:<br>
          </td>

          <td>1.1.5rc3<br>
          </td>
        </tr>

        <tr>
          <td>Betriebssysteme:<br>
          </td>

          <td>Linux, Win32, MacOS<br>
          </td>
        </tr>

        <tr>
          <td>Programmiersprache:<br>
          </td>

          <td>C++<br>
          </td>
        </tr>

        <tr>
          <td>Lizenz:<br>
          </td>

          <td>LGPL<br>
          </td>
        </tr>

        <tr>
          <td>Vorteile:</td>

          <td>
            <ul>
              <li>sehr schlanke Bibliothek</li>

              <li>Quellcode inklusive Dokumentation und
              Entwicklungsumgebung "fluid"<br>
              </li>

              <li>gute OpenGL Unterst&uuml;tzung (wurde nicht
              untersucht)<br>
              </li>

              <li>generische Controls unter Windows</li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Nachteile:<br>
          </td>

          <td>
            <ul>
              <li>Installation unter Win32 (Visual C++) nicht
              fehlerfrei</li>

              <li>fluid-Entwicklungsumgebung l&auml;uft nicht stabil
              unter Windows<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Entwicklungsumgebung:<br>
          </td>

          <td>z.B. fluid (GUI Builder), Eclipse<br>
          </td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><a href=
          "http://www.fltk.org">http://www.fltk.org</a>, Download:
          <a href=
          "http://freshmeat.net/projects/fltk/">http://freshmeat.net/projects/fltk/</a><br>

          </td>
        </tr>

        <tr>
          <td>Dokumentation:<br>
          </td>

          <td>Manuals, Tutorials, Mailing Listen<br>
          z.B. <a href=
          "http://www.fltk.org">http://www.fltk.org</a><br>
          </td>
        </tr>

        <tr>
          <td>Referenzprojekte:<br>
          </td>

          <td>
            <ul>
              <li><a href=
              "http://vtkfltk.sourceforge.net/">http://vtkfltk.sourceforge.net/</a><br>

              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Verbreitung:<br>
          </td>

          <td>geringe Verbreitung; auch unter Software-Entwicklern
          weitestgehend unbekannt<br>
          </td>
        </tr>
      </tbody>
    </table>

    <A NAME="350lfindex12">&nbsp;</A>
<H3>FOX Toolkit</H3>

    Das Fox Toolkit bezeichnet sich selbst als eines der
    schnellsten verf&uuml;gbaren Toolkits. Es verf&uuml;gt &uuml;ber eine Vielzahl
    von Steuerelementen und eine OpenGL Anbindung.<br>
    <br>
    Die obligatorischen Test-Installationen unter Windows und Linux
    verlaufen problemlos. Neben Beispielprojekten ist eine
    ausf&uuml;hrliche Dokumentation verf&uuml;gbar. Leider fehlt bei der
    getesteten Version die Klassen&uuml;bersicht, die aber online
    eingesehen werden kann. Bei der weiteren Untersuchung leistet
    sich das Toolkit keine Schw&auml;chen.<br>
    <br>


    <center>
      <a href="../../common/images2/article350/fox_win.jpg"><img alt="FOX screenshot" src="../../common/images2/article350/fox_win_th.jpg" width="280" height="210"></a><br>
      <br>
       Windows 2000 Screenshot (Quellcode <a href=
      "../../common/src2/article350/fox_src.zip">hier</a>)
    </center>

    <A NAME="350lfindex13">&nbsp;</A>
<H3>&Uuml;bersicht &uuml;ber FOX</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Name:<br>
          </td>

          <td>FOX Toolkit</td>
        </tr>

        <tr>
          <td>Version:<br>
          </td>

          <td>1.2.9<br>
          </td>
        </tr>

        <tr>
          <td>Betriebssysteme:<br>
          </td>

          <td>Linux, Win32<br>
          </td>
        </tr>

        <tr>
          <td>Programmiersprache:<br>
          </td>

          <td>C++<br>
          </td>
        </tr>

        <tr>
          <td>Lizenz:<br>
          </td>

          <td>LGPL<br>
          </td>
        </tr>

        <tr>
          <td>Vorteile:</td>

          <td>
            <ul>
              <li>gute Dokumentation</li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Nachteile:<br>
          </td>

          <td>
            <ul>
              <li> <br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Entwicklungsumgebung:<br>
          </td>

          <td><br>
          </td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><a href=
          "http://www.fox-toolkit.org/">http://www.fox-toolkit.org</a><br>

          </td>
        </tr>

        <tr>
          <td>Dokumentation:<br>
          </td>

          <td>Manuals, Tutorials, Mailing Listen<br>
          </td>
        </tr>

        <tr>
          <td>Referenzprojekte:<br>
          </td>

          <td>
            <ul>
              <li>X File Explorer (Xfe)</li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Verbreitung:<br>
          </td>

          <td>geringe Verbreitung<br>
          </td>
        </tr>
      </tbody>
    </table>
    <br>
    <br>

    <A NAME="350lfindex14">&nbsp;</A>
<H3>Weitere M&ouml;glichkeiten</H3>

    Neben den angesprochenen Bibliotheken sollen der
    Vollst&auml;ndigkeit halber noch weitere Projekte genannt werden,
    auf die aber nicht eingegangen wird: <br>

    <ul>
      <li>GNUstep [<a href=
      "http://www.gnustep.org/">http://www.gnustep.org/</a>]: unter
      Windows nur bedingt einsetzbar<br>
      </li>

      <li>Visual Component Framework [<a href=
      "http://vcf.sourceforge.net/">http://vcf.sourceforge.net/</a>]:
      keine komplette Linux-Version verf&uuml;gbar<br>
      </li>
    </ul>
    <br>

    <A NAME="350lfindex15">&nbsp;</A>
<H2>JAVA</H2>

    Im Jahre 1995 stellte die Firma Sun eine neue
    Programmiersprache vor. Neben normalen Desktop-Computern war
    Java f&uuml;r Industrieger&auml;te (Kaffemaschinen, Toaster, ...)
    vorgesehen. Der gro&szlig;e Durchbruch gelang aber zun&auml;chst &uuml;ber
    Internet-Anwendungen (Applets) in Verbindung mit Web-Browsern.
    In der Zwischenzeit wird Java aber auch f&uuml;r Standalone
    Anwendungen verwendet, f&uuml;r die es sich durch verschiedenen
    Eigenschaften sehr gut eignet. <br>
    <br>
    Im folgenden sollen die wichtigsten Eigenschaften von Java
    aufgez&auml;hlt und kurz erkl&auml;rt werden.<br>
    <br>

    <A NAME="350lfindex16">&nbsp;</A>
<H3>Plattformunabh&auml;ngigkeit</H3>

    Java ist plattformunabh&auml;ngig. Java Anwendungen bestehen aus
    einem Bytecode, der von einer virtuellen Maschine interpretiert
    wird. Dadurch sind die Anwendungen auf jeder Hardware
    lauff&auml;hige f&uuml;r die eine passende virtuelle Maschine existiert.
    Das Interpretieren durch die virtuelle Maschine bedeutet eine
    geringere Abarbeitungsgeschwindigkeit gegen&uuml;ber compilierter
    Software. Um diesen Nachteil auszugleichen sind mittlerweile
    Verbesserungen wie beispielsweise Just-In-Time-Compilierung
    (JIT) entwickelt worden, die zur Laufzeit Programmanweisungen
    der virtuellen Maschine in Anweisungen f&uuml;r die physaklische
    Maschine &uuml;bersetzt. Als Ergebnis erh&auml;lt man hier ein
    angepasstes Programm im Speicher, dass ohne Interpretation
    schnell ausgef&uuml;hrt werden kann. Die Hotspot-Technologie f&uuml;hrt
    zus&auml;tzlich eine Analyse des Laufzeitverhaltens zur weiteren
    Optimierung durch.<br>

    <A NAME="350lfindex17">&nbsp;</A>
<H3>Objektorientierung </H3>

    Java ist objektorientiert. Bei der Objektorientierung lie&szlig;en
    sich die Entwickler der Sprache von Smalltalk inspirieren.
    Vermutlich aus Performance-Gr&uuml;nden sind aber dennoch primitive
    Datentypen vorhanden, die nicht als Objekte verwaltet
    werden.<br>
    <br>

    <A NAME="350lfindex18">&nbsp;</A>
<H3>Sprachsyntax</H3>

    Die Sprachsyntax ist &auml;hnlich wie bei C und C++, jedoch wurden
    fehlertr&auml;chtige Inkonsistenzen nicht &uuml;bernommen. Eine Grundsatz
    beim Entwicklen der Sprache war, dass Java die besten Konzepte
    der existierenden Programmiersprachen vereinen soll. <br>
    <br>
    Einige Beispiele sind:<br>

    <ul>
      <li>Kein Pr&auml;prozessor: Ein Pr&auml;prozessor und Header-Dateien
      sind nicht mehr n&ouml;tig, da alle Informationen direkt aus den
      Klassendateien gelesen werden.</li>

      <li>Zeiger: Java kennt keine Zeiger, sondern verwendet statt
      dessen Referenzen. Eine Referenz repr&auml;sentiert ein
      Objekt.</li>

      <li>Garbage-Collector: Um Probleme mit dem Anlegen und
      L&ouml;schen von Objekten zu umgehen wird die Objektverwaltung von
      der Java-Laufzeitumgebung &uuml;bernommen. Beim Verlassen des
      Wirkungsbereichs werden Objekte automatisch gel&ouml;scht. Nicht
      freigegebene Objekte bzw. Speicherbereiche sowie falsche
      Destruktoren werden durch diese Technik verhindert.</li>

      <li>Ausnahmebehandlung: Im Gegensatz zur C++
      Ausnahmebehandlung werden Java Exceptions wesentlich
      intensiver genutzt und sind oftmals obligatorisch.<br>
      </li>
    </ul>

    <A NAME="350lfindex19">&nbsp;</A>
<H3>Klassenbibliothek </H3>

    Java verf&uuml;gt &uuml;ber eine umfangreiche Klassenbibliothek: JFC
    (Java Foundation Class) zum Erstellen von Oberfl&auml;chen
    (Durchgesetzt hat sich hier der Codename Swing).  <br>

    <A NAME="350lfindex20">&nbsp;</A>
<H3>Sicherheit</H3>

    Von einem Verifier wird Java-Code zun&auml;chst auf strukturelle
    Korrektheit und Typsicherheit &uuml;berpr&uuml;ft. Ein Security-Manager 
    &uuml;berwacht die Zugriffe auf die Peripherie. Jegliche
    Sicherheitsprobleme werden &uuml;ber Exceptions zur Laufzeit
    gemeldet.  <br>

    <A NAME="350lfindex21">&nbsp;</A>
<H3>Eignung f&uuml;r Projekte<br>
    </H3>

    Die genannten Vorteile haben Nebeneffekte, die Java nicht f&uuml;r
    alle Projekte sinnvoll erscheinen lassen. Diese Eigenschaften
    sind jedoch keine Fehler oder Schw&auml;chen, sondern sind bewu&szlig;t
    nicht implementiert worden und geh&ouml;ren zur
    Sprachphilosophie.<br>
    <br>
    Dazu geh&ouml;ren z.B.:<br>

    <ul>
      <li>plattformspezifische Peripherie-Zugriffe</li>

      <li>direkte Hardware-Zugriffe</li>

      <li>Eingriffe in das Betriebssystem</li>
    </ul>

    <A NAME="350lfindex22">&nbsp;</A>
<H3><a name="jdk">Java Development Kit (JDK)</a></H3>


    <p>Das Java Development Kit kann von der Sun Internetseite
    heruntergeladen werden und umfasst eine Basisausstattung an
    Applikationen, Java-Klassen und die Online-Dokumentation. Bei
    den Anwendungen handelt es sich um einen Compiler, einen
    Debugger, einen Appletviewer, sowie verschiedenen
    Hilfsprogrammen, die zum Erstellen und Testen von Java
    Anwendungen und Java Applets notwendig sind. Die Ausstattung
    bietet jedoch nur das N&ouml;tigste, der Compiler etwa muss von der
    Kommandozeile aus bedient werden. Desweiteren ist im Paket das
    Java Runtime Environment (JRE, enth&auml;lt die virtuelle Maschine)
    enthalten, die zum Ausf&uuml;hren des Bytecodes notwendig ist. Die
    Dokumentation umfasst schlie&szlig;lich die Beschreibung der
    kompletten API.<br>
    <br>
    </p>

    <A NAME="350lfindex23">&nbsp;</A>
<H3><a name="b-hellowor">JHelloWorld</a></H3>

    Unter Benutzung des Standard JDK soll die obligatorische
    Hello-World Anwendung implementiert werden:<br>
    <br>
    1. Schritt: Erzeugen des Quellcodes.<br>
<pre class="code">
sh&gt;vi Helloworld.java<br>
<br>
public class HelloWorld {<br>
  public static void main (String[] args) {<br>
<br>
    System.out.println("Hello World!");<br>
  }<br>
}
</pre>
    Dateiname und Klassenname m&uuml;ssen &uuml;bereinstimmen.<br>
    <br>
    2. Schritt: &Uuml;bersetzen.<br>
<pre class="code">
sh&gt;javac Helloworld.java<br>
</pre>
    <br>
    3. Schritt: Anwendung unter Verwendung der virtuellen Maschine
    starten.<br>
<pre class="code">
sh&gt;java Helloworld<br>
</pre>
    <br>

    <A NAME="350lfindex24">&nbsp;</A>
<H3>JavaScript und Java</H3>

    F&auml;lschlicherweise werden zwischen JavaScript und Java oft
    Gemeinsamkeiten vermutet. Dies ist grunds&auml;tzlich falsch.
    JavaScript wurde als Skript-Sprache zur Einbettung in HTML
    urspr&uuml;nglich von der Firma Netscape entwicklet. Es ist keine
    eigenst&auml;ndige Programmiersprache und ist vom verwendeten
    Browser abh&auml;ngig. Der Name JavaScript ist also mehr als
    Marketing-Gag zu verstehen. <br>

    <A NAME="350lfindex25">&nbsp;</A>
<H3>Normierungsversuche</H3>

    Bisher sind s&auml;mtliche Normierungsversuche der Sprache Java
    gescheitert. Grund hierf&uuml;r d&uuml;rfte sein, dass Sun die alleinige
    Kontrolle &uuml;ber die Weiterentwicklung des Java-Standards nicht
    aus der Hand geben m&ouml;chte. <br>

    <A NAME="350lfindex26">&nbsp;</A>
<H3>Dekompilierung</H3>

    Ein Wunder Punkt von Java ist die Tatsache, dass Anwendungen
    dekompiliert werden k&ouml;nnen. Trotz aller Sicherheitsmechanismen
    kann, zumindest im Augenblick, der Bytecode wieder in Source
    Code umgewandelt werden. Da der Java Compiler Bytecode f&uuml;r
    einen virtuellen Prozessor erstellt, m&uuml;ssen im Gegensatz zum
    klassischen Assembler-File weitere wichtige Informationen
    enthalten sein, die die Dekompilierung deutlich vereinfachen.
    Dies ist vor allem dann kritisch, wenn spezielles Wissen im
    Source Code steckt. <br>

    <A NAME="350lfindex27">&nbsp;</A>
<H3>Wundersprache oder kurzfristiger Hype?<br>
    </H3>

    Nachdem das Java Konzept anf&auml;nglich f&uuml;r die ultimative L&ouml;sung
    f&uuml;r plattformunabh&auml;ngige Programmierung gehalten wurde, hat
    sich die Euphorie wieder gelegt. Neben Versionskonflikten
    zwischen verschiedenen virtuellen Maschinen wird immer wieder
    auf die Geschwindigkeit verwiesen. Viele Firmen sind nach einer
    Versuchsphase wieder zur Standard-C++ Programmierung
    zur&uuml;ckgekehrt. Dies wird z.B. von den wxWidgets Entwicklern
    best&auml;tigt, die von wieder steigender Anzahl von Downloads
    berichten. <br>
    <br>
    Eine interessante Webseite in diesem Zusammenhang ist: <a href=
    "http://www.internalmemos.com/memos/memodetails.php?memo_id=1321">
    http://www.internalmemos.com/memos/memodetails.php?memo_id=1321</a>.
    Hier sprechen sich (angeblich) Sun Mitarbeiter gegen Java
    aus.<br>


    <A NAME="350lfindex28">&nbsp;</A>
<H3>Grafische Oberfl&auml;chen mit Java</H3>

    Standardm&auml;&szlig;ig bietet Java 2 M&ouml;glichkeiten zur Programmierung
    von grafischen Oberfl&auml;chen:<br>

    <ol>
      <li>Zum einen ist eine umfangreiche Klassenbibliothek
      enthalten (JFC,  Swing), die s&auml;mtliche Arten von
      Steuerelementen zur Verf&uuml;gung stellt. Im Gegensatz zu den
      bisher vorgestellten Toolkits werden wird hier keine
      Betriebssystemfunktionalit&auml;ten verwendet, sondern s&auml;mtliche
      sogenannten Widgets werden durch Java Befehle gezeichnet.
      Dadurch ist es m&ouml;glich das Look&amp;Feel der Anwendung zur
      Laufzeit umzuschalten. Die im Anschlu&szlig; folgenden Screenshots
      zeigen die identische Anwendung, die von dieser M&ouml;glichkeit
      Gebrauch macht.<br>
      </li>

      <li>Zum anderen gibt es die sehr rudiment&auml;ren AWT Funktionen.
      Bei AWT fehlen komplexere Oberfl&auml;chenelemente wie z.B. B&auml;ume,
      weswegen es f&uuml;r die meisten Anwendungen unbrauchbar ist.<br>
      </li>
    </ol>
    <br>


    <center>
      <table border="0" cellpadding="2" cellspacing="2">
        <tr>
          <td><a href=
          "../../common/images2/article350/java_metal.jpg"><img alt="Java Metal screenshot" src="../../common/images2/article350/java_metal_th.jpg" width="280" height="210">
          </a></td>

          <td><a href=
          "../../common/images2/article350/java_motif.jpg"><img alt="Java Motif screenshot" src="../../common/images2/article350/java_motif_th.jpg" width="280" height="210">
          </a></td>
        </tr>

        <tr>
          <td colspan="2" align="center"><a href=
          "../../common/images2/article350/java_gtk.png"><img alt="Java Gtk screenshot" src="../../common/images2/article350/java_gtk_th.png" width="280" height="210">
          </a></td>
        </tr>
      </table>
      <br>
       Java Screenshots im Metal-, Motif- und  GTK+ Look &amp; Feel
      (Quellcode <a href=
      "../../common/src2/article350/java_src.zip">hier</a>)<br>
      <br>


      <table border="0" cellpadding="2" cellspacing="2">
        <tr>
          <td><a href=
          "../../common/images2/article350/java_win2000.jpg"><img alt="Java on Win2k here." src="../../common/images2/article350/java_win2000_th.jpg" width="280" height="210">
          </a><br>
          </td>

          <td><a href=
          "../../common/images2/article350/java_winxp.jpg"><img alt="Java on WinXP here." src="../../common/images2/article350/java_winxp_th.jpg" width="280" height="210">
          </a><br>
          </td>
        </tr>
      </table>
      <br>
      Java Screenshot mit Windows Look &amp; Feel unter Windows
      2000 und Windows XP (identischer Sourcecode)<br>
    </center>
    <br>
    Da alle g&auml;ngigen Browser Java unterst&uuml;tzen, k&ouml;nnen Anwendungen
    auch als sogenannte Applets im Browser laufen. Diese
    Technologie kann z.B. im Embedded Bereich genutzt werden. Der
    Java-Bytecode wird auf Anforderung &uuml;ber einen Webserver an die
    Clients (Browser) geschickt, die die Anwendung auf dem Host
    ausf&uuml;hren. Daraus resultiert dass der Webserver lediglich &uuml;ber
    gen&uuml;gend Speicherplatz zum Ablegen der Applets verf&uuml;gen muss,
    die Rechenleistung spielt keine Rolle, da der Code in der
    virtuellen Maschine des Aufrufers l&auml;uft.<br>
    Der folgende Screenshot zeigt die identische Anwendung als
    Java-Applet in eine Webseite eingebunden.<br>
    <br>


    <center>
      <br>
       <a href=
      "../../common/images2/article350/java_applet.jpg"><img alt="Java applet screenshot" src="../../common/images2/article350/java_applet_th.jpg" width="280" height="210"></a><br>
       Java Screenshot mit der Beispielanwendung als Applet
      (Beispielcode <a href=
      "../../common/src2/article350/java_applet.zip">hier</a>)<br>
    </center>

    <A NAME="350lfindex29">&nbsp;</A>
<H3>SWT und Eclipse</H3>

    Obwohl Java &uuml;ber &auml;hnliche Eigenschaften zur Darstellung von
    grafischen Steuerlementen verf&uuml;gt wie andere Toolkits, gab es
    unter Software-Entwicklern in der Vergangenheit immer wieder
    unzufriedene Stimmen. Als gr&ouml;&szlig;te Probleme wurde der mangelnde
    Funktionsumfang und geringe Geschwindigkeit von Swing genannt.
    <br>
    Als Alternative wurde von IBM das Standard Widget Toolkit (SWT)
    entwickelt, das unter Java die Verwendung von nativen Elementen
    erlaubt. Ein Referenzprojekt ist die ebenfalls von IBM
    entwickelte IDE Eclipse, die eine offene Plattform f&uuml;r
    Entwicklungswerkzeuge darstellt. Sowohl Toolkit als auch
    Entwicklungsumgebung sind freie Software. <br>
    <br>

    <A NAME="350lfindex30">&nbsp;</A>
<H3>Abk&uuml;rzung in Zusammenhang mit JAVA</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>JDK (Java Development Kit)</td>

          <td>Das komplette Java Paket zum Erstellen von Java 
          Anwendung bestehend aus Anwendungen, Java Klassen und
          Dikumentation.<br>
          </td>
        </tr>

        <tr>
          <td>JRE (Java Runtime Environment)<br>
          </td>

          <td>enth&auml;lt die virtuelle Maschine und ist zum Benutzen
          von Java Anwendungen notwendig.<br>
          </td>
        </tr>

        <tr>
          <td>J2ME (Java 2 Micro Edition)<br>
          </td>

          <td>Java f&uuml;r Ger&auml;te mit geringen Ressourcen.<br>
          </td>
        </tr>

        <tr>
          <td>J2SE (Java 2 Standard Edition)<br>
          </td>

          <td>Java f&uuml;r den Desktop (Linux, Windows, ...)<br>
          </td>
        </tr>

        <tr>
          <td>J2EE (Java 2 Enterprise Edition)<br>
          </td>

          <td>Java zum Erstellen mehrschichtiger
          Client-/Server-Anwendungen sowie von Java Servlets und
          Java Server Pages.<br>
          </td>
        </tr>

        <tr>
          <td>JFC (Java Foundation Class)<br>
          </td>

          <td>Klassensammlung zum Erstellen von Oberfl&auml;chen (-&gt;
          Swing)<br>
          </td>
        </tr>
      </tbody>
    </table>
    <br>

    <A NAME="350lfindex31">&nbsp;</A>
<H3>&Uuml;bersicht &uuml;ber JAVA</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Name:<br>
          </td>

          <td>JAVA 2 PLATFORM STANDARD EDITION DEVELOPMENT KIT
          5.0</td>
        </tr>

        <tr>
          <td>Version:<br>
          </td>

          <td>5.0<br>
          </td>
        </tr>

        <tr>
          <td>Betriebssysteme:<br>
          </td>

          <td>
            <ul>
              <li>Linux, Windows, Solaris (SUN)</li>

              <li>Linux, Windows, AIX, Solaris (evtl. MacOS, OS/2,
              FreeBSD, Amiga, BeOS) (Jikes -&gt; IBM)</li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Programmiersprache:<br>
          </td>

          <td>JAVA<br>
          </td>
        </tr>

        <tr>
          <td>Lizenz:<br>
          </td>

          <td>propriet&auml;re Lizenz (SUN)<br>
          </td>
        </tr>

        <tr>
          <td>Vorteile:</td>

          <td>
            <ul>
              <li>robuste Sprache (viele Fehlerquellen sind durch
              das Sprachkonzept ausgeschlossen)</li>

              <li>gro&szlig;e Anzahl von leistungsf&auml;higen Tools wie z.B.
              Eclipse<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Nachteile:<br>
          </td>

          <td>
            <ul>
              <li>propriet&auml;re Sprache, alleinige Kontrolle durch
              SUN</li>

              <li>virtuelle Maschine der Zielplattform muss
              passen<br>
              </li>

              <li>langsame Ausf&uuml;hrungsgeschwindigkeit</li>

              <li>SWT aufw&auml;ndiger zu programmieren als Swing<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Entwicklungsumgebung:<br>
          </td>

          <td>z.B. Eclipse<br>
          </td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><a href=
          "http://java.sun.com">http://java.sun.com</a></td>
        </tr>

        <tr>
          <td>Dokumentation:<br>
          </td>

          <td>Manuals, Tutorials<br>
          Allgemein: <a href=
          "http://java.sun.com/j2se/1.5.0/docs/">http://java.sun.com/j2se/1.5.0/docs/</a>,
          <a href=
          "http://www-e.uni-magdeburg.de/mayer/java.html">http://www-e.uni-magdeburg.de/mayer/java.html</a><br>

          SWT: <a href=
          "http://eclipse-wiki.info/SWT">http://eclipse-wiki.info/SWT</a>,
          <a href=
          "http://www.java-tutor.com/java/swtlinks.html">http://www.java-tutor.com/java/swtlinks.html</a><br>

          </td>
        </tr>

        <tr>
          <td>Referenzprojekte:<br>
          </td>

          <td>
            <ul>
              <li><br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Verbreitung:<br>
          </td>

          <td>sehr gro&szlig;e Verbreitung<br>
          </td>
        </tr>
      </tbody>
    </table>

    <p><br>
    </p>
    <br>

    <A NAME="350lfindex32">&nbsp;</A>
<H2>Kylix</H2>

    Kylix ist eine Cross-Platform Entwicklungsumgebung f&uuml;r Linux
    und Windows. Mit Hilfe der Borland CLX Bibliothek (Component
    Library for Cross-platform) k&ouml;nnen Anwendungen unter Delphi und
    C++ erstellt werden, die dann auf beiden Plattformen laufen.
    Laut einem Bericht auf der Wikipedia-Homepage (Link <a href=
    "http://de.wikipedia.org/wiki/Kylix">hier</a>) ist diese
    Bibliothek aber nichts anderes als ein Wrapper f&uuml;r die bereits
    vorgestellte Bibliothek Qt. Zus&auml;tzlich handelt es sich bei der
    Kylix IDE offenbar um eine auf WINE (Link <a href=
    "http://de.wikipedia.org/wiki/WINE_Is_Not_an_Emulator">hier</a>)
    basierende nicht-native Linuxanwendung, deren erstellten
    Executables gegen libwine gelinkt werden m&uuml;ssen. Wenn man dies
    ber&uuml;cksichtigt d&uuml;rfte der Einsatz von Kylix f&uuml;r C++-Entwickler
    wenig Sinn machen, da hier der Einsatz von Qt mit einer freien
    IDE wesentlich geradlinige ist. <br>
    <br>

    <A NAME="350lfindex33">&nbsp;</A>
<H3>&Uuml;bersicht &uuml;ber Kylix<br>
    </H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Name:<br>
          </td>

          <td>Kylix<br>
          </td>
        </tr>

        <tr>
          <td>Version:<br>
          </td>

          <td>3<br>
          </td>
        </tr>

        <tr>
          <td>Betriebssysteme:<br>
          </td>

          <td>Windows, Linux<br>
          </td>
        </tr>

        <tr>
          <td>Programmiersprache:<br>
          </td>

          <td>Delphi, C++<br>
          </td>
        </tr>

        <tr>
          <td>Lizenz:<br>
          </td>

          <td>propriet&auml;re Software<br>
          </td>
        </tr>

        <tr>
          <td>Vorteile:</td>

          <td>
            <ul>
              <li>Entwicklung unter Delphi und C++<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Nachteile:<br>
          </td>

          <td>
            <ul>
              <li>Lizenzkosten<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Entwicklungsumgebung:<br>
          </td>

          <td>Kylix<br>
          </td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><a href=
          "http://www.borland.de/kylix">http://www.borland.de/kylix</a></td>
        </tr>

        <tr>
          <td>Dokumentation:<br>
          </td>

          <td> <br>
          </td>
        </tr>

        <tr>
          <td>Referenzprojekte:<br>
          </td>

          <td><br>
          </td>
        </tr>

        <tr>
          <td>Verbreitung:<br>
          </td>

          <td>geringe Verbreitung<br>
          </td>
        </tr>
      </tbody>
    </table>

    <p><br>
    </p>
    <br>
    <br>

    <A NAME="350lfindex34">&nbsp;</A>
<H2>Smalltalk</H2>

    Ein Klassiker unter den Programmiersprachen ist Smalltalk. In
    den Jahren 1969/70 von Xerox entwickelt, ist die Sprache bis
    heute ein Musterbeispiel f&uuml;r v&ouml;llige Objetorientierung. In
    Smalltalk ist alles ein Objekt, es gibt keine einfachen
    Datentypen. Smalltalk arbeitet wie Java und .Net (siehe unten)
    mit einer virtuellen Maschine. Die Sprachsyntax orientiert sich
    an der nat&uuml;rlichen Sprache, unterscheidet sich aber deutlich
    von anderen existierenden Programmiersprachen. Smalltalk wurde
    bereits damals mit einer grafischen Oberfl&auml;che programmiert,
    weshalb man sagt, dass Smalltalk seiner Zeit 10-15 Jahre
    vorraus war. Es ist m&ouml;glich zur Laufzeit das Kernsystem zu
    &auml;ndern und diese Modifikationen sind im Anschlu&szlig;, ohne dass ein
    Neustart n&ouml;tig ist, g&uuml;ltig. Smalltalk war relativ erfolgreich
    bis Java aufkam.<br>
    <br>
    Das obligatorische 'Hello world !' unter Smalltalk:<br>
<pre class="code">
Transcript show: 'Hello world !'; cr.<br>
</pre>
    <br>
    Smalltalk wird auch heute noch f&uuml;r Projekte eingesetzt. Die am
    weitesten verbreitete Variante ist Smalltalk-80 (Normierung von
    1980). Eine leistungsf&auml;hige Entwicklungsumgebung ist
    beispielsweise Squeak.<br>
    <br>

    <A NAME="350lfindex35">&nbsp;</A>
<H3>&Uuml;bersicht &uuml;ber Smalltalk</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Name:<br>
          </td>

          <td>Smalltalk (z.B. Squeak)<br>
          </td>
        </tr>

        <tr>
          <td>Version:<br>
          </td>

          <td>3.6<br>
          </td>
        </tr>

        <tr>
          <td>Betriebssysteme:<br>
          </td>

          <td>Windows, Linux, Solaris, MacOSX, Darwin<br>
          </td>
        </tr>

        <tr>
          <td>Programmiersprache:<br>
          </td>

          <td>Smalltalk<br>
          </td>
        </tr>

        <tr>
          <td>Lizenz:<br>
          </td>

          <td>Open Source<br>
          </td>
        </tr>

        <tr>
          <td>Vorteile:</td>

          <td>
            <ul>
              <li>v&ouml;llig objektorientiert<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Nachteile:<br>
          </td>

          <td>
            <ul>
              <li>Smalltalk wird von Java verdr&auml;ngt und hat eine
              deutlich kleinere Nutzerzahl<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Entwicklungsumgebung:<br>
          </td>

          <td>z.B. Squeak<br>
          </td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><a href=
          "http://www.smalltalk.org">http://www.smalltalk.org</a></td>
        </tr>

        <tr>
          <td>Dokumentation:<br>
          </td>

          <td> <br>
          </td>
        </tr>

        <tr>
          <td>Referenzprojekte:<br>
          </td>

          <td><br>
          </td>
        </tr>

        <tr>
          <td>Verbreitung:<br>
          </td>

          <td>geringe Verbreitung<br>
          </td>
        </tr>
      </tbody>
    </table>

    <p><br>
    </p>
    <br>

    <A NAME="350lfindex36">&nbsp;</A>
<H2>Mozilla</H2>

    Mozilla? Ein Browser? Wie soll man mit einem Browser
    programmieren? Bei Mozilla handelt es sich nicht nur um einen
    Webbrowser, sondern zus&auml;tzlich um ein plattform&uuml;bergreifendes
    Framework, das verschiedene Standards wie z.B. XUL (XML based
    user interface language) unterst&uuml;tzt. XUL wird verwendet um die Struktur
    und den Inhalt einer Applikation zu definieren. S&auml;mtliche
    Dateien werden als Klartextdateien abgelegt. Mozilla
    unterscheidet nicht zwischen Programmen und Webseiten da diese
    konzeptionell sehr &auml;hnlich sind. Folgende Zeile im Feld f&uuml;r dir
    URL eingegeben l&auml;&szlig;t den Browser sich selbst rendern:<br>
<pre class="code">
chrome://navigator/content
</pre>
    <br>
    Der folgende Code stellt im Mozilla Browser einen Button dar,
    der beim Anklicken ein Fenster mit dem Text "Hello World"
    &ouml;ffnet.<br>
<pre class="code">
&lt;?xml version="1.0"?&gt;<br>
&lt;!-- Beispiel XUL Datei --&gt;<br>
&lt;window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"&gt;<br>
&lt;box align="center"&gt;<br>
  &lt;button label="Push" onclick="alert('Hello World');" /&gt;<br>
&lt;/box&gt;<br>
&lt;/window&gt;
</pre>
    <br>
    Softwareentwicklung mit Mozilla entscheidet sich grundlegend
    von der klassischen Programmierung. Viele innovative Konzepte
    haben Einzug gefunden, wie zum Beispiel die Trennung der
    Anwendung von der Darstellung. So k&ouml;nnen existierende
    Anwendungen durch ge&auml;nderte 'Themes' ihr Aussehen &auml;ndern.
    Erfolgreiche Projekte wie der Mozilla Firefox Browser zeigen,
    dass es sich bei diesem Framework um eine ausgereifte und
    robuste Umgebung handelt.<br>
    <br>


    <center>
      <table border="0" cellpadding="2" cellspacing="2">
        <tr>
          <td><a href=
          "../../common/images2/article350/moz_linux.png"><img alt="Mozilla on Linux Screenshot here." src="../../common/images2/article350/moz_linux_th.png" width="280" height="210">
          </a><br>
          </td>

          <td><a href=
          "../../common/images2/article350/moz_win.jpg"><img alt="Mozilla on Win2k here." src="../../common/images2/article350/moz_win_th.jpg" width="280" height="210"></a><br>
          </td>
        </tr>
      </table>
      <br>
      Linux und Windows 2000 Screenshot (Quellcode <a href=
      "../../common/src2/article350/moz_src.tar.gz">hier</a>).<br>
    </center>
    <br>

    <A NAME="350lfindex37">&nbsp;</A>
<H3>&Uuml;bersicht &uuml;ber Mozilla<br>
    </H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Name:<br>
          </td>

          <td>Mozilla<br>
          </td>
        </tr>

        <tr>
          <td>Version:<br>
          </td>

          <td>1.6<br>
          </td>
        </tr>

        <tr>
          <td>Betriebssysteme:<br>
          </td>

          <td>Windows, Linux,<br>
          </td>
        </tr>

        <tr>
          <td>Programmiersprache:<br>
          </td>

          <td>XUL<br>
          </td>
        </tr>

        <tr>
          <td>Lizenz:<br>
          </td>

          <td>Mozilla Public License, Netscape Public License</td>
        </tr>

        <tr>
          <td>Vorteile:</td>

          <td>
            <ul>
              <li>innovative Konzepte</li>

              <li>bestehende Webstandards werden unterst&uuml;tzt
              (JavaScript, Stylesheets, ...)</li>

              <li>Anwendungen k&ouml;nnen im Browser oder als standalone
              Anwendung dargestellt werden.<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Nachteile:<br>
          </td>

          <td>
            <ul>
              <li><br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Entwicklungsumgebung:<br>
          </td>

          <td><br>
          </td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><a href=
          "http://www.mozilla.org">http://www.mozilla.org</a><br>
          </td>
        </tr>

        <tr>
          <td>Dokumentation:<br>
          </td>

          <td> Manuals, Tutorials, Mailing Listen<br>
          z.B. <a href=
          "http://www.xulplanet.com">www.xulplanet.com</a><br>
          </td>
        </tr>

        <tr>
          <td>Referenzprojekte:<br>
          </td>

          <td>Mozilla Firefox Browser<br>
          </td>
        </tr>

        <tr>
          <td>Verbreitung:<br>
          </td>

          <td>gro&szlig;e Verbreitung, aber selten bei Softwareprojekten
          eingesetzt<br>
          </td>
        </tr>
      </tbody>
    </table>

    <p><br>
    </p>
    <br>

    <A NAME="350lfindex38">&nbsp;</A>
<H2>Microsofts Antwort</H2>

    Nat&uuml;rlich hat auch Microsoft die Zeichen der Zeit erkannt und
    inzwischen einen eigenen Ansatz pr&auml;sentiert. Unter dem Name
    .NET wurde eine Plattform entwickelt, die nicht zuletzt den
    Abwanderungsprozess von Software-Entwicklern zur
    Konkurrenzplattform Java eind&auml;mmen soll. Bei n&auml;herer
    Betrachtung finden sich auch tats&auml;chlich viele Parallelen
    zwischen den beiden Konkurrenten, auch wenn diese durch
    unterschiedliche Namensgebung verschleiert werden. So hei&szlig;t
    beispielsweise das Gegenst&uuml;ck zu Javas 'Bytecode' bei
    Microsofts C# 'Intermediate Language' (MSIL). <br>
    <br>

    <A NAME="350lfindex39">&nbsp;</A>
<H3>Was ist .NET ?</H3>

    .NET ist eine propriet&auml;re Microsoft Technologie auf der alle
    weiteren Microsoft Produkte basieren sollen. Die Unterst&uuml;tzung
    der bisher favorisierten MFC Bibliothek f&uuml;r Visual C++ wurde im
    Zuge der .NET Einf&uuml;hrung eingestellt. .NET soll die Entwicklung
    von Netzwerk- und Internet-Anwendung vereinfachen und hat viele
    Ideen von Java &uuml;bernommen. Es unterst&uuml;tzt objektorientierte
    Programmierung und wird mit einer einzigen Klassenbibliothek
    geliefert, die von verschiedenen Programmiersprachen (C#,
    VB.NET) genutzt werden kann. Das bedeutet dass aus dem
    Programmcode die 'Intermediate Language' erzeugt wird, die &uuml;ber
    das .NET-Framework auf die Zielhardware zugreift (vgl. Java
    Sourcecode -&gt; Java Bytecode -&gt; virtuelle Maschine -&gt;
    physikalische Hardware). <br>
    <br>
    Zuk&uuml;nftige Windows Versionen werden mit dem .NET Framework
    ausgeliefert.<br>
    <br>

    <A NAME="350lfindex40">&nbsp;</A>
<H3>Was ist Visual Sudio .NET ?</H3>

    Visual Studio .NET ist eine Programmierumgebung, die das
    Entwickeln von .NET-Software vereinfachen soll, es ist aber
    nicht zwingend erforderlich. <br>
    <br>

    <A NAME="350lfindex41">&nbsp;</A>
<H3>Unterschiede zwischen Visual Basic (VB) und VB.NET</H3>

    Obwohl VB.NET aus Kompatibilit&auml;tsgr&uuml;nden viele alte VB
    Funktionen unterst&uuml;tzt und die Sprach-Syntax beibehalten wurde,
    ist VB.NET eine komplett neue Programmiersprache. <br>
    <br>

    <A NAME="350lfindex42">&nbsp;</A>
<H3>Welche Programmiersprache eignet sich am besten?</H3>

    Da sowohl der VB.NET Quellcode als auch der C# Quellcode in die
    MSIL &uuml;bersetzt werden, macht die verwendete Programmiersprache
    keinen Unterschied. So gibt es zum Beispiel auch keine
    Geschwindigkeitsunterschiede zwischen C# Code und VB.NET Code.
    Da der C# Compiler aber speziell f&uuml;r das .NET Framework
    entwickelt wurde, d&uuml;rfte er das geeignetere Tool sein.<br>
    <br>

    <A NAME="350lfindex43">&nbsp;</A>
<H3>.NET und Linux</H3>

    Trotz des plattformunabh&auml;ngigen Ansatzes wird Microsoft wohl
    keine Linux .NET-Variante entwickeln, weshalb sich ein
    Entwicklerteam um Miguel de Icaza (Ximian: Evolution) dieser
    Aufgabe angenommen hat. Das Open Source Paket namens Mono ist
    mittlerweile in der Version 1.0 verf&uuml;gbar. <br>
    <br>

    <A NAME="350lfindex44">&nbsp;</A>
<H3>&Uuml;bersicht &uuml;ber .NET</H3>


    <table border="1" cellpadding="2" cellspacing="2">
      <tbody>
        <tr>
          <td>Name:<br>
          </td>

          <td>Microsoft .NET-Framework<br>
          </td>
        </tr>

        <tr>
          <td>Version:<br>
          </td>

          <td>1.1<br>
          </td>
        </tr>

        <tr>
          <td>Betriebssysteme:<br>
          </td>

          <td>Windows, Linux<br>
          </td>
        </tr>

        <tr>
          <td>Programmiersprache:<br>
          </td>

          <td>C#, Windows: VB.NET<br>
          </td>
        </tr>

        <tr>
          <td>Lizenz:<br>
          </td>

          <td>propriet&auml;re Lizenz<br>
          </td>
        </tr>

        <tr>
          <td>Vorteile:</td>

          <td>
            <ul>
              <li>zuk&uuml;nftiger Bestandteil von Windows<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Nachteile:<br>
          </td>

          <td>
            <ul>
              <li>propriet&auml;re Software</li>

              <li>keine Linux .NET Version verf&uuml;gbar<br>
              </li>

              <li>komplett neue API<br>
              </li>
            </ul>
          </td>
        </tr>

        <tr>
          <td>Entwicklungsumgebung:<br>
          </td>

          <td>Visual Studio .NET<br>
          </td>
        </tr>

        <tr>
          <td>WWW:</td>

          <td><br>
          </td>
        </tr>

        <tr>
          <td>Dokumentation:<br>
          </td>

          <td> <br>
          </td>
        </tr>

        <tr>
          <td>Referenzprojekte:<br>
          </td>

          <td><br>
          </td>
        </tr>

        <tr>
          <td>Verbreitung:<br>
          </td>

          <td>bisher nur geringe Verbreitung<br>
          </td>
        </tr>
      </tbody>
    </table>

    <p><br>
    </p>
    <br>

    <A NAME="350lfindex45">&nbsp;</A>
<H2>Zusammenfassung</H2>

    Vor der abschlie&szlig;enden Beurteilung wird noch einmal auf die
    gestellte Aufgabe verwiesen: Es geht um die Entwicklung eines
    Front-Ends, das &uuml;ber Netzwerk-Kommunikation mit angeschlossener
    Hardware kommuniziert. Dabei soll der Software-Quellcode auf
    den Plattformen Linux und Win32 &uuml;bersetzbar sein. Die Anwendung
    darf sich nicht von anderer Software auf dem System
    unterscheiden. Durch diese Aufgabenstellung wird das Bild auf
    die getesteten Pakete verf&auml;lscht und kann nicht als allgemeine
    Aussage gesehen werden.<br>
    <br>
    Bestes Beispiel hierf&uuml;r ist das FLTK Toolkit. Hier bekommt man
    in einem sehr kleinen Paket ein leistungsf&auml;higes System. Die
    St&auml;rken liegen in geringer Codegr&ouml;&szlig;e, guter Grafikanbindung und
    guter Portierbarkeit. Diese Eigenschaften machen das Toolkit
    f&uuml;r Projekte im Embedded- und Grafikbereich interessant. F&uuml;r
    die Front-End Entwicklung spielt aber eher die Anzahl der
    Klassen, das Handling und das Aussehen der erzeugten
    Anwendungen eine Rolle. Somit ist FLTK f&uuml;r diese Aufgabe eher
    weniger geeignet.<br>
    <br>
    Eine herbe Entt&auml;uschung f&uuml;r Software-Entwickler d&uuml;rfte das GTK+
    Projekt unter Windows sein. Hier sollte die Linux Community
    deutlich mehr Einsatz zeigen. Mit Warnungen auf der Web-Seite
    gewinnt man jedenfalls kein Vertrauen. Dies ist um mehr schade,
    als dass das GTK+ Paket als reines Linux Paket sehr gelungen
    wirkt. Das Potential ist sehr gro&szlig;, die Umsetzung auf die
    Windows Plattform l&auml;&szlig;t aber zu w&uuml;nschen &uuml;brig.<br>
    <br>
    Der Einsatz der Exoten Smalltalk und Mozilla bleibt
    Geschmacksache. Eine Firma, die mit selbstentwickelter Hardware
    Geld verdient, wird wenig Sinn f&uuml;r philosophische Ans&auml;tze
    haben. Auch wenn Smalltalk die bessere objektorientierte
    Programmiersprache ist und wenn Mozilla-XUL-Programmierung den
    sowieso vorhandenen Browser noch sinnvoller erscheinen l&auml;&szlig;t, so
    sind diese Pakete doch keine Mainstream Produkte zur
    Software-Entwicklung. <br>
    <br>
    Kylix f&auml;llt bei dieser Betrachtung ebenso wie GTK+ f&uuml;r Win32
    eher negativ auf. Von dem einstigen Glanz des Urprodukts Turbo
    Pascal ist nur wenig geblieben. Mit diesem Produkt pr&auml;sentierte
    Borland in den 80er Jahren eine m&auml;chtige IDE die sowohl auf
    Home-Computern wie auch auf den fr&uuml;hen PCs lief. Es war bekannt
    f&uuml;r seinen g&uuml;nstigen Preis und seinen schnellen Code. In der
    Zwischenzeit hat sich viel ge&auml;ndert. Aus Borland wurde Inprise
    und dann wieder Borland. Aus Turbo Pascal wurde erst Object
    Pascal, dann Delphi und schlie&szlig;lich Kylix (nat&uuml;rlich mit
    Erweiterungen bzw. Ver&auml;nderungen). Zumindest f&uuml;r neue Projekte
    d&uuml;rfte ein Einsatz heute nur noch wenig Sinn machen.<br>
    <br>
    Microsoft zeigt in diesem Umfeld, dass es die Zeichen der Zeit
    erkannt hat. Historisch betrachtet hat der Konzern zun&auml;chst
    versucht, den Java Standard mit Visual J++ zu durchsetzen.
    Neben den Java Standardbefehlen wurden Win32 API Zugriffe und
    selbst Zugriffe auf die Windows Registry zugelassen (Was der
    Sprachphilosphie v&ouml;llig widerspricht). Au&szlig;erdem wurden
    automatisch Win32 Executables erzeugt. Nach gerichtlichen
    Auseinandersetzungen mit Sun mu&szlig;te daraufhin bei jedem
    &Uuml;bersetzungsvorgang ein Warnhinweis angezeigt werden, dass die
    erzeugten Applikationen wahrscheinlich nicht auf anderen
    Betriebssystemen laufen werden. Das Ende der Geschichte war das
    Einstellen des Java Engagements von Microsoft. Stattdessen
    wurde eine v&ouml;llig neue Strategie entwickelt. Mit .NET und #C
    wurde ein komplett neuer Standard entwickelt. Die Kombination
    Windows, .NET und C# sind sicherlich ein gut zusammenpassendes
    Paket, aber das muss man Microsoft auch f&uuml;r die ausgediente
    Kombination Windows mit Visual C++ und MFC Klassenbibliothek
    zugestehen. Der Nachteil dabei ist, dass man bedingungslos
    einem Anbieter ausgeliefert ist, der "seinen" Standard (hier:
    Windows) durchsetzen m&ouml;chte. Mit an Sicherheit grenzender
    Wahrscheinlichkeit wird Microsoft in absehbarer Zeit keine
    Umsetzungen von .NET auf andere Betriebssysteme planen. Die
    freie Umsetzung Mono muss ihre Praxistauglichkeit erst noch
    beweisen. Hier kann zu gegenw&auml;rtigen Zeitpunkt noch kein
    Resumee gezogen werden, auch wenn schon erste Achtungserfolge
    erzielt wurden.<br>
    <br>
    Ohne Einschr&auml;nkung empfehlenswert sind somit die Pakete Qt,
    wxWindows und Java. Die Wahl f&auml;llt hier schwer, da alle 3
    Pakete zum Erzeugen komplexer Front-End Software taugen. Je
    nach Gewichtung der Punkte Support, Kosten,
    Einsatzbereitschaft, Programmier-Philosophie, usw. d&uuml;rften sich
    hier verschiedene Meinungen bilden. Die Unterschiede liegen
    eher im Detail, so verbietet die Java Philosophie eigentlich
    direkte Hardware Zugriffe. Daf&uuml;r kann es wieder bei anderen
    Aspekten punkten. Rein technisch gesehen k&ouml;nnen diese 3
    Konkurrenten die gestellte Aufgabe problemlos meistern.<br>
    <br>
    Somit bleibt nur ein subjektives Ergebnis des Autors: Als Open
    Source Fan wird man bei der gestellten Aufgabe wohl am ehesten
    zu wxWindows tendieren. Neben einem stimmigen Konzept und guter
    Tool Unterst&uuml;tzung sind ebenfalls ausreichend Dokumentation
    vorhanden.<br>
    <!-- vim: set sw=2 ts=2 et tw=74: -->
  



<!-- BODY_OF_THE_ARTICLE_STOP -->
<!-- 2pdaIgnoreStart -->
<A NAME="talkback">&nbsp;</a>
<h2>Talkback f&uuml;r diesen Artikel</h2>
Jeder Artikel hat seine eigene Seite f&uuml;r Kommentare und R&uuml;ckmeldungen. Auf dieser Seite kann jeder eigene Kommentare abgeben und die Kommentare anderer Leser sehen:
<center>
    <table width="250" border=0><tr><td>
    <div class="tbbutton"><A class="nodec" href="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=350">&nbsp;Talkback Seite&nbsp;</a></div>
    </td></tr></table>
</center>

<br clear="all">
<HR size="2" noshade>
<table width="250" border=0><tr><td>
<div class="bbutton"><a class="nodec" href="../../index.shtml">&lt;--, LF Home</a></div>
</td><td>
<div class="bbutton"><a class="nodec" href="index.shtml">Zum index dieser Ausgabe</a></div>
</td></tr></table>
<br clear="all">
<HR size="2" noshade>
<!-- ARTICLE FOOT -->
<CENTER><TABLE WIDTH="98%" summary="footer">
<TR><TD ALIGN=CENTER BGCOLOR="#bdc6d5" WIDTH="50%">
<A HREF="../../common/lfteam.html">Der LinuxFocus Redaktion schreiben</A>
<BR><FONT COLOR="#1111aa"><a href="../../common/copy.html">&copy; Michael     Tschater</a><br>&quot;some rights reserved&quot; see <a href="../../license/index.shtml">linuxfocus.org/license/</a><br><a href="http://www.linuxfocus.org">http://www.LinuxFocus.org</a></FONT>
</TD>
<TD BGCOLOR="#bdc6d5">
<!-- TRANSLATION INFO -->
<font size=2>Autoren und &Uuml;bersetzer:</font>
<TABLE summary="translators">
  <tr><td><font size="2">de --&gt; -- : Michael Tschater <small>&lt;tschater/at/web.de&gt;</small></font></td></tr>
</TABLE>
</TD>
</TR></TABLE></CENTER>
<p><font size=1>2004-10-30, generated by lfparser version 2.50</font></p>
<!-- 2pdaIgnoreStop -->
</BODY>
</HTML>

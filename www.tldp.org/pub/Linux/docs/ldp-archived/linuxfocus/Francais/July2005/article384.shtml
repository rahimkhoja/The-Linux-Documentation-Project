<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
 <META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <META NAME="GENERATOR" CONTENT="lfparser_2.52">
 <META NAME="LFCATEGORY" CONTENT="Hardware">
 <link rel="icon" href="../../common/images/lf-16.png" type="image/png">
 <TITLE>lf384, Hardware: Une alimentation num&eacute;rique CC - 2&egrave;me partie : le logiciel </TITLE>
<style type="text/css">
<!--
 td.top {font-family: Arial,Geneva,Verdana,Helvetica,sans-serif; font-size:12 }
 pre { font-family:monospace,Courier }
 pre.code { font-family:monospace,Courier;background-color:#aedbe8; }
 p.cl { color:#EE9500 }
 table.left { margin-right:0.3cm }
 a.nodec { text-decoration:none }
 p.trans { font-size:8pt; text-align:right }
 p.clbox { width:50%; alignment:center; background-color:#FFD700; 
           border-style:none; border-width:medium; border-color:#FFD700; 
           padding:0.5cm;  text-align:center }
 p.code { width:80%; alignment:center; background-color:#aedbe8; 
          border-style:none; border-width:medium; border-color:#aedbe8; 
          padding:0.1cm;  text-align:left }
 p.foot { background-color:#AAAAAA; color:#FFFFFF; border-style:none; 
          border-width:medium; border-color:#AAAAAA; padding:0.5cm ; 
          margin-top:0.1cm; margin-right:1cm; margin-left:1cm; 
          text-align:center }
 div.tbbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   margin: 2px 5px 2px 5px;
   text-align: center;
   width: 20em;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
 div.bbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   float: left;
   margin: 2px 5px 2px 5px;
   text-align: center;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
-->
</style>
 
</HEAD>
<BODY bgcolor="#ffffff" text="#000000">
 <!-- this is generated html code. NEVER use this file for your
 translation work. Instead get the file with the same article number
 and .meta.shtml in its name. Translate this meta file and then
 use lfparser program to generate the final article -->
 <!-- lfparser can be obtained from http://main.linuxfocus.org/~guido/dev/lfparser.html -->

<!-- this is used by a number of tools:
 =LF=AUTHOR: Guido     Socher
 =LF=CAT___: Hardware
 =LF=TITLE_: Une alimentation num&eacute;rique CC - 2&egrave;me partie : le logiciel 
 =LF=NUMBER: 384
 =LF=ANAME_: article384.shtml
 =LF=PARSER: 2.52
 -->

<!-- 2pdaIgnoreStart -->

<!-- start navegation bar, current, style=2 -->
 <!-- top navegation bar -->
 <TABLE summary="topbar_1" cellspacing="0" cellpadding="0" border="0" align="center" width="90%">
   <TR bgcolor="#2e2292">
     <TD class="top"><TABLE summary="topbar_1_logo" cellspacing="0" cellpadding="0" border="0" width=
       "100%">
         <TR><TD width="319"><a href="../../index.shtml"><IMG src="../../common/images/logolftop_319x45.gif"
           alt="[LinuxFocus-icon]" width="319" height="45" align="left" 
           border="0"></a></TD>

           <TD class="top">
             <TABLE summary="topbar_1_links" width="100%">
               <TR align="right">
                 <TD class="top">
                 
                 <A class="nodec" href="../../index.shtml"><FONT color=
                 "#DDDDDD" size="2">&lt;--</FONT></A> &nbsp;| 
                 <A class="nodec" href="../map.html"><FONT color=
                 "#DDDDDD" size="2">Carte</FONT></A> &nbsp;| 
                 <A class="nodec" href="../indice.html"><FONT color=
                 "#DDDDDD" size="2">Index</FONT></A> &nbsp;| 
                 <A class="nodec" href="../Search/index.html"><FONT color=
                 "#DDDDDD" size="2">Recherche</FONT></A> </TD>
                 
               </TR>

               <TR align="right">
                 <TD class="top">
                   <HR width="100%" noshade size="1">
                 </TD>
               </TR>
             </TABLE>
           </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end top navegation bar -->
 <!-- blue bar -->
 <TABLE summary="topbar_2" cellspacing="0" cellpadding="0" border="0" align="center"
 width="90%">
   <TR bgcolor="#00ffff">
     <TD><IMG src="../../common/images/transpix.gif" width="1" height=
     "2" alt=""></TD>
   </TR>
 </TABLE>
 <!-- end blue bar -->
 <!-- bottom navegation bar -->
 <TABLE summary="topbar_3" cellspacing="0" cellpadding="0" border="0" align="center"
 width="94%">
   <TR bgcolor="#000000">
     <TD>
       <TABLE summary="topbar_3_links" cellspacing="0" cellpadding="1" border="0" width=
       "100%">
         <TR align="center">
           <TD WIDTH="20%"><A class="nodec" href="../News/index.shtml"><FONT color=
           "#FFFFFF">Nouvelles</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Archives/index.html"><FONT color=
           "#FFFFFF">Archives</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Links/index.html"><FONT color=
           "#FFFFFF">Liens</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../aboutus.html"><FONT color=
           "#FFFFFF">A propos</FONT></A> </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end bottom navegation bar -->
<!-- stop navegation bar -->

<!-- SSI_INFO -->

<!-- tr_staticssi include virtual -->
<!-- tr_staticssi exec cmd -->
<!-- addedByLfdynahead ver 1.5 --><TABLE ALIGN="right" border=0><TR><TD ALIGN="right"><FONT SIZE="-1" FACE="Arial,Helvetica">Ce document est disponible en: <A href="../../English/July2005/article384.shtml">English</a> &nbsp;<A href="../../ChineseGB/July2005/article384.shtml">ChineseGB</a> &nbsp;<A href="../../Francais/July2005/article384.shtml">Francais</a> &nbsp;</FONT></TD></TR></TABLE><br>
 


<!-- SSI_INFO STOP -->
<!-- 2pdaIgnoreStop -->

<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_START -->
<TABLE ALIGN="LEFT" BORDER="0" WIDTH="195" summary="about the author" class="left">
<TR>
<TD>

<img src="../../common/images/Guido-S.gif" alt=
    "[Photo de l'auteur]" height="164" width="173">
<BR>par  Guido Socher <a href="http://linuxfocus.org/~guido/"><font size="1">(homepage)</font></a>
<BR><BR>
<I>L&acute;auteur:</I><BR>
<!-- aboutauthor_start -->
<p>Guido adore Linux parce que c'est vraiment un bon syst&egrave;me pour
    d&eacute;velopper son propre mat&eacute;riel.</p>
<!-- aboutauthor_stop -->
<!-- TRANSLATED_TO fr -->
<BR><BR><I>Traduit en Français par:</I><BR>
Jean-Etienne Poirrier (<a href="http://www.poirrier.be/~jean-etienne/"><font size="1">homepage</font></a>)
<br>
<!--
 =LF=TRANSTO=fr: Jean-Etienne Poirrier
-->
<!-- TRANSLATED_TO_STOP -->
<!-- INDEX_START -->
<BR><i>Sommaire</i>:
<UL>
  <LI><A HREF="#384lfindex0">Introduction</A></LI>
  <LI><A HREF="#384lfindex1">Un mot d'avertissement</A></LI>
  <LI><A HREF="#384lfindex2">La structure du logiciel</A></LI>
  <LI><A HREF="#384lfindex3">Quel fichier contient quoi</A></LI>
  <LI><A HREF="#384lfindex4">Nouvelle fonctionnalit&eacute; : sauver les param&egrave;tres</A></LI>
  <LI><A HREF="#384lfindex5">R&eacute;f&eacute;rences / T&eacute;l&eacute;chargements</A></LI>
  <LI><A HREF="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=384">Talkback form for this article</A></LI>
</UL>

</TD></TR></TABLE>
<!-- INDEX_STOP -->
<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_STOP -->
<!-- HEAD_OF_THE_ARTICLE_START -->
<br>&nbsp;
<table border="0"><tr><td>
<!-- tr_staticssi include virtual -->
<!-- tr_staticssi exec cmd -->
<!-- addedByLfPdf ver 0.1 -->
<TABLE style="border-style:outset; border-width:1px" align="right" bgcolor="#ff9616" cellspacing="1"><TR><TD bgcolor="#ff9616">
        <a href="../Archives/lf-2005_07-0384.pdf"><small>PDF</small></a>
        </TD></TR></TABLE>
         

<H2>Une alimentation num&eacute;rique CC - 2&egrave;me partie : le logiciel </H2>
 <img src="../../common/images2/article384_title.jpg" alt="[Illustration]" hspace="10" width="370" height="152">
<!-- ABSTRACT OF THE ARTICLE -->
<P><i>R&eacute;sum&eacute;</i>:
<P>
<!-- articleabstract_start -->

    Ceci est la seconde partie de la s&eacute;rie parlant d'une alimentation
    num&eacute;rique. Vous pourriez vouloir lire la <a href=
    "../June2005/article379.shtml">premi&egrave;re partie</a> d'abord.<br><br>
    Il y aura une troisi&egrave;me partie o&ugrave; j'ajouterai la communication
    i2c pour contr&ocirc;ler l'alimentation via une commande provenant du PC et
    peut-&ecirc;tre une quatri&egrave;me partie o&ugrave; des choses plus
    amusantes seront ajout&eacute;es. Je pense non seulement &agrave; produire
    du courant continu (DC) mais aussi du DV + pulsations et cr&ecirc;tes. De
    cette mani&egrave;re, vous pouvez tester des circuits pour &ecirc;tre
    s&ucirc;r qu'ils sont r&eacute;sistants au bruits et variations de
    courant.<br><br>
    Un kit avec la carte m&egrave;re et les pi&egrave;ces de cet article sont
    disponibles sur
    <a href="http://shop.tuxgraphics.org/electronic/microcontroller.html">
    shop.tuxgraphics.org</a>.

    
<!-- articleabstract_stop -->

<br><!-- HR divider --><center><font color="#8282e0"><b>_________________ _________________ _________________</b></font></center><br>
</td></tr></table>
<!-- HEAD_OF_THE_ARTICLE_STOP -->
<!-- BODY_OF_THE_ARTICLE_START -->


    <A NAME="384lfindex0">&nbsp;</A>
<H2>Introduction</H2>

    En utilisant un design intelligent bas&eacute; sur un
    micro-contr&ocirc;leur, nous pouvons construire une alimentation
    &eacute;lectrique qui poss&egrave;de plus de possibilit&eacute;s et qui
    revient beaucoup moins cher que les alimentations &eacute;lectriques
    traditionnelles. Cela est possible parce que les fonctions qui sont
    traditionnellement impl&eacute;ment&eacute;es dans le mat&eacute;riel, sont
    d&eacute;plac&eacute;es dans le logiciel.<br>
    <br>
    Dans cet article, nous ferons deux choses :

    <ul>
      <li>Je vais expliquer comment fonctionnent les diff&eacute;rentes parties du logiciel
      </li>

      <li>Ajouter du code pour stocker les param&egrave;tres de mani&egrave;re
      permanente.</li>
    </ul>

    <A NAME="384lfindex1">&nbsp;</A>
<H2>Un mot d'avertissement</H2>

    Cet article va vous donner des &eacute;l&eacute;ments sur la mani&egrave;re
    dont le logiciel fonctionne et vous pouvez utiliser ces connaissances pour
    effectuer des modifications. Cependant, faites attention au fait que la
    protection contre les court-circuits est &eacute;galement logicielle. Si,
    d'une mani&egrave;re ou d'une autre, vous faites une erreur, cette
    protection peut alors ne plus fonctionner. Si vous provoquez alors un
    court-circuit sur la sortie de votre mat&eacute;riel, ce dernier peut
    s'&eacute;teindre dans un nuage de fum&eacute;e. Pour &eacute;viter cela,
    vous pourriez utiliser une grande r&eacute;sistance (par exemple une ampoule
    de phare avant de voiture) qui va prendre assez de courant pour
    d&eacute;clencher la protection (par exemple 6A) mais pas assez pour
    d&eacute;truire le mat&eacute;riel. De cette mani&egrave;re, vous pouvez
    tester un court-circuit sans danger de perdre le mat&eacute;riel.

    <A NAME="384lfindex2">&nbsp;</A>
<H2>La structure du logiciel</H2>

    Lorsque vous regarder le programme principal (fichier ddcp.c, &agrave;
    t&eacute;l&eacute;charger &agrave; la fin de cet article), vous verrez qu'il
    y a seulement quelques lignes de code d'initialisation ex&eacute;cut&eacute;
    lors de la mise sous tension et qu'apr&egrave;s, le logiciel entre dans une
    boucle infinie.<br>
    Il y a en fait 2 boucles infinies dans ce logiciel. La premi&egrave;re est
    la boucle principale ("while(1){...}" dans le fichier ddcp.c) et l'autre est
    l'interruption p&eacute;riodique du convertisseur analogique-digital
    (fonction "SIGNAL(SIG_ADC){...}" dans le fichier analog.c). Durant
    l'initialisation, l'interruption est configur&eacute;e pour
    s'ex&eacute;cuter toutes les 100&mu;s. Toutes les fonctions et le code qui
    sont ex&eacute;cut&eacute;s tournent dans le contexte d'une de ces
    t&acirc;ches (t&acirc;che : nom d'un processus ou d'un thread
    d'ex&eacute;cution dans un syst&egrave;me d'exploitation temps-r&eacute;el,
    c'est pourquoi j'utilise ce mot ici, m&ecirc;me s'il n'y a pas d'OS).<br>

    <center>
      <img src="../../common/images2/article384_prio.gif" alt=
      "[priorit&eacute;s]" hspace="10" width="431" height="378">
    </center>
    <br>
    La t&acirc;che d'interruption peut arr&ecirc;ter l'ex&eacute;cution de la
    boucle principale &agrave; tout moment. Elle s'ex&eacute;cutera alors sans
    &ecirc;tre interrompue et, ensuite, l'ex&eacute;cution continuera de nouveau
    dans la boucle principale, &agrave; l'endroit o&ugrave; elle a
    &eacute;t&eacute; interrompue. Cela a deux cons&eacute;quences :

    <ol>
      <li>Le code dans l'interruption ne doit pas &ecirc;tre trop long car il
      doit &ecirc;tre fini avant que l'interruption suivante n'arrive. Ce qui
      compte, ici, est la quantit&eacute; d'instructions en code machine. Une
      formule math&eacute;matique, qui peut &ecirc;tre &eacute;crite en juste
      quelques lignes de code C, peut r&eacute;sulter en des centaines de lignes
      de code machine.<br></li>

      <li>Les variables que vous partagez entre le code d'interruption et le
      code de la t&acirc;che principale peut soudainement changer au milieu de
      l'ex&eacute;cution. Ceci est aussi valide lorsque vous donnez plus d'un
      octet de donn&eacute;es de l'interruption &agrave; la t&acirc;che
      principale. La copie de deux octets va requ&eacute;rir plus d'une
      instruction. A ce moment, il se peut que le premier octet soit copi&eacute;
      avant l'interruption alors que le second octet soit copi&eacute;
      apr&egrave;s cette interruption. Que faire ? Dans la plupart des cas, ce
      n'est pas un probl&egrave;me car les r&eacute;sultats mesur&eacute;s de
      l'ADC ne diff&egrave;reront pas trop entre les deux interruptions. Dans
      les cas o&ugrave; nous ne pouvons pas nous permettre ce type d'erreur
      occasionnelle (elle peut se produire seulement une fois toute les heures),
      vous devez utiliser un drapeau (flag) que vous pouvez consulter pour voir
      si votre code a &eacute;t&eacute; interrompu durant la copie.</li>
    </ol>

    Tout ceci signifie que les choses complexes comme mettre &agrave; jour
    l'affichage, v&eacute;rifier les boutons poussoirs, la conversion des
    valeurs de courant et de tension en unit&eacute;s internes, etc. doivent
    &ecirc;tre r&eacute;alis&eacute;es dans la t&acirc;che principale. Dans
    l'interruption, nous ex&eacute;cutons seulement les choses qui sont
    critiques dans le temps : contr&ocirc;le du courant et de la tension,
    protection contre la surcharge et param&egrave;tres du DAC. Pour
    &eacute;viter des math&eacute;matiques complexes, tous les calculs dans
    l'interruption sont r&eacute;alis&eacute;s dans des unit&eacute;s d'ADC. Ce
    sont les m&ecirc;mes unit&eacute;s que les proc&eacute;dures ADC (valeurs
    enti&egrave;res de 0 &agrave; 1023).<br>
    <br>

    Voici le flux logique exact des op&eacute;rations que nous faisons dans la
    t&acirc;che principale :

<pre class="code">
1) Copier les derniers r&eacute;sultats ADC &agrave; partir de la t&acirc;che
   d'interruption
2) Les convertir en valeurs d'affichage (amp&egrave;res et volts)
3) Convertir les amp&egrave;res et volts voulus (ce que l'utilisateur a
   d&eacute;fini) en des valeurs ADC internes &eacute;quivalentes
4) Copier les valeurs ADC &eacute;quivalentes dans des variables de
   mani&egrave;re &agrave; ce que la t&acirc;che d'interruption puisse
   l'utiliser.
5) Vider l'&eacute;cran LCD.
6) Convertir les nombres que nous voulons afficher sur le LCD en cha&icirc;nes.
7) Ecrire les valeurs de tension sur l'afficheur.
8) V&eacute;rifier si la t&acirc;che d'interruption est en train de
   r&eacute;guler la tension ou le courant (limitation active du courant).
9) Si la tension est le facteur limitant, alors &eacute;crire une fl&egrave;che
   derri&egrave;re la tension sur l'afficheur.
10) Ecrire les valeurs d'amp&egrave;re sur l'afficheur.
11) V&eacute;rifier si la t&acirc;che d'interruption est en train de
    r&eacute;guler la tension ou le courant (limitation active du courant).
12) Si le courant est le facteur limitant, alors &eacute;crire une fl&egrave;che
    derri&egrave;re le courant sur l'afficheur.
13) V&eacute;rifier si un bouton a &eacute;t&eacute; press&eacute;. Si ce n'est
    pas le cas, attendre 100ms et v&eacute;rifier de nouveau. Si un bouton a
    &eacute;t&eacute; press&eacute;, alors attendre 200ms. Cela permet d'avoir
    une bonne r&eacute;ponse des boutons et un d&eacute;filement pas trop rapide
    s'ils sont appuy&eacute;s en permanence.
14) Retour &agrave; l'&eacute;tape 1).
</pre>

    La t&acirc;che d'interruption est beaucoup plus simple :

<pre class="code">
1) Copier les r&eacute;sultats de l'ADC dans des variables
2) Basculer le canal de mesure de l'ADC entre le courant et la tension
3) V&eacute;rifier si un exc&egrave;s de courant est mesur&eacute;. Si c'est le
   cas, d&eacute;finir imm&eacute;diatement une valeur basse au DAC (pas besoin
   que ce soit z&eacute;ro puisque le circuit d'amplification de la tension
   travaille seulement &agrave; partir de 0.6V (0.6V en entr&eacute;e produit
   toujours 0V en sortie)).
4) V&eacute;rifier si la tension ou le courant a besoin d'&ecirc;tre
   r&eacute;gul&eacute;
5) V&eacute;rifier si le DAC (convertisseur analogique-digital) a besoin de se
   mettre &agrave; jour en fonction de la d&eacute;cision du point 4).
</pre>
    <br>
    <br>
    C'est l'id&eacute;e de base du logiciel. Je vais aussi expliquer ce que vous
    trouverez, dans quel fichier et, ensuite, vous devriez &ecirc;tre capable de
    comprendre le code (&eacute;tant suppos&eacute; que vous &ecirc;tes familier
    avec le C).<br>
    <br>

    <A NAME="384lfindex3">&nbsp;</A>
<H2>Quel fichier contient quoi</H2>

<pre class="code">
ddcp.c -- ce fichier contient le programme principal. Toute l'initialisation est
          r&eacute;alis&eacute;e ici. La boucle principale est &eacute;galement
          impl&eacute;ment&eacute;e ici.

analog.c -- le convertisseur analogique vers digital et tout ce qui tourne dans
          le contexte de la t&acirc;che d'interruption qui se trouve ici.

dac.c -- le convertisseur digital vers analogique. Initialis&eacute; par ddcp.c
          mais seulement utilis&eacute; &agrave; partir de analog.c

kbd.c -- le code pour le clavier

lcd.c -- le pilote LCD. C'est une version sp&eacute;ciale qui ne
          n&eacute;cessitera pas le pin rw de l'afficheur. Il utiliser, &agrave;
          la place, une horloge interne qui devrait &ecirc;tre suffisamment
          longue pour que l'afficheur finisse sa t&acirc;che.
</pre>

    <A NAME="384lfindex4">&nbsp;</A>
<H2>Nouvelle fonctionnalit&eacute; : sauver les param&egrave;tres</H2>

    La nouvelle fonctionnalit&eacute; que nous ajoutons dans cet article n'est
    pas grand chose puisque j'ai d&eacute;j&agrave; pass&eacute; une partie de
    cet article &agrave; expliquer comment le logiciel fonctionne et je ne veux
    pas rendre cet article trop long.
    <br>
    <br>
    Cependant, la fonction que nous ajoutons maintenant est essentielle : sauver
    les param&egrave;tres de mani&egrave;re &agrave; ce que la tension et le
    courant ne doivent pas &ecirc;tre r&eacute;gl&eacute;s de nouveau au prochain
    allumage. Nous sauvons ces valeurs dans l'eeprom du micro-contr&ocirc;lleur.
    Toutes les eeproms (m&ecirc;me les cl&eacute;s usb) ont des limites comme le
    nombre de fois qu'une cellule d'eeprom peut &ecirc;tre &eacute;crite. Pour
    le Atmega 8, la limite est de 100000 fois. Apr&egrave;s cela, l'eeprom n'est
    plus garantie et pourrait ne plus sauver de valeur. Une astuce pour obtenir
    une plus longue dur&eacute;e de vie est d'&eacute;crire sur plusieurs
    cellules mais calculons d'abord ce que cela signifie pour nous. 100000
    cycles d'&eacute;criture correspondent &agrave; 10 fois la sauvegarde de
    nouveaux param&egrave;tres par jour, pendant 25 ans. C'est plus qu'assez.
    Nous pouvons d&egrave;s lors juste utiliser la solution la plus simple et
    sauver dans une adresse eeprom.<br>
    <br>
    Donc, comment faire pour sauver/lire quelque chose sur/dans l'eeprom ? Il y
    a deux instructions pour &eacute;crire ou lire des entiers de 16 bits dans
    l'eeprom : eeprom_read_word et eeprom_write_word. Les adresse d'eeprom
    partent de z&eacute;ro et comptent en octets.<br>
    <br>
    Une complication est que l'eeprom est effac&eacute;e lorsque nous chargeons
    un nouveau programme. Ainsi, nous devons &ecirc;tre capable de savoir si
    nous avons lu des aberrations de l'eeprom (parce que le logiciel a
    &eacute;t&eacute; flash&eacute;) ou si nous avons des valeurs valides
    de courant et de tension. Nous faisons cela en &eacute;crivant un
    nombre magique dans l'eeprom. En d'autres mots, nous sauvons chaque fois
    trois choses : la limite de courant, la limite de tension et le nombre
    magique. Si nous lisons apr&egrave;s la mise en marche, nous
    v&eacute;rifions d'abord le nombre magique. Si c'est notre nombre magique,
    alors les valeur de courant et de tension sont correctes. Le nombre
    magique peut &ecirc;tre n'importe quel nombre qui n'a que peu de chance
    d'&ecirc;tre l&agrave; par d&eacute;faut (par exemple, 19).<br>
    <br>
    Pour voir le code exact, regardez la fonction "store_permanent()" dans le
    fichier ddcp.c (&agrave; t&eacute;l&eacute;charger &agrave; la fin de cet
    article).<br>
    <br>
    Le logiciel pour cet article est digitaldcpower-0.3.X o&ugrave; X est la
    r&eacute;vision que j'envisage d'effectuer s'il y a des mises &agrave; jour
    n&eacute;cessaires (le logiciel pour l'article pr&eacute;c&eacute;dent
    &eacute;tait digitaldcpower-0.2.X).<br>
    <br>
    Amusez-vous ! Le prochain article ajoutera une communication I2C &agrave;
    l'alimentation &eacute;lectrique, &agrave; partir du PC. Ainsi, vous pourrez
    non seulement appuyer un bouton sur l'alimentation &eacute;lectrique pour
    changer quelque chose mais aussi le faire via une commande.<br>
    <br>
    Je suis &agrave; la recherche de personnes qui peuvent porter les programmes
    h&ocirc;tes I2C vers diff&eacute;rents syst&egrave;mes d'exploitation.
    Faites moi savoir si vous pouvez aider pour cela. Vous devez avoir quelques
    connaissances de l'interface RS232 et un compilateur. Le changement actuel
    affecte probablement seulement une ligne de code (la fonction ioctl).<br>
    <br>
    Le circuit entier avec toutes les pi&egrave;ces et une carte imprim&eacute;e
    est disponible sur shop.tuxgraphics.org (voir ci-dessous).

    <A NAME="384lfindex5">&nbsp;</A>
<H2>R&eacute;f&eacute;rences / T&eacute;l&eacute;chargements</H2>


    <ul>
      <li><a href="../../common/src2/article384/index.html">Page de
      t&eacute;l&eacute;chargement</a> pour cet article (les mises &agrave; jour
      et les corrections seront aussi disponibles l&agrave;).</li>

      <li>La premi&egrave;re partie de cette s&eacute;rie : <a href=
      "../June2005/article379.shtml">Une alimentation num&eacute;rique CC
      </a></li>

      <li>Comment programmer un atmega8 avec gcc : <a href=
      "../November2004/article352.shtml">article de novembre 2004 (352)</a></li>

      <li><a href=
      "http://www.tuxgraphics.org/electronics/">Section &eacute;lectronique de
      Tuxgraphics</a>, une collection de tous les articles de cette
      s&eacute;rie.</li>

      <li><a href=
      "http://shop.tuxgraphics.org/electronic/microcontroller.html">
      shop.tuxgraphics.org , section microcontr&ocirc;leur</a>, vous pouvez y
      commander toutes les pi&egrave;ces (transistors, composants passifs,
      afficheur LCD, PCB, microcontr&ocirc;leur, ...).</li>
    </ul>
    <!-- vim: set sw=2 ts=2 et tw=80: -->
  



<!-- BODY_OF_THE_ARTICLE_STOP -->
<!-- 2pdaIgnoreStart -->
<A NAME="talkback">&nbsp;</a>
<h2>Talkback form for this article</h2>
Every article has its own talkback page. On this page you can submit a comment or look at comments from other readers:
<center>
    <table width="250" border=0><tr><td>
    <div class="tbbutton"><A class="nodec" href="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=384">&nbsp;talkback page&nbsp;</a></div>
    </td></tr></table>
</center>

<br clear="all">
<HR size="2" noshade>
<table width="250" border=0><tr><td>
<div class="bbutton"><a class="nodec" href="../../index.shtml">&lt;--, LF Sommaire</a></div>
</td><td>
<div class="bbutton"><a class="nodec" href="index.shtml">Sommaire de ce num&eacute;ro</a></div>
</td></tr></table>
<br clear="all">
<HR size="2" noshade>
<!-- ARTICLE FOOT -->
<CENTER><TABLE WIDTH="98%" summary="footer">
<TR><TD ALIGN=CENTER BGCOLOR="#bdc6d5" WIDTH="50%">
<A HREF="../../common/lfteam.html">Site Web maintenu par l&acute;&eacute;quipe d&acute;&eacute;dition LinuxFocus</A>
<BR><FONT COLOR="#1111aa"><a href="../../common/copy.html">&copy; Guido     Socher</a><br>&quot;some rights reserved&quot; see <a href="../../license/index.shtml">linuxfocus.org/license/</a><br><a href="http://www.linuxfocus.org">http://www.LinuxFocus.org</a></FONT>
</TD>
<TD BGCOLOR="#bdc6d5">
<!-- TRANSLATION INFO -->
<font size=2>Translation information:</font>
<TABLE summary="translators">
  <tr><td><font size="2">en --&gt; -- : Guido Socher (<a href="http://linuxfocus.org/~guido/"><font size="1">homepage</font></a>)</font></td></tr>
  <tr><td><font size="2">en --&gt; fr: Jean-Etienne Poirrier (<a href="http://www.poirrier.be/~jean-etienne/"><font size="1">homepage</font></a>)</font></td></tr>
</TABLE>
</TD>
</TR></TABLE></CENTER>
<p><font size=1>2005-09-27, generated by lfparser version 2.52</font></p>
<!-- 2pdaIgnoreStop -->
</BODY>
</HTML>

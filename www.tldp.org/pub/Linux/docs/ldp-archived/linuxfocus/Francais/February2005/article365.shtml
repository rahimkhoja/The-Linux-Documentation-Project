<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
 <META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <META NAME="GENERATOR" CONTENT="lfparser_2.52">
 <META NAME="LFCATEGORY" CONTENT="Hardware">
 <link rel="icon" href="../../common/images/lf-16.png" type="image/png">
 <TITLE>lf365, Hardware: Un thermom&egrave;tre num&eacute;rique ou comment parler "I2C" &agrave; votre microcontr&ocirc;leur Atmel</TITLE>
<style type="text/css">
<!--
 td.top {font-family: Arial,Geneva,Verdana,Helvetica,sans-serif; font-size:12 }
 pre { font-family:monospace,Courier }
 pre.code { font-family:monospace,Courier;background-color:#aedbe8; }
 p.cl { color:#EE9500 }
 table.left { margin-right:0.3cm }
 a.nodec { text-decoration:none }
 p.trans { font-size:8pt; text-align:right }
 p.clbox { width:50%; alignment:center; background-color:#FFD700; 
           border-style:none; border-width:medium; border-color:#FFD700; 
           padding:0.5cm;  text-align:center }
 p.code { width:80%; alignment:center; background-color:#aedbe8; 
          border-style:none; border-width:medium; border-color:#aedbe8; 
          padding:0.1cm;  text-align:left }
 p.foot { background-color:#AAAAAA; color:#FFFFFF; border-style:none; 
          border-width:medium; border-color:#AAAAAA; padding:0.5cm ; 
          margin-top:0.1cm; margin-right:1cm; margin-left:1cm; 
          text-align:center }
 div.tbbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   margin: 2px 5px 2px 5px;
   text-align: center;
   width: 20em;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
 div.bbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   float: left;
   margin: 2px 5px 2px 5px;
   text-align: center;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
-->
</style>
 
</HEAD>
<BODY bgcolor="#ffffff" text="#000000">
 <!-- this is generated html code. NEVER use this file for your
 translation work. Instead get the file with the same article number
 and .meta.shtml in its name. Translate this meta file and then
 use lfparser program to generate the final article -->
 <!-- lfparser can be obtained from http://main.linuxfocus.org/~guido/dev/lfparser.html -->

<!-- this is used by a number of tools:
 =LF=AUTHOR: Guido     Socher
 =LF=CAT___: Hardware
 =LF=TITLE_: Un thermom&egrave;tre num&eacute;rique ou comment parler "I2C" &agrave; votre microcontr&ocirc;leur Atmel
 =LF=NUMBER: 365
 =LF=ANAME_: article365.shtml
 =LF=PARSER: 2.52
 -->

<!-- 2pdaIgnoreStart -->

<!-- start navegation bar, current, style=2 -->
 <!-- top navegation bar -->
 <TABLE summary="topbar_1" cellspacing="0" cellpadding="0" border="0" align="center" width="90%">
   <TR bgcolor="#2e2292">
     <TD class="top"><TABLE summary="topbar_1_logo" cellspacing="0" cellpadding="0" border="0" width=
       "100%">
         <TR><TD width="319"><a href="../../index.shtml"><IMG src="../../common/images/logolftop_319x45.gif"
           alt="[LinuxFocus-icon]" width="319" height="45" align="left" 
           border="0"></a></TD>

           <TD class="top">
             <TABLE summary="topbar_1_links" width="100%">
               <TR align="right">
                 <TD class="top">
                 
                 <A class="nodec" href="../../index.shtml"><FONT color=
                 "#DDDDDD" size="2">&lt;--</FONT></A> &nbsp;| 
                 <A class="nodec" href="../map.html"><FONT color=
                 "#DDDDDD" size="2">Carte</FONT></A> &nbsp;| 
                 <A class="nodec" href="../indice.html"><FONT color=
                 "#DDDDDD" size="2">Index</FONT></A> &nbsp;| 
                 <A class="nodec" href="../Search/index.html"><FONT color=
                 "#DDDDDD" size="2">Recherche</FONT></A> </TD>
                 
               </TR>

               <TR align="right">
                 <TD class="top">
                   <HR width="100%" noshade size="1">
                 </TD>
               </TR>
             </TABLE>
           </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end top navegation bar -->
 <!-- blue bar -->
 <TABLE summary="topbar_2" cellspacing="0" cellpadding="0" border="0" align="center"
 width="90%">
   <TR bgcolor="#00ffff">
     <TD><IMG src="../../common/images/transpix.gif" width="1" height=
     "2" alt=""></TD>
   </TR>
 </TABLE>
 <!-- end blue bar -->
 <!-- bottom navegation bar -->
 <TABLE summary="topbar_3" cellspacing="0" cellpadding="0" border="0" align="center"
 width="94%">
   <TR bgcolor="#000000">
     <TD>
       <TABLE summary="topbar_3_links" cellspacing="0" cellpadding="1" border="0" width=
       "100%">
         <TR align="center">
           <TD WIDTH="20%"><A class="nodec" href="../News/index.shtml"><FONT color=
           "#FFFFFF">Nouvelles</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Archives/index.html"><FONT color=
           "#FFFFFF">Archives</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Links/index.html"><FONT color=
           "#FFFFFF">Liens</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../aboutus.html"><FONT color=
           "#FFFFFF">A propos</FONT></A> </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end bottom navegation bar -->
<!-- stop navegation bar -->

<!-- SSI_INFO -->

<!-- tr_staticssi include virtual -->
<!-- tr_staticssi exec cmd -->
<!-- addedByLfdynahead ver 1.5 --><TABLE ALIGN="right" border=0><TR><TD ALIGN="right"><FONT SIZE="-1" FACE="Arial,Helvetica">Ce document est disponible en: <A href="../../English/February2005/article365.shtml">English</a> &nbsp;<A href="../../Castellano/February2005/article365.shtml">Castellano</a> &nbsp;<A href="../../ChineseGB/February2005/article365.shtml">ChineseGB</a> &nbsp;<A href="../../Deutsch/February2005/article365.shtml">Deutsch</a> &nbsp;<A href="../../Francais/February2005/article365.shtml">Francais</a> &nbsp;</FONT></TD></TR></TABLE><br>
 


<!-- SSI_INFO STOP -->
<!-- 2pdaIgnoreStop -->

<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_START -->
<TABLE ALIGN="LEFT" BORDER="0" WIDTH="195" summary="about the author" class="left">
<TR>
<TD>

<img src="../../common/images/Guido-S.gif" alt="[Photo of the Author]" height="164" width="173">
<BR>par  Guido Socher <a href="http://linuxfocus.org/%7Eguido/"><font size="1">(homepage)</font></a>
<BR><BR>
<I>L&acute;auteur:</I><BR>
<!-- aboutauthor_start -->
<p>Guido aime Linux parce que c'est r&eacute;ellement un bon syst&egrave;me pour d&eacute;velopper votre propre mat&eacute;riel.</p>
<!-- aboutauthor_stop -->
<!-- TRANSLATED_TO fr -->
<BR><BR><I>Traduit en Français par:</I><BR>
Jacques WLODARCZAK <small>&lt;j.wlodarczak(at)tiscali.be&gt;</small>
<br>
<!--
 =LF=TRANSTO=fr: Jacques WLODARCZAK
-->
<!-- TRANSLATED_TO_STOP -->
<!-- INDEX_START -->
<BR><i>Sommaire</i>:
<UL>
  <LI><A HREF="#365lfindex0">Introduction</A></LI>
  <LI><A HREF="#365lfindex1">Comment fonctionne I2C/TWI.</A></LI>
  <LI><A HREF="#365lfindex2">La d&eacute;marche</A></LI>
  <LI><A HREF="#365lfindex3">La sonde de temp&eacute;rature</A></LI>
  <LI><A HREF="#365lfindex4">Le circuit</A></LI>
  <LI><A HREF="#365lfindex5">Fabrication du circuit imprim&eacute;</A></LI>
  <LI><A HREF="#365lfindex6">L'assemblage</A></LI>
  <LI><A HREF="#365lfindex7">Utiliser la communication I2C</A></LI>
  <LI><A HREF="#365lfindex8">Quelle temp&eacute;rature fait-il ?</A></LI>
  <LI><A HREF="#365lfindex9">Conclusion</A></LI>
  <LI><A HREF="#365lfindex10">References</A></LI>
  <LI><A HREF="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=365">Talkback form for this article</A></LI>
</UL>

</TD></TR></TABLE>
<!-- INDEX_STOP -->
<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_STOP -->
<!-- HEAD_OF_THE_ARTICLE_START -->
<br>&nbsp;
<table border="0"><tr><td>
<!-- tr_staticssi include virtual -->
<!-- tr_staticssi exec cmd -->
<!-- addedByLfPdf ver 0.1 -->
<TABLE style="border-style:outset; border-width:1px" align="right" bgcolor="#ff9616" cellspacing="1"><TR><TD bgcolor="#ff9616">
        <a href="../Archives/lf-2005_02-0365.pdf"><small>PDF</small></a>
        </TD></TR></TABLE>
         

<H2>Un thermom&egrave;tre num&eacute;rique ou comment parler "I2C" &agrave; votre microcontr&ocirc;leur Atmel</H2>
 <img src="../../common/images2/article365/title_365.jpg" alt="[Illustration]" hspace="10">
<!-- ABSTRACT OF THE ARTICLE -->
<P><i>R&eacute;sum&eacute;</i>:
<P>
<!-- articleabstract_start -->

    Le microcontr&ocirc;leur Atmega8 de chez  Atmel poss&egrave;de de nombreuses lignes d'entr&eacute;e/sortie. C'est le p&eacute;riph&eacute;rique id&eacute;al pour d&eacute;velopper n'importe quel &eacute;quipement de mesure. <br><br>
    Dans cet article nous voyons comment interconnecter le microcontr&ocirc;leur &agrave; un PC linux &agrave; travers une interface RS232 sans la puce MAX232.

    
<!-- articleabstract_stop -->

<br><!-- HR divider --><center><font color="#8282e0"><b>_________________ _________________ _________________</b></font></center><br>
</td></tr></table>
<!-- HEAD_OF_THE_ARTICLE_STOP -->
<!-- BODY_OF_THE_ARTICLE_START -->


    <A NAME="365lfindex0">&nbsp;</A>
<H2>Introduction</H2>

    Un pre-requis pour cet article est que vous ayez l'environnement de programmation GCC AVR install&eacute; tel que d&eacute;crit dans mon article <a href="../../English/November2004/article352.shtml">"Programmer le microcontr&ocirc;leur AVR avec GCC, libc 1.0.4"</a>. Si
    vous voulez &eacute;viter des probl&egrave;mes d'installation vous pouvez &eacute;videmment utiliser le CD de programmation AVR de <a href="http://shop.tuxgraphics.org/">http://shop.tuxgraphics.org/</a>
    <a href="http://shop.tuxgraphics.org/electronic/microcontroller.html"><img src="../../common/images2/article365/linuxavrcd_th.jpg" align="right" height="213" hspace="4" vspace="4" width="150"></a>
    <br>
    <br>
    <br>
    Quand vous utilisez ce genre d'appareil &eacute;volu&eacute; comme une microcontr&ocirc;leur, pour mesurer des signaux analogiques ou num&eacute;riques, vous comptez &eacute;videmment pouvoir disposer d'interfaces pour recueillir les donn&eacute;es ou envoyer des commandes au microcontr&ocirc;leur.
    Dans tous les articles pr&eacute;sent&eacute;s ici dans le pass&eacute;, nous utilisions toujours une communication RS232 avec l'UART qui est inclus dans le microcontr&ocirc;leur.
    Le probl&egrave;me est que cela requ&eacute;rait en suppl&eacute;ment une puce MAX232 et 4 condensateurs.
    Atmel sugg&egrave;re aussi qu'un oscillateur &agrave; quarz est n&eacute;cessaire pour que la communication UART fonctionne de mani&egrave;re fiable.
    En tout cas &ccedil;a fait beaucoup d'&eacute;l&eacute;ments suppl&eacute;mentaires ... et cela nous pouvons l'&eacute;viter !

    <br>
    <br>
    La quantit&eacute; de donn&eacute;es &agrave; transf&eacute;rer entre le PC et le microcontr&ocirc;leur est habituellement faible (juste quelques octets). Aussi la vitesse importe peu.
    Ce qui fait que le protocole/bus I2C est tout &agrave; fait indiqu&eacute; pour remplir cette t&acirc;che.
    <br>
    <br>
    I2C (prononcer &agrave; l'anglaise « eye-square-see ») est une interface de communication bidirectionnelle &agrave; deux conducteurs.
    Elle a &eacute;t&eacute; mise au point par Philips et ils ont prot&eacute;g&eacute; ce nom. C'est pourquoi d'autres fabricants utilisent un autre nom pour ce m&ecirc;me protocole.
    Par exemple Atmel appelle I2C une « interface &agrave; deux conducteurs » (TWI : « two wire interface »).
    <br>
    <br>
    Nombre d'entre vous ont s&ucirc;rement d&eacute;j&agrave; utilis&eacute; I2C sans le savoir. Toutes les cartes m&egrave;res r&eacute;centes contiennent un bus I2C pour lire les temp&eacute;ratures, les vitesses de ventilateur, des informations &agrave; propos de la m&eacute;moire disponible... bref toutes sortes d'informations sur le mat&eacute;riel.
    Ce bus I2C est malheureusement indisponible &agrave; l'ext&eacute;rieur du PC (il n'y pas de connecteur). C'est pourquoi nous devons en inventer un nouveau.
    <br>
    <br>
    Mais voyons d'abord comment fonctionne « l'interface &agrave; deux conducteurs » (le TWI; rappelons qu'il s'agit d'une appellation alternative de I2C).

    <A NAME="365lfindex1">&nbsp;</A>
<H2>Comment fonctionne I2C/TWI.</H2>

    Le cahier des sp&eacute;cifications de l'Atmega8 (voir les r&eacute;f&eacute;rences) contient un descriptif tr&egrave;s d&eacute;taill&eacute; &agrave; partir de la page 160.
    Aussi, je vous en pr&eacute;senterai simplement un survol qui vous permettra de comprendre le descriptif dans le cahier des sp&eacute;cifications.
    <br>
    <br>
    Sur le bus I2C vous avez toujours un dispositif ma&icirc;tre et de nombreux dispositifs esclaves.
    Le ma&icirc;tre est celui qui initie la communication et contr&ocirc;le l'horloge. Les deux conducteurs de ce bus sont appel&eacute;s SDA (ligne de donn&eacute;es)
    et SCL (canal d'horloge). Chacun des dispositifs reli&eacute;s au bus doit &ecirc;tre aliment&eacute; s&eacute;par&eacute;ment (tout comme pour une communication RS232 traditionnelle).

   Les deux conducteurs du bus sont normalement raccord&eacute;s via une r&eacute;sistance de tirage au niveau logique « haut » de 4.7k (+5V pour les circuits imprim&eacute;s &agrave; 5V).
   Cela donne une connection &eacute;lectrique en « OU » logique entre les dispositifs raccord&eacute;s au bus. Un de ceux-ci am&egrave;nera une ligne conductrice &agrave; la masse quand il voudra transmettre un 0, ou la laissera en position « haute » pour transmettre un 1.
   Le ma&icirc;tre d&eacute;bute une communication en envoyant un motif appel&eacute; « &eacute;tat de d&eacute;part » et alors s'adresse au dispositif avec lequel il veut communiquer.
   Chaque dispositif reli&eacute; au bus poss&egrave;de une adresse unique sur 7 bits. Apr&egrave;s cela le ma&icirc;tre envoie un bit qui indique s'il veut lire ou &eacute;crire des donn&eacute;es.
   L'esclave reconna&icirc;tra alors qu'il a bien compris le ma&icirc;tre en lui envoyant un « ack-bit » (bit d'acquittement). Ainsi nous avons maintenant localis&eacute; 9 bits de donn&eacute;es sur le bus (soit 7 bits pour l'adressage + un bit de lecture + un « ack-bit »).
    <br>
    <br>

<pre class="code">| d&eacute;part | adresse 7-bit de l'esclave |  bit lecture de \
donn&eacute;e | attente du bit de r&eacute;ception (ack-bit) | ... les donn&eacute;es suivent ici
</pre>
    Et ensuite ? <br>
    <br>
    Ensuite nous pouvons recevoir ou transmettre des donn&eacute;es. Une donn&eacute;e est toujours un multiple de 8 bits (un octet) et doit &ecirc;tre acquitt&eacute;e (acknowledged) par un « ack-bit ». Autrement dit, nous rel&egrave;verons toujours des suites de 9 bits sur le bus.
    Quand la communication est termin&eacute;e alors le ma&icirc;tre doit transmettre un « &eacute;tat de fin ». Aussi le ma&icirc;tre doit-il savoir combien de donn&eacute;es parviendront quand il les lira en provenance de l'esclave. Ce n'est cependant pas un probl&egrave;me du fait que vous pouvez transmettre cette information &agrave; l'int&eacute;rieur du protocole d'utilisateur. Par exemple nous utiliserons l'octet 0 &agrave; la fin d'un mot pour indiquer qu'il n'y plus de donn&eacute;e.

    <br>
    <br>
     Les donn&eacute;es sur le conducteur SDA est valide tant que le SCL est &agrave; 1. Comme ceci :
<pre class="code">SDA H -\       /---\     /---\          /---\
    L   \-----/     \---/     \--------/     \------....

SCL H ----\     /-\       /-\     /-\    /-\    /-\
    L      \---/   \-----/   \---/   \--/   \--/   \-....


  | START |      1 |       1 |     0 |    1 |    0 |
</pre>
    Une des choses les plus int&eacute;ressantes concernant ce protocole est que vous n'avez pas besoin d'un signal d'horloge pr&eacute;cis et synchrone.
    Le protocole continue &agrave; fonctionner m&ecirc;me s'il y a quelques parasites sur le signal d'horloge.
    <br>
    <br>
     Pr&eacute;cis&eacute;ment cette propri&eacute;t&eacute; rend possible l'implantation du protocole I2C dans une application en espace utilisateur sans avoir besoin d'un pilote du noyau ou d'un mat&eacute;riel sp&eacute;cial (comme un UART). Chouette non ?



    <A NAME="365lfindex2">&nbsp;</A>
<H2>La d&eacute;marche</H2>

    Comme dit auparavant nous ne pouvons utiliser le bus I2C interne du PC mais nous pouvons utiliser n'importe quelle interface externe
    o&ugrave; nous pourrons envoyer et recevoir des bits de donn&eacute;es. Nous utiliserons simplement l'interface RS232 de notre PC.
    Autrement dit notre interface de communication est encore la m&ecirc;me que dans les articles pr&eacute;c&eacute;dents  mais nous &eacute;pargnons le mat&eacute;riel MAX232, des capacit&eacute;s, etc.
  <br>
    <br>
    La partie la plus rude est &eacute;videmment d'implanter le protocole I2C en partant de rien. Cela me prit 5 semaines pour le conna&icirc;tre et le d&eacute;boguer mais maintenant c'est fait et vous n'avez qu'&agrave; le copier :-). J'esp&egrave;re que lorsque vous l'utiliserez, vous vous souviendrez de ce que ce code repr&eacute;sente comme effort.
 <br>
    <br>
    Comme application exemplaire, nous construirons un thermom&egrave;tre. Vous pouvez &eacute;videmment mesurer n'importe quoi d'autre ou juste utiliser comme interrupteur d'une lumi&egrave;re. A vous de voir.

<br>
    <br>
    Dans un second article, nous ajouterons un affichage LCD local. En d'autres mots, vous aurez un thermom&egrave;tre o&ugrave; vous lirez la temp&eacute;rature directement sur l'affichage et/ou sur votre PC linux. L'affichage viendra dans un second article afin de ne pas alourdir celui-ci.

    <table align="right" width="162">
      <tbody><tr>
        <td bgcolor="#c5d4f9"><img src="../../common/images2/article365/ntc.jpg" alt="ntc"><br>
         Les NTC sont petit, bon march&eacute; et suffisamment pr&eacute;cis</td>
      </tr>
    </tbody></table>

    <A NAME="365lfindex3">&nbsp;</A>
<H2>La sonde de temp&eacute;rature</H2>

    Il est possible d'avoir des sondes de temp&eacute;rature calibr&eacute;es d'origine (certaines parlent I2C ;-) mais elle sont plut&ocirc;t ch&egrave;res.
    Les NTC sont meilleur march&eacute; et presque aussi bons, m&ecirc;me sans calibration. Si vous les calibrez quelque peu, vous pouvez parvenir &agrave; une pr&eacute;cision au-del&agrave; de la d&eacute;cimale.

 <br>
    <br>
    Un probl&egrave;me pos&eacute; par les NTC est qu'ils ne sont pas lin&eacute;aires. N&eacute;anmoins ce n'est qu'une question de physique des semi-conducteurs pour trouver la bonne formule qui corrige la courbe non lin&eacute;aire. Le microcontr&ocirc;leur &eacute;tant un petit ordinateur, les op&eacute;rations math&eacute;matiques ne sont pas un probl&egrave;me.
    Les NTC sont des r&eacute;sistances d&eacute;pendantes de la temp&eacute;rature. La valeur R du NTC pour une temp&eacute;rature donn&eacute;e est :
  <br clear="all">

    <center>
      <img src="../../common/images2/article365/Ntcformula.gif" alt="ntc formula">
    </center>
    T ou Tc repr&eacute;sente la valeur de la temp&eacute;rature que nous recherchons. Rn est la valeur de r&eacute;sistance du NTC &agrave; 25°c. Vous pouvez vous fournir des NTC &agrave; 4k7, 10k .... aussi Rn reprend cette valeur.
 <br>


    <A NAME="365lfindex4">&nbsp;</A>
<H2>Le circuit</H2>


    <table align="right">
      <tbody><tr>
        <td>
          <center>
            <a href="../../common/images2/article365/i2ctemp_schematic.gif">
            <img src="../../common/images2/article365/i2ctemp_schematic_th.gif" alt="circuit diagram"></a><br>
            Diagramme du circuit. Cliquez sur le diagramme pour une vue plus d&eacute;taill&eacute;e
          </center>
        </td>
      </tr>
    </tbody></table>
    Maintenant, nous avons tout ce qu'il faut pour construire notre thermom&egrave;tre num&eacute;rique. Nous reprenons deux sondes NTC, une pour l'int&eacute;rieur, l'autre pour l'ext&eacute;rieur. Vous pouvez en ajouter d'autres si vous voulez (conn3, la borne PC2 par exemple est libre).
    Dans le diagramme du circuit, j'y ai d&eacute;j&agrave; repris les conducteurs n&eacute;cessaires pour le raccordement &agrave; un affichage LCD car je n'ai pas envie de reconcevoir un nouveau circuit complet pour le prochain article.
 <br>
    <br>
    Il y a aussi une LED connect&eacute;e. &Ccedil;a co&ucirc;te pas cher et c'est vraiment utile pour le d&eacute;bogage de base. Je l'ai utilis&eacute; par exemple pour d&eacute;boguer l'&eacute;tat I2C de l'engin quand je programmais la communication I2C entre le PC et le microcontr&ocirc;leur. Durant le fonctionnement courant, nous pouvons le laisser clignoter pour indiquer que des mesures sont en cours.

    <br>
    <br>
     Pour le reste, le circuit est suffisamment explicite. Le convertisseur analogique-num&eacute;rique dans le micro-contr&ocirc;leur est utilis&eacute; pour mesurer la tension sur le NTC qui sera converti en valeurs de temp&eacute;rature.
<br>
    <br>
    L'Atmega8 pr&eacute;sente deux options qui sont utilis&eacute;es comme tension de r&eacute;f&eacute;rence pour le analogique-num&eacute;rique. Il peut utiliser soit les 5V (AVcc) soit une r&eacute;f&eacute;rence interne de 2,56V. Pour la temp&eacute;rature int&eacute;rieure, nous n'avons pas besoin d'une &eacute;tendue de valeurs aussi large que pour le capteur ext&eacute;rieur. De +10°c &agrave; +40°c devrait normalement suffire. Aussi pouvons-nous utiliser la r&eacute;f&eacute;rence &agrave; 2,5V quand il s'agit de mesurer la sonde d'int&eacute;rieur. Cela procure une tr&egrave;s grande pr&eacute;cision puisque les 1024 valeurs num&eacute;riques possibles sont &eacute;tal&eacute;es sur seulement une port&eacute;e de 0 &agrave; 2,56V ce qui nous donne une r&eacute;solution de 2,5 mV (encore plus pr&eacute;cis que sur la plupart des voltm&egrave;tres num&eacute;riques!).
<br>
    <br>
    La borne CD sur la RS232 est une ligne d'entr&eacute;e et est connect&eacute;e au SDA du bus I2C. Nous l'utilisons pour lire les donn&eacute;es venant du micro-contr&ocirc;leur.
    DTR et RTS sont des lignes de sorties. Quand le PC envoie des bits de donn&eacute;es sur le SDA alors il enclenche le DTR.
    Le ma&icirc;tre I2C (ici le PC linux) contr&ocirc;le la ligne SCL (horloge). Autrement dit la ligne d'horloge est une ligne de sortie sur la RS232.


    <br>
    <br>
    Le 78L05 est utilis&eacute; pour g&eacute;n&eacute;rer une alimentation stable et une tension de r&eacute;f&eacute;rence. Vous pouvez utilisez quasi n'importe quel type d'alimentation AC ou DC entre 7,5V et 12V. 9V est un bon choix.


    <A NAME="365lfindex5">&nbsp;</A>
<H2>Fabrication du circuit imprim&eacute;</H2>


    <table align="right" width="202">
      <tbody><tr>
        <td bgcolor="#c5d4f9"><a href="http://shop.tuxgraphics.org/"><img src="../../common/images2/article365/article365kit_th.jpg" alt="get this kit from the tuxgraphics shop"></a><br>
        tuxgraphics.org vend tous les &eacute;l&eacute;ments requis dans cet article rassembl&eacute;s avec un circuit imprim&eacute; de bonne facture.
</td>
      </tr>
    </tbody></table>
    Vous pouvez &eacute;videmment r&eacute;utiliser le circuit imprim&eacute;  prototype que nous utilisions dans notre article pr&eacute;c&eacute;dent. Il faut juste &agrave; reconnecter la LED sur la borne 11 et ajouter tout ce qui est nouveau.
	 <br>
    <br>
    Si vous voulez un circuit imprim&eacute; de belle apparence alors
    il est plus indiqu&eacute; d'utiliser une nouvelle plaquette. Vu que le circuit
    est plus compliqu&eacute;, il est &eacute;vident qu'il faut graver proprement la plaquette
    du circuit imprim&eacute;. Apr&egrave;s la lecture de l'article de Iznogood sur
    linuxfocus &agrave; propos de gEDA, j'ai d&eacute;cid&eacute; d'utiliser &eacute;galement gEDA au lieu de
    Eagle. gschem, l'outil de dessin de sch&eacute;mas, est tr&egrave;s bon.
    Il n'a pas une librairie de symboles aussi &eacute;tendue que chez Eagle et de ce fait
    j'ai d&ucirc; cr&eacute;er le symbole pour l'Atmega8,  mais c'est tr&egrave;s facile d'utilisation
    et aussi bon que sous Eagle. Quelque peu plus probl&eacute;matique est pcb, l'outil pour
    dessiner les circuits imprim&eacute;s. Quand vous venez d'Eagle, vous remarquez
    tout d'abord qu'il est possible de d&eacute;connecter les composants des « pistes ».
    Afin d'&ecirc;tre s&ucirc;r que les bonnes « pistes » soient connect&eacute;es aux bonnes broches, vous devez lancer
    Connects-&gt;Optimize rats-nest &agrave; l'occasion. Vous devriez
    d'abord compl&eacute;ter le diagramme du circuit et alors fabriquer le circuit imprim&eacute;.
    L'annotation entre les deux est seulement manuelle.
<img src="../../common/images2/article365/i2ctemppcb_topview_position_components.png" alt="top view, position of components" align="left"> <br>
    <br>
    J'ai utilis&eacute; le calque de couleur orange pour le dessin. D'une mani&egrave;re ou d'une autre,
    les autres calques ne g&eacute;n&egrave;reront aucune sortie &agrave; l'impression.
    Le probl&egrave;me est que le calque color&eacute; en orange est sur la face de la plaquette o&ugrave; se situent les
    &eacute;l&eacute;ments. Si vous &eacute;crivez le texte dans ce calque alors il sera en miroir
    quand vous l'imprimerez sur la plaquette mat&eacute;rielle. C'est pourquoi j'ai fait
    la maquette de base avec pcb et tout le reste avec gimp.
 <br>
    <br>
    Gr&acirc;ce &agrave; <a href="http://shop.tuxgraphics.org/">shop.tuxgraphics.org</a>,
    vous n'aurez pas &agrave; vous lancer dans des manipulations chimiques hasardeuses
    et courir la ville pour trouver les bons composants. Ils vendent tous les &eacute;l&eacute;ments
    requis par cet article. De cette mani&egrave;re, vous pourrez vous concentrer sur la
    partie la plus agr&eacute;able et assembler ce circuit avec succ&egrave;s.


    <A NAME="365lfindex6">&nbsp;</A>
<H2>L'assemblage</H2>

    Quand vous monterez le circuit soyez attentif aux &eacute;l&eacute;ments pour lesquels
    la polarit&eacute; compte : les condensateurs chimiques, les diodes, les zeners, le 78L05, la LED et le microcontr&ocirc;leur.

 <br>
    <br>
    Avant d'ins&eacute;rer le microcontr&ocirc;leur sur son support, vous devriez v&eacute;rifier
    l'alimentation. Si elle est d&eacute;fectueuse, non seulement vous aurez des mesures de
    temp&eacute;ratures incorrectes mais vous risquez aussi de d&eacute;truire le microcontr&ocirc;leur.
    C'est pourquoi connectez l'alimentation externe (par exemple une pile de 9V)
    et v&eacute;rifiez avec un voltm&egrave;tre que vous avez exactement 5V sur la broche du support du microcontr&ocirc;leur. A l'&eacute;tape suivante vous connectez le circuit au port RS232 de votre PC linux et lancez le programme i2c_rs232_pintest avec diverses combinaisons de signaux.

<pre class="code">i2c_rs232_pintest -d 1 -c 1
i2c_rs232_pintest -d 0 -c 1
i2c_rs232_pintest -d 1 -c 0
</pre>
    Ce programme met les bornes RTS aux valeurs de tension pr&eacute;vues (utilis&eacute; comme SCL, option -c) et DTRn (utilis&eacute; comme SDA, option -d) du port RS232. Le port RS232 a un niveau de voltage d'environ 10V. Derri&egrave;re la diode zener, vous devriez mesurer seulement
    -0,7 pour une valeur binaire de 0 et + 4-5 V pour une valeur binaire de 1.
 <br>
    <br>
    N'ins&eacute;rez le microcontr&ocirc;leur qu'apr&egrave;s que votre circuit ait pass&eacute; tous ces tests.

    <A NAME="365lfindex7">&nbsp;</A>
<H2>Utiliser la communication I2C</H2>

    T&eacute;l&eacute;chargez (voyez les r&eacute;f&eacute;rences) le fichier linuxI2Ctemp tar.gz
    et d&eacute;compactez-le. La communication I2C est implant&eacute;e dans deux fichiers :


<pre class="code">i2c_avr.c -- the i2c statemachine for the atmega8
i2c_m.c   -- the complete i2c protocol on the linux side
</pre>
    J'ai donn&eacute; &agrave; l'Atmega8 l'adresse d'esclave 3. Pour envoyer la cha&icirc;ne « hello »
    &agrave; l'Atmega8, vous ex&eacute;cuterez les fonctions C suivantes :

<pre class="code">address_slave(3,0); // renseigne l'esclave que nous allons envoyer quelquechose
i2c_tx_string("hello");
i2cstop(); // se d&eacute;gager du bus I2C

du c&ocirc;t&eacute; du microcontr&ocirc;leur vous devriez recevoir le mot "hello" avec
i2c_get_received_data(rec_buf);
</pre>
    Tr&egrave;s facile.
     Lire des donn&eacute;es venant du microcontr&ocirc;leur est similaire. Jeter un oeil
     sur le fichier i2ctemp_avr_main.c pour voir comment &ccedil;a fonctionne quand les lectures de
     temp&eacute;rature sont effectu&eacute;es.


    <A NAME="365lfindex8">&nbsp;</A>
<H2>Quelle temp&eacute;rature fait-il ?</H2>

    Pour compiler et charger le code pour le microcontr&ocirc;leur, lancez les commandes suivantes &agrave; partir
    du r&eacute;pertoire du paquet linuxI2Ctemp.

<pre class="code">make
make load
</pre>
    Compilez les deux programmes i2c_rs232_pintest et i2ctemp_linux
<pre class="code">make i2c_rs232_pintest
make i2ctemp_linux
</pre>
    ou simplement utilisez les versions pr&eacute;compil&eacute;es se trouvant dans le r&eacute;pertoire « bin ».
   <br>
    <br>
    Pour lire la temp&eacute;ratures lancez simplement:
<pre class="code">i2ctemp_linux
</pre>
    ... et cela affichera les temp&eacute;ratures d'int&eacute;rieur et d'ext&eacute;rieur. Pour faire en sorte que ces donn&eacute;es soient disponibles sur un site web, je sugg&egrave;re de ne pas lancer directement i2ctemp_linux
    du serveur car la communication I2C est tr&egrave;s lente. Il est pr&eacute;f&eacute;rable de le lancer &agrave; partir d'une t&acirc;che cron et, de l&agrave;, de l'&eacute;crire dans un fichier html. Un exemple de script est inclus dans le fichier README du paquet linuxI2Ctemp.


    <A NAME="365lfindex9">&nbsp;</A>
<H2>Conclusion</H2>

    Le protocole I2C requiert tr&egrave;s peu de mat&eacute;riel suppl&eacute;mentaire et est optimis&eacute; pour la transmission ou la r&eacute;ception de faibles quantit&eacute;s de donn&eacute;es. C'est exactement ce qu'il nous faut si nous souhaitons communiquer avec notre microcontr&ocirc;leur. C'est vraiment une tr&egrave;s &eacute;l&eacute;gante solution !
    <br>
    <br>
    Dans cet article, je me suis focalis&eacute; essentiellement sur la partie mat&eacute;rielle. Si vous aimez cet article alors j'en &eacute;crirai aussi un second dans lequel je d&eacute;crirai comment le sofware fonctionne.
    Sp&eacute;cialement, comment faire  la conversion analogique-num&eacute;rique et comment l'implantation du protocole I2C fonctionne. Pour ce prochain article nous pouvons aussi ajouter un affichage LCD et une conversion entre  Farenheit et Celsius.

    <A NAME="365lfindex10">&nbsp;</A>
<H2>References</H2>


    <ul>
      <li><b>Page de t&eacute;l&eacute;chargement</b> pour cet article : <a href="../../common/src2/article365/index.html">the linuxI2Ctemp software,
      diagrams, software updates</a></li>

      <li>Comment programmer l'Atmega8 avec gcc : <a href="../../English/November2004/article352.shtml">November2004 article
      352</a></li>

      <li>Cahier de sp&eacute;cifications de l'Atmega8 : aller sur http://www.atmel.com/
      et s&eacute;lectionner products-&gt;Microcontrollers -&gt;AVR-8 bit
      RISC-&gt;Documentation-&gt;datasheets <a href="../../common/src2/article365/atmega8.pdf">(local copy, pdf,
      2479982 bytes)</a></li>

      <li>le magasin tuxgraphics. Vraiment un grand magasin en ligne  :-): <a href="http://shop.tuxgraphics.org/">shop.tuxgraphics.org</a><br>
       Sur ce site vous pourrez acqu&eacute;rir le CD de programmation AVR sous linux, touts les composants pour cet article, les affichages LCD et les microcontr&ocirc;leurs.</li>
    </ul>
    <!-- vim: set sw=2 ts=2 et tw=80: -->
  

<!-- BODY_OF_THE_ARTICLE_STOP -->
<!-- 2pdaIgnoreStart -->
<A NAME="talkback">&nbsp;</a>
<h2>Talkback form for this article</h2>
Every article has its own talkback page. On this page you can submit a comment or look at comments from other readers:
<center>
    <table width="250" border=0><tr><td>
    <div class="tbbutton"><A class="nodec" href="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=365">&nbsp;talkback page&nbsp;</a></div>
    </td></tr></table>
</center>

<br clear="all">
<HR size="2" noshade>
<table width="250" border=0><tr><td>
<div class="bbutton"><a class="nodec" href="../../index.shtml">&lt;--, LF Sommaire</a></div>
</td><td>
<div class="bbutton"><a class="nodec" href="index.shtml">Sommaire de ce num&eacute;ro</a></div>
</td></tr></table>
<br clear="all">
<HR size="2" noshade>
<!-- ARTICLE FOOT -->
<CENTER><TABLE WIDTH="98%" summary="footer">
<TR><TD ALIGN=CENTER BGCOLOR="#bdc6d5" WIDTH="50%">
<A HREF="../../common/lfteam.html">Site Web maintenu par l&acute;&eacute;quipe d&acute;&eacute;dition LinuxFocus</A>
<BR><FONT COLOR="#1111aa"><a href="../../common/copy.html">&copy; Guido     Socher</a><br>&quot;some rights reserved&quot; see <a href="../../license/index.shtml">linuxfocus.org/license/</a><br><a href="http://www.linuxfocus.org">http://www.LinuxFocus.org</a></FONT>
</TD>
<TD BGCOLOR="#bdc6d5">
<!-- TRANSLATION INFO -->
<font size=2>Translation information:</font>
<TABLE summary="translators">
  <tr><td><font size="2">en --&gt; -- : Guido Socher (<a href="http://linuxfocus.org/%7Eguido/"><font size="1">homepage</font></a>)</font></td></tr>
  <tr><td><font size="2">en --&gt; fr: Jacques WLODARCZAK &lt;j.wlodarczak(at)tiscali.be&gt;</font></td></tr>
</TABLE>
</TD>
</TR></TABLE></CENTER>
<p><font size=1>2005-02-14, generated by lfparser version 2.52</font></p>
<!-- 2pdaIgnoreStop -->
</BODY>
</HTML>

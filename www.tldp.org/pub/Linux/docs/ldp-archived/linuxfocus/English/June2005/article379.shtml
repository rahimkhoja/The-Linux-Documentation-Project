<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
 <META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <META NAME="GENERATOR" CONTENT="lfparser_2.52">
 <META NAME="LFCATEGORY" CONTENT="Hardware">
 <link rel="icon" href="../../common/images/lf-16.png" type="image/png">
 <TITLE>lf379, Hardware: A digital DC powersupply</TITLE>
<style type="text/css">
<!--
 td.top {font-family: Arial,Geneva,Verdana,Helvetica,sans-serif; font-size:12 }
 pre { font-family:monospace,Courier }
 pre.code { font-family:monospace,Courier;background-color:#aedbe8; }
 p.cl { color:#EE9500 }
 table.left { margin-right:0.3cm }
 a.nodec { text-decoration:none }
 p.trans { font-size:8pt; text-align:right }
 p.clbox { width:50%; alignment:center; background-color:#FFD700; 
           border-style:none; border-width:medium; border-color:#FFD700; 
           padding:0.5cm;  text-align:center }
 p.code { width:80%; alignment:center; background-color:#aedbe8; 
          border-style:none; border-width:medium; border-color:#aedbe8; 
          padding:0.1cm;  text-align:left }
 p.foot { background-color:#AAAAAA; color:#FFFFFF; border-style:none; 
          border-width:medium; border-color:#AAAAAA; padding:0.5cm ; 
          margin-top:0.1cm; margin-right:1cm; margin-left:1cm; 
          text-align:center }
 div.tbbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   margin: 2px 5px 2px 5px;
   text-align: center;
   width: 20em;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
 div.bbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   float: left;
   margin: 2px 5px 2px 5px;
   text-align: center;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
-->
</style>
 
</HEAD>
<BODY bgcolor="#ffffff" text="#000000">
 <!-- this is generated html code. NEVER use this file for your
 translation work. Instead get the file with the same article number
 and .meta.shtml in its name. Translate this meta file and then
 use lfparser program to generate the final article -->
 <!-- lfparser can be obtained from http://main.linuxfocus.org/~guido/dev/lfparser.html -->

<!-- this is used by a number of tools:
 =LF=AUTHOR: Guido     Socher
 =LF=CAT___: Hardware
 =LF=TITLE_: A digital DC powersupply
 =LF=NUMBER: 379
 =LF=ANAME_: article379.shtml
 =LF=PARSER: 2.52
 -->

<!-- 2pdaIgnoreStart -->

<!-- start navegation bar, current, style=2 -->
 <!-- top navegation bar -->
 <TABLE summary="topbar_1" cellspacing="0" cellpadding="0" border="0" align="center" width="90%">
   <TR bgcolor="#2e2292">
     <TD class="top"><TABLE summary="topbar_1_logo" cellspacing="0" cellpadding="0" border="0" width=
       "100%">
         <TR><TD width="319"><a href="../../index.shtml"><IMG src="../../common/images/logolftop_319x45.gif"
           alt="[LinuxFocus-icon]" width="319" height="45" align="left" 
           border="0"></a></TD>

           <TD class="top">
             <TABLE summary="topbar_1_links" width="100%">
               <TR align="right">
                 <TD class="top">
                 
                 <A class="nodec" href="../../index.shtml"><FONT color=
                 "#DDDDDD" size="2">&lt;--</FONT></A> &nbsp;| 
                 <A class="nodec" href="../map.html"><FONT color=
                 "#DDDDDD" size="2">Map</FONT></A> &nbsp;| 
                 <A class="nodec" href="../indice.html"><FONT color=
                 "#DDDDDD" size="2">Index</FONT></A> &nbsp;| 
                 <A class="nodec" href="../Search/index.html"><FONT color=
                 "#DDDDDD" size="2">Search</FONT></A> </TD>
                 
               </TR>

               <TR align="right">
                 <TD class="top">
                   <HR width="100%" noshade size="1">
                 </TD>
               </TR>
             </TABLE>
           </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end top navegation bar -->
 <!-- blue bar -->
 <TABLE summary="topbar_2" cellspacing="0" cellpadding="0" border="0" align="center"
 width="90%">
   <TR bgcolor="#00ffff">
     <TD><IMG src="../../common/images/transpix.gif" width="1" height=
     "2" alt=""></TD>
   </TR>
 </TABLE>
 <!-- end blue bar -->
 <!-- bottom navegation bar -->
 <TABLE summary="topbar_3" cellspacing="0" cellpadding="0" border="0" align="center"
 width="94%">
   <TR bgcolor="#000000">
     <TD>
       <TABLE summary="topbar_3_links" cellspacing="0" cellpadding="1" border="0" width=
       "100%">
         <TR align="center">
           <TD WIDTH="20%"><A class="nodec" href="../News/index.html"><FONT color=
           "#FFFFFF">News</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Archives/index.html"><FONT color=
           "#FFFFFF">Archives</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Links/index.html"><FONT color=
           "#FFFFFF">Links</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../aboutus.html"><FONT color=
           "#FFFFFF">About LF</FONT></A> </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end bottom navegation bar -->
<!-- stop navegation bar -->

<!-- SSI_INFO -->

<!-- tr_staticssi include virtual -->
<!-- tr_staticssi exec cmd -->
<!-- addedByLfdynahead ver 1.5 --><TABLE ALIGN="right" border=0><TR><TD ALIGN="right"><FONT SIZE="-1" FACE="Arial,Helvetica">This document is available in: <A href="../../English/June2005/article379.shtml">English</a> &nbsp;<A href="../../Francais/June2005/article379.shtml">Francais</a> &nbsp;<A href="../../Turkce/June2005/article379.shtml">Turkce</a> &nbsp;</FONT></TD></TR></TABLE><br>
 


<!-- SSI_INFO STOP -->
<!-- 2pdaIgnoreStop -->

<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_START -->
<TABLE ALIGN="LEFT" BORDER="0" WIDTH="195" summary="about the author" class="left">
<TR>
<TD>

<img src="../../common/images/Guido-S.gif" alt=
    "[Photo of the Author]" height="164" width="173">
<BR>by  Guido Socher <a href="http://linuxfocus.org/~guido/"><font size="1">(homepage)</font></a>
<BR><BR>
<I>About the author:</I><BR>
<!-- aboutauthor_start -->
<p>Guido likes Linux because it is a really good system to
    develop your own hardware.</p>
<!-- aboutauthor_stop -->
<!-- TRANSLATED_TO en -->
<!-- TRANSLATED_TO_STOP -->
<!-- INDEX_START -->
<BR><i>Content</i>:
<UL>
  <LI><A HREF="#379lfindex0">Introduction</A></LI>
  <LI><A HREF="#379lfindex1">The basic electrical design idea</A></LI>
  <LI><A HREF="#379lfindex2">The R-2R ladder</A></LI>
  <LI><A HREF="#379lfindex3">A more detailed design</A></LI>
  <LI><A HREF="#379lfindex4">The final circuit</A></LI>
  <LI><A HREF="#379lfindex5">The limits</A></LI>
  <LI><A HREF="#379lfindex6">Power sources</A></LI>
  <LI><A HREF="#379lfindex7">Testing</A></LI>
  <LI><A HREF="#379lfindex8">The software</A></LI>
  <LI><A HREF="#379lfindex9">Some pictures and ideas</A></LI>
  <LI><A HREF="#379lfindex10">References/Download</A></LI>
  <LI><A HREF="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=379">Talkback form for this article</A></LI>
</UL>

</TD></TR></TABLE>
<!-- INDEX_STOP -->
<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_STOP -->
<!-- HEAD_OF_THE_ARTICLE_START -->
<br>&nbsp;
<table border="0"><tr><td>
<!-- tr_staticssi include virtual -->
<!-- tr_staticssi exec cmd -->
<!-- addedByLfPdf ver 0.1 -->
<TABLE style="border-style:outset; border-width:1px" align="right" bgcolor="#ff9616" cellspacing="1"><TR><TD bgcolor="#ff9616">
        <a href="../Archives/lf-2005_06-0379.pdf"><small>PDF</small></a>
        </TD></TR></TABLE>
         

<H2>A digital DC powersupply</H2>
 <img src="../../common/images2/article379/title_379.jpg" alt="[Illustration]" hspace="10"  width="354" height="173">
<!-- ABSTRACT OF THE ARTICLE -->
<P><i>Abstract</i>:
<P>
<!-- articleabstract_start -->

A very important device for hobby electronic is a
reliable DC powersupply. A proper electronically stabilized
powersupply can easily cost over 150 Euro.
<br>
Using a clever microcontroller based design we can build a power
supply which has more features and is a lot cheaper.

<br><br>
Those readers who are new to this series should first read
<a href="../November2004/article352.shtml">Programming the AVR microcontroller with
GCC</a>.
<br><br>
Don't worry if the printed circuit board looks like it is too complicated
for your home lab. All parts and a properly etched PCBs will again
be available from
<a href="http://shop.tuxgraphics.org/electronic/microcontroller.html">shop.tuxgraphics.org</a>.


    
<!-- articleabstract_stop -->

<br><!-- HR divider --><center><font color="#8282e0"><b>_________________ _________________ _________________</b></font></center><br>
</td></tr></table>
<!-- HEAD_OF_THE_ARTICLE_STOP -->
<!-- BODY_OF_THE_ARTICLE_START -->


    <A NAME="379lfindex0">&nbsp;</A>
<H2>Introduction</H2>

In 2002 I wrote a linuxfocus.org article  about a Microcontroller based
DC powersupply (<a
href="../../English/November2002/article251.shtml">LF
November2002 article251</a>)
The article received a lot of interest as I noticed from emails which
I received on this subject. The design of this powersupply was however
something for advanced hobby electronic fans due to the complexity of the
circuit.

<br>
<br>
So here is now a new design which is less complex but has a lot more
features.
<br>
<ol>
<li>Only cheap and standard components are used.
<li>Only one power source is needed (no separate negative supply voltage for operational
amplifiers)
<li>The display shows pre-set and actual values for voltage and current at the
same time.
<li>You can completely control the powersupply via your PC or you can use it
standalone.
<li>It is very small and very powerful.
</ol>
How was it possible to remove components and add more features? The trick is to
move functionality which was previously based on analog components like operational
amplifiers into the microcontroller. In other words the complexity of the
software and algorithms is higher but hardware complexity is reduced. This
reduces the overall complexity for you as the software can just be copied.
It has also helped that the Atmega8 can do much more than the now phased out
AT90S4433 microcontroller.
<br>
<br>
In this article you will also learn new things about the Atmega8. You have seen
how to use the analog to digital converter. Now we will add a very fast
digital to analog converter which can be useful for a lot of other circuits.
<br>
<br>
In this article we will discuss the hardware and electrical design. There will
then be two more articles where I explain the software. We will also gradually
add more features. However adding those will require only software changes.


    <A NAME="379lfindex1">&nbsp;</A>
<H2>The basic electrical design idea</H2>

I could of course give you just the circuit diagram and some instructions on how
to build it. It will probably work but you will not know how it works. Most
hobby electronic kits are like that.
<br>
<br>
The idea of the <a href="http://shop.tuxgraphics.org">shop.tuxgraphics.org</a>
online shop is however to provide good and free documentation together with the
development kits. In the documentation (e.g this article) we explain really how
things work and why it was designed that way. I find it much more fun to build
something that I understand and I hope you like it too.
<br>
<br>
Let's start with the simplest possible electronically stabilized powersupply.
It consists of 2 basic parts: a transistor and a reference voltage generated
with a Z-diode.
<br>
<center>
<img src="../../common/images2/article379/basicpower_idea.gif" alt="simplest possible building block" width="400" height="306">
</center>
<br>
The output voltage of this circuit is Uref - 0.7V. The 0.7V are approximately
the voltage drop you get between B and E on the transistor. The Z-diode and
the resistor generate a reference voltage which is stable, even if the input
fluctuates and is noisy. The transistor is needed to handle higher currents
than the Z-diode and resistor alone can provide. In this configuration the
transistor just amplifies the current. The current which the resistor and
Z-diode need to provide is output current divided by hfe (hef is a number
which you can lookup in the datasheet of the transistor).
<br>
<br>
What are the problems with this circuit?
<ul>
<li>The transistor will die when there is a short circuit on the output.
<li>It provides only a fixed output voltage.
</ul>
These are quite severe limitations which make this circuit unusable but this
circuit is
still the basic building block of all electronically regulated power supplies.
<br>
<br>
To overcome those problems you need
 some "intelligence" which will regulate the
current on the output and a variable reference voltage. That's all (... and
this makes the circuit much more complex).
<br>
<br>
For the last few decades people have used operational amplifiers to provide this
intelligence. Operational amplifiers can basically be used as analog calculators to
add, subtract, multiply or logically "or" voltages and currents.
<br>
<br>
Today microcontrollers are so fast that all this can easily be done in software.
The beauty is that you get as a side effect a voltmeter and an amperemeter
for free. The control loop in the microcontrollers has to know voltage and
current values anyhow. You just need to display it.
What we need from the microcontroller are:
<ul>
<li>A AD-converter to measure voltage
and current all the time
<li>A DA-converter to send commands to our power transistor (provide the
reference voltage)
</ul>
The problem is that DA-converter needs to be very fast. If there is a short
circuit detected on the output then we must immediately reduce the voltage
on the Basis of the transistor otherwise it will die. Fast means within
milliseconds (as fast as an operational amplifier).
<br>
<br>
The Atmega8 has an AD-converter which is more than fast enough but it has
at first glance no DA-converter. It is possible to use pulse width modulation
and an analog low pass filter to get an DA-converter but this is much too slow
to implement the short circuit protection in software. How to build a fast
DA-converter?


    <A NAME="379lfindex2">&nbsp;</A>
<H2>The R-2R ladder</H2>

There are many ways to build a digital to analog converter but we need a
fast and cheap one which can easily interface to our microcontroller.
There is a DA-converter circuit known as "R-2R ladder". It consists of resistors
and switches only. There are two types of resistors. One with R and one
with twice the value of R.
<br>
<center>
<img src="../../common/images2/article379/r2rladder.gif" alt="r2rladder" width="488" height="424">
</center>
<br>
The above shows a 3 bit R2R-DA-converter. The control logic moves the switches
between GND and Vcc. A digital "1" connects the switch to Vcc and a digital
"zero"
to GND. What does this circuit do? It provides voltages in steps of Vcc/8.
In general the output voltage is Z * (Vcc/(Zmax+1) where Z is the digital
number. In the case  of a 3 bit AD converter this is: 0-7.
<br><br>The inner resistance of the circuit as seen from the output is R.
<br>
<br>
Instead of using separate switches we can connect the R-2R ladder to the
microcontroller output lines. A output pin of the atmega8 can provide
about 10mA but at this current you notice already a voltage drop. We would
like to use the full output range from 0-5V so the load on the output should
be less than 1mA. In other words we build a R-2R ladder with 5K and 10K
resistors.
<br>
<br>
The AD-converter of the Atmega8 has a resolution of 10bit. To use the resolution
completely we need also 10bit for the DA-converter. In other words we need to
find 10 output pins which are not used by anything else. This is a little
challenge as we would also like to have a keyboard, LCD display and I2C serial
interface to the PC but the Atmega8 is quite good. It just fits.

    <A NAME="379lfindex3">&nbsp;</A>
<H2>A more detailed design</H2>

So here is now a more detailed design of the above circuit.
<br>
<center>
<img src="../../common/images2/article379/detailpower_idea.gif" alt="detailed schematic idea" width="400" height="253">
</center>
<br>
I don't want to
disappoint you but it is unfortunately still a circuit which will not be usable.
However it very good to understand the idea which is behind the final circuit.
<br>
So what is wrong with this circuit? There are mainly two things:
<ul>
<li>The DAC (digital to analog converter) can not provide the current to drive
the power transistor
<li>The microcontroller operates at 5V so the maximum output of the DAC is 5V
which means that the maximum output voltage behind the power transistor will be
5-0.7=4.3V .
</ul>
To fix this we must add amplifiers for current and voltage.

    <A NAME="379lfindex4">&nbsp;</A>
<H2>The final circuit</H2>

When adding amplifiers we must keep in mind that those must work with large
signals. Most amplifier design (e.g for audio) is done under the assumption
that the signals will be small compared to the supply voltage. So forget all the
classic books about transistor amplifier design.
<br>
<br>
We could use operational amplifiers but those would require extra positive and
negative supply voltages which we want to avoid.
<br>
<br>
There is also the additional requirement that the amplifier must go from zero
supply voltage to a stable state without generating any output peek. In other
words there must not be any short oscillation or output peek when you switch
on the powersupply.
<br>
<br>
What to do? Well this is not an easy task at all and requires some experience.
I will go with you through the final circuit and do the needed calculations.
<br>
<br>
We start with the power transistor. According to the datasheet the BD245B has
a hfe=20 at 3A output. It will therefore draw about 150mA on the Basis.
To amplify the current (reduce the current needed to drive the circuit) we use
a configuration known as "Darlington transistor". For this we put a BD137
in front. It has a hfe value of 50-100. This will reduce the current needed to
less than 3mA (150mA / 50).
3mA are manageable with small signal transistors like BC547/BC557. Those
 small signal transistors are then very good for building a voltage amplifier.
<br>
<center>
<img src="../../common/images2/article379/voltageamplifier.gif" alt="amplifiers" width="420" height="245">
</center>
<br>
<br>
For 30V output we must at least amplify the 5V from the DAC by a factor of 6.
For this we combine a PNP and an NPN transistor as shown below. The voltage amplification
factor of this circuit is:
<pre class="code">
Vampl= (R10 + R11)/R11
</pre>
The powersupply shall be
available in 2 version: Max 30 output and max 22V output. A combination of 1K
and 5.6K gives a factor of 6.6 which is good for the 30V version. For the 22V
version we use 1K and 4.7K.
<br>
<br>
The inner resistance of the circuit as seen on the Basis of BC547 is:
<pre class="code">
Rin=hfe1 * S1 * R11 * R9 = 100 * 50 * 1K * 47K = 235 MOhm

- hfe is about 100 to 200 for a BC547 transistor
- S is the slope of the amplification curve of a transistor and is
 about 50 [unit=1/Ohm]
</pre>
This is more than high enough for the connection to our DAC which has a inner resistance of 5K.

<br>
<br>
The inner equivalent output resistance is:
<pre class="code">
Rout= (R10 + R11) / (S1 + S2 * R9 * R11) = about 2 Ohm
</pre>
Low enough to drive the following BD137.
<br>
<br>
R9 ties Basis of BC557 to
Emitter which means "off" for the transistor until the DAC and BC547 come up.
R11 and R10 tie the Basis of BD137 initially to ground which shuts the output
Darlington stage down.
<br>
In other words every component in this amplifier stage is initially off.
This means we will not get from those transistors any oscillations or output
peeks at power on.
<br>
<br>
Now you have seen how such a circuit is designed. We need to add some
protection diodes and capacitors to stabilize the circuit and we are done.

<br>
<center>
<a href="../../common/images2/article379/powersupply.gif"><img src="../../common/images2/article379/powersupply_th.gif" alt="final circuit" width="400" height="284"></a>
<br>
The final circuit in big as:
<a href="../../common/src2/article379/powersupply.png">[PNG]</a>
<a href="../../common/src2/article379/powersupply.pdf">[PDF]</a>
<br> The values in square brackets are for the 30V version.

</center>
<br>
The circuit diagram and the board layout file (pcb format) are also
included in the tar.gz package which you can download at the end of
this article.
<br>
<br>
The connector called "Raw DC in" (=CONN6) has 3 pins. Pin 1 is "plus" pin 2 is
"minus" (=GND) and pin 3 should be connected to the earth pin. In other words
"earth" is neither directly connected to GND nor to "plus".

    <A NAME="379lfindex5">&nbsp;</A>
<H2>The limits</H2>

From previous experience I know that most readers would like to
"customize" the circuit a bit. Here is a list of hardware limits
and how to overcome them:
<pre class="code">
78L05: max input voltage 30V, the ZD8.2 extends this limit
       to about 38V. Using a different Z-diode you can extend this
       a bit. I would not go beyond 45V.
       The max output voltage should be at least 2V lower than
       the input voltage.

BD245B: 10A 80W, The 80W are however at a temperature of 25'C
        In other words add a safety margin and calculate with 60W-70W:
        (Max input voltage * Max current) &lt; 70W

        You can add a second BD245B to go up to 120W. To ensure
        that the current distributes equally add a 0.22 Ohm resistor
        into the Emitter line of each BD245B.
        The same circuit and board can be used. Mount the transistors
        on a proper aluminum cooler and connect them with short
        wires to the board.

Current measurement shunt:
        This is a 0.5 or 0.55 Ohm resistor with 6W. This is good enough
        for about 3A of output (Iout^2 * 0.55 &lt;= 6W). Use a resistor
        with more watts for higher currents.
</pre>

    <A NAME="379lfindex6">&nbsp;</A>
<H2>Power sources</H2>

You can either use a transformer, rectifier and big capacitors or
you can try to get a  32/24V laptop powersupply.
I went for the later option. Those laptop powersupply "bricks" are
sometimes sold very cheap (over stock) and some of them provide
70W at 24V or even 32V DC.
<br>
<br>
Most people will probably go for a transformer because those are
very easy to get.

<pre class="code">
22V 2.5A version:  you need a 18V 2.5A transformer, a rectifier
                   and a 3000uF capacitor. (reason: 18 * 1.4 = 25V,
                                            at least 1000uF per ampere)

30V 2A version:    you need a 24V 2A transformer, a rectifier and
                   a 2200uF capacitor. (reason: 24 * 1.4 = 33.6V,
                                        at least 1000uF per ampere)

It does not harm to buy a transformer which can provide more ampere.

A power diodes bridge with 4 diodes which are specified for a
low volatage drop (e.g BYV29-500) gives a good
rectifier.
</pre>
Note that the above dimensioning is not meant for permanent maximum
power output (reason: 22*2.5 &gt; 18*2.5). There is no problem to use
the maximum power for 10-20min. The transformer will get a bit warm
but that is only for a short time. If you want max power output not only
for peak current but over hours and days then limit the max output
current or voltage in the hardware_settings.h file.
<br>
<br>
You can also
use a "heavier" transformer but be aware that the upper limit is
given by the power transistor. Formula:
<pre class="code">
VotageOfTransformer * 1.4 * MaxCurrent &lt; 70W
</pre>
The 70W is Ptot of BD245 minus 10W savety margin.
<br>
<br>
Check your circuit for proper insulation. Make sure that it is <b>not</b> possible to
touch any part that may carry 110V/230V even when the case it open.
Connect all metal parts of the chassis to earth (not to GND of the circuit).

    <A NAME="379lfindex7">&nbsp;</A>
<H2>Testing</H2>

When you have soldered everything together then do not insert the
microcontroller into the socket yet. Do some basic tests first.
<br><br>Test1:
Connect some powersupply (at least 15V) to the power input of the circuit and
check that you get 5V DC behind the voltage regulator.
<br><br>
Test2: Measure the output voltage. It should be 0V.
<br><br>
Test3: Connect pin 7 and pin 26 on the microcontroller with a wire (no
microcontroller in the socket). You should get on the output a couple of
volts less than what is used at DC input. Remove the wire and the output
should go back to zero. Be sure to not cause any short circuit on the output.
<br><br>
Insert the microcontroller and load the LCD test software by running the
commands in the directory of the unpacked digitaldcpower tar.gz package.
<pre class="code">
make lcdtest
make lcdtestload
</pre>
You should see "ok works" on the display.
<br><br>
Now you can load the final software as described above.

<p>A word of warning for further testing with the final software: Be careful with
short
circuits until you have tested the current limitation function. A save way to
test the current limitation is to use a low Ohm resistor, e.g a car bulb.
Set a low current limit, e.g 30mA at 10V. You should see the voltage
going down immediately
to almost zero once you connect the bulb on the output. There is still fault
in the wiring if it does not go down. The car bulb will protect the power
supply circuit even if there is a fault as it is not a full short circuit.</p>

    <A NAME="379lfindex8">&nbsp;</A>
<H2>The software</H2>

For the curious ones I have included a quite long description of each
.c file in the README file of the digitaldcpower tar.gz package.
The code contains also plenty of comments.
Otherwise I plan to write  more articles which will just explain
the software part. This article is already quite long and you need to
build the hardware first.
<br>
<br>
I will also add gradually more features with the coming articles:
<ul>
<li>You will be able to store the settings (voltage and current limit) so that
the powersupply comes up the the same settings after the next power on.
<li>You will be able to control the powersupply from you linux PC via the
rs232 connector.
</ul>

Now you want to know how the use the software and how to load
it. <br>Unpack the digitaldcpower tar.gz package and "cd" into the directory
that is created.

<br>
Edit the file hardware_settings.h and adjust it according to the hardware.
Here you can also do calibrations of voltmeter and amperemeter. The file
is well commented.
<pre class="code">
gedit hardware_settings.h
</pre>

Connect the programmer cable and power on the circuit.
Then run:
<pre class="code">
make wrfuse4mhz

This will set the clock frequency of the microcontroller to 4MHz. The
software is designed for this frequency.

make

This will compile the software.

make load

This will load the software.
</pre>


    <A NAME="379lfindex9">&nbsp;</A>
<H2>Some pictures and ideas</H2>

Here are some pictures from the powersupply which I have build.
Pictures are sometimes much better than long description especially when
it comes to hardware and mechanical parts.

<br>
<br>
<br>
<br>
<center>
<img src="../../common/images2/article379/ddcp1.jpg" alt="ddcp1" width="370" height="306">
<br>You can build a simple but professionally looking case from an
aluminum sheet and two wooden boards.
</center>
<br>
<br>
<center>
<img src="../../common/images2/article379/ddcp2.jpg" alt="ddcp2" width="370" height="333">
<br>Just bend the aluminum twice. This is easy to do even without
professional equipment.
</center>
<br>
<br>
<center>
<img src="../../common/images2/article379/pcbs.jpg" alt="pcbs" width="370" height="318">
<br>The two printed circuit boards. The smaller one is for the keyboard.
</center>
<br>
<br>
<center>
<img src="../../common/images2/article379/ddcp3.jpg" alt="ddcp3" width="370" height="212">
<br>Mark the positions of the push buttons on the case before you
solder the buttons onto the board. This makes it easy to drill the
holes at the right position.
</center>
<br>

<br>
<center>
<img src="../../common/images2/article379/ddcp4.jpg" alt="ddcp4" width="370" height="278">
<br>The circuit. Very small, feature rich and powerful.
</center>
<br>

<br>
<center>
<img src="../../common/images2/article379/ddcp5.jpg" alt="ddcp4" width="370" height="322">
<br>The final powersupply.
</center>
<br>
<br>
Have fun! ... and there will be more fun because this hardware can do much
more...

    <A NAME="379lfindex10">&nbsp;</A>
<H2>References/Download</H2>


    <ul>
      <li><a href="../../common/src2/article379/index.html">Download page</a> for this article (updates
and corrections will also be available from here).
      </li>

      <li>How to program the atmega8 with gcc: <a href=
      "../November2004/article352.shtml">November2004 article
      352</a></li>

      <li>Datasheet for the Atmega8: go to http://www.atmel.com/
      and select products-&gt;Microcontrollers -&gt;AVR-8 bit
      RISC-&gt;Documentation-&gt;datasheets <br><a href=
      "../../common/src2/article365/atmega8.pdf">(local copy, pdf,
      2479982 bytes)</a></li>

      <li><a href=
      "http://www.tuxgraphics.org/electronics/">Tuxgraphics electronics section</a>, a collection of all articles in this series.</li>

      <li><a href=
      "http://shop.tuxgraphics.org/electronic/microcontroller.html">Tuxgraphics
online shop, microcontroller section</a>, You can order all parts (transistors,
passive components, LCD display, PCB, microcontroller, ...) from here.</li>


    </ul>
    <!-- vim: set sw=2 ts=2 et tw=80: -->
  



<!-- BODY_OF_THE_ARTICLE_STOP -->
<!-- 2pdaIgnoreStart -->
<A NAME="talkback">&nbsp;</a>
<h2>Talkback form for this article</h2>
Every article has its own talkback page. On this page you can submit a comment or look at comments from other readers:
<center>
    <table width="250" border=0><tr><td>
    <div class="tbbutton"><A class="nodec" href="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=379">&nbsp;talkback page&nbsp;</a></div>
    </td></tr></table>
</center>

<br clear="all">
<HR size="2" noshade>
<table width="250" border=0><tr><td>
<div class="bbutton"><a class="nodec" href="../../index.shtml">&lt;--, LF Home</a></div>
</td><td>
<div class="bbutton"><a class="nodec" href="index.shtml">Go to the index of this issue</a></div>
</td></tr></table>
<br clear="all">
<HR size="2" noshade>
<!-- ARTICLE FOOT -->
<CENTER><TABLE WIDTH="98%" summary="footer">
<TR><TD ALIGN=CENTER BGCOLOR="#bdc6d5" WIDTH="50%">
<A HREF="../../common/lfteam.html">Webpages maintained by the LinuxFocus Editor team</A>
<BR><FONT COLOR="#1111aa"><a href="../../common/copy.html">&copy; Guido     Socher</a><br>&quot;some rights reserved&quot; see <a href="../../license/index.shtml">linuxfocus.org/license/</a><br><a href="http://www.linuxfocus.org">http://www.LinuxFocus.org</a></FONT>
</TD>
<TD BGCOLOR="#bdc6d5">
<!-- TRANSLATION INFO -->
<font size=2>Translation information:</font>
<TABLE summary="translators">
  <tr><td><font size="2">en --&gt; -- : Guido Socher (<a href="http://linuxfocus.org/~guido/"><font size="1">homepage</font></a>)</font></td></tr>
</TABLE>
</TD>
</TR></TABLE></CENTER>
<p><font size=1>2006-02-25, generated by lfparser version 2.52</font></p>
<!-- 2pdaIgnoreStop -->
</BODY>
</HTML>

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
 <META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <META NAME="GENERATOR" CONTENT="lfparser_2.52">
 <META NAME="LFCATEGORY" CONTENT="Applications">
 <link rel="icon" href="../../common/images/lf-16.png" type="image/png">
 <TITLE>lf372, Applications: Bayonne: the opensource project inside phone and IVR services</TITLE>
<style type="text/css">
<!--
 td.top {font-family: Arial,Geneva,Verdana,Helvetica,sans-serif; font-size:12 }
 pre { font-family:monospace,Courier }
 pre.code { font-family:monospace,Courier;background-color:#aedbe8; }
 p.cl { color:#EE9500 }
 table.left { margin-right:0.3cm }
 a.nodec { text-decoration:none }
 p.trans { font-size:8pt; text-align:right }
 p.clbox { width:50%; alignment:center; background-color:#FFD700; 
           border-style:none; border-width:medium; border-color:#FFD700; 
           padding:0.5cm;  text-align:center }
 p.code { width:80%; alignment:center; background-color:#aedbe8; 
          border-style:none; border-width:medium; border-color:#aedbe8; 
          padding:0.1cm;  text-align:left }
 p.foot { background-color:#AAAAAA; color:#FFFFFF; border-style:none; 
          border-width:medium; border-color:#AAAAAA; padding:0.5cm ; 
          margin-top:0.1cm; margin-right:1cm; margin-left:1cm; 
          text-align:center }
 div.tbbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   margin: 2px 5px 2px 5px;
   text-align: center;
   width: 20em;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
 div.bbutton {
   background: #ddd;
   border-right: 1px solid #aaa;
   border-bottom: 1px solid #aaa;
   float: left;
   margin: 2px 5px 2px 5px;
   text-align: center;
   line-height: 1.2em;
   padding: 2px;
   font-size: 12px;
   white-space: nowrap;
   color: #555;
 }
-->
</style>
 
</HEAD>
<BODY bgcolor="#ffffff" text="#000000">
 <!-- this is generated html code. NEVER use this file for your
 translation work. Instead get the file with the same article number
 and .meta.shtml in its name. Translate this meta file and then
 use lfparser program to generate the final article -->
 <!-- lfparser can be obtained from http://main.linuxfocus.org/~guido/dev/lfparser.html -->

<!-- this is used by a number of tools:
 =LF=AUTHOR: Luca Bariani
 =LF=CAT___: Applications
 =LF=TITLE_: Bayonne: the opensource project inside phone and IVR services
 =LF=NUMBER: 372
 =LF=ANAME_: article372.shtml
 =LF=PARSER: 2.52
 -->

<!-- 2pdaIgnoreStart -->

<!-- start navegation bar, current, style=2 -->
 <!-- top navegation bar -->
 <TABLE summary="topbar_1" cellspacing="0" cellpadding="0" border="0" align="center" width="90%">
   <TR bgcolor="#2e2292">
     <TD class="top"><TABLE summary="topbar_1_logo" cellspacing="0" cellpadding="0" border="0" width=
       "100%">
         <TR><TD width="319"><a href="../../index.shtml"><IMG src="../../common/images/logolftop_319x45.gif"
           alt="[LinuxFocus-icon]" width="319" height="45" align="left" 
           border="0"></a></TD>

           <TD class="top">
             <TABLE summary="topbar_1_links" width="100%">
               <TR align="right">
                 <TD class="top">
                 
                 <A class="nodec" href="../../index.shtml"><FONT color=
                 "#DDDDDD" size="2">&lt;--</FONT></A> &nbsp;| 
                 <A class="nodec" href="../map.html"><FONT color=
                 "#DDDDDD" size="2">Map</FONT></A> &nbsp;| 
                 <A class="nodec" href="../indice.html"><FONT color=
                 "#DDDDDD" size="2">Index</FONT></A> &nbsp;| 
                 <A class="nodec" href="../Search/index.html"><FONT color=
                 "#DDDDDD" size="2">Search</FONT></A> </TD>
                 
               </TR>

               <TR align="right">
                 <TD class="top">
                   <HR width="100%" noshade size="1">
                 </TD>
               </TR>
             </TABLE>
           </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end top navegation bar -->
 <!-- blue bar -->
 <TABLE summary="topbar_2" cellspacing="0" cellpadding="0" border="0" align="center"
 width="90%">
   <TR bgcolor="#00ffff">
     <TD><IMG src="../../common/images/transpix.gif" width="1" height=
     "2" alt=""></TD>
   </TR>
 </TABLE>
 <!-- end blue bar -->
 <!-- bottom navegation bar -->
 <TABLE summary="topbar_3" cellspacing="0" cellpadding="0" border="0" align="center"
 width="94%">
   <TR bgcolor="#000000">
     <TD>
       <TABLE summary="topbar_3_links" cellspacing="0" cellpadding="1" border="0" width=
       "100%">
         <TR align="center">
           <TD WIDTH="20%"><A class="nodec" href="../News/index.html"><FONT color=
           "#FFFFFF">News</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Archives/index.html"><FONT color=
           "#FFFFFF">Archives</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../Links/index.html"><FONT color=
           "#FFFFFF">Links</FONT></A> </TD>
           <TD WIDTH="5%"><FONT color="#FFFFFF">|</FONT> </TD>
           <TD WIDTH="20%"><A class="nodec" href="../aboutus.html"><FONT color=
           "#FFFFFF">About LF</FONT></A> </TD>
         </TR>
       </TABLE>
     </TD>
   </TR>
 </TABLE>
 <!-- end bottom navegation bar -->
<!-- stop navegation bar -->

<!-- SSI_INFO -->

<!-- tr_staticssi include virtual -->
<!-- tr_staticssi exec cmd -->
<!-- addedByLfdynahead ver 1.5 --><TABLE ALIGN="right" border=0><TR><TD ALIGN="right"><FONT SIZE="-1" FACE="Arial,Helvetica">This document is available in: <A href="../../English/April2005/article372.shtml">English</a> &nbsp;<A href="../../ChineseGB/April2005/article372.shtml">ChineseGB</a> &nbsp;<A href="../../Deutsch/April2005/article372.shtml">Deutsch</a> &nbsp;<A href="../../Francais/April2005/article372.shtml">Francais</a> &nbsp;<A href="../../Italiano/April2005/article372.shtml">Italiano</a> &nbsp;</FONT></TD></TR></TABLE><br>
 


<!-- SSI_INFO STOP -->
<!-- 2pdaIgnoreStop -->

<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_START -->
<TABLE ALIGN="LEFT" BORDER="0" WIDTH="195" summary="about the author" class="left">
<TR>
<TD>

<IMG SRC="../../common/images2/LucaBariani.jpg" ALT="[Photo of the Author]" width="190" height="322">
<BR>by  Luca Bariani <br> <small>&lt;lucabariani /at/ ferrara.linux.it&gt;</small>
<BR><BR>
<I>About the author:</I><BR>
<!-- aboutauthor_start -->
<P>I was born in Ferrara (Italy) in 1977, I graduated in Ferrara in 2002
with an electronical and engineering degree. I'm a member of Ferrara Linux
User Group and GNU Bayonne's group. I develop IVR and Sms phone services. Inside GNU Bayonne's project I'm writing some documentation and articles, I talk about Bayonne in some opensource meetings and manage the italian website <a href="http://bayonne.it">bayonne.it</a>.
</P>
<!-- aboutauthor_stop -->
<!-- TRANSLATED_TO en -->
<!-- TRANSLATED_TO_STOP -->
<!-- INDEX_START -->
<BR><i>Content</i>:
<UL>
  <LI><A HREF="#372lfindex0">IVR systems and services</A></LI>
  <LI><A HREF="#372lfindex1">Bayonne</A></LI>
  <LI><A HREF="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=372">Talkback form for this article</A></LI>
</UL>

</TD></TR></TABLE>
<!-- INDEX_STOP -->
<!-- SHORT_BIO_ABOUT_THE_AUTHOR_AND_INDEX_STOP -->
<!-- HEAD_OF_THE_ARTICLE_START -->
<br>&nbsp;
<table border="0"><tr><td>
<!-- tr_staticssi include virtual -->
<!-- tr_staticssi exec cmd -->
<!-- addedByLfPdf ver 0.1 -->
<TABLE style="border-style:outset; border-width:1px" align="right" bgcolor="#ff9616" cellspacing="1"><TR><TD bgcolor="#ff9616">
        <a href="../Archives/lf-2005_04-0372.pdf"><small>PDF</small></a>
        </TD></TR></TABLE>
         

<H2>Bayonne: the opensource project inside phone and IVR services</H2>
 <IMG SRC="../../common/images2/article372.jpg" ALT="[Illustration]" HSPACE=10 width="376" height="215">
<!-- ABSTRACT OF THE ARTICLE -->
<P><i>Abstract</i>:
<P>
<!-- articleabstract_start -->
<p>
Bayonne is the IVR and phone server of the GNU project, therefore a free and opensource software.
<br><br>
IVR stands for Interactive Voice Response. An IVR system interfaces the computer world with phone networks (with proper hardware) and can interact with commands received through them (tone signals by keys pressed or, sometimes, true voice commands). IVR systems allow for ythe creation and management of completely automated phone services with no human operator.
</p>
<!-- articleabstract_stop -->

<br><!-- HR divider --><center><font color="#8282e0"><b>_________________ _________________ _________________</b></font></center><br>
</td></tr></table>
<!-- HEAD_OF_THE_ARTICLE_STOP -->
<!-- BODY_OF_THE_ARTICLE_START -->


<A NAME="372lfindex0">&nbsp;</A>
<H2>IVR systems and services</H2>



  <p>As of today, everyone has made a phone call to an IVR system at least once (maybe without being aware of that). In fact they are used by every telephone company (mobile or not) for their own call centres or service centres. Just think how many times you have listened to automatic and recorded voices for choosing from a menu some service, or before being switched to a human operator). IVR servers can interact in different ways with local and remote resources, and also access filesystems, databases, networks and so on... so IVR systems can be easily integrated into pre-existing systems or be part of distributed systems.
  </p>
  <p>
  With IVR systems a lot of phone services can be created and used, some examples follow:
  <ul>
    <li> Answering service: a basic phone service, it is usually implemented with simpler and cheaper systems than IVR ones, nevertheless using an IVR system  a lot of possibilities and customizations become available:
    <ul>
      <li> we can manage different voice boxes for different users;
      <li> we can manage a remote user authentication;
      <li> we can add a notification (with email or anything else) for every received message;
      <li> we can transfer the voice messages to a remote server (through internet and/or email).
    </ul>
    <li> On-line updates on highly dynamic information: IVR systems can handle dynamic informations which change day by day or hour by hour. This allows creation of information phone services, e.g. stock price list, the latest news, weather information and forecast, daily special offers for supermarkets and shops....
    <li> On-line catalogue browsing: IVR systems can easily interface to Databases and other data sources (local or remote), so we can easily create catalogue services (e.g. for books, films, CDs, magazines and so on). Selecting category, cost and whatever else we need to, users can get lists and information about all selected items.
    <li> Booking and purchasing services: using databases and other dynamic data sources IVR systems can offer booking and purchasing for services and goods, e.g. booking a cinema ticket or a film in a rent store, the purchasing of a good a book or a DVD. A catalogue can be included (see previous point), as well as payment by credit cards or other kinds of money (see next point).
    <li> Payment services: in every country there are several kind of phone numbers with different costs for users:
    <ul>
      <li> "normal phone numbers": calling cost depends on the phone company, caller areas and calling time (these are the numbers which usually everyone has at home or office);
      <li> "free phone numbers": with no calling costs for the user (these numbers are often used by phone company's call centres);
      <li> "pay phone numbers": the calling cost is chosen by the phone provider and, usually, is higher than for "normal phone number"; cost can depend on calling time or be a fixed amount.
    </ul>
    With "pay phone numbers" IVR systems can offer phone services including user's payment, so we can sell goods and informations without credit cards or electronic money transactions.
    <li> Event notification: IVR systems are bidirectional: they can both receive and make phone calls; making automatic and programmed calls, IVR system can notify about events through phone lines (e.g. appointments, meetings, expiring times, alarms for some important cases...).
  </ul>
  </p>
  <p>
  IVR systems work on phone lines using audio for input from and output to the user, allowing a very easy integration with vocal systems like TTS (Text To Speech: audio synthesizer that converts written text to a vocal speech) and ASR (Asynchronous Speech Recognition: vocal analyser that converts human speech to written text). The firsts enable IVR systems to have vocal output from written text and not from pre-recorded voices only; the latters enable IVR systems to recognize vocal commands from input voice.
  </p>
  <p>
  With TTS and ASR systems we can have more phone IVR services:
  <ul>
    <li>  Vocal electronic email: our email server receives a normal message, TTS converts it to an audio file and (after proper authentication) can by listened by the user with a phone call to the IVR system.
    <li> Advanced answering service: ASR can improve the answering service described above with speech conversion from the voice received by phone network to a text than can be easily sent via email, put on a web server or whatever else is needed.
    <li> Phone services for deaf and/or dumb people: we can make phone network and phone services available to people who usually cannot access them because they have are handicaped:
    <ul>
      <li> dumb people can use a normal keyboard to write a text converted by a TTS system and placed on the phone network by IVR;
      <li> deaf people can receive a voice phone call through IVR, have it converted by an ASR system to a text and displayed on a display;
      <li> above solutions can be combined for people that are both deaf and dumb, allowing them to make and receive phone calls.
    </ul>
  </ul>
  </p>
  <p>
  Generally speaking, an IVR system can offer on phone network every service and every piece of information offered by a web server on a usual web site. Lots of services and possibilities can therefore be made available through IVR systems. But IVR systems can offer more: phone network and channels are bidirectional, so IVR systems can have services that call users directly (web services cannot have this feature).</p>




  <A NAME="372lfindex1">&nbsp;</A>
<H2>Bayonne</H2>


    <p>For a long time IVR systems have been a monopoly of closed, not free software solutions by some IVR board vendors. Each of them developed IVR servers for their own hardware; Bayonne is the answer of the opensource world and of the GNU Project to this situation.</p>

    <p>Main and official Bayonne's website is <a href="http://www.gnu.org/software/bayonne">www.gnu.org/software/bayonne</a> where you can find sources and documentation (installation and administration manuals, lots of examples and some HowTos). On <a href="http://bayonne.sourceforge.org">bayonne.sourceforge.org</a> there are references to external resources and the latest developer snapshot.  Bayonne has a public (read only) CVS access for its sources: on savannah.org the 1.2 version (the currently stable version for production applications) is available, while on sourceforge.org the 1.3/2.0 version (the developer and experimental one) can be found.</p>

    <p>The main purpose and characteristic of Bayonne is to offer a virtual IVR platform that is independent of the used hardware. As a matter of fact Bayonne can work with several IVR board families (not all of them yet) without needing any of them. For every IVR board family and/or vendor Bayonne features a modular driver which defines a common set of instructions and a virtual environment, for general use and without any hardware references. Within this virtual environment we can develop our IVR services without being aware of the used hardware;  therefore changing IVR board or porting an IVR service to another system with a different board does not require any change in the service code. </p>

    <p>As already stated Bayonne supports several boards, also very different ones, from 2 to 120 phone lines (analogic or digital). Moreover, Bayonne can use more boards of the same family at the same time (in the new Bayonne version we can even use board of different families at the same time), so hundred of different phone lines can be handled simultaneously. Unfortunately Bayonne doesn't support usual serial/USB modems (analog, ISDN or GSM).</p>

    <p>To give Bayonne a try, or in general for tests, we don't need any expensive IVR board. Actually we just need a sound card as Bayonne provides a driver which emulates an IVR board and involves I/O  with PC's keyboard, microphone and speakers: Bayonne can be run on your desktop PC.</p>

    <p>In order to create IVR services, Bayonne has its own scripting language, namely CcScript (an external component for version 1.2, integrated in the main package for the developing version 1.3/2.0). This language is very simple, with complete computational features and main programming structures: conditional blocks, loops, conditioned or unconditioned jumps, subroutines....
    A main feature of CcScript is to have "time bounded" instructions: before an instruction is executed the language knows its maximum execution time. For operations which involve external systems like filesystems, databases and network connections there is a timeout parameter, if the execution time exceeds the timeout, the operation fails. From the server point of view this feature is very important because it allows Bayonne to offer deterministic and reliable services.</p>

    <p>Bayonne's computational capabilities are not limited to CcScript's ones at all. Actually Bayonne can interact with high level languages like Perl and Python without any problem. By means of this direct integration Bayonne inherits all libraries and modules available for these languages: every computational operation, usual and unusual algorithm, data manipulation, connection to database or external server (web, email, LDAP, file sharing)... So Bayonne can compute everything that can be required.</p>

    <p>Even without Perl and Python, Bayonne can have direct connections to MySql and Postgres databases and SQL query within CcScript itself. In the same way Bayonne can access filesystem and connect via network to remote resources. Furthermore, Bayonne can directly interact with voice synthesizer TTS like Flite, Theta (only English voices available) and Festival (multilingual). Bayonne cannot currently connect to speech recognition systems, but this feature is in development status.</p>

    <p>For the most part of IVR services, Bayonne does not need any external Text To Speech systems as it has its own multilingual vocal modules (English, French, Italian, Russian) which can speak numbers (ordinals and cardinals), dates and times (these modules and audio are completely customizable). These vocal modules include human pre-recorded voices and can be used to realize most IVR phone services directly within Bayonne's framework. </p>

    <p>Bayonne can manage inputs from phone connections and inputs from the system itself in several ways: synchronous management, where Bayonne waits for a well known input (e.g. waits for a key pressed by users), and asynchronous management, where Bayonne receives a notification when a well known event happens (e.g. a key pressed or a timeout expired) without waiting for it explicitly. These two input management modes allow Bayonne to react quickly to user and system events without any waste of time.</p>

    <p>As already stated Bayonne has been developed to manage a lot of phone lines at the same time, so it features commands and instructions for multithreading management. Every thread can interact with others by means of signals. This allows thread synchronization and data exchange between threads and, furthermore, connecting each other two threads which use different phone lines (so e.g. two users can talk to each other through Bayonne).</p>

    <p>All these features allow Bayonne to be useful in a wide range of situations. It can be used for little IVR phone services with few phone lines, as well as for big service centres handling hundreds of lines. With Bayonne we can easily have "fast and simples" services or complex services involving also external systems. So Bayonne is the right IVR server for every need of IVR services.</p>


    
    
<!-- vim: set sw=2 ts=2 et : -->

<!-- BODY_OF_THE_ARTICLE_STOP -->
<!-- 2pdaIgnoreStart -->
<A NAME="talkback">&nbsp;</a>
<h2>Talkback form for this article</h2>
Every article has its own talkback page. On this page you can submit a comment or look at comments from other readers:
<center>
    <table width="250" border=0><tr><td>
    <div class="tbbutton"><A class="nodec" href="http://cgi.linuxfocus.org/cgi-bin/lftalkback?anum=372">&nbsp;talkback page&nbsp;</a></div>
    </td></tr></table>
</center>

<br clear="all">
<HR size="2" noshade>
<table width="250" border=0><tr><td>
<div class="bbutton"><a class="nodec" href="../../index.shtml">&lt;--, LF Home</a></div>
</td><td>
<div class="bbutton"><a class="nodec" href="index.shtml">Go to the index of this issue</a></div>
</td></tr></table>
<br clear="all">
<HR size="2" noshade>
<!-- ARTICLE FOOT -->
<CENTER><TABLE WIDTH="98%" summary="footer">
<TR><TD ALIGN=CENTER BGCOLOR="#bdc6d5" WIDTH="50%">
<A HREF="../../common/lfteam.html">Webpages maintained by the LinuxFocus Editor team</A>
<BR><FONT COLOR="#1111aa"><a href="../../common/copy.html">&copy; Luca Bariani</a><br>&quot;some rights reserved&quot; see <a href="../../license/index.shtml">linuxfocus.org/license/</a><br><a href="http://www.linuxfocus.org">http://www.LinuxFocus.org</a></FONT>
</TD>
<TD BGCOLOR="#bdc6d5">
<!-- TRANSLATION INFO -->
<font size=2>Translation information:</font>
<TABLE summary="translators">
  <tr><td><font size="2">en --&gt; -- : Luca Bariani <small>&lt;lucabariani /at/ ferrara.linux.it&gt;</small></font></td></tr>
</TABLE>
</TD>
</TR></TABLE></CENTER>
<p><font size=1>2005-04-01, generated by lfparser version 2.52</font></p>
<!-- 2pdaIgnoreStop -->
</BODY>
</HTML>

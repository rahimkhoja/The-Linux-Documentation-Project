%!PS-Adobe-3.0
%%Title: QuickRefCard-Both-Pages.p65
%%Creator: PageMaker 6.5
%%CreationDate:  9-18-2000, 13:33:13
%%For: dave
%%Pages: (atend)
%%PageOrder: Special
%%BoundingBox: 0 0 792 612
%%ALDBoundingBox: 0 0 792 612
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%CMYKCustomColor: (atend)
%%DocumentCustomColors: (atend)
%%DocumentProcessColors: (atend)
%ADBDocumentInks: (atend)
%ADBDocumentMultiInkColors: (atend)
%%DocumentPrinterRequired: () (Acrobat Distiller)
%ALDOriginalFile: H:\LinuxSecurity\QuickRefCard\QuickRefCard-Both-Pages.p65
%%EndComments
%%BeginProlog
%%BeginResource: procset P65PS_PS 1.0 1%%Copyright: Copyright (C) 1996 Adobe Systems, Inc.  All Rights Reserved.%%Version: 1.0 1 %%%/setpacking where{pop currentpacking true setpacking}if userdict/P65PS 454dict dup begin userdict/P65PS known{/$MetalHead P65PS def}{/$MetalHeadcurrentdict def}ifelse/P65PS currentdict def put/bdef{bind def}bind def/xdef{exch def}bdef/ldef{load def}bdef/ndef{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdef/MakeReadOnlyArray{/packedarray where{pop packedarray}{array astore readonly}ifelse}bdef/T true def/F false def/q`65[currenttransfer]cvx def/PSScreen[currentscreen]cvx def/PSsetgray systemdict/setgray get def/_PSdef matrix def/_WCmtx matrix def/_LPmtx matrix def/bse^65{0 0 transformround exch round exch itransform translate}bdef/j`65{_PSdef currentmatrix pop}bdef/ps$65{gsave scale _WCmtx currentmatrix pop grestore scale}bdef/k`65{_LPmtx currentmatrix pop}bdef/l`65{_LPmtx setmatrix}bdef/m`65{{90 rotate pop 0exch neg translate}{-90 rotate neg 0 translate pop}ifelse}bdef/L2L65{1 dictbegin/PageSize[currentpagedevice/PageSize get aload pop exch]def currentdictend setpagedevice gsave 90 rotate neg 0 exch translate pop j`65 grestore}bdef/p`65{dup length 2 add array cvx dup 3 -1 roll 2 exch putinterval dup 0 4 -1roll put dup 1/exec load put}bdef/db65{exch dup length 2 add array cvx dup 3-1 roll 2 exch putinterval dup 0 4 -1 roll put dup 1/exec load put}bdef/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat systemdict/setrgbcolor get exec pop}ndef/setcustomcolor{1 index dup dup4 get(Red)eq 3 1 roll 4 get(Green)eq exch 4 get(Blue)eq or or not level2 and{exch[exch/Separation exch dup 4 get exch/DeviceCMYK exch 0 4 getinterval[exch/dup load exch cvx{mul exch dup}/forall load/pop load dup]cvx]setcolorspacesetcolor}{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ifelse}ndef/setprocesscolor{exch aload pop pop 4{4 index mul 4 1 roll}repeatsetcmykcolor pop}ndef/sethificolor{exch aload length 4 sub{pop}repeat 4{4index mul 4 1 roll}repeat setcmykcolor pop}ndef/findrgbcolor{4MakeReadOnlyArray}ndef/findlabcolor{6 MakeReadOnlyArray}ndef/finddefcolor{6MakeReadOnlyArray}ndef/finddefgcolor{7 MakeReadOnlyArray}ndef/findcmykcustomcolor{5 MakeReadOnlyArray}ndef/findcmykprocesscolor{5MakeReadOnlyArray}ndef/findhificolor{exch dup dup 4 2 roll 2 mul 7 add 2 rollmark exch 2 mul 7 add 1 roll{1 index type/stringtype ne{exit}if 2MakeReadOnlyArray counttomark 1 add 1 roll counttomark 3 add mark exch 1 rollcounttomark 1 add -1 roll pop}loop counttomark 1 add 4 roll counttomark 1 add-1 roll pop exch 5 add MakeReadOnlyArray}ndef/newcmykcustomcolor{6MakeReadOnlyArray}ndef/setoverprint{pop}ndef/currentoverprint{false}ndef/setseparationgray{level2{[/Separation(All)/DeviceCMYK{dup dup dup}]setcolorspace 1 exch sub setcolor}{PSsetgray}ifelse}ndef/colorexists false def/proc1 null def/proc2 null def/newproc null def/level2/languagelevel where{poplanguagelevel 1 ne}{false}ifelse def/v2`65{/colorexists xdef}def/j2`65{setcustomcolor}bdef/setpaintrgbcolor{exch aload pop pop 4 -1 roll 3{dup dup 6-1 roll mul exch sub 1 add exch}repeat pop setrgbcolor}bdef/setpaintdefcolor{exch aload pop pop 5 -1 roll dup type/arraytype eq{dup/_curcolorspace xdef}{pop _curcolorspace}ifelse setcolorspace 4 -1 roll dup _curcolorintent eq{pop}{dup/_curcolorintent xdef SetColorRendering}ifelse 4 -1 roll 3{dup dup 6 -1roll mul exch sub 1 add exch}repeat pop setcolor}bdef/setpaintlabcolor{exchaload pop pop 5 -1 roll dup type/arraytype eq{dup/_curcolorspace xdef}{pop_curcolorspace}ifelse setcolorspace 4 -1 roll dup _curcolorintent eq{pop}{dup/_curcolorintent xdef SetColorRendering}ifelse 4 -1 roll 1 exch sub dup 4index 100 exch sub mul 5 -1 roll add 4 1 roll dup 3 index 0 exch sub mul 4 -1roll add 3 1 roll 1 index 0 exch sub mul add setcolor}bdef/setpaintdefgcolor{exch aload pop pop 6 -1 roll dup type/arraytype eq{dup/_curcolorspace xdef}{pop _curcolorspace}ifelse setcolorspace 5 -1 roll dup _curcolorintent eq{pop}{dup/_curcolorintent xdef SetColorRendering}ifelse 4{4 index mul 4 1 roll}repeat setcolor pop}bdef/k2`65{setprocesscolor}bdef/y2`65{sethificolor}bdef/l2`65{F setoverprint 1 exch sub setseparationgray pop}bdef/m2`65{pop pop}bdef/n2`65{null eq{pop pop/m2`65 load def false def}{null eq{pop/l2`65 load def}{dup _process eq{pop/k2`65 load def}{dup _spot eq{pop/j2`65 load def}{dup _rgbeq{pop/setpaintrgbcolor load def}{dup _lab eq{pop/setpaintlabcolor load def}{dup _def eq{pop/setpaintdefcolor load def}{_defg eq{/setpaintdefgcolor loaddef}{/y2`65 load def}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse true def}ifelse}bdef/r365{dup _process eq{pop findcmykprocesscolor}{dup _spot eq{popfindcmykcustomcolor}{dup _rgb eq{pop findrgbcolor}{dup _lab eq{popfindlabcolor}{dup _def eq{pop finddefcolor}{_defg eq{finddefgcolor}{findhificolor}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse}bdef/SetColorRendering{/findcolorrendering where{pop findcolorrendering{/ColorRendering findresourcesetcolorrendering}{dup/DefaultColorRendering eq{pop}{/ColorRenderingfindresource setcolorrendering}ifelse}ifelse}{pop}ifelse}bdef/_curcolorspace[]def/_curcolorintent null def/_ft null def/_fc null def/_f? false def/_fo falsedef/o2`65 null def/p2`65{}def/_fpat null def/_fpatn null def/_st null def/_scnull def/_s? false def/_so false def/q2`65 null def/r2`65{}def/Q`65 null def/P`65 null def/u2`65 null def/_trt null def/_trc null def/_tr? false def/hh`65/HonorPMTraps where{pop HonorPMTraps}{T}ifelse def/w2`65 null def/TrapStrokenull def/trMTX matrix def/_LBOmtx matrix def/_LBOgsave matrix def/_MLgsavematrix def/_x1 null def/_y1 null def/_x2 null def/_y2 null def/_rdp null def/_LLx null def/_LLy null def/_URx null def/_URy null def/_th null def/_hthknull def/_rd null def/_wp null def/_hp null def/_diam null def/_w null def/_hnull def/_dshlen null def/_rem null def/_spclen null def/_undo? false def/_dch(X)def/xfont null def/_ch null def/_spot 1 def/_process 2 def/_hifi 3 def/_paper 4 def/_registration 5 def/_rgb 6 def/_def 7 def/_defg 8 def/_lab 9 def/_ctype null def/_trctype null def/_mingray .00390625 def/@m65{moveto}bdef/@l65{lineto}bdef/@c65{curveto}bdef/@cp65{closepath}bdef/b`65{/_ctype xdef/_ftxdef dup null ne{_ctype r365}if/_fc xdef/_f?/o2`65 _ctype _fc _ft n2`65atlanta^65}bdef/atlanta^65{_f?{/p2`65{_fo setoverprint _fc _ft o2`65 _fpatnull eq{eofill}{_fpat j1`65}ifelse}def}{/p2`65{newpath}def}ifelse}bdef/c`65{/_fpatn xdef _fpatn null eq{/_fpat null def}{/_fpat _fpatn findfont def}ifelse}bdef/e`65{/_fo xdef}bdef/a`65{/_ctype xdef/_st xdef dup null ne{_ctype r365}if/_sc xdef/_s?/q2`65 _ctype _sc _st n2`65 seattle^65}bdef/seattle^65{_s?{/r2`65{_so setoverprint _sc _st q2`65 stroke}def/Q`65{_so setoverprint _sc _stq2`65 fill}def/P`65/Q`65 load def/u2`65{_so setoverprint _sc _st q2`65 show}def}{/r2`65{newpath}def/Q`65{newpath}def/P`65{newpath}def/u2`65{pop}def}ifelse}bdef/f`65{/_so xdef}bdef/h`65{/_trctype xdef/_trt xdef dup null ne{_trctyper365}if/_trc xdef/_tr?/w2`65 _trctype _trc _trt n2`65 lopez^65}bdef/lopez^65{_tr? hh`65 and{/x2`65{T setoverprint _trc _trt w2`65 stroke}def/TShowTrap{Tsetoverprint _trc _trt w2`65{currentlinewidth newpath 3 index 3 index_uPosition add 1 index 5 -1 roll add 1 index moveto lineto _uThicknesssetlinewidth strokepath setlinewidth stroke}{pop}ifelse newpath moveto/tsLSXxdef/tsWSX xdef/tsSTR(s)def gsave 0 0 moveto<20>show currentpoint pop/spwidxdef grestore{dup 32 eq{pop tsWSX spwid add 0.0 rmoveto}{currentpoint/oldyxdef/oldx xdef tsSTR 0 2 index put tsSTR false charpath currentpoint strokenewpath moveto pop}ifelse tsLSX 0 rmoveto}forall}def}{/x2`65{newpath}def/TShowTrap{7{pop}repeat}def}ifelse}bdef/@fp65{gsave p2`65 grestore}bdef/arct{arcto pop pop pop pop}ndef/EllipsePath{_LBOgsave currentmatrix pop translatescale 1 0 moveto 0 0 1 360 0 arcn closepath _LBOgsave setmatrix}bdef/RectPath{moveto 1 index 0 rlineto 0 exch rlineto neg 0 rlineto closepath}bdef/RoundRectPath{/_y2 xdef/_x2 xdef/_y1 xdef/_x1 xdef/_rdp xdef _x1 _y1 _rdp addmoveto _x1 _y2 _x2 _y2 _rdp arct _x2 _y2 _x2 _y1 _rdp arct _x2 _y1 _x1 _y1_rdp arct _x1 _y1 _x1 _y2 _rdp arct closepath}bdef/bell^65{{_LBOmtx astoreconcat}if}bdef/south^65{/_URy xdef/_URx xdef/_LLy xdef/_LLx xdef}bdef/lpd^65{_MLgsave currentmatrix pop gsave translate rotate}bdef/jp^65{grestore}bdef/jbd^65{gsave bell^65 moveto lineto setlinewidth r2`65 grestore}bdef/ald^65{gsave bell^65 samson^65 setlinewidth r2`65 grestore}bdef/ws^65{gsave bell^65xfont exch scalefont setfont F roswell^65 grestore}bdef/samson^65{translaterotate 0 0 moveto/_dshlen xdef/_rem xdef/_spclen xdef 1 1 3 -1 roll{pop_dshlen 0 rlineto _spclen _rem 0 gt{1 add/_rem _rem 1 sub def}if 0 rmoveto}for_dshlen 0 rlineto}bdef/roswell^65{gsave/_undo? xdef translate rotate _dch 0 3-1 roll put 0 moveto/_rem xdef/_spclen xdef 1 1 3 -1 roll{pop gsave _undo?{_LBOmtx setmatrix}if _dch u2`65 grestore _spclen _rem 0 gt{1 add/_rem _rem 1sub def}if 0 rmoveto}for _undo?{_LBOmtx setmatrix}if _dch u2`65 grestore}bdef/yy`65{gsave bell^65 newpath}bdef/yyq65{grestore}bdef/yy^65{/_ns xdef _ns{lineto}repeat}bdef/yQ65{/_th xdef 2 copy moveto lineto 1 setlinecap _thsetlinewidth r2`65}bdef/Qy65{dup setlinejoin 0 eq{setmiterlimit}if setlinecapsetlinewidth}bdef 8 dict begin/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-500 -500 500 500]def/Encoding 256 array def 0 1 255{Encoding exch/.nodef put}for Encoding 97/circle put/CharProcs 2 dict def CharProcs begin/.nodef{}def/circle{0 0 500 0 360 arc closepath fill}bind def end/BuildGlyph{1000 0 -500 -500 500 500 setcachedevice exch/CharProcs get exch 2 copy knownnot{pop/.nodef}if get exec}bind def/BuildChar{1 index/Encoding get exch get 1index/BuildGlyph get exec}bind def currentdict end/_xfont exch definefont/xfont exch def/_thumbStr 10 string def/_irad null def/_orad null def/_dx nulldef/_dy null def/_ld2 null def/_sz null def/_th null def/_lblsave null def/LFont null def/T`65{gsave 0.05 0.05 scale translate 2 copy 2 copy 8 -2 rolldup 3 -1 roll{neg}if exch RectPath .5 setseparationgray fill 0 0 RectPathgsave 1 setseparationgray fill grestore 0 setseparationgray 20 setlinewidthstroke/Helvetica findfont 180 scalefont setfont 100 add 100 exch moveto pop_thumbStr cvs show grestore}bdef/q3`65{_th _orad sub dup _dx _dy EllipsePathstroke _dx _ld2 sub _dy moveto _dx _ld2 add _dy lineto stroke _dx _dy _ld2 submoveto _dx _dy _ld2 add lineto stroke}bdef/V`65{/_irad xdef/_orad xdef/_dyxdef/_dx xdef/_th xdef/_ld2 xdef/_hthk 2.5 wcu^65 round dup 2 le{pop 2}if defgsave 0 setlinecap 1 setseparationgray _th _hthk 2 mul add setlinewidth q3`65_hthk _irad add dup _dx _dy EllipsePath fill 0 setseparationgray _thsetlinewidth q3`65 _irad dup _dx _dy EllipsePath fill 1 setseparationgray _dx_irad sub _dy moveto _dx _irad add _dy lineto stroke _dx _dy _irad sub moveto_dx _dy _irad add lineto stroke grestore}bdef/f1a`65{1 exch sub 0 0 0setcmykcolor}bdef/f1b`65{1 exch sub 0 exch 0 0 setcmykcolor}bdef/f1c`65{1 exchsub 0 0 3 -1 roll 0 setcmykcolor}bdef/f1d`65{1 exch sub 0 0 0 4 -1 rollsetcmykcolor}bdef/f1e`65{setseparationgray}bdef/W`65{gsave F setoverprint/_dyxdef/_dx xdef/_sz xdef/_th xdef _dx _dy translate{-90 rotate}if/XPaint exchldef 0.35 XPaint 11 _sz mul _sz 0 0 RectPath fill/_dx _th def/_sz _sz 2 _thmul sub def 0 1 10{10 div XPaint _sz dup _dx _th RectPath fill/_dx _dx _sz 2_th mul add add def}for grestore}bdef/calBarArray[0 0 1 0 0 1 0 0 1 0 0 0 1 10 0 1 0 1 0 0 1 1 0 0 0 0 1 0 0 .5 0 0 .5 0 0 .5 0 0 0 0 0 0 .5]def/X`65{gsave/_dy xdef/_dx xdef/_sz xdef/_th xdef _dx _dy translate{-90 rotate}if 0.35setseparationgray 11 _sz mul _sz 0 0 RectPath fill/_dx _th def/_sz _sz 2 _thmul sub def currentoverprint false setoverprint 0 1 10{calBarArray exch 4 mul4 getinterval aload pop setcmykcolor _sz dup _dx _th RectPath fill/_dx _dx _sz2 _th mul add add def}for setoverprint grestore}bdef/pw$65{gsave/_hthk 2.5wcu^65 round dup 2 le{pop 2}if def 5 copy 1 setseparationgray 0 setlinecapmoveto rlineto _hthk 2 mul add setlinewidth stroke 0 setseparationgray movetorlineto setlinewidth stroke grestore}bdef/Y`65{/_lblsave save def[exch 0 0 2index neg 0 0]LFont exch makefont setfont}bdef/a1`65{level2{[/Separation(All)/DeviceCMYK{dup dup dup}]setcolorspace 1 setcolor}{0 setseparationgray}ifelsemoveto show}bdef/a1a`65{level2{2 index(Cyan)eq{1 0 0 0 setcmykcolor}{2 index(\Magenta)eq{0 1 0 0 setcmykcolor}{2 index(Yellow)eq{0 0 1 0 setcmykcolor}{2index(Black)eq{0 0 0 1 setcmykcolor}{[/Separation 4 index/DeviceCMYK{dup dupdup}]setcolorspace 1 setcolor true setoverprint}ifelse}ifelse}ifelse}ifelsemoveto show}{3{pop}repeat}ifelse}bdef/Z`65{_lblsave restore}bdef/f1`65{/LFont/|_______Helvetica T/Helvetica aldus^65 def}bdef/_xbft null def/_xbfc null def/_xbx? F def/XPaint null def/XFill null def/XStroke null def/b1`65{gsavebell^65 south^65/_th xdef currentoverprint T setoverprint}bdef/d1`65{setoverprint grestore}bdef/c1`65{XBoxColor XBoxDraw}bdef/XBoxDraw{_URx _LLxsub abs _th sub _URy _LLy sub abs _th sub _LLx _th 2 div add _LLy _th 2 divadd 4 copy RectPath gsave XFill grestore _th setlinewidth XStroke 4 copymoveto rlineto exch 3 index add exch moveto exch neg exch rlineto XStroke}bdef/XBoxColor{/_ctype xdef/_xbft xdef dup null ne{_ctype r365}if/_xbfc xdef/_xbx?/XPaint _ctype _xbfc _xbft n2`65 psquare^65}bdef/psquare^65{_xbx?{/XFill{_xbfc0 XPaint fill}def/XStroke{_xbfc 1 XPaint stroke}def}{/XFill{newpath}def/XStroke{newpath}def}ifelse}bdef/e1`65{/__$jk where{pop/junk save def bell^65south^65/_th xdef _URx _LLx sub abs _th sub _URy _LLy sub abs _th sub _LLx _th2 div add _LLy _th 2 div add RectPath gsave .9 setseparationgray fill grestore0 setseparationgray _th setlinewidth stroke _LLx _LLy _URy add 2 div moveto/Helvetica findfont[180 180 J2`65 neg 0 0 3 -1 roll 0 0]makefont setfont showjunk restore}{{6{pop}repeat}if 6{pop}repeat}ifelse}bdef/s`65{gsave clippath 1setseparationgray fill grestore}bdef/r`65{PSScreen exch pop exch pop dup type/dicttype eq{dup/HalftoneType get 1 eq{begin/Angle exch def/Frequency exch def60 0 currentdict end}if}if}bdef/t`65{{1 exch sub}}bdef/PPDSetup{countdictstackmark}bdef/PPDCleanup{stopped cleartomark countdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bdef/AskFont{save/sv exch def/str(fonts/                \                                       )def/st2 128 string def st2 cvs dupFontDirectory exch known{pop(Y R)}{/filenameforall where{pop str exch st2 cvsdup length/len exch def 6 exch putinterval str 0 len 6 add getinterval markexch{}st2 filenameforall counttomark 0 gt{cleartomark(Y H)}{cleartomark(NnN)}ifelse}{pop(NnN)}ifelse}ifelse = flush sv restore}bdef/AskFreeVM{vmstatus exchsub == pop flush}bdef/AskSpooler{0 == flush}bdef/_PATgsave matrix def/_PATmtxmatrix def/gl^65{7 dict begin/FontDict 9 dict def FontDict begin/cache exchdef/key exch def/proc exch cvx def/mtx exch matrix invertmatrix def/heightexch def/width exch def/ctm matrix currentmatrix def/ptm matrix identmatrixdef/str(12345678901234567890123456789012)def end/FontBBox[0 0 FontDict/widthget FontDict/height get]def/FontMatrix FontDict/mtx get def/EncodingStandardEncoding def/FontType 3 def/BuildChar{pop begin FontDict begin width 0cache{0 0 width height setcachedevice}{setcharwidth}ifelse 0 0 moveto width 0lineto width height lineto 0 height lineto closepath clip newpath gsave procgrestore end end}def FontDict/key get currentdict definefont end}bdef/hj^65{dup type/dicttype eq{begin FontDict/ctm get setmatrix}{exch begin FontDict/ctmget setmatrix concat}ifelse currentdict setfont FontDict begin FontMatrixconcat width 0 dtransform round width div exch round width div exch 0 heightdtransform round height div exch round height div exch 0 0 transform roundexch round exch ptm astore setmatrix pathbbox height div ceiling height mul 41 roll width div ceiling width mul 4 1 roll height div floor height mul 4 1roll width div floor width mul 4 1 roll 2 index sub height div ceiling cviexch 3 index sub width div ceiling cvi exch 4 2 roll moveto FontMatrix ptminvertmatrix pop{gsave ptm concat dup str length idiv{str show}repeat dup strlength mod str exch 0 exch getinterval show grestore 0 height rmoveto}repeatpop end end}bdef/i1`65{gsave clip hj^65 grestore newpath}bdef/j1`65{gsave 0 00 0 setcmykcolor fill grestore i1`65}bdef/k1`65{_PATgsave currentmatrix pop_PATmtx defaultmatrix setmatrix rotate 3.36 3.36[1 0 0 -1 0 0]{2 setlinecap 01.68 moveto 1.68 0 lineto 1.68 3.36 moveto 3.36 1.68 lineto 0.675 setlinewidthstroke}/l1`65 true gl^65 pop 5.28 5.28[1 0 0 -1 0 0]{2 setlinecap 0 2.64moveto 2.64 0 lineto 2.64 5.28 moveto 5.28 2.64 lineto 0.675 setlinewidthstroke}/m1`65 true gl^65 pop 3.84 3.84[1 0 0 -1 0 0]{2 setlinecap 0 1.92moveto 3.84 1.92 lineto 0.675 setlinewidth stroke}/n1`65 true gl^65 pop 7.687.68[1 0 0 -1 0 0]{2 setlinecap 0 3.84 moveto 7.68 3.84 lineto 0.675setlinewidth stroke}/o1`65 true gl^65 pop 3.84 3.84[1 0 0 -1 0 0]{2 setlinecap1.92 0 moveto 1.92 3.84 lineto 0.675 setlinewidth stroke}/p1`65 true gl^65 pop7.68 7.68[1 0 0 -1 0 0]{2 setlinecap 3.84 0 moveto 3.84 7.68 lineto 0.675setlinewidth stroke}/q1`65 true gl^65 pop 3.84 3.84[1 0 0 -1 0 0]{2 setlinecap1.92 0 moveto 1.92 3.84 lineto 0 1.92 moveto 3.84 1.92 lineto 0.675setlinewidth stroke}/r1`65 true gl^65 pop 7.68 7.68[1 0 0 -1 0 0]{2 setlinecap3.84 0 moveto 3.84 7.68 lineto 0 3.84 moveto 7.68 3.84 lineto 0.675setlinewidth stroke}/s1`65 true gl^65 pop _PATgsave setmatrix}bdef/_OutlineSmearFrac 10 def/_OutlineWeight 0.012 def/_OutlineFillColorCMYK 0 0 01()findcmykprocesscolor def/_OutlineFillColorRGB 0 0 0()findrgbcolor def/_OutlineFillColorLab{[/CIEBasedABC 3 dict dup begin/RangeABC[0 1 0 1 0 1]def/RangeLMN[0 1 0 1 0 1]def/WhitePoint[1 1 1]def end]/Perceptual 0 0 0()findlabcolor}def/_ShadowReverseColorCMYK 0 0 0 1()findcmykprocesscolor def/_ShadowReverseColorRGB 0 0 0()findrgbcolor def/_ShadowReverseColorLab{[/CIEBasedABC 3 dict dup begin/RangeABC[0 1 0 1 0 1]def/RangeLMN[0 1 0 1 0 1]def/WhitePoint[1 1 1]def end]/Perceptual 0 0 0()findlabcolor}def/_BoldFactorX0.015 def/_BoldFactorY 0.015 def/_ShadowFactorX 0.06 def/_ShadowFactorY 0.06def/_ObliqueFactor -0.21 def/_ShadowTintFactor 0.2 def/_BFontUOThick 1 0/Helvetica findfont/FontMatrix get dtransform dup mul exch dup mul add sqrt_OutlineWeight mul def/_TXmtx matrix def/_TXctmx matrix def/_txgsave matrixdef/_BaseMatrix[1 0 0 -1 0 0]def/_ItalicMatrix[1 0 _ObliqueFactor 1 0 0]def/tempDict null def userdict/FCDict userdict put/isWinPS false def/_xSize 12def/_ySize 12 def/_dots 1440 def/_fDict null def/_uScale null def/_uPositionnull def/_uThickness null def/_uOThickness null def/_dUPosition -100 def/_dUThickness 50 def/_dFontScale -0.001 def/_runLen null def/_txc null def/_txt null def/_txo F def/_tx? F def/_ctc null def/_ctt null def/_cto F def/_cPaint null def/_outxc null def/_outxt null def/_outxo T def/_shdc null def/_shdt null def/_shdo T def/K2`65 null def/k3`65 null def/m3`65 null def/j3`65null def/l3`65 null def/FTextPaint null def/STextPaint null def/_gMTX matrixdef/macvec 256 array def macvec dup dup 0/Times-Roman findfont/Encoding get 0128 getinterval putinterval 39/quotesingle put 96/grave put/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron macvec128 128 getinterval astore pop/winvec 256 array def winvec dup dup 0/Times-Roman findfont/Encoding get 0 128 getinterval putinterval 39/quotesingle put 96/grave put/grave/acute/circumflex/tilde/macron/breve/dotaccent/dieresis/ring/cedilla/hungarumlaut/ogonek/caron/dotlessi winvec 014 getinterval astore pop/bullet/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/bullet/bullet/Ydieresis/space/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresiswinvec 127 129 getinterval astore pop/M1`65{{_TXmtx astore concat}if _TXctmxcurrentmatrix pop}bdef/N1`65{_txgsave currentmatrix pop}bdef/O1`65{_txgsavesetmatrix}bdef/NN2`65{_LBOgsave currentmatrix pop O1`65 gsave}bdef/NN3`65{eoclip newpath _LBOgsave setmatrix}bdef/P1`65{O1`65}bdef/Q1`65{_TXctmxsetmatrix}bdef/v1`65{userdict begin dict/FCDict exch def end}bdef/fontdef{FCDict 3 1 roll put}bdef/fontget{FCDict exch get}bdef/x1`65{aldus^65_BaseMatrix makefont fontdef}bdef/p3`65{dup length 1 add dict/tempDict exchdef{1 index/FID ne 2 index/UniqueID ne and{tempDict 3 1 roll put}{pop pop}ifelse}forall tempDict}bdef/aldus^65{findfont exch isWinPS{pop dup/Encodingget dup 161 get exch 162 get/cent eq exch/exclamdown eq and}if{p3`65 dup/Encoding isWinPS{winvec}{macvec}ifelse put definefont}{exch pop}ifelse}bdef/I1`65{findfont p3`65 dup/Encoding get 256 array copy dup dup 3 index/Encoding3 2 roll put}bdef/J1`65{put dup}bdef/K1`65{pop pop definefont _BaseMatrixmakefont fontdef}bdef/y1`65{gsi^65 fontdef}bdef/z1`65{fontget _ItalicMatrixmakefont fontdef}bdef/gsi^65{fontget dup maxlength 2 add dict/tempDict exchdef{1 index/FID ne 2 index/UniqueID ne and{tempDict 3 1 roll put}{pop pop}ifelse}forall tempDict begin/PaintType 2 def/StrokeWidth 1 0 FontMatrixdtransform dup mul exch dup mul add sqrt _OutlineWeight exch div def endtempDict definefont}bdef/auckland^65{/_ySize xdef/_xSize xdef fontget[_xSize 00 _ySize 0 0]makefont setfont}bdef/wcu^65{_dots mul}bdef/n`65{1440 div/_dotsxdef}bdef/J2`65{wcu^65 exch wcu^65 exch}bdef/w1`65{J2`65 auckland^65}bdef/K2`65{}bdef/A1`65{isWinPS{O2`65}{pop pop pop}ifelse 5 3 roll K2`65}bdef/K3`65{3 index 10 2 roll isWinPS{O2`65}{pop pop pop}ifelse 5 3 roll 7 -2 roll exchTShowTrap}bdef/L2`65{/_x1 _xSize _BoldFactorX mul def/_y1 _ySize _BoldFactorYmul def 5 copy _y1 add exch _x1 add exch K2`65 5 copy _y1 add exch _x1 subexch K2`65 5 copy _y1 sub exch _x1 add exch K2`65 5 copy _y1 sub exch _x1 subexch K2`65 K2`65}bdef/B1`65{O2`65 5 3 roll L2`65}bdef/C1`65{O2`65 6 3 roll 6copy U2`65 3 1 roll _ySize _ShadowFactorY mul add exch _xSize _ShadowFactorXmul add exch 3 -1 roll{L2`65}{K2`65}ifelse V2`65{L2`65}{K2`65}ifelse}bdef/D1`65{O2`65 5 3 roll gsave 6 index not{7 index _xSize _ySize auckland^65}if 5copy _ySize _ShadowFactorY mul add exch _xSize _ShadowFactorX mul add exch 11-1 roll{L2`65}{K2`65}ifelse grestore 6 -1 roll{M2`65}{6 -1 roll N2`65}ifelse}bdef/M2`65{/_x1 _OutlineSmearFrac wcu^65 def/_y1 _OutlineSmearFrac wcu^65 def5 copy _y1 neg add exch _x1 neg add exch K2`65 5 copy _y1 neg add exch _x1 addexch K2`65 5 copy _y1 add exch _x1 neg add exch K2`65 5 copy _y1 add exch _x1add exch K2`65 m3`65}bdef/E1`65{O2`65 5 3 roll M2`65}bdef/N2`65{gsave _xSize_ySize auckland^65 5 copy m3`65 grestore K2`65}bdef/F1`65{O2`65 6 3 roll N2`65}bdef version cvr 47.0 ge{/strwth{stringwidth pop}bdef}{/strwth{gsave newpath0 0 moveto 0 0 lineto closepath clip stringwidth grestore pop}bdef}ifelse/O2`65{dup 0 gt{dup 4 1 roll 4 index mul exch 5 index mul add 5 index strwthadd sub exch div add}{pop pop pop}ifelse}bdef/G1`65{fontget/_fDict xdef wcu^65_fDict/FontInfo known{isWinPS _fDict/FontType get 3 eq and{_dFontScale}{_fDict/FontMatrix get 3 get}ifelse mul/_uScale xdef _fDict/FontInfo get dup/UnderlinePosition known{dup/UnderlinePosition get _uScale mul/_uPosition xdef}{/_uPosition _dUPosition _uScale mul def}ifelse dup/UnderlineThickness known{dup/UnderlineThickness get _uScale mul/_uThickness xdef}{/_uThickness_dUThickness _uScale mul def}ifelse pop}{_dFontScale mul/_uScale xdef/_uPosition _dUPosition _uScale mul def/_uThickness _dUThickness _uScale muldef}ifelse/_uOThickness _BFontUOThick _uScale mul def _fDict/PaintType known{_fDict/PaintType get 2 eq{_fDict/StrokeWidth known{/_uOThickness _fDict/StrokeWidth get _uScale mul def}{1 0 _fDict/FontMatrix get dtransform dup mulexch dup mul add sqrt _OutlineWeight mul _uScale mul/_uOThickness xdef}ifelse}if}if}bdef/H1`65{gsave/_runLen xdef/_y1 xdef/_x1 xdef/_y1 _y1 _uPosition adddef{dup not{U2`65}if/_y2 _ySize _ShadowFactorY mul _y1 add def/_x2 _xSize_ShadowFactorX mul _x1 add def _uThickness _x2 _y2 _x2 _runLen add _y2 P2`65dup not{V2`65}if}if{_uOThickness _x1 _y1 _uThickness 2 div add _x1 _runLen add_y1 _uThickness 2 div sub Q2`65}{_uThickness _x1 _y1 _x1 _runLen add _y1 P2`65}ifelse grestore}bdef/mm$65{gsave _ySize 3 div sub/_y1 xdef _y1 _y1 3 1 roll_ySize 16 div 5 1 roll P2`65 grestore}bdef/P2`65{gsave moveto linetosetlinewidth k3`65 grestore}bdef/Q2`65{gsave south^65/_th xdef _URx _LLx subabs _th sub _URy _LLy sub abs _th sub _LLx _th 2 div add _LLy _th 2 div addRectPath gsave j3`65 grestore _th setlinewidth k3`65 grestore}bdef/d`65{/_ctype xdef/_txt xdef dup null ne{_ctype r365}if/_txc xdef SetOutColorSetShadColor/_tx?/l3`65 _ctype _txc _txt n2`65 S2`65}bdef/s365{dup _hifi eq{pop dup length 0 3 1 roll 0 1 3 -1 roll 1 sub{exch dup 3 -1 roll get dup type/arraytype eq exch dup type/packedarraytype eq 3 -1 roll or{1 get 3 -1 rolladd exch}{pop}ifelse}for pop}{dup _lab eq{pop aload pop pop 5 -2 roll pop popabs 1 le exch abs 1 le 3 -1 roll 100 exch sub .392159 le and and{0}{_mingray 1add}ifelse}{dup dup _rgb eq exch _def eq or{_def eq{aload pop pop 5 -2 rollpop pop}{aload pop pop}ifelse 3{1 exch sub 3 1 roll}repeat}{_defg eq{aload poppop 6 -2 roll pop pop}{aload pop pop}ifelse add add add}ifelse}ifelse}ifelse_mingray le}bdef/SetOutColor{_txt null eq{/_outxc null def/_outxt null def}{_txc null eq{_txt 0 eq{/_outxt 1 def _ctype _paper eq{/_outxc_OutlineFillColorCMYK def}{/_outxc null def}ifelse}{/_outxt 0 def/_outxc nulldef}ifelse}{_txc _ctype s365{/_outxt 1 def/_outxc _ctype _rgb eq _ctype _defeq or{_OutlineFillColorRGB}{_ctype _lab eq{_OutlineFillColorLab}{_OutlineFillColorCMYK}ifelse def}ifelse}{/_outxt 0 def/_outxc null def}ifelse}ifelse}ifelse/_cjc?/FTextPaint _ctype _outxc _outxt n2`65}bdef/SetShadColor{_txt null eq{/_shdc null def/_shdt null def}{/_shdo _txo def _txc null eq{_txt0 eq{/_shdt 1 def}{/_shdt T2`65 def}ifelse _ctype _paper eq{/_shdc_ShadowReverseColorCMYK def/_shdo T def}{/_shdc null def}ifelse}{_txc _ctypes365{/_shdt 1 def/_shdc _ctype _rgb eq _ctype _def eq or{_ShadowReverseColorRGB}{_ctype _lab eq{_ShadowReverseColorLab}{_ShadowReverseColorCMYK}ifelse}ifelse def/_shdo T def}{/_shdt T2`65 def/_shdc_txc def}ifelse}ifelse}ifelse/_cjc?/STextPaint _ctype _shdc _shdt n2`65}bdef/S2`65{_tx?{/K2`65{_txo setoverprint _txc _txt l3`65 moveto 0 4 2 roll 0 32 63 roll awidthshow}def/k3`65{_txo setoverprint _txc _txt l3`65 stroke}def/m3`65{_outxo setoverprint _outxc _outxt FTextPaint moveto 0 4 2 roll 0 32 6 3 rollawidthshow}def/j3`65{_outxo setoverprint _outxc _outxt FTextPaint fill}def}{/K2`65{5{pop}repeat}def/k3`65{newpath}def/m3`65{5{pop}repeat}def/j3`65{newpath}def}ifelse}bdef/T2`65{_txt _ShadowTintFactor mul}bdef/U2`65{/_ctc _txc def/_ctt _txt def/_cto _txo def/_cPaint/l3`65 ldef/_txc _shdc def/_txt _shdt def/_txo _shdo def/l3`65/STextPaint ldef}bdef/V2`65{/_txc _ctc def/_txt _ctt def/_txo _cto def/l3`65/_cPaint ldef}bdef/g`65{/_txo xdef}bdef/SaveHook{}ndef/RestoreHook{}ndef/W2`65{SaveHook _dots _LPmtx aload _PSdef aload _WCmtx aload_txgsave aload _TXctmx aload _gMTX currentmatrix aload}bdef/X2`65{astoresetmatrix astore pop astore pop astore pop astore pop astore pop/_dots xdefRestoreHook}bdef/bmt^65{save def}bdef/tsi^65{mark W2`65 counttomark 2 add -2roll pop restore X2`65 o`65}bdef/seni^65{restore}bdef/o`65{/_fo F def/_so Fdef/_txo F def}bdef/_GRPHmtx matrix def/_imagesave null def/_imc null def/_imtnull def/ImPaint null def/cjc^65{/_imagesave save def _WCmtx setmatrix}bdef/tvs^65{_PSdef setmatrix}bdef/dsd^65{_imagesave restore}bdef/espresso 4 dictdef espresso begin/setgray{setgray}def/setcmykcolor{setcmykcolor}def/setrgbcolor{setrgbcolor}def/sethsbcolor{sethsbcolor}def end/o3`65{espressobegin userdict begin}bdef/vm$65{/OSdict xdef end end end}bdef/b2a`65{/_imagesave save def{_GRPHmtx astore concat}if translate dup scale newpath 0 0RectPath clip newpath userdict begin/showpage{}def 0 setgray 0 setlinecap 1setlinewidth 0 setlinejoin 10 setmiterlimit[]0 setdash newpath F setoverprintmark}bdef/a2`65{OSdict begin}bdef/b2`65{end V1`65}bdef/kHu$65{/_imagesave savedef{_GRPHmtx astore concat}if translate scale translate newpath RectPath clipnewpath userdict begin/showpage{}def 0 setgray 0 setlinecap 1 setlinewidth 0setlinejoin 10 setmiterlimit[]0 setdash newpath F setoverprint mark}bdef/V1`65{cleartomark end _imagesave restore}bdef/_ortnt null def/_orclr null def/_gopfalse def/_cjc? false def/*setcmyk null def/*setrgb null def/*sethsb null def/*setgry null def/*setsepgray null def/*setcustomclr null def/*setprocessclrnull def/*sethificlr null def/*setop null def/*zimage null def/*zcustomcolorimage null def/*ztintedcolorimage null def/*zhificolorimage nulldef/$gate_1 T def/$clrOverride F def/Y2`65{P65PS begin/*setcmyk/setcmykcolorldef/*setrgb/setrgbcolor ldef/*sethsb/sethsbcolor ldef/*setgry/setgray ldef/*setcustomclr/setcustomcolor ldef/*setprocessclr/setprocesscolor ldef/*sethificlr/sethificolor ldef/*setop/setoverprint ldef/*setsepgray/setseparationgray ldef/*zimage/image ldef/*zcustomcolorimage/customcolorimageldef/*ztintedcolorimage/tintedcolorimage ldef/*zhificolorimage/hificolorimageldef end}bdef/X1`65{P65PS begin/setcmykcolor/*setcmyk ldef/setrgbcolor/*setrgbldef/sethsbcolor/*sethsb ldef/setgray/*setgry ldef/setcustomcolor/*setcustomclr ldef/setprocesscolor/*setprocessclr ldef/sethificolor/*sethificlr ldef/setoverprint/*setop ldef/setseparationgray/*setsepgray ldef/image/*zimage ldef/customcolorimage/*zcustomcolorimage ldef/tintedcolorimage/*ztintedcolorimage ldef/hificolorimage/*zhificolorimage ldef end}bdef/GrayORImage{_orclr null eq{_ortnt tintedseparationimage}{_orclr _ctype _hifieq{hificolorimage}{_ortnt tintedcolorimage}ifelse}ifelse}bdef/CMYKtoORtint{$setcmyk 1 $curgry sub _ortnt mul/_ortnt xdef}bdef/$curgry systemdict/currentgray get def/$setrgb systemdict/setrgbcolor get def/$sethsb systemdict/sethsbcolor get def/$setcmyk systemdict/setcmykcolor known{systemdict/setcmykcolor get}{{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1roll}repeat systemdict/setrgbcolor get exec pop}}ifelse def/a3`65{P65PS begin/setcmykcolor{gsave $setcmyk 1 $curgry sub grestore c3`65}def/setrgbcolor{gsave $setrgb 1 $curgry sub grestore c3`65}def/sethsbcolor{gsave $sethsb 1$curgry sub grestore c3`65}def/setgray{1 exch sub c3`65}def/setseparationgray{1 exch sub c3`65}def _spotOR?{/setcustomcolor/i3`65 ldef}{/setcustomcolor/b3`65 ldef}ifelse/setprocesscolor{gsave exch aload pop pop 4{4 index mul 4 1roll}repeat $setcmyk pop 1 $curgry sub grestore c3`65}def/sethificolor{gsaveexch aload length 4 sub{pop}repeat 4{4 index mul 4 1 roll}repeat $setcmyk pop1 $curgry sub grestore c3`65}def/setoverprint{d3`65}def/image{ORimage}def/customcolorimage{ORcustomcolorimage}def/tintedcolorimage{ORtintedcolorimage}def/hificolorimage{ORhificolorimage}def end}bdef/b3`65{gsave exch aload poppop 4{4 index mul 4 1 roll}repeat $setcmyk pop 1 $curgry sub grestore c3`65}bdef/c3`65{$gate_1 $clrOverride and{P65PS begin/$gate_1 F def _ortnt null ne{_ortnt mul}{null}ifelse _orclr exch X1`65 SetORColorProc a3`65/$gate_1 T defend}{P65PS begin $MetalHead begin c3`65 end end}ifelse}bdef/d3`65{$gate_1$clrOverride and{P65PS begin/$gate_1 F def pop _gop X1`65 setoverprint a3`65/$gate_1 T def end}{P65PS begin $MetalHead begin setoverprint end end}ifelse}bdef/ORimage{$gate_1 $clrOverride and{P65PS begin/$gate_1 F def X1`65 dup type/dicttype eq{dup/Decode get length 2 eq currentcolorspace dup 0 get/Indexed eq{1 get/DeviceGray eq}{pop true}ifelse and{GrayORImage}{image}ifelse}{GrayORImage}ifelse a3`65/$gate_1 T def end}{P65PS begin $MetalHead begin imageend end}ifelse}bdef/ORcustomcolorimage{$gate_1 $clrOverride and{P65PS begin/$gate_1 F def X1`65 aload pop pop CMYKtoORtint GrayORImage a3`65/$gate_1 Tdef end}{P65PS begin $MetalHead begin customcolorimage end end}ifelse}bdef/ORtintedcolorimage{$gate_1 $clrOverride and{P65PS begin/$gate_1 F def X1`65exch aload pop pop 4{4 index mul 4 1 roll}repeat CMYKtoORtint pop GrayORImagea3`65/$gate_1 T def end}{P65PS begin $MetalHead begin tintedcolorimage end end}ifelse}bdef/ORhificolorimage{$gate_1 $clrOverride and{P65PS begin/$gate_1 Fdef X1`65 aload pop pop{dup type dup/arraytype ne exch/packedarraytype ne and{exit}{pop}ifelse}loop CMYKtoORtint GrayORImage a3`65/$gate_1 T def end}{P65PSbegin $MetalHead begin hificolorimage end end}ifelse}bdef/W1`65{P65PS begin/_ctype xdef/_ortnt xdef dup null ne{_ctype r365}if/_orclr xdef/_cjc?/SetORColorProc _ctype _orclr _ortnt n2`65 false setoverprint/_gop false def/_spotOR? F def Y2`65 a3`65/$clrOverride T def end}bdef/Y1`65{P65PS begin/_gopxdef _gop setoverprint end}bdef/*findcmykcustomclr null def/*newcmykcustomclrnull def/epsdict null def/typedict null def/*$setcustomclr null def/_spotOR? Fdef/$spotOverride F def/$gate_2 T def/clrAdjust? F def/_fhbool F def/f2`65{P65PS begin dup dict/epsdict xdef dict/typedict xdef/clrAdjust? T def end}bdef/g2`65{/_ctype xdef cvn _ctype _hifi eq{3 index 2 mul 8 add}{7}ifelse 1 roll_ctype exch 2 MakeReadOnlyArray 1 index cvn exch typedict 3 1 roll put _ctype_hifi eq{findhificolor}if _ctype _spot eq{findcmykcustomcolor}if _ctype_process eq{findcmykprocesscolor}if epsdict 3 1 roll put}bdef/h2`65{_registration exch 2 array astore exch cvn exch typedict 3 1 roll put}bdef/i2`65{P65PS begin clrAdjust?{/_spotOR? T def e3`65 g3`65/$spotOverride T def}if end}bdef/e3`65{P65PS begin/*findcmykcustomclr/findcmykcustomcolor ldef/*newcmykcustomclr/newcmykcustomcolor ldef/*$setcustomclr/setcustomcolor ldefend}bdef/f3`65{P65PS begin/findcmykcustomcolor/*findcmykcustomclr ldef/newcmykcustomcolor/*newcmykcustomclr ldef/setcustomcolor/*$setcustomclr ldefend}bdef/g3`65{P65PS begin/findcmykcustomcolor/h3`65 ldef/newcmykcustomcolor/n3`65 ldef/setcustomcolor/i3`65 ldef end}bdef/h3`65{$gate_2 $spotOverride and{P65PS begin/$gate_2 F def f3`65 dup cvn epsdict exch known{5 1 roll 4{pop}repeat cvn epsdict exch get}{findcmykcustomcolor}ifelse g3`65/$gate_2 T defend}{P65PS begin $MetalHead begin findcmykcustomcolor end end}ifelse}bdef/n3`65{$gate_2 $spotOverride and{P65PS begin/$gate_2 F def/_fhbool xdef dupcvn epsdict exch known{5 1 roll 4{pop}repeat cvn epsdict exch get aload pop}ifdup cvn typedict exch known{dup cvn typedict exch get aload pop pop _hifi eq{{1 index type dup/arraytype eq exch/packedarraytype eq or{exch pop}{exit}ifelse}loop}if}if _fhbool f3`65 newcmykcustomcolor g3`65/$gate_2 T def end}{P65PSbegin $MetalHead begin newcmykcustomcolor end end}ifelse}bdef/i3`65{$gate_2$spotOverride and{P65PS begin/$gate_2 F def 1 index dup length 1 sub get cvndup typedict exch known{typedict exch get aload pop 1 index _registration eq{exch pop mul 1 exch sub exch pop f3`65 setseparationgray g3`65}{1 index_process eq{f3`65 exch pop mul setprocesscolor g3`65}{1 index _spot eq{f3`65exch pop mul setcustomcolor g3`65}{exch _hifi eq{f3`65 mul sethificolor g3`65}if}ifelse}ifelse}ifelse}{pop f3`65 setcustomcolor g3`65}ifelse/$gate_2 T defend}{P65PS begin $MetalHead begin setcustomcolor end end}ifelse}bdef/BMT 2dict def BMT begin/*def/def load def/def{1 index/fcheckload eq{pop{pop pop}}if*def}bdef end/t1`65{BMT begin userdict begin}bdef/u1`65{end end}bdef/u1a`65{findfont pop}bdef end/setpacking where{pop setpacking}if%%EndResource
%%BeginResource: procset P65IMAGE_PS 1.0 1%%Copyright: (C) Copyright 1993,1995 Adobe Systems, Inc. All Rights Reserved.%%Version:1.0 1/AdobeIMLIBDict_5.0.00 112 dict def AdobeIMLIBDict_5.0.00 begin/_proc1 nulldef/_proc2 null def/_newproc null def/_curxfer{}def/_imcmykdarkness 0 def/_ic0 def/_im 0 def/_iy 0 def/_ik 0 def/_ir 0 def/_ig 0 def/_ib 0 def/_iL 0 def/_iA 0 def/_iB 0 def/_cproc null def/_mproc null def/_yproc null def/_kprocnull def/_rproc null def/_gproc null def/_bproc null def/_mbuf()def/_ybuf()def/_kbuf()def/_gbuf()def/_bbuf()def/_tint -1 def/_ix 0 def/_len 0 def/_cname()def/_ctype null def/_aldimtint 1 def/_localxfer{}def/_spot 1 def/_process 2def/_hifi 3 def/_paper 4 def/_registration 5 def/_rgb 6 def/_def 7 def/_defg 8def/_lab 9 def/bdef{bind def}bind def/xdef{exch def}def/IMndef{1 index where{pop pop pop}{def}ifelse}bdef/_imagemask/imagemask load dup type/arraytype eq{bdef}{def}ifelse/_image systemdict/image get def/_settransfer systemdict/settransfer get def/_currenttransfer systemdict/currenttransfer get def/iA^65{/packedarray where{pop packedarray}{array astore readonly}ifelse}bdef/iB^65{/packedarray where{pop dup type/packedarraytype eq 2 index type/packedarraytype eq or}{false}ifelse{/_proc2 exch cvlit def/_proc1 exch cvlitdef _proc1 aload pop _proc2 aload pop _proc1 length _proc2 length addpackedarray cvx}{/_proc2 exch cvlit def/_proc1 exch cvlit def/_newproc _proc1length _proc2 length add array def _newproc 0 _proc1 putinterval _newproc_proc1 length _proc2 putinterval _newproc cvx}ifelse}bdef/iC^65{aload pop/_ikxdef/_iy xdef/_im xdef/_ic xdef}bdef/iAP^65{aload pop/_ib xdef/_ig xdef/_irxdef}bdef/iAQ^65{aload pop/_iL xdef/_iA xdef/_iB xdef}bdef/iD^65{_ic .3 mul_im .59 mul _iy .11 mul _ik add add add dup 1 gt{pop 1}if/_imcmykdarkness xdef}def/level2/languagelevel where{pop languagelevel 1 ne}{false}ifelse def/hascolor/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors getexec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}ifelse def/iG^65{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1roll put}for}bdef/iO^65{gsave newpath setgray 0 0 moveto 0 1 lineto 1 1 lineto1 0 lineto closepath fill grestore}def/IMapplytint{/_tint xdef aload length/_len xdef/_ix _len def _len 1 sub{_ix -1 roll _tint mul _len 4 eq{_tint sub 1add}if _ix 1 roll/_ix _ix 1 sub def}repeat _len iA^65}def/IMmakeimagedict{level2{7 dict begin/ImageType 1 def/Decode xdef/DataSource xdef/ImageMatrixxdef/BitsPerComponent xdef/Height xdef/Width xdef currentdict end}{6{pop}repeat}ifelse}def/IMmodifyHalftoneXferAll{level2{currenthalftone dup lengthdict copy begin currentdict{dup type/dicttype eq{dup length dict copy begincurrentdict/TransferFunction known{/TransferFunction load 2 index exch iB^65/TransferFunction xdef}if currentdict end def}{pop pop}ifelse}forallcurrentdict end sethalftone pop}{pop}ifelse}bdef/IMapplytinttostackcolor{dup_hifi eq{pop/_cname xdef/_ninks xdef/_depth _ninks 2 mul def _ninks{_aldimtintmul _depth 1 roll _depth 1 roll}repeat/_depth _depth 4 add def 4{_depth -1roll _aldimtint mul _depth 1 roll/_depth _depth 1 sub def}repeat _ninks _cname}{dup _rgb eq{pop 4 1 roll 3{_aldimtint mul _aldimtint sub 1 add 4 1 roll}repeat}{dup _lab eq{pop 6 1 roll 1 _aldimtint sub dup 4 index 100 exch sub mul5 -1 roll add 4 1 roll dup 3 index 0 exch sub mul 4 -1 roll add 3 1 roll 1index 0 exch sub mul add 6 -1 roll}{dup _def eq{pop 6 1 roll 3{_aldimtint mul_aldimtint sub 1 add 3 1 roll}repeat 6 -1 roll}{_defg eq{7 1 roll 4{_aldimtintmul 4 1 roll}repeat 7 -1 roll}{5 1 roll 4{_aldimtint mul 5 1 roll}repeat}ifelse}ifelse}ifelse}ifelse}ifelse}def/iM^65{_imc null eq _ctype _registrationeq or _ctype _paper eq or{true iJ^65 _aldimtint tintedseparationimage}{_ctype_spot eq{_imc _aldimtint tintedcolorimage}if _ctype _process eq{_imc_tintedcustomcolorimage}if _ctype _rgb eq{_imc_tinted rgbcustomcolorimage}if _ctype_def eq{_imc_tinted defcustomcolorimage}if _ctype _lab eq{_imc_tintedlabcustomcolorimage}if _ctype _defg eq{_imc_tinted defgcustomcolorimage}if_ctype _hifi eq{_imc_tinted hificolorimage}if}ifelse}def/iN^65{_image}def/customcolorimage level2{{aload pop/_cname xdef 4 iA^65 iC^65 _ctype _spot eqversion cvr 2012 ge and _cname(Red)ne and _cname(Green)ne and _cname(Blue)neand{[/Separation _cname/DeviceCMYK{dup _ic mul exch dup _im mul exch dup _iymul exch _ik mul}]setcolorspace currenttransfer settransfer dup type/dicttypeeq{begin/Decode[1 0]def currentdict end}{[1 0]IMmakeimagedict}ifelse _image}{[/Indexed/DeviceCMYK 255{255 div _localxfer 1 exch sub dup dup dup _ic mul 4 -1roll _im mul 4 -1 roll _iy mul 4 -1 roll _ik mul}]setcolorspace dup type/dicttype eq{begin/Decode[0 255]def currentdict end}{[0 255]IMmakeimagedict}ifelse _image}ifelse}IMndef}{{aload pop pop 4 iA^65 iC^65 _iy 0.0 eq _im 0.0eq and _ic 0.0 eq and hascolor not or{iD^65{_imcmykdarkness mul 1_imcmykdarkness sub add}settransfer _image}{/_localxfer load dup dup dup{_icmul _ic sub 1 add}iB^65/_cproc xdef{_im mul _im sub 1 add}iB^65/_mproc xdef{_iy mul _iy sub 1 add}iB^65/_yproc xdef{_ik mul _ik sub 1 add}iB^65/_kprocxdef currentcolortransfer/_kproc load exch iB^65 4 1 roll/_yproc load exchiB^65 4 1 roll/_mproc load exch iB^65 4 1 roll/_cproc load exch iB^65 4 1 rollsetcolortransfer/_mbuf 0 string def/_ybuf 0 string def/_kbuf 0 string def{iG^65 dup length _mbuf length ne{dup length dup dup/_mbuf exch string def/_ybuf exch string def/_kbuf exch string def}if dup _mbuf copy _ybuf copy_kbuf copy pop}iB^65{_mbuf}{_ybuf}{_kbuf}true 4 colorimage}ifelse}IMndef}ifelse/rgbcustomcolorimage{aload pop pop 3 iA^65 iAP^65 level2{[/Indexed/DeviceRGB 255{255 div _localxfer 1 exch sub dup dup _ir mul exch sub 1 addexch dup dup _ig mul exch sub 1 add exch dup _ib mul exch sub 1 add}]setcolorspace dup type/dicttype eq{begin/Decode[0 255]def currentdict end}{[0255]IMmakeimagedict}ifelse _image}{/_localxfer load dup dup{dup _ir mul exchsub 1 add}iB^65/_rproc xdef{dup _ig mul exch sub 1 add}iB^65/_gproc xdef{dup_ib mul exch sub 1 add}iB^65/_bproc xdef currentcolortransfer/_bproc load exchiB^65 4 1 roll/_gproc load exch iB^65 4 1 roll/_rproc load exch iB^65 4 1 rollsetcolortransfer/_gbuf 0 string def/_bbuf 0 string def{iG^65 dup length _gbuflength ne{dup length dup/_gbuf exch string def/_bbuf exch string def}if dup_gbuf copy _bbuf copy pop}iB^65{_gbuf}{_bbuf}true 3 colorimage}ifelse}IMndef/labcustomcolorimage{aload pop pop 3 iA^65 iAQ^65 exch[/Indexed 3 -1 roll 255{255 div _localxfer dup _iL mul exch 100 mul sub 100 add _iA _iB}]setcolorspacepop dup type/dicttype eq{begin/Decode[255 0]def currentdict end}{[255 0]IMmakeimagedict}ifelse _image}IMndef/defcustomcolorimage{aload pop pop 3 iA^65iAP^65 exch[/Indexed 3 -1 roll 255{255 div _localxfer 1 exch sub dup dup _irmul exch sub 1 add exch dup dup _ig mul exch sub 1 add exch dup _ib mul exchsub 1 add}]setcolorspace pop dup type/dicttype eq{begin/Decode[0 255]defcurrentdict end}{[0 255]IMmakeimagedict}ifelse _image}IMndef/defgcustomcolorimage{aload pop pop 4 iA^65 iC^65 exch[/Indexed 3 -1 roll 255{255 div _localxfer 1 exch sub dup dup dup _ic mul 4 -1 roll _im mul 4 -1 roll_iy mul 4 -1 roll _ik mul}]setcolorspace pop dup type/dicttype eq{begin/Decode[0 255]def currentdict end}{[0 255]IMmakeimagedict}ifelse _image}IMndef/separationimage{level2{[/Separation(All)/DeviceCMYK{dup dup dup}]setcolorspace dup type/dicttype eq{begin/Decode[1 0]def currentdict end}{[1 0]IMmakeimagedict}ifelse image}{_image}ifelse}IMndef/tintedseparationimage{/_aldimtint xdef{_aldimtint mul 1 _aldimtint sub add}settransfer level2{gsave_currenttransfer IMmodifyHalftoneXferAll separationimage grestore}{separationimage}ifelse}IMndef/tintedcolorimage{IMapplytint _ctype _rgb eq{rgbcustomcolorimage}{customcolorimage}ifelse}IMndef/hificolorimage{aload pop/_cname xdef{dup type dup/arraytype ne exch/packedarraytype ne and{exit}{pop}ifelse}loop/_ctype _process def _cname findcmykprocesscolor customcolorimage}IMndef/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1roll}repeat systemdict/setrgbcolor get exec pop}IMndef/setcustomcolor{1 indexdup dup 4 get(Red)eq 3 1 roll 4 get(Green)eq exch 4 get(Blue)eq or or notlevel2 and{exch[exch/Separation exch dup 4 get exch/DeviceCMYK exch 0 4getinterval[exch/dup load exch cvx{mul exch dup}/forall load/pop load dup]cvx]setcolorspace setcolor}{exch aload pop pop 4{4 index mul 4 1 roll}repeatsetcmykcolor pop}ifelse}IMndef/setprocesscolor{exch aload pop pop 4{4 indexmul 4 1 roll}repeat setcmykcolor pop}IMndef/sethificolor{exch aload length 4sub{pop}repeat 4{4 index mul 4 1 roll}repeat setcmykcolor pop}IMndef/setlabcolor{5 -1 roll setcolorspace 4 -1 roll iAO^65 setcolor}IMndef/setdefcolor{5 -1 roll setcolorspace 4 -1 roll iAO^65 setcolor}IMndef/setdefgcolor{6 -1 roll setcolorspace 5 -1 roll iAO^65 setcolor}IMndef/findrgbcolor{4 iA^65}IMndef/finddefcolor{6 iA^65}IMndef/findlabcolor{6 iA^65}IMndef/finddefgcolor{7 iA^65}IMndef/findcmykcustomcolor{5 iA^65}IMndef/findcmykprocesscolor{5 iA^65}IMndef/findhificolor{exch dup dup 4 2 roll 2 mul7 add 2 roll mark exch 2 mul 7 add 1 roll{1 index type/stringtype ne{exit}if 2iA^65 counttomark 1 add 1 roll counttomark 3 add mark exch 1 roll counttomark1 add -1 roll pop}loop counttomark 1 add 4 roll counttomark 1 add -1 roll popexch 5 add iA^65}IMndef/iAO^65{/findcolorrendering where{popfindcolorrendering{/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{pop}{/ColorRendering findresource setcolorrendering}ifelse}ifelse}{pop}ifelse}IMndef/iW^65{abs exch abs 2 copy add 1 gt{1 sub dupmul exch 1 sub dup mul add 1 sub}{dup mul exch dup mul add 1 exch sub}ifelse}def/iX^65{exch pop abs 1 exch sub}def/iAG^65{currentscreen pop/iW^65 loadsetscreen}def/iP^65{currentscreen 3 -1 roll pop setscreen}def/iQ^65{currentscreen exch pop 2 index exch setscreen pop}def/iR^65{currentscreen pop2 index setscreen pop}def/iT^65{dup length 2 sub/_lutlen xdef/_lut xdef{_lutlen mul ADBIMTMP_2/_index 3 -1 roll put ADBIMTMP_2/_low _index floor putADBIMTMP_2/_high _low 1 add put _index _low sub _lut _high cvi get mul _high_index sub _lut _low cvi get mul add}/_localxfer xdef}def/iV^65{concat}def/iH^65{dup _process eq{pop findcmykprocesscolor}{dup _spot eq{popfindcmykcustomcolor}{dup _rgb eq{pop findrgbcolor}{dup _lab eq{popfindlabcolor}{dup _def eq{pop finddefcolor}{_defg eq{finddefgcolor}{findhificolor}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse}def/iI^65{/_ctype xdef/_aldimtint xdef dup null eq{/_imc xdef}{_ctype _hifi eq{1 index 2 mul 6 add}{_ctype _rgb eq{4}if _ctype _process eq _ctype _spot eq or{5}if _ctype _def eq_ctype _lab eq or{6}if _ctype _defg eq{7}if}ifelse copy _ctype iH^65/_imc xdef_ctype IMapplytinttostackcolor _ctype iH^65/_imc_tinted xdef}ifelse _imc nulleq{1 _aldimtint sub setseparationgray}{_ctype _process eq{_imc _aldimtintsetprocesscolor}{_ctype _spot eq{_imc _aldimtint setcustomcolor}{_ctype _rgbeq{_imc_tinted aload pop pop setrgbcolor}{_ctype _lab eq{_imc_tinted aload poppop setlabcolor}{_ctype _def eq{_imc_tinted aload pop pop setdefcolor}{_ctype_defg eq{_imc_tinted aload pop pop setdefgcolor}{_imc _aldimtint sethificolor}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse}def/iJ^65{setoverprint}def/iK^65{false iJ^65 0.0 0.0 0.0 1.0(Black)1.0 _process iI^65}def/iL^65{/_dr1xdef/_dr0 xdef{255 mul dup dr0 lt{pop 0.0}{dup dr1 gt{pop 1.0}{dr0 sub dr1 dr0sub div}ifelse}ifelse}settransfer}def/iS^65{/_invertthemask? xdef}def/OPIimage{dup type/dicttype eq{iN^65}{iM^65}ifelse}def/IMimagemask{/_invertthemask?where{pop dup type/dicttype eq{}{3 -1 roll _invertthemask?{not}if 3 1 roll}ifelse}if _imagemask}def/iY^65{/_colorimage?/colorimage where{pop true}{false}ifelse def}def/iZ^65{{/_readdata{currentfile exch readstring pop}def}{/_readdata{currentfile exch readhexstring pop}def}ifelse/_rows xdef/_cols xdef/_picstr1 _cols string def/_picstr2 _cols string def/_picstr3 _cols string def/_picstr4 _cols string def/_picstr5 _cols string def 12 dict begin/ImageType 1def/Width _cols def/Height _rows def/ImageMatrix[_cols 0 0 _rows neg 0 _rows]def/BitsPerComponent 8 def _colorimage?{/Decode[0 1 0 1 0 1 0 1]def}{/Decode[01]def}ifelse _colorimage?{/MultipleDataSources true def/DataSource[{_picstr1_readdata}{_picstr2 _readdata}{_picstr3 _readdata}{_picstr4 _readdata _picstr5_readdata pop}]def}if _colorimage? not{/DataSource{_picstr1 _readdata pop_picstr2 _readdata pop _picstr3 _readdata pop _picstr4 _readdata pop _picstr5_readdata}def}if currentdict end}def/IMcmykimage{level2{_colorimage?{/DeviceCMYK}{/DeviceGray}ifelse setcolorspace image}{begin Width HeightBitsPerComponent ImageMatrix Decode length 2 eq{/DataSource load image}ifDecode length 8 eq{DataSource 0 get DataSource 1 get DataSource 2 getDataSource 3 get true 4 colorimage}if end}ifelse}def/iAC^65{/ADBIMTMP_2 where{pop ADBIMTMP_2 begin}{/ADBIMTMP_2 75 dict def ADBIMTMP_2 begin/_cname()def/_ctype null def/_aldimtint 1 def/_imc[]def/_imc_tinted[]def/_tint -1 def/_ix0 def/_len 0 def/_ic 0 def/_im 0 def/_iy 0 def/_ik 0 def/_ir 0 def/_ig 0 def/_ib 0 def/_iL 0 def/_iA 0 def/_iB 0 def/_imcmykdarkness 0 def/_proc1 null def/_proc2 null def/_newproc null def/_cproc null def/_mproc null def/_yproc nulldef/_kproc null def/_rproc null def/_gproc null def/_bproc null def/_mbuf()def/_ybuf()def/_kbuf()def/_gbuf()def/_bbuf()def/_colorimage? false def/_readdata{}def/_rows 0 def/_cols 0 def/_picstr1 null def/_picstr2 null def/_picstr3 nulldef/_picstr4 null def/_picstr5 null def/_invertthemask? false def/_dr1 0 def/_dr0 0 def/_lutlen 0 def/_lut[]def/_index 0 def/_low 0 def/_high 0 def/_ninks0 def/_depth 0 def/_curxfer currenttransfer def/currenttransfer{{}}def/_localxfer{}def/settransfer{/_localxfer load exch iB^65/_curxfer load iB^65_settransfer}def}ifelse}def/iAD^65{end}def end%%EndResourceP65PS begin o3`65
%%BeginResource: procset Pscript_Win_Driver 2.0 0
userdict /Pscript_Win_Driver_OC 300 dict dup begin put
%%BeginResource: file Pscript_FatalError 2.0 0
/FatalErrorIf{{initgraphics findfont exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def
%%EndResource
/VM? {vmstatus exch sub exch pop gt { [
(This job requires more memory than is available in this printer.) 100 500
(Try one or more of the following, and then print again:) 100 485
(In the PostScript dialog box, click Optimize For Portability.) 115 470
(In the Device Options dialog box, make sure the Available Printer Memory is accurate.) 115 455
(Reduce the number of fonts in the document.) 115 440
(Print the document in parts.) 115 425
12 /Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%) =
true FatalErrorIf}if} bind def
%%BeginResource: file Pscript_Win_Utils 2.0 0
/|/def load def/,/load load |/~/exch , |/?/ifelse , |/!/pop , |/`/begin , |/^
/index , |/@/dup , |/+/translate , |/$/roll , |/U/userdict , |/M/moveto , |/-
/rlineto , |/&/currentdict , |/:/gsave , |/;/grestore , |/F/false , |/T/true ,
|/N/newpath , |/E/end , |/Ac/arc , |/An/arcn , |/A/ashow , |/D/awidthshow , |
/C/closepath , |/V/div , |/O/eofill , |/L/fill , |/I/lineto , |/-C/rcurveto ,
|/-M/rmoveto , |/+S/scale , |/Ji/setfont , |/Lc/setlinecap , |/Lj/setlinejoin
, |/Lw/setlinewidth , |/S/show , |/LH/showpage , |/K/stroke , |/W/widthshow ,
|/R/rotate , |/b{bind |}bind |/bd{bind |}bind |/xd{~ |}bd/ld{, |}bd/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/L2? F/languagelevel where{! languagelevel 2
ge{! T}if}if |/g{@ not{U/DefIf_save save put}if U/DefIf_bool 2 ^ put}b
/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e{DefIf_El !
}b/self & |/reinitialize{[/TextInit/GraphInit/UtilsInit counttomark{@ where{
self eq}{F}?{cvx exec}{!}?}repeat cleartomark}b/initialize{`{/ADO_mxRot ~ |
/TextInitialised? F | reinitialize E}{U/Pscript_Win_Data 200 dict @ ` put
/ADO_mxRot ~ |/TextInitialised? F | reinitialize}?}b/terminate{!{& self eq{
exit}{E}?}loop E}b/suspend/terminate , |/resume{` Pscript_Win_Data `}b/snap{
transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~ itransform}b
/dsnap{dtransform round ~ round ~ idtransform}b<04>cvn{}|/setjn{{statusdict
/jobname known{statusdict/jobname 3 -1 $ put}if}stopped cleartomark}b/solid{[]
0 setdash}b/setdsh{0 setdash}b/colspRefresh{}b/rp{4 2 $ M 1 ^ 0 - 0 ~ - neg 0
-}b/rr{1 ^ 0 - 0 ~ - neg 0 - C}b
%%EndResource
userdict /Level2ImagesError [
(This job contains a bitmapped image that can be printed only on) 100 500
(PostScript(R) Level 2 printers.  Please send this file to a PostScript) 100 485
(Level 2 printer, or print your document again with the correct printer) 100 470
(selected.) 100 455
12 /Times-Roman
] put
%%BeginResource: file Pscript_Win_Utils_L1 2.0 0
L2? not g{/rf{N rp L}b/fx{1 1 dtransform @ 0 ge{1 sub 1}{1 add -0.25}? 3 -1 $
@ 0 ge{1 sub 1}{1 add -0.25}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{
4 -2 $ snap + +S fx rf}b/rs{N rp C K}b/rc{N rp clip N}b/sg{setgray}b/sco{
setrgbcolor}b/sgco{{sg}{sco}?}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 2.0 0
L2? g{/colspA/DeviceGray |/colspABC/DeviceRGB |/setAorABC{{colspA}{colspABC}?
setcolorspace}b/rf/rectfill , |/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5
}? 3 -1 $ @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $
idtransform}b/BZ{4 -2 $ snap + +S fx rf}b/rs/rectstroke , |/rc/rectclip , |/sg
{setgray}b/sco{setrgbcolor}b/colspRefresh{colspABC setcolorspace}b/sgco{{sg}{
sco}?}b/UtilsInit{F setglobal}b/definecolorrendering{/ColorRendering
defineresource !}b/findcolorrendering{@/ColorRendering resourcestatus{! !
/ColorRendering findresource T}{! F}?}b/selectcolorrendering{@/ColorRendering
resourcestatus{! !/ColorRendering}{!/DefaultColorRendering/ColorRendering}?
findresource setcolorrendering}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Encoding 2.0 0
/bullets{{/bullet}repeat}b/ANSIEncoding[/grave/acute/circumflex/tilde/macron
/breve/dotaccent/dieresis/ring/cedilla/hungarumlaut/ogonek/caron/dotlessi 18
bullets StandardEncoding 32 95 getinterval aload ! 3 bullets/quotesinglbase
/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron
/guilsinglleft/OE 4 bullets/quoteleft/quoteright/quotedblleft/quotedblright
/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe 2 bullets
/Ydieresis/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]| ANSIEncoding @ 39/quotesingle put 96/grave
put/ANSIEncodingOld ANSIEncoding 256 array copy | ANSIEncodingOld @[138 153
154 169 172 174 177 178 179 181 185 188 189 190 208 215 221 222 240 247 253
254]{/bullet put @}forall 166/bar put 176/ring put
%%EndResource
%%BeginResource: file Pscript_Win_Text 2.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & |/TextInitialised? T |
/fM[1 0 0 -1 0 0]|/mFM matrix |/iMat[1 0 0.212557 neg 1 0 0]|}if}b/xUP null |
/yUP null |/uW null |/xSP null |/ySP null |/sW null |/copyfont{1 ^ length add
dict `{1 ^/FID ne{|}{! !}?}forall & E}b/rF{3 copyfont @ `/Encoding
ANSIEncoding &/CharStrings known{CharStrings/Eth known not{! ANSIEncodingOld}
if}if | E}b/mF{findfont ~{@/Encoding get @ StandardEncoding eq{! T}{{
ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{rF}{3 copyfont}? `
/OrigFontType ~ |/OrigFontName ~ | & E 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0
put fM makefont Pscript_Windows_Font 3 1 $ put}b/xF{scalefont
Pscript_Windows_Font 3 1 $ put}b/xMF{mFM astore makefont Pscript_Windows_Font
3 1 $ put}b/xF2/scalefont , |/xMF2{mFM astore makefont}b/sLT{: Lw -M
currentpoint snap M 0 - 0 Lc K ;}b/sSU{N/uW ~ |/yUP ~ |/xUP ~ |}b/sU{xUP yUP
uW sLT}b/sST{N/sW ~ |/ySP ~ |/xSP ~ |}b/sT{xSP ySP sW sLT}b/sR{: + R 0 0 M}b
/sRxy{: matrix astore concat 0 0 M}b/eR/; , |
%%EndResource
%%BeginResource: file Pscript_Win_Text_Bold 2.0 0
/mBF{@ 4 copyfont `/FontName ~ |/OrigFontType ~ |/OrigFontName ~ | 0
FontMatrix idtransform ! &/PaintType known{PaintType 0 eq{/PaintType 2 |
/StrokeWidth ~ |}{PaintType 1 eq PaintType 2 eq or PaintType 3 eq or &
/StrokeWidth known and{StrokeWidth add/StrokeWidth ~ |}{!}?}?}{!}? @ & E
definefont Pscript_Windows_Font 3 1 $ put}b/xBF{Pscript_Windows_Font ` 1 ^
/FontName get 1 ^ scalefont 3 1 $ scalefont 2 copy ~ | ~ ! | E}b/xMBF{mFM
astore Pscript_Windows_Font ` 1 ^/FontName get 1 ^ makefont 3 1 $ makefont 2
copy ~ | ~ ! | E}b/xBF2{/sB0 ~ mBF/sB1 sB0 3 -1 $ xBF sB1}b/xMBF2{/sB0 ~ mBF
mFM astore/sB1 sB0 3 -1 $ xMBF sB1}b/sB{: Pscript_Windows_Font currentfont get
Ji @ S ; S}b/asB{: Pscript_Windows_Font currentfont get Ji 3 copy A ; A}b/wsB{
: Pscript_Windows_Font currentfont get Ji 4 copy W ; W}b/awsB{:
Pscript_Windows_Font currentfont get Ji 6 copy D ; D}b/sBT3{: @ S ; 1 1 -M S}b
/asBT3{: 3 copy A ; 1 1 -M A}b/wsBT3{: 4 copy W ; 1 1 -M W}b/awsBT3{: 6 copy D
; 1 1 -M D}b/mIF{iMat 4 3 -1 $ put 2 copyfont `/OrigFontType ~ |/OrigFontName
~ | @ & E definefont iMat makefont Pscript_Windows_Font 3 1 $ put}b
%%EndResource
%%BeginResource: file Pscript_Win_Graphics 2.0 0
/SavedCTM null |/CTMsave{/SavedCTM SavedCTM currentmatrix |}b/CTMrestore{
SavedCTM setmatrix}b/mp null |/ADO_mxRot null |/GDIHMatrix null |
/GDIHPatternDict 22 dict | GDIHPatternDict `/PatternType 1 |/PaintType 2 |
/Reps L2?{1}{5}? |/XStep 8 Reps mul |/YStep XStep |/BBox[0 0 XStep YStep]|
/TilingType 1 |/PaintProc{` 1 Lw[]0 setdash PaintData , exec E}b/FGnd null |
/BGnd null |/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b
/HS_BDiagonal{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep
XStep YStep gt{XStep}{YStep}? |/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8
Reps mul + K}b/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag
{Reps{0 0 M MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps
mul + 0 YStep M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M
MaxXYStep @ neg - 0 8 +}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E
/makehatch{GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0/HS_Horizontal
makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal makehatch}b/h3{
/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5/HS_DiagCross
makehatch}b/GDIBWPatternDict 17 dict @ `/PatternType 1 |/PaintType L2?{1}{2}?
|/RepsV L2?{1}{6}? |/RepsH L2?{1}{5}? |/BBox[0 0 RepsH 1]|/TilingType 1 |
/XStep 1 |/YStep 1 |/Height 8 RepsV mul |/Width 8 |/mx[Width 0 0 Height neg 0
Height]|/FGnd null |/BGnd null |/SetBGndFGnd L2?{{BGnd null ne{BGnd aload !
sgco BBox aload ! 2 ^ sub ~ 3 ^ sub ~ rf}if FGnd null ne{FGnd aload ! sgco}if}
}{{}}? b/PaintProc{` SetBGndFGnd RepsH{Width Height F mx PaintData imagemask
Width 0 +}repeat E}b E |/GDIBWPatternMx null |/pfprep{save 4 1 $
/PatternOfTheDay 4 1 $ GDIBWPatternDict `/PaintData ~ |/BGnd ~ |/FGnd ~ | E
CTMsave GDIBWPatternMx setmatrix GDIBWPatternDict matrix mp CTMrestore ~ !}b
/hrf null |/prf{pfprep ~ 6 1 $ 5 hrf restore}b/GraphInit{GDIHMatrix null eq{
/SavedCTM matrix | : ADO_mxRot concat 0 0 snap + : 0.48 @ GDIHPatternDict `
YStep mul ~ XStep mul ~ dsnap YStep V ~ XStep V ~ E +S/GDIHMatrix matrix
currentmatrix readonly | ; : 0.24 -0.24 +S GDIBWPatternDict ` Width Height E
dsnap +S/GDIBWPatternMx matrix currentmatrix readonly | ; ;}if}b/cirp{360 0 An
C}b/ellp{CTMsave + +S 0.5 0 M 0 0 0.5 360 0 An C CTMrestore}b/rrp{/rad ~ |/y2
~ |/x2 ~ |/y1 ~ |/x1 ~ | x2 x1 add 2 V y1 M x1 y1 x1 y2 rad arct x1 y2 x2 y2
rad arct x2 y2 x2 y1 rad arct x2 y1 x1 y1 rad arct C}b/RRp{CTMsave + +S/dyS ~
|/dxS ~ | dxS 2 V 0 M 0 0 0 dyS 0.5 arct 0 dyS dxS dyS 0.5 arct dxS dyS dxS 0
0.5 arct dxS 0 0 0 0.5 arct C CTMrestore}b
%%EndResource
%%BeginResource: file Pscript_Win_Graphics_L1 2.0 0
L2? not g{/arct{arcto ! ! ! !}b/GDIpattfill{@ ` BGnd null ne PaintType 2 eq
and{: BGnd aload ! sgco fEOFill{O}{L}? ; FGnd aload ! U/fGray 2 ^ put{2}{4}?
-1 $}if E @ patterncalc : 4 ^/PaintType get 2 eq{fGray{6 -1 $ sg}{8 -3 $ sco}?
}if fEOFill{eoclip}{clip}? N patternfill ; N}b/hrf{/fGray 1 ^ 6 eq | -4 $ N rp
C/fEOFill F | GDIpattfill}b/hfMain{/fEOFill ~ |/fGray ~ | GDIpattfill}b/hf{T
hfMain}b/hfW{F hfMain}b/hs{currentpoint strokepath M hfW}b/pfMain{/fEOFill ~ |
pfprep GDIpattfill restore N}b/pf{T pfMain}b/pfW{F pfMain}b/ps{currentpoint
strokepath M pfW}b/mpstr 1 string |/mp{~ @ length 12 add dict copy `
/PatternCTM matrix currentmatrix |/PatternMatrix ~ |/PatWidth XStep mpstr
length mul |/PatHeight YStep |/FontType 3 |/Encoding 256 array | 3 string 0 1
255{Encoding ~ @ 3 ^ cvs cvn put}for !/FontMatrix matrix |/FontBBox BBox |
/BuildChar{! @ ` XStep 0 FontBBox aload ! setcachedevice/PaintProc , E : exec
;}b & E ~ @ 3 -1 $ definefont}b/patterncalc{` : PatternCTM setmatrix
PatternMatrix concat BBox aload ! ! ! + pathbbox ; PatHeight V ceiling 4 1 $
PatWidth V ceiling 4 1 $ PatHeight V floor 4 1 $ PatWidth V floor 4 1 $ 2 ^
sub cvi abs ~ 3 ^ sub cvi abs ~ 4 2 $ PatHeight mul ~ PatWidth mul ~ E}b
/patternfill{5 -1 $ @ ` Ji PatternCTM setmatrix PatternMatrix concat 0 2 ^ 2 ^
M 0 1 mpstr length 1 sub{1 ^ mpstr 3 1 $ put}for ! 2 ^{currentpoint 5 ^{mpstr
S}repeat YStep add M}repeat ! ! ! ! E}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Graphics_L2 2.0 0
L2? g{/mp/makepattern , |/hrf{6 eq setAorABC setpattern rectfill}b/hf{
setAorABC setpattern O}b/hfW{setAorABC setpattern L}b/hs{setAorABC setpattern
K}b/pf{pfprep setpattern O restore N}b/pfW{pfprep setpattern L restore N}b/ps{
pfprep setpattern K restore N}b}e
%%EndResource
%%BeginResource: file Pscript_Win_BW_Images 2.0 0
/iw 0 |/ih 0 |/im_save 0 |/s 0 |/polarity 0 |/smoothflag 0 |/mystring 0 |/bpc
0 |/setup1asciiproc{[currentfile mystring/readhexstring cvx/! cvx]cvx bind}b
/setup1binaryproc{[currentfile mystring/readstring cvx/! cvx]cvx bind}b
/setup2asciiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}b
/setup2binaryproc{currentfile/RunLengthDecode filter}b/mycolorspace{colspABC}|
/myimagedict{/myimagedict 10 dict | myimagedict @ `/ImageType 1 |
/MultipleDataSource F | E}b/imageprocarray[/setup1binaryproc/setup1asciiproc
/setup2binaryproc/setup2asciiproc/setup1binarydecodeproc/setup1asciidecodeproc
]|/L2Polarity{{[1 0]}{[0 1]}?}b/Q{/im_save save | imageprocarray ~ get/s ~ , |
L2Polarity/polarity ~ |/smoothflag ~ | snap +/dx 2 ^ |/dy 1 ^ | +S/mystring ~
string |/bpc ~ |/ih ~ |/iw ~ |}b/X{/im_save save | imageprocarray ~ get/s ~ ,
| L2Polarity/polarity ~ |/smoothflag ~ | snap +/dx 2 ^ |/dy 1 ^ | +S/mystring
~ string |/bpc ~ |/ih ~ |/iw ~ |}b/Z{im_save restore}b/Y{sgco myimagedict @ `
/Width iw |/Height ih |/Decode polarity |/ImageMatrix[iw 0 0 ih 0 0]|
/DataSource s |/BitsPerComponent 1 |/Interpolate smoothflag | E imagemask}b
%%EndResource
%%BeginResource: file Pscript_Win_BW_Images_L1 2.0 0
L2? not g{/setup2asciiproc{[/Level2ImagesError , aload ! T FatalErrorIf}b
/setup2binaryproc/setup2asciiproc , |/L2Polarity{}|/Y{sgco iw ih polarity[iw 0
0 ih 0 0]s imagemask}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Co_Images_L1 2.0 0
L2? not g{/testsystemdict{where{systemdict eq{T}{F}?}{F}?}b/c 1 |/colorimage
where{! T}{F}?{/c 0 statusdict `/processcolors where{! ! processcolors}{
/deviceinfo where{! deviceinfo/Colors known{!{deviceinfo/Colors get}}if}if}? E
| c 0 ne{/colorimage testsystemdict/setcolortransfer testsystemdict
/currentcolortransfer testsystemdict/currentcmykcolor testsystemdict and and
and not{/c 0 |}if}if}if c @ 1 ne ~ @ 3 ne ~ 4 ne and and{/c 0 |}if c 1 eq g{
/expandbw{expandfactor mul round cvi bwclut ~ get 255 V}b/doclutimage{!/bwclut
~ | bpc @ 8 eq{! 255}{4 eq{15}{3}?}?/expandfactor ~ |[/expandbw ,/exec , @
currenttransfer ~]cvx bind settransfer iw ih bpc[iw 0 0 ih 0 0]s image}b}e c @
3 eq ~ 4 eq or g{/nullproc{{}}|/concatutil{/exec , 7 -1 $/exec ,}b/defsubclut{
1 add getinterval |}b/spconcattransfer{/Dclut ~ |/Cclut ~ |/Bclut ~ |/Aclut ~
|/ncompute ~ , | currentcolortransfer[{Aclut ncompute}concatutil]cvx[{Bclut
ncompute}concatutil]cvx[{Cclut ncompute}concatutil]cvx[{Dclut ncompute}
concatutil]cvx setcolortransfer}b/setuprgbcluts{/bit3x rgbclut length 3 sub |
/bit1x bit3x 3 idiv |/rclut rgbclut |/gclut rclut 1 bit3x defsubclut/bclut
rclut 2 bit3x defsubclut}b}e c 3 eq g{/3compute{~ bit3x mul round cvi get 255
V}b/doclutimage{/rgbclut ~ | ! setuprgbcluts/3compute rclut gclut bclut @
spconcattransfer iw ih bpc[iw 0 0 ih 0 0][s/exec ,/@ , @]cvx nullproc nullproc
T 3 colorimage}b}e c 4 eq g{/ftoint{1 ~ sub 255 mul round cvi}b/stuffclut{
cmykindex 3 -1 $ put}b/4compute{~ bit4x mul round cvi get 255 V}b
/invalidcolortable? T |/computecmykclut{setuprgbcluts/bit4x rgbclut length 3
idiv 4 mul 4 sub |/cmykclut bit4x 4 add string |/cclut cmykclut |/mclut cclut
1 bit4x defsubclut/yclut cclut 2 bit4x defsubclut/kclut cclut 3 bit4x
defsubclut/cmykindex 0 | 0 1 bit1x{@/cmykindex ~ bit1x ~ sub 4 mul | 3 mul @
rclut ~ get 255 V ~ @ gclut ~ get 255 V ~ bclut ~ get 255 V setrgbcolor
currentcmykcolor ftoint kclut stuffclut ftoint yclut stuffclut ftoint mclut
stuffclut ftoint cclut stuffclut}for}b/doclutimage{/rgbclut ~ | !
invalidcolortable?{computecmykclut}if/4compute cclut mclut yclut kclut
spconcattransfer iw ih bpc[iw 0 0 ih 0 0][s/exec ,/@ , @ @]cvx nullproc
nullproc nullproc T 4 colorimage}b}e c 0 eq g{/a{3 mul 3 getinterval
putinterval ~ 3 add ~ 3 copy}b/8lookup/a , |/4lookup{/byte 1 ^ | -4 bitshift a
byte 15 and a}b/2lookup{/byte 1 ^ | -6 bitshift a byte -4 bitshift 3 and a
byte -2 bitshift 3 and a byte 3 and a}b/colorexpand{mystringexp 0 rgbclut 3
copy 7 -1 $/mylookup , forall ! ! ! ! !}b/createexpandstr{/mystringexp ~
mystring length mul string |}b/doclutimage{/rgbclut ~ | !/mylookup bpc 8 eq{3
createexpandstr/8lookup}{bpc 4 eq{6 createexpandstr/4lookup}{12
createexpandstr/2lookup}?}? , | iw ih bpc[iw 0 0 ih 0 0][s/exec ,/colorexpand
,/exec ,]cvx F 3 colorimage}b}e/colorimage where{! T}{F}? g{/do24image{iw ih 8
[iw 0 0 ih 0 0]s F 3 colorimage}b}DefIf_El{/rgbtogray{/str ~ |/len str length
|/smlen len 3 idiv |/rstr str |/gstr str 1 len 1 sub getinterval |/bstr str 2
len 2 sub getinterval | str @ 0 1 smlen 1 sub{@ 3 mul rstr 1 ^ get 0.3 mul
gstr 2 ^ get 0.59 mul add bstr 3 -1 $ get 0.11 mul add round cvi put @}for ! 0
smlen getinterval}b/do24image{iw ih 8[iw 0 0 ih 0 0][s/exec ,/rgbtogray ,/exec
,]cvx bind image}b}e/doNimage{bpc 24 eq{do24image}{iw ih bpc[iw 0 0 ih 0 0]s
image}?}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Co_Images_L2 2.0 0
L2? g{/doclutimage{/rgbclut ~ | ! bpc @ 8 eq{! 255}{4 eq{15}{3}?}?/hival ~ |[
/Indexed colspABC hival rgbclut]setcolorspace myimagedict @ `/Width iw |
/Height ih |/Decode[0 hival]|/ImageMatrix[iw 0 0 ih 0 0]|/DataSource s |
/BitsPerComponent bpc |/Interpolate smoothflag | E image}b/doCMYKclutimage{
/CMYKclut ~ | ! bpc @ 8 eq{! 255}{4 eq{15}{3}?}?/hival ~ |[/Indexed/DeviceCMYK
hival CMYKclut]setcolorspace myimagedict @ `/Width iw |/Height ih |/Decode[0
hival]|/ImageMatrix[iw 0 0 ih 0 0]|/DataSource s |/BitsPerComponent bpc |
/Interpolate smoothflag | E image}b/doNimage{bpc 24 eq{colspABC}{colspA}?
setcolorspace myimagedict @ `/Width iw |/Height ih |/Decode bpc 24 eq{[0 1 0 1
0 1]}{[0 1]}? |/ImageMatrix[iw 0 0 ih 0 0]|/DataSource s |/BitsPerComponent
bpc 24 eq{8}{bpc}? |/Interpolate smoothflag | E image}b/doCMYKimage{
/DeviceCMYK setcolorspace myimagedict @ `/Width iw |/Height ih |/Decode[0 1 0
1 0 1 0 1]|/ImageMatrix[iw 0 0 ih 0 0]|/DataSource s |/BitsPerComponent 8 |
/Interpolate smoothflag | E image}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Type3_Hdr 2.0 0
/GreNewFont{10 dict @ 3 1 $ | @ ` 4 1 $/FontType 3 |/FontMatrix ~ |/FontBBox ~
|/Encoding 256 array | 0 1 255{Encoding ~/.notdef put}for/CharProcs 257 dict |
CharProcs/.notdef{}put/Metrics 257 dict | Metrics/.notdef 3 -1 $ put/BuildChar
{/char ~ |/fontdict ~ |/charname fontdict/Encoding get char get | fontdict
/Metrics get charname get aload ! setcachedevice fontdict ` Encoding char get
CharProcs ~ get E exec}| E definefont !}|/AddChar{` Encoding 3 1 $ put
CharProcs 3 1 $ put Metrics 3 1 $ put E}|
%%EndResource
%%BeginResource: file Pscript_Win_Type1_Hdr 2.0 0
/FEbuf 2 string |/FEglyph 3 string |/FE{(G00)FEglyph copy ! 1 ~{@ 16 lt{
/offset 2 store}{/offset 1 store}? @ 16 FEbuf cvrs FEglyph ~ offset ~
putinterval 1 ^ ~ FEglyph cvn put}for}bind |/Type1Hdr{11 dict `/FontName ~ |
/PaintType ~ |/FontType 1 |/FontMatrix[1 3 ^ V 0 0 1 6 ^ V 0 0]| !/Encoding
256 array 0 1 255{1 ^ ~/.notdef put}for 3 ^ 3 ^ FE | ! !/FontBBox{0 0 0 0}| &
E currentfile eexec}bind |
%%EndResource
%%BeginResource: file Pscript_Win_Compat 2.0 0
userdict/Pscript_Win_Compat 13 dict dup begin/bd{bind def}bind def/ld{load def
}bd/CB{pop pop pop pop}bind def/B{pop pop pop pop}bind def/$x matrix def/SS{
/pagesave save def}bind def/RS{/pagesave where{pop pagesave restore}{$x matrix
invertmatrix concat}ifelse}bind def/ANSIVec[0/grave 1/acute 2/circumflex 3
/tilde 4/macron 5/breve 6/dotaccent 7/dieresis 8/ring 9/cedilla 10
/hungarumlaut 11/ogonek 12/caron 13/dotlessi 39/quotesingle 96/grave 124/bar
130/quotesinglbase 131/florin 132/quotedblbase 133/ellipsis 134/dagger 135
/daggerdbl 136/circumflex 137/perthousand 138/Scaron 139/guilsinglleft 140/OE
145/quoteleft 146/quoteright 147/quotedblleft 148/quotedblright 149/bullet 150
/endash 151/emdash 152/tilde 153/trademark 154/scaron 155/guilsinglright 156
/oe 159/Ydieresis 160/space 161/exclamdown 164/currency 165/yen 166/brokenbar
167/section 168/dieresis 169/copyright 170/ordfeminine 171/guillemotleft 172
/logicalnot 173/hyphen 174/registered 175/macron 176/degree 177/plusminus 178
/twosuperior 179/threesuperior 180/acute 181/mu 182/paragraph 183
/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 187
/guillemotright 188/onequarter 189/onehalf 190/threequarters 191/questiondown
192/Agrave 193/Aacute 194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198
/AE 199/Ccedilla 200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204
/Igrave 205/Iacute 206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve
211/Oacute 212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 223
/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 229
/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 235/edieresis
236/igrave 237/iacute 238/icircumflex 239/idieresis 240/eth 241/ntilde 242
/ograve 243/oacute 244/ocircumflex 245/otilde 246/odieresis 247/divide 248
/oslash 249/ugrave 250/uacute 251/ucircumflex 252/udieresis 253/yacute 254
/thorn 255/ydieresis]def currentdict{dup type/operatortype eq{[exch]cvx def}{
pop pop}ifelse}forall/initialize{currentdict exch begin begin}bind def
/terminate{/@FL where not{pop end end}{pop}ifelse}bind def/suspend/terminate
load def/resume/initialize load def/M/moveto load def end put/Courier findfont
10 scalefont setfont
%%EndResource
end
%%EndResource

[ 1.000 0 0 1.000 0 0 ] true Pscript_Win_Driver_OC dup /initialize get exec
/mysetup [ 1.000 0 0 1.000 0 0 ]  def 
Pscript_Win_Driver_OC vm$65
%%EndProlog
%%BeginSetup
/currentdistillerparams where {pop}
{userdict /currentdistillerparams {1 dict} put} ifelse
/setdistillerparams where {pop}
{userdict /setdistillerparams {pop} put} ifelse
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
[ /Title (QuickRefCard-Page1)
/Author (dave)
/Subject (QuickRefCard-Page1)
/Keywords ()
/Creator (Adobe PageMaker 6.5)
/DOCINFO pdfmark
OSdict begin
AdobeIMLIBDict_5.0.00 begin 
P65PS begin
PPDSetup{
(dave; document: QuickRefCard-Both-Pages.p65) statusdict /jobname 3 -1 roll put
}PPDCleanup
PPDSetup{
%%BeginFeature:
1 dict dup /NumCopies 1 put setpagedevice
%%EndFeature
}PPDCleanup
PPDSetup{
%%BeginFeature: *CustomPageSize True
792 612 0 0 1    4 dict begin   pop	% pop /Orientation value off the stack to fix bug in PageMaker 5.0   2 array astore /PageOffset exch def   2 array astore /PageSize exch def   /ImagingBBox null def   currentdict end setpagedevice
%%EndFeature
}PPDCleanup
/isWinPS true def
0 k1`65
f1`65
352 v1`65
T v2`65
j`65
%%EndSetup
%%Page: 1 1
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
%%BeginPageSetup 
%%EndPageSetup 
0.05 -0.05 scale
7920 -6120 translate
-7920 0 translate
bse^65
2.4 2.4 1 1 ps$65
600 n`65
/$0 bmt^65
o`65
N1`65
N1`65
F M1`65
$0 tsi^65
/$0 bmt^65
%%IncludeResource: font Helvetica
/AA /|______Helvetica T /Helvetica x1`65
/$1 bmt^65
/AA 100 100 w1`65
T g`65
0 0 0 1 (Black) 1 _process d`65
156 -101 (Monitoring the permissions on system files is crucial to maintain host integrity) 0.757553 0 1434 11 79 A1`65
1587 -101 (.) 0.757553 0 12 0 0 A1`65
/AA 120 120 w1`65
156 -11 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
187 -11 (Regularly audit your systems for any unauthorized and unnecessary use of the setuid or setgid) -0.119034 0 1747 14 92 A1`65
156 42 (permissions. \223Set-user-ID root\224 programs run as the ) 0.119034 0 969 7 51 A1`65
$1 tsi^65
%%IncludeResource: font Courier-Bold
/AB /|______Courier-Bold T /Courier-Bold x1`65
/$1 bmt^65
/AB 100 100 w1`65
T g`65
0 0 0 1 (Black) 1 _process d`65
1125 42 (root) 0 0 100 0 3 A1`65
$1 tsi^65
%%IncludeResource: font Helvetica-Bold
/AC /|______Helvetica-Bold T /Helvetica-Bold x1`65
/$1 bmt^65
/AC 100 100 w1`65
T g`65
0 0 0 1 (Black) 1 _process d`65
1225 42 ( ) 0 0 12 1 0 A1`65
/AA 100 100 w1`65
1237 42 (user) 0.208328 0 81 0 3 A1`65
1316 42 (, regardless of who is executing them,) 0.208328 0 702 6 37 A1`65
156 92 (and are a frequent cause of buf) 0.07811 0 584 6 30 A1`65
739 92 (fer overflows. Many programs are setuid and setgid to enable a) 0.07811 0 1170 10 61 A1`65
156 142 (normal user to perform operations that would otherwise require root, and can be removed if your) 0.333313 0 1783 15 94 A1`65
156 192 (users do not need such permission.  Find all setuid and setgid programs on your host and) -0.286438 0 1653 16 87 A1`65
156 242 (descriminately remove the setuid or setgid permissions on a suspicious program with ) 0.312485 0 1585 12 83 A1`65
/AB 100 100 w1`65
1741 242 (chmod) 0 0 125 0 4 A1`65
/AA 100 100 w1`65
1866 242 (:) 0 0 12 0 0 A1`65
/AB 100 100 w1`65
156 332 ( root# find / -type f -perm +6000 -ls) 0 0 925 8 36 A1`65
156 382 ( 59520   30 -rwsr-xr-x   1 root   root  30560 Apr 15  1999 /usr/bin/chage) 0 0 1825 19 72 A1`65
156 432 ( 59560   16 -r-sr-sr-x   1 root   lp    15816 Jan  6  2000 /usr/bin/lpq) 0 0 1775 22 70 A1`65
156 482 ( root# chmod -s /usr/bin/chage /usr/bin/lpq) 0 0 1075 5 42 A1`65
156 532 ( root# ls -l /usr/bin/lpq /usr/bin/chage) 0 0 1000 5 39 A1`65
156 582 ( -rwxr-xr-x   1 root     root        30560 Apr 15  1999 /usr/bin/chage) 0 0 1750 23 69 A1`65
156 632 ( -r-xr-xr-x   1 root     lp          15816 Jan  6  2000 /usr/bin/lpq) 0 0 1700 26 67 A1`65
/AA 120 120 w1`65
156 722 (\225 ) 0.833313 0 32 1 1 A1`65
/AA 100 100 w1`65
188 722 (W) 1.025604 0 41 0 0 A1`65
229 722 (orld-writable files are easily altered or removed. Locate all world-writable files on your system:) 1.025604 0 1742 13 97 A1`65
/AB 80 80 w1`65
156 809 ( ) 0 0 20 1 0 A1`65
/AB 100 100 w1`65
176 809 (root# find / -perm -2 ! -type l -ls) 0 0 875 8 34 A1`65
/AA 100 100 w1`65
156 892 (In the normal course of operation, several files will be world-writable, including some from ) 0.803543 0 1675 14 92 A1`65
/AC 100 100 w1`65
1831 892 (/dev) 0 0 83 0 3 A1`65
/AA 100 100 w1`65
1914 892 ( and) 0.833313 0 82 1 3 A1`65
156 942 (the ) 1.666626 0 72 1 3 A1`65
/AC 100 100 w1`65
228 942 (/tmp) 0 0 88 0 3 A1`65
/AA 100 100 w1`65
316 942 ( directory itself.) 1.874954 0 285 2 17 A1`65
/AA 120 120 w1`65
156 1032 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
187 1032 (Locate and identify all files that do not have an owner or belong to a group. Unowned files may also) 0.306992 0 1843 19 99 A1`65
156 1085 (be an indication an intruder has accessed your system.) -0.364563 0 1017 8 53 A1`65
/AB 100 100 w1`65
156 1169 ( root# find / -nouser -o -nogroup) 0 0 825 6 32 A1`65
/AA 120 120 w1`65
156 1259 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
188 1259 (Using the ) 0.416656 0 189 2 9 A1`65
/AB 100 100 w1`65
377 1259 (lsattr) 0 0 150 0 5 A1`65
/AC 100 100 w1`65
527 1259 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
539 1259 (and ) 0.416656 0 82 1 3 A1`65
/AB 100 100 w1`65
621 1259 (chattr) 0 0 150 0 5 A1`65
/AA 100 100 w1`65
771 1259 ( commands, administrators can modify characteristics of files and) 0.416656 0 1213 8 64 A1`65
156 1312 (directories, including the ability to control deletion and modification above what normal ) 0.937469 0 1615 12 89 A1`65
/AB 100 100 w1`65
1771 1312 (chmod) 0 0 125 0 4 A1`65
/AA 100 100 w1`65
156 1362 (provides.  The use of \223append-only\224 and \223immutable\224 attributes can be particularly ef) 0.865356 0 1566 12 84 A1`65
1722 1362 (fective in) 0.865356 0 166 1 9 A1`65
156 1412 (preventing log files from being deleted, or T) 0.499985 0 808 7 44 A1`65
962 1412 (rojan Horses from being placed on top of trusted) 0.499985 0 900 8 47 A1`65
156 1462 (binaries. While not a guarantee a system file or log won\222t be modified, only root has the ability to) 0.532379 0 1785 18 99 A1`65
156 1512 (remove this protection.  The ) 0.333313 0 532 5 28 A1`65
/AB 100 100 w1`65
688 1512 (chattr) 0 0 150 0 5 A1`65
/AC 100 100 w1`65
838 1512 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
850 1512 (command is used to add or remove these properties, while the) 0.374985 0 1160 10 59 A1`65
/AB 100 100 w1`65
156 1562 (lsattr) 0 0 150 0 5 A1`65
/AC 100 100 w1`65
306 1562 ( ) 0 0 12 1 0 A1`65
/AA 100 100 w1`65
318 1562 (can be used to list them.) 0.166656 0 455 5 24 A1`65
156 1645 (Log files can be protected by only permitting appending to them.  Once the data has been written, it) 0.254608 0 1842 18 99 A1`65
156 1695 (cannot be removed.  While this will require modifications to your log rotation scripts, this can provide) 0.937469 0 1863 16 103 A1`65
156 1745 (additional protection from a cracker attempting to remove his tracks. Once rotated, they should be) 0.565445 0 1815 14 97 A1`65
156 1795 (changed to immutable. Files suitable for these modifications include ) 0.648117 0 1272 9 68 A1`65
/AB 100 100 w1`65
1428 1795 (/bin/login) 0 0 250 0 9 A1`65
/AA 100 100 w1`65
1678 1795 (, ) 0.833313 0 24 1 1 A1`65
/AB 100 100 w1`65
1702 1795 (/bin/rpm) 0 0 200 0 7 A1`65
/AA 100 100 w1`65
1902 1795 (,) 0 0 12 0 0 A1`65
/AB 100 100 w1`65
156 1845 (/etc/shadow) 0 0 275 0 10 A1`65
/AA 100 100 w1`65
431 1845 (, and others that should not change frequently) -0.53569 0 848 7 45 A1`65
1276 1845 (.) -0.53569 0 12 0 0 A1`65
/AB 100 100 w1`65
156 1920 ( # chattr +i /bin/login) 0 0 575 4 22 A1`65
156 1958 ( # chattr +a /var/log/messages) 0 0 750 4 29 A1`65
156 1995 ( # lsattr /bin/login /var/log/messages) 0 0 950 4 37 A1`65
156 2033 ( ----i--- /bin/login) 0 0 500 2 19 A1`65
156 2070 ( -----a-- /var/log/messages) 0 0 675 2 26 A1`65
/AA 100 100 w1`65
156 2154 (\225 There should never be a reason for user) 0.092575 0 774 8 40 A1`65
932 2154 (\222) 0.092575 0 9 0 0 A1`65
940 2154 (s to be able to run setuid programs from their home) 0.092575 0 953 10 50 A1`65
156 2204 (directories.  Use the ) 0.208328 0 384 4 21 A1`65
/AB 100 100 w1`65
540 2204 (nosuid ) 0.833313 0 176 1 6 A1`65
/AA 100 100 w1`65
716 2204 (option in ) 0.208328 0 170 2 9 A1`65
/AB 100 100 w1`65
887 2204 (/etc/fstab) 0 0 250 0 9 A1`65
/AA 100 100 w1`65
1137 2204 ( for partitions that are writable by others than) 0.312485 0 830 8 47 A1`65
156 2254 (root.  Y) -0.13887 0 134 2 7 A1`65
287 2254 (ou may also wish to use the ) -0.13887 0 527 7 27 A1`65
/AB 100 100 w1`65
813 2254 (nodev ) -0.416656 0 150 1 5 A1`65
/AA 100 100 w1`65
963 2254 (and ) 0 0 82 1 3 A1`65
/AB 100 100 w1`65
1045 2254 (noexec ) -0.416656 0 175 1 6 A1`65
/AA 100 100 w1`65
1219 2254 (on user) -0.178558 0 140 1 6 A1`65
1360 2254 (\222) -0.178558 0 9 0 0 A1`65
1369 2254 (s home partitions, as well as ) -0.178558 0 535 6 29 A1`65
/AB 100 100 w1`65
1904 2254 (/var) 0 0 100 0 3 A1`65
/AA 100 100 w1`65
2004 2254 (,) 0 0 12 0 0 A1`65
156 2304 (which prohibits execution of programs, and creation of character or block devices, which should) 0.352539 0 1768 13 94 A1`65
156 2354 (never be necessary anyway) 0.208328 0 517 3 24 A1`65
670 2354 (. See the ) 0.208328 0 180 3 9 A1`65
/AB 100 100 w1`65
850 2354 (mount ) 0.833313 0 151 1 5 A1`65
/AA 100 100 w1`65
1001 2354 (man page for more information.) 0.312485 0 586 4 29 A1`65
O1`65
N1`65
F M1`65
/AA 120 120 w1`65
3712 -2057 (\225 ) 0 0 31 1 1 A1`65
/AB 100 100 w1`65
3744 -2057 (AutoRPM) 0 0 175 0 6 A1`65
/AC 100 100 w1`65
3919 -2057 ( ) -0.416656 0 11 1 0 A1`65
/AA 100 100 w1`65
3930 -2057 (on Red Hat and ) -0.208328 0 304 4 14 A1`65
/AB 100 100 w1`65
4234 -2057 (apt-get) 0 0 175 0 6 A1`65
/AA 100 100 w1`65
4409 -2057 ( on Debian can be used to download and install) -0.277756 0 877 9 45 A1`65
3712 -2004 (any packages on your system for which there are updates. Use care when) -0.416656 0 1367 12 69 A1`65
3712 -1954 (automatically updating production servers.) 1.111069 0 786 3 41 A1`65
/AA 120 120 w1`65
3712 -1872 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
3744 -1872 (IP Masquerading enables a Linux box with multiple interfaces to act as a gateway to) 0.357117 0 1556 14 82 A1`65
3712 -1819 (remote networks for hosts connected to the Linux box on the internal network) 0.069427 0 1428 12 75 A1`65
3712 -1769 (interface.  See the IP Masquerading HOWT) 1.064774 0 815 6 39 A1`65
4527 -1769 (O for implementation information.) 1.064774 0 623 3 32 A1`65
/AA 120 120 w1`65
3712 -1687 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
3744 -1687 (Install ) 0.416656 0 121 1 7 A1`65
/AB 100 100 w1`65
3865 -1687 (nmap) 0 0 100 0 3 A1`65
/AC 100 100 w1`65
3965 -1687 ( ) 0.833313 0 12 1 0 A1`65
/AA 100 100 w1`65
3978 -1687 (to determine potential communication channels.  Can determine remote) 0.572891 0 1332 8 67 A1`65
3712 -1634 (OS version, perform \223stealth\224 scans by manipulating ICMP) 0.694412 0 1082 7 55 A1`65
4789 -1634 (, TCP and UDP) 0.694412 0 290 3 12 A1`65
5074 -1634 (, and even) 0.694412 0 197 2 9 A1`65
3712 -1584 (potentially determine the remote username running the service. Start with something) 0.708313 0 1569 10 82 A1`65
3712 -1534 (simple like:) 2.916595 0 210 1 11 A1`65
$1 tsi^65
%%IncludeResource: font Courier
/AD /|______Courier T /Courier x1`65
/$1 bmt^65
/AD 100 100 w1`65
T g`65
0 0 0 1 (Black) 1 _process d`65
3712 -1462 ( ) 0 0 25 1 0 A1`65
/AB 100 100 w1`65
3737 -1462 (# nmap 192.168.1.1) 0 0 450 2 17 A1`65
/AA 120 120 w1`65
3712 -1377 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
3744 -1377 (Password-protect LILO for servers in public environments to require authorization) 0.740707 0 1509 9 80 A1`65
3712 -1324 (when passing LILO command-line kernel parameters at boot time. Add the ) 0.113617 0 1392 11 70 A1`65
/AB 100 100 w1`65
5105 -1324 (password) 0 0 200 0 7 A1`65
/AA 100 100 w1`65
3712 -1274 (and ) 0 0 82 1 3 A1`65
/AB 100 100 w1`65
3794 -1274 (restricted) 0 0 250 0 9 A1`65
/AC 100 100 w1`65
4044 -1274 ( ) 0 0 12 1 0 A1`65
/AA 100 100 w1`65
4056 -1274 (arguments to ) 0 0 256 2 12 A1`65
/AB 100 100 w1`65
4312 -1274 (/etc/lilo.conf) 0 0 350 0 13 A1`65
/AA 100 100 w1`65
4662 -1274 (, then be sure to re-run) -0.166656 0 425 5 23 A1`65
/AB 100 100 w1`65
3712 -1224 (/sbin/lilo) 0 0.041656 250 0 9 A1`65
/AA 100 100 w1`65
3963 -1224 (:) 0 0 12 0 0 A1`65
/AB 100 100 w1`65
3712 -1154 ( image = /boot/vmlinuz-2.2.17) 0 0 725 3 28 A1`65
4012 -1112 (label = Linux) 0 0 325 2 12 A1`65
4012 -1071 (read-only) 0 0 225 0 8 A1`65
4012 -1029 (restricted) 0 0 250 0 9 A1`65
4012 -987 (password = your-password) 0 0 600 2 23 A1`65
/AA 120 120 w1`65
3712 -909 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
3744 -909 (The OpenW) 0.590256 0 228 1 8 A1`65
3971 -909 (all kernel patch is a useful set of kernel security improvements that) 0.590256 0 1239 11 68 A1`65
3712 -855 (helps to prevent buf) 1.406204 0 372 3 19 A1`65
4084 -855 (fer overflows, restrict information in ) 1.406204 0 667 5 38 A1`65
/AB 100 100 w1`65
4751 -855 (/proc) 0 0 125 0 4 A1`65
/AA 100 100 w1`65
4876 -855 ( available to normal) 1.527725 0 367 3 19 A1`65
3712 -805 (users, and other changes.  Requires compiling the kernel, and not for newbies.) -0.13887 0 1456 12 77 A1`65
/AA 120 120 w1`65
3712 -724 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
3744 -724 (Ensure system clocks are accurate. The time stamps on log files must be accurate) 0.128189 0 1527 13 79 A1`65
3712 -670 (so security events can be correlated with remote systems.  Inaccurate records make it) 0.224335 0 1592 13 84 A1`65
3712 -620 (impossible to build a timeline.  For workstations, it is enough to add a crontab entry:) 0.38887 0 1549 15 86 A1`65
/AB 100 100 w1`65
3712 -545 ( 0-59/30 * * * * root /usr/sbin/ntpdate -su time.timehost.com) 0 0 1525 9 60 A1`65
/AA 120 120 w1`65
3712 -455 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
3744 -455 (Install and execute the Bastille Linux hardening tool.  Bastille is a suite of shell) 0.624985 0 1452 14 83 A1`65
3712 -402 (scripts that eliminates many of the vulnerabilities that are common on default Linux) 0.937469 0 1542 12 83 A1`65
3712 -352 (installations. It enables users to make educated choices to improve security by asking) 0.173599 0 1587 12 85 A1`65
3712 -302 (questions as it interactively steps through securing the host.  Features include basic) 0.069427 0 1547 12 85 A1`65
3712 -252 (packet filtering, deactivating unnecessary network services, auditing file permissions,) 1.041641 0 1575 8 86 A1`65
3712 -202 (and more. T) 0.892822 0 228 2 10 A1`65
3939 -202 (ry the non-intrusive test mode first.) 0.892822 0 646 5 36 A1`65
/AA 120 120 w1`65
3712 -120 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
3744 -120 (Configure ) 0.416656 0 193 1 9 A1`65
/AB 100 100 w1`65
3937 -120 (sudo) 0 0 100 0 3 A1`65
/AC 100 100 w1`65
4037 -120 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
4049 -120 (\(superuser do\) to execute privileged commands as a normal user) 0.370346 0 1209 9 61 A1`65
3712 -67 (instead of using ) 0 0 305 3 16 A1`65
/AB 100 100 w1`65
4017 -67 (su) 0 0 50 0 1 A1`65
/AA 100 100 w1`65
4067 -67 (.  The administrator supplies his own password to execute specific) -0.083328 0 1224 10 65 A1`65
3712 -17 (commands that would otherwise require ) 0.249985 0 751 5 37 A1`65
/AB 100 100 w1`65
4464 -17 (root) 0 0 100 0 3 A1`65
/AC 100 100 w1`65
4564 -17 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
4576 -17 (access.  The file ) 0.312485 0 316 4 17 A1`65
/AB 100 100 w1`65
4892 -17 (/etc/sudoers) 0 0 300 0 11 A1`65
/AA 100 100 w1`65
5192 -17 ( file) 0.416656 0 66 1 4 A1`65
3712 33 (controls which users may execute which programs. T) 0.555527 0 985 7 49 A1`65
4693 33 (o permit Dave to only manipulate) 0.555527 0 614 5 31 A1`65
3712 83 (the printer on ) 0.694412 0 260 3 14 A1`65
/AC 100 100 w1`65
3973 83 (magneto) 0 0 174 0 6 A1`65
/AA 100 100 w1`65
4147 83 (:) 0 0 12 0 0 A1`65
/AB 100 100 w1`65
3712 158 ( Cmnd_Alias LPCMDS = /usr/sbin/lpc, /usr/bin/lprm) 0 0 1225 5 48 A1`65
3712 208 ( dave       magneto = LPCMDS) 0 0 700 10 27 A1`65
/AA 100 100 w1`65
3712 283 (Dave executes ) 0 0 287 2 13 A1`65
/AB 100 100 w1`65
4000 283 (sudo) 0 0 100 0 3 A1`65
/AC 100 100 w1`65
4100 283 ( ) -0.416656 0 11 1 0 A1`65
/AA 100 100 w1`65
4111 283 (with the authorized command and enters his own password) -0.208328 0 1097 8 54 A1`65
3712 333 (when prompted:) -1.249969 0 299 1 13 A1`65
/AB 100 100 w1`65
3712 408 ( dave$ sudo /usr/sbin/lpc) 0 0 625 3 24 A1`65
3712 458 ( Password: <password>) 0 0 525 2 20 A1`65
3712 508 ( lpc>) 0 0 125 1 4 A1`65
/AA 120 120 w1`65
3712 590 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
3744 590 (Password security is the most basic means of authentication, yet the most critical) 0.347198 0 1503 12 81 A1`65
3712 643 (means to protect your system from compromise. It is also one of the most overlooked) 0.476166 0 1584 14 82 A1`65
3712 693 (means. W) 0.151505 0 190 1 7 A1`65
3903 693 (ithout an ef) 0.151505 0 208 2 11 A1`65
4110 693 (fective well-chosen password, your system is sure to be) 0.151505 0 1031 8 54 A1`65
3712 743 (compromised.  Obtaining access to any user account on the system is the tough part.) -0.059509 0 1578 14 82 A1`65
3712 793 (From there, root access is only a step away) -0.320496 0 803 8 42 A1`65
4512 793 (. Run password-cracking programs such as) -0.320496 0 801 5 39 A1`65
$1 tsi^65
%%IncludeResource: font Helvetica-Oblique
/AE /|______Helvetica-Oblique T /Helvetica-Oblique x1`65
/$1 bmt^65
/AE 100 100 w1`65
T g`65
0 0 0 1 (Black) 1 _process d`65
3712 843 (John the Ripper) 0 0 295 2 14 A1`65
/AA 100 100 w1`65
4008 843 ( or ) -0.208328 0 60 2 3 A1`65
/AE 100 100 w1`65
4068 843 (Crack) 0 0 109 0 4 A1`65
/AA 100 100 w1`65
4177 843 ( regularly on systems for which you\222re responsible to ensure) -0.13887 0 1108 9 59 A1`65
3712 893 (password security is maintained.  Disable unused accounts using ) -0.509232 0 1212 9 63 A1`65
/AB 100 100 w1`65
4925 893 (/usr/bin/passwd) 0 0 375 0 14 A1`65
3712 943 (-l) 0 0 50 0 1 A1`65
/AA 100 100 w1`65
3762 943 (. Use the MD5 password during install if your distribution supports it.) 0.265137 0 1261 11 70 A1`65
3712 1018 (\225 Packet filtering isn\222t just for firewalls. Using ) 1.041641 0 835 8 50 A1`65
/AB 100 100 w1`65
4548 1018 (ipchains) 0 0 200 0 7 A1`65
/AA 100 100 w1`65
4748 1018 (, you can provide a significant) 1.083298 0 556 5 30 A1`65
3712 1068 (amount of protection from external threats on any Linux box. Blocking access to a) 0.544846 0 1516 13 80 A1`65
3712 1118 (particular service from connecting outside of your local network you might try:) 0.984818 0 1438 11 78 A1`65
/AB 100 100 w1`65
3712 1185 ( # ipchains -I input -p TCP -s 192.168.1.11 telnet -j DENY -l) 0 0 1525 12 60 A1`65
/AA 100 100 w1`65
3712 1251 (This will prevent incoming access to the ) 0.53569 0 751 7 40 A1`65
/AB 100 100 w1`65
4464 1251 (telnet ) 1.249969 0 176 1 6 A1`65
/AA 100 100 w1`65
4640 1251 (port on your local machine if the) 0.555527 0 597 6 32 A1`65
3712 1301 (connection originates from ) 0.694412 0 505 3 26 A1`65
/AB 100 100 w1`65
4217 1301 (192.168.1.11) 0 0 300 0 11 A1`65
/AA 100 100 w1`65
4517 1301 (. This is a very simple example.  Be sure) 0.787003 0 757 9 40 A1`65
3712 1351 (to read the IP Chains HOWT) 0.925888 0 539 5 25 A1`65
4251 1351 (O before implementing any firewalling.) 0.925888 0 715 4 37 A1`65
O1`65
N1`65
F M1`65
/AA 120 120 w1`65
5337 -2057 (\225 ) -0.416656 0 31 1 1 A1`65
/AA 100 100 w1`65
5368 -2057 (Apache directory and password protection) -0.520813 0 778 4 39 A1`65
5337 -2004 (http://www) 0 -0.099197 193 0 9 A1`65
5528 -2004 (.apacheweek.com/features/userauth) 0 -0.099197 672 0 32 A1`65
/AA 120 120 w1`65
5337 -1897 (\225 ) 1.666626 0 33 1 1 A1`65
/AA 100 100 w1`65
5370 -1897 (Bastille Linux Project) 1.666626 0 391 2 21 A1`65
5337 -1844 (http://www) 0 0.163681 195 0 9 A1`65
5530 -1844 (.bastille-linux.org) 0 0.163681 315 0 18 A1`65
/AA 120 120 w1`65
5337 -1737 (\225 ) 0.833313 0 32 1 1 A1`65
/AA 100 100 w1`65
5369 -1737 (BugT) 1.041641 0 100 0 3 A1`65
5468 -1737 (raq Full Disclosure Mailing List) 1.041641 0 569 4 31 A1`65
5337 -1684 (http://www) 0 0.09433 195 0 9 A1`65
5529 -1684 (.securityfocus.com/forums/bugtraq/intro.html) 0 0.09433 827 0 43 A1`65
/AA 120 120 w1`65
5337 -1577 (\225 ) 0.833313 0 32 1 1 A1`65
/AA 100 100 w1`65
5369 -1577 (Building Internet Firewalls, Second Edition) 0.937469 0 786 4 42 A1`65
5337 -1524 (O\222Reilly & Assoc, ISBN 1565928717) -0.208328 0 673 4 32 A1`65
/AA 120 120 w1`65
5337 -1417 (\225 ) 1.249969 0 32 1 1 A1`65
/AA 100 100 w1`65
5370 -1417 (CER) 1.38884 0 88 0 2 A1`65
5457 -1417 (T Security Improvement Modules) 1.38884 0 617 3 29 A1`65
5337 -1364 (http://www) 0 0.160248 195 0 9 A1`65
5530 -1364 (.cert.org/security-improvement) 0 0.160248 568 0 29 A1`65
/AA 120 120 w1`65
5337 -1257 (\225 ) 1.249969 0 32 1 1 A1`65
/AA 100 100 w1`65
5370 -1257 (Introduction to Linux Security) 1.111069 0 542 3 29 A1`65
5337 -1204 (http://www) 0 0.095474 195 0 9 A1`65
5529 -1204 (.linux-mag.com/1999-10/security_01.html) 0 0.095474 768 0 38 A1`65
/AA 120 120 w1`65
5337 -1097 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
5369 -1097 (Linux Intrusion Detection Resources) 0 0 671 3 34 A1`65
5337 -1044 (http://www) 0 0.097504 195 0 9 A1`65
5529 -1044 (.linuxsecurity) 0 0.097504 242 0 13 A1`65
5769 -1044 (.com/intrusion-detection) 0 0.097504 446 0 23 A1`65
/AA 120 120 w1`65
5337 -937 (\225 ) -0.416656 0 31 1 1 A1`65
/AA 100 100 w1`65
5368 -937 (John the Ripper Password Cracker) -0.416656 0 646 4 31 A1`65
5337 -884 (http://www) 0 0.015427 194 0 9 A1`65
5529 -884 (.openwall.com/john) 0 0.015427 358 0 17 A1`65
/AA 120 120 w1`65
5337 -777 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
5369 -777 (Linux and Open Source Security Advisories) 0.749969 0 809 5 40 A1`65
5337 -724 (http://www) 0 0.153488 195 0 9 A1`65
5530 -724 (.linuxsecurity) 0 0.153488 242 0 13 A1`65
5770 -724 (.com/advisories) 0 0.153488 292 0 14 A1`65
/AA 120 120 w1`65
5337 -617 (\225 ) 1.666626 0 33 1 1 A1`65
/AA 100 100 w1`65
5370 -617 (LinuxSecurity) 1.527725 0 250 0 12 A1`65
5617 -617 (.com Security Reference Info) 1.527725 0 545 3 27 A1`65
5337 -564 (http://www) 0 0.091141 195 0 9 A1`65
5529 -564 (.linuxsecurity) 0 0.091141 242 0 13 A1`65
5768 -564 (.com/docs) 0 0.091141 192 0 8 A1`65
/AA 120 120 w1`65
5337 -457 (\225 ) 0.833313 0 32 1 1 A1`65
/AA 100 100 w1`65
5369 -457 (LinuxSecurity) 0.972183 0 250 0 12 A1`65
5617 -457 (.com Security Discussion Lists) 0.972183 0 567 3 29 A1`65
5337 -404 (http://www) 0 0.217377 196 0 9 A1`65
5531 -404 (.linuxsecurity) 0 0.217377 243 0 13 A1`65
5772 -404 (.com/mailing-lists.html) 0 0.217377 415 0 22 A1`65
/AA 120 120 w1`65
5337 -297 (\225 ) 1.249969 0 32 1 1 A1`65
/AA 100 100 w1`65
5370 -297 (LinuxSecurity) 1.249969 0 250 0 12 A1`65
5617 -297 (.com T) 1.249969 0 130 1 5 A1`65
5745 -297 (ip of the Day) 1.249969 0 239 3 12 A1`65
5337 -244 (http://www) 0 0.143219 195 0 9 A1`65
5530 -244 (.linuxsecurity) 0 0.143219 242 0 13 A1`65
5769 -244 (.com/tips) 0 0.143219 169 0 8 A1`65
/AA 120 120 w1`65
5337 -137 (\225 ) 2.083282 0 33 1 1 A1`65
/AA 100 100 w1`65
5371 -137 (LinuxSecurity) 1.805496 0 250 0 12 A1`65
5618 -137 (.com W) 1.805496 0 145 1 5 A1`65
5762 -137 (eekly Security Newsletter) 1.805496 0 471 2 24 A1`65
5337 -84 (http://www) 0 0.135651 195 0 9 A1`65
5530 -84 (.linuxsecurity) 0 0.135651 242 0 13 A1`65
5769 -84 (.com/newsletter) 0 0.135651 294 0 14 A1`65
6062 -84 (.html) 0 0.135651 91 0 4 A1`65
/AA 120 120 w1`65
5337 23 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
5369 23 (OpenSSH secure remote access tool) -0.416656 0 687 4 32 A1`65
5337 76 (http://www) 0 -0.119034 192 0 9 A1`65
5527 76 (.openssh.com) 0 -0.119034 260 0 11 A1`65
/AA 120 120 w1`65
5337 183 (\225 ) 1.666626 0 33 1 1 A1`65
/AA 100 100 w1`65
5370 183 (OpenW) 1.666626 0 144 0 4 A1`65
5512 183 (all Security Project) 1.666626 0 349 2 19 A1`65
5337 236 (http://www) 0 0.018921 194 0 9 A1`65
5529 236 (.openwall.com) 0 0.018921 267 0 12 A1`65
/AA 120 120 w1`65
5337 353 (\225 ) 1.249969 0 32 1 1 A1`65
/AA 100 100 w1`65
5370 353 (Network T) 1.38884 0 191 1 8 A1`65
5559 353 (ime Protocol information) 1.38884 0 455 2 23 A1`65
5337 406 (http://www) 0 0.024506 194 0 9 A1`65
5529 406 (.ntp.org) 0 0.024506 142 0 7 A1`65
/AA 120 120 w1`65
5337 513 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
5369 513 (nmap Port Scanner) 0.208328 0 361 2 16 A1`65
5337 566 (http://www) 0 -0.015427 194 0 9 A1`65
5529 566 (.insecure.org/nmap) 0 -0.015427 357 0 17 A1`65
/AA 120 120 w1`65
5337 673 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
5369 673 (Practical UNIX & Internet Security) 0.763855 0 629 4 33 A1`65
5995 673 (, Second Ed.) 0.763855 0 242 2 11 A1`65
5337 726 (O\222Reilly & Assoc, ISBN 1565921488) -0.208328 0 673 4 32 A1`65
/AA 120 120 w1`65
5337 833 (\225 ) 1.666626 0 33 1 1 A1`65
/AA 100 100 w1`65
5370 833 (rsync Incremental File T) 1.562454 0 450 3 23 A1`65
5819 833 (ransfer Utility) 1.562454 0 245 1 14 A1`65
5337 886 (http://rsync.samba.org) 0 0.019821 414 0 21 A1`65
/AA 120 120 w1`65
5337 993 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
5369 993 ( Secure Shell F) 0.833313 0 288 3 14 A1`65
5655 993 (AQ) 0.833313 0 60 0 1 A1`65
5337 1046 (http://www) 0 -0.010666 194 0 9 A1`65
5529 1046 (.employees.org/~satch/ssh/faq/) 0 -0.010666 579 0 29 A1`65
/AA 120 120 w1`65
5337 1153 (\225 ) 0.833313 0 32 1 1 A1`65
/AA 100 100 w1`65
5369 1153 (Security-related HOWT) 0.833313 0 434 1 20 A1`65
5803 1153 (Os and F) 0.833313 0 174 2 7 A1`65
5974 1153 (AQs) 0.833313 0 81 0 2 A1`65
5337 1206 (http://www) 0 0.091141 195 0 9 A1`65
5529 1206 (.linuxsecurity) 0 0.091141 242 0 13 A1`65
5768 1206 (.com/docs) 0 0.091141 192 0 8 A1`65
/AA 120 120 w1`65
5337 1313 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
5369 1313 (Site Security Handbook \(RFC2196\)) 0.416656 0 656 3 31 A1`65
5337 1366 (http://www) 0 0.136047 195 0 9 A1`65
5530 1366 (.linuxsecurity) 0 0.136047 242 0 13 A1`65
5769 1366 (.com/docs/rfcs/rfc2196.txt) 0 0.136047 480 0 25 A1`65
/AA 120 120 w1`65
5337 1473 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
5369 1473 (sudo root access control tool) -0.312485 0 531 4 28 A1`65
5337 1526 (http://www) 0 -0.089279 193 0 9 A1`65
5528 1526 (.courtesan.com/sudo) 0 -0.089279 387 0 18 A1`65
/AA 120 120 w1`65
5337 1633 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
5369 1633 (Snort Network Intrusion Detection System) 0.416656 0 777 4 39 A1`65
5337 1686 (http://www) 0 0 194 0 9 A1`65
5529 1686 (.snort.org) 0 0 176 0 9 A1`65
/AA 120 120 w1`65
5337 1793 (\225 ) 2.083282 0 33 1 1 A1`65
/AA 100 100 w1`65
5371 1793 (T) 2.083282 0 26 0 0 A1`65
5395 1793 (ripwire file integrity tool) 2.083282 0 430 3 26 A1`65
5337 1846 (http://www) 0 0.111099 195 0 9 A1`65
5530 1846 (.tripwiresecurity) 0 0.111099 290 0 16 A1`65
5817 1846 (.com) 0 0.111099 91 0 3 A1`65
/AA 120 120 w1`65
5337 1953 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
5369 1953 (Using Snort) 0.416656 0 218 1 10 A1`65
5337 2006 (http://www) 0 0.123093 195 0 9 A1`65
5530 2006 (.linuxsecurity) 0 0.123093 242 0 13 A1`65
5769 2006 (.com/using-snort.html) 0 0.123093 402 0 20 A1`65
O1`65
N1`65
F M1`65
$1 tsi^65
%%IncludeResource: font Times-Bold
/AF /|______Times-Bold T /Times-Bold x1`65
/$1 bmt^65
/AF 240 240 w1`65
T g`65
0 0 0 1 (Black) 1 _process d`65
4781 -2320 (Linux Security Quick Refer) -0.208328 0 1186 3 25 A1`65
5965 -2320 (ence Guide) -0.208328 0 475 1 9 A1`65
O1`65
N1`65
F M1`65
/AA 100 100 w1`65
150 -1429 (The intent of this Quick Reference Guide is to provide a starting point for improving the security of your) -0.833313 0 1882 18 105 A1`65
150 -1379 (system, to serve as a pointer to more in-depth security information, and to increase security awareness) -1.38884 0 1882 15 102 A1`65
150 -1329 (and methods that can be used to improve security) 4.188492 0 959 8 47 A1`65
1106 -1329 (. It is not a substitute for reading any of the vast) 4.188492 0 926 11 51 A1`65
150 -1279 (amounts of Linux security documentation that already exists.) 0.595215 0 1125 7 59 A1`65
150 -1196 (In the ever-changing world of global data communications, inexpensive Internet connections, and fast-) -0.45137 0 1882 12 100 A1`65
150 -1146 (paced software development, security is becoming more and more of an issue. Security is now a basic) -0.755188 0 1882 16 98 A1`65
150 -1096 (requirement because global computing is inherently insecure. As your data goes from point A to point B) -1.796829 0 1882 16 101 A1`65
150 -1046 (on the Internet, it may pass through several other points along the way) -0.465668 0 1298 12 70 A1`65
1445 -1046 (, giving other users the opportu-) -0.465668 0 587 5 32 A1`65
150 -996 (nity to intercept, and even alter) -0.807266 0 567 5 32 A1`65
715 -996 (, your data. Even other users on your system may maliciously transform) -0.807266 0 1317 11 69 A1`65
150 -946 (your data into something you did not intend. Unauthorized access to your system may be obtained by) 0.572891 0 1882 16 97 A1`65
150 -896 (intruders, also known as \223crackers\224, who then use advanced knowledge to impersonate you, steal infor-) -1.934464 0 1882 14 100 A1`65
150 -846 (mation from you, or even deny you access to your own resources.) 0.113617 0 1220 11 62 A1`65
150 -762 (Security involves defense in depth. Approaching security a step at a time, with consistency and vigi-) 2.749924 0 1882 15 100 A1`65
150 -712 (lance, you can mitigate the security threats, and keep the crackers at bay) -1.284683 0 1337 12 73 A1`65
1484 -712 (.) -1.284683 0 12 0 0 A1`65
1496 -712 ( ) -1.249969 0 10 1 0 A1`65
1506 -712 (Keep your system up to date) -1.333298 0 526 5 26 A1`65
150 -662 (by making sure you have installed the current versions of software and are aware of all security alerts.) -0.073517 0 1882 17 103 A1`65
150 -612 (Doing this alone will help make your system markedly more secure.) 0.499985 0 1251 10 64 A1`65
150 -529 (The more secure your system is the more intrusive your security becomes. Y) -2.058762 0 1394 12 73 A1`65
1540 -529 (ou need to decide where in) -2.058762 0 492 5 25 A1`65
150 -479 (this balancing act your system will still be usable yet secure for your purposes.) 0.224335 0 1449 13 80 A1`65
150 -396 (If you have more than one person logging on to your machine, or machines, you should establish a) 3.210693 0 1882 17 95 A1`65
150 -346 (\223Security Policy\224 stating how much security is required by your site and what auditing is in place to) 4.460663 0 1882 17 100 A1`65
150 -296 (monitor it.) 3.333252 0 187 1 10 A1`65
O1`65
N1`65
F M1`65
/AA 120 120 w1`65
2062 -2054 (\225 ) 0 0 31 1 1 A1`65
/AC 100 100 w1`65
2094 -2054 (Buffer Overflow:) 0 0 327 1 15 A1`65
/AA 100 100 w1`65
2421 -2054 ( A condition that occurs when a user or process attempts to place) 0 0 1212 12 64 A1`65
2062 -2000 (more data into a program\222) 0.4487 0 481 4 24 A1`65
2542 -2000 (s storage buf) 0.4487 0 243 2 12 A1`65
2785 -2000 (fer in memory and then overwrites the actual) 0.4487 0 828 7 43 A1`65
2062 -1950 (program data with instructions that typically provide a shell owned by root on the) 0.480743 0 1487 13 81 A1`65
2062 -1900 (server) 0.476166 0 115 0 5 A1`65
2175 -1900 (.  Accounted for more than 50 percent of all major security bugs leading to) 0.476166 0 1377 14 74 A1`65
2062 -1850 (security advisories published by CER) 0.416656 0 690 4 35 A1`65
2752 -1850 (T) 0.416656 0 26 0 0 A1`65
2773 -1850 (.  T) 0.416656 0 62 2 3 A1`65
2832 -1850 (ypically associated with set-user-ID root) 0.416656 0 736 4 40 A1`65
2062 -1800 (binaries.) 0 0 158 0 8 A1`65
/AA 120 120 w1`65
2062 -1727 (\225 ) 0.416656 0 32 1 1 A1`65
/AC 100 100 w1`65
2094 -1727 (Cryptography:) 0 0 285 0 12 A1`65
/AA 100 100 w1`65
2379 -1727 ( The mathematical science that deals with transforming data to render) 0.624985 0 1300 10 68 A1`65
2062 -1674 (its meaning unintelligible, prevent its undetected alteration, or prevent its unauthorized) 0.999969 0 1602 10 89 A1`65
2062 -1624 (use.) 0 -0.416656 78 0 3 A1`65
/AA 120 120 w1`65
2062 -1550 (\225 ) 0 0 31 1 1 A1`65
/AC 100 100 w1`65
2094 -1550 (Denial of Service:) 0.208328 0 351 2 17 A1`65
/AA 100 100 w1`65
2445 -1550 ( Occurs when a resource is targeted by an intruder to prevent) 0.265137 0 1138 11 60 A1`65
2062 -1497 (legitimate users from using that resource.  They are a threat to the availability of data) 0.694412 0 1580 15 88 A1`65
2062 -1447 (to all others trying to use that resource. Range from unplugging the network connection) 0.128189 0 1612 13 86 A1`65
2062 -1397 (to consuming all the available network bandwidth.) 0.555527 0 923 6 48 A1`65
/AA 120 120 w1`65
2062 -1324 (\225 ) 0 0 31 1 1 A1`65
/AC 100 100 w1`65
2094 -1324 (IP Spoofing:) 0 0 246 1 11 A1`65
/AA 100 100 w1`65
2340 -1324 ( An attack in which one host masquerades as another) 0 0 995 9 50 A1`65
3332 -1324 (.  This can be) 0 0 252 4 13 A1`65
2062 -1270 (used to route data destined for one host to antoher) -0.192291 0 940 9 50 A1`65
3000 -1270 (, thereby allowing attackers to) -0.192291 0 551 4 30 A1`65
2062 -1220 (intercept data not originally intended for them. It is typically a one-way attack.) 0.833313 0 1434 12 81 A1`65
/AA 120 120 w1`65
2062 -1147 (\225 ) 0.416656 0 32 1 1 A1`65
/AC 100 100 w1`65
2094 -1147 (Port Scanning:) 0.416656 0 297 1 13 A1`65
/AA 100 100 w1`65
2392 -1147 ( The process of determining which ports are active on a machine.  By) 0.512802 0 1287 13 67 A1`65
2062 -1094 (probing as many hosts as possible, means to exploit the ones that respond can be) -0.386887 0 1518 14 79 A1`65
2062 -1044 (developed.  It is typically the precursor to an attack.) 0.694412 0 956 9 54 A1`65
/AA 120 120 w1`65
2062 -970 (\225 ) 0.416656 0 32 1 1 A1`65
/AC 100 100 w1`65
2094 -970 (Packet Filtering:) 0.416656 0 326 1 16 A1`65
/AA 100 100 w1`65
2420 -970 ( A method of filtering network traf) 0.454529 0 617 6 34 A1`65
3037 -970 (fic as it passes between the) 0.454529 0 516 5 27 A1`65
2062 -917 (firewall\222) 0.416656 0 139 0 8 A1`65
2200 -917 (s interfaces at the network level.  The network data is then analyzed according) 0.416656 0 1455 13 78 A1`65
2062 -867 (to the information available in the data packet, and access is granted or denied based) 0.059509 0 1586 14 85 A1`65
2062 -817 (on the firewall security policy) 0.520813 0 533 4 30 A1`65
2592 -817 (. Usually requires an intimate knowledge of how network) 0.520813 0 1046 8 54 A1`65
2062 -767 (protocols work.) -0.416656 0 280 1 14 A1`65
/AA 120 120 w1`65
2062 -694 (\225 ) 0 0 31 1 1 A1`65
/AC 100 100 w1`65
2094 -694 (Proxy Gateway:) 0.416656 0 313 1 13 A1`65
/AA 100 100 w1`65
2407 -694 ( Also called Application Gateways, act on behalf of another) 0.370346 0 1095 9 58 A1`65
2062 -640 (program.  A host with a proxy server installed becomes both a server and a client, and) 0.468735 0 1598 16 85 A1`65
2062 -590 (acts as a choke between the final destination and the client. Proxy servers are typically) 0.416656 0 1608 14 88 A1`65
2062 -540 (small, carefully-written single-purpose programs that only permit specific services to) 1.157364 0 1556 9 85 A1`65
2062 -490 (pass through it. T) 0.773773 0 326 3 17 A1`65
2386 -490 (ypically combined with packet filters.) 0.773773 0 676 4 37 A1`65
/AA 120 120 w1`65
2062 -417 (\225 ) 0.833313 0 32 1 1 A1`65
/AC 100 100 w1`65
2095 -417 (Set User-ID \(setuid\) / Set Group-ID \(setgid\):) 0.90274 0 861 6 44 A1`65
/AA 100 100 w1`65
2955 -417 ( Files that everyone can execute as) 0.90274 0 662 6 34 A1`65
2062 -364 (either it's owner or group privileges. T) 0.937469 0 700 6 39 A1`65
2760 -364 (ypically) 0.937469 0 136 0 7 A1`65
2892 -364 (, you'll find root-owned setuid files, which) 0.937469 0 762 6 43 A1`65
2062 -314 (means that regardless of who executes them, they obtain ) 0.092575 0 1073 9 55 A1`65
/AB 100 100 w1`65
3135 -314 (root) 0 0 100 0 3 A1`65
/AA 100 100 w1`65
3235 -314 ( permission for the) 0.13887 0 345 3 18 A1`65
2062 -264 (period of time the program is running \(or until that program intentionally relinquishes) 0.798584 0 1559 12 86 A1`65
2062 -214 (these privileges\). These are the types of files that are most often attacked by intruders,) 0.357117 0 1608 14 89 A1`65
2062 -164 (because of the potential for obtaining ) 0.555527 0 702 6 38 A1`65
/AB 100 100 w1`65
2765 -164 (root) 0 0 100 0 3 A1`65
/AA 100 100 w1`65
2865 -164 ( privileges. Commonly associated with) 0.624985 0 710 4 36 A1`65
2062 -114 (buf) 3.749908 0 59 0 2 A1`65
2120 -114 (fer overflows.) 3.749908 0 252 1 13 A1`65
/AA 120 120 w1`65
2062 -40 (\225 ) 0 0 31 1 1 A1`65
/AC 100 100 w1`65
2094 -40 (T) 0.416656 0 25 0 0 A1`65
2117 -40 (rojan Horse: ) 0.416656 0 258 2 12 A1`65
/AA 100 100 w1`65
2375 -40 (A program that masquerades itself as a benign program, when in fact) 0.378769 0 1285 11 66 A1`65
2062 13 (it is not.  A program can be modified by a malicious programmer that purports to do) 0.520813 0 1546 16 82 A1`65
2062 63 (something useful, but in fact contains a malicious program containing hidden functions,) 0.340897 0 1612 11 86 A1`65
2062 113 (exploiting the privileges of the user executing it.  A modified version of ) 1.442261 0 1322 13 74 A1`65
/AC 100 100 w1`65
3385 113 (/bin/ps) 0 0 135 0 6 A1`65
/AA 100 100 w1`65
3519 113 (, for) 1.666626 0 74 1 4 A1`65
2062 163 (example, may be used to hide the presence of other programs running on the system.) 0.029755 0 1589 14 81 A1`65
/AA 120 120 w1`65
2062 236 (\225 ) 0.416656 0 32 1 1 A1`65
/AC 100 100 w1`65
2094 236 (V) 0 0 28 0 0 A1`65
2120 236 (ulnerability:) 0.416656 0 236 0 12 A1`65
/AA 100 100 w1`65
2356 236 ( A condition that has the potential for allowing security to be) 0.681793 0 1110 11 62 A1`65
2062 290 (compromised.  Many dif) 0.798584 0 447 3 21 A1`65
2508 290 (ferent types of network and local vulnerabilities exist and are) 0.798584 0 1125 9 62 A1`65
2062 340 (widely known, and frequently occur on computers regardless of their level of network) 0.416656 0 1567 12 83 A1`65
2062 390 (connectivity) 0.937469 0 217 0 11 A1`65
2277 390 (, processing speed, or profile.) 0.937469 0 552 4 30 A1`65
O1`65
N1`65
F M1`65
/AA 100 100 w1`65
2062 590 (Several kernel configuration options are available to improve security through the) 1.124969 0 1509 10 81 A1`65
/AB 100 100 w1`65
2062 640 (/proc) 0 0 125 0 4 A1`65
/AA 100 100 w1`65
2187 640 ( pseudo-filesystem. Quite a few of the files in ) 0.648117 0 849 9 47 A1`65
/AB 100 100 w1`65
3036 640 (/proc/sys) 0 0 225 0 8 A1`65
/AA 100 100 w1`65
3261 640 ( are directly related to) 0.729141 0 405 4 23 A1`65
2062 690 (security) 0.249985 0 143 0 7 A1`65
2203 690 (. Enabled if contains a ) 0.249985 0 425 5 23 A1`65
/AB 100 100 w1`65
2628 690 (1) 0 0 25 0 0 A1`65
/AA 100 100 w1`65
2653 690 ( and disabled if it contains a ) 0.238083 0 530 7 30 A1`65
/AB 100 100 w1`65
3184 690 (0) 0 0 25 0 0 A1`65
/AA 100 100 w1`65
3209 690 (. Many of the options) 0.312485 0 390 4 20 A1`65
2062 740 (available in ) 1.666626 0 224 2 12 A1`65
/AB 100 100 w1`65
2286 740 (/proc/sys/net/ipv4) 0 0 450 0 17 A1`65
/AA 100 100 w1`65
2736 740 ( include:) 1.666626 0 157 1 8 A1`65
/AA 120 120 w1`65
2062 821 (\225 ) 0.833313 0 32 1 1 A1`65
/AC 100 100 w1`65
2095 821 (icmp_echo_ignore_all) 0 0 439 0 19 A1`65
/AA 100 100 w1`65
2534 821 (: Ignore all ICMP ECHO requests.  Enabling this option will) 0.708313 0 1090 10 58 A1`65
2062 875 (prevent this host from responding to ) 0.13887 0 680 6 36 A1`65
/AB 100 100 w1`65
2742 875 (ping) 0 0 100 0 3 A1`65
/AA 100 100 w1`65
2842 875 ( requests.) 0.416656 0 184 1 9 A1`65
/AA 120 120 w1`65
2062 956 (\225 ) 0 0 31 1 1 A1`65
/AC 100 100 w1`65
2094 956 (icmp_echo_ignore_broadcasts) 0 0 615 0 26 A1`65
/AA 100 100 w1`65
2709 956 (: Ignore ICMP echo requests with a broadcast/) -0.178558 0 858 7 44 A1`65
2062 1010 (multicast destination address. Y) 0.064087 0 590 3 31 A1`65
2649 1010 (our network may be used as an exploder for denial of) 0.064087 0 987 10 51 A1`65
2062 1060 (service packet flooding attacks to other hosts.) 0.277756 0 848 6 46 A1`65
/AA 120 120 w1`65
2062 1141 (\225 ) 0 0 31 1 1 A1`65
/AC 100 100 w1`65
2094 1141 (ip_forward) 0 0 214 0 9 A1`65
/AA 100 100 w1`65
2308 1141 (: Enable or disable the forwarding of IP packets  between interfaces.) 0.151505 0 1265 11 68 A1`65
2062 1195 (Default value is dependent on whether the kernel is configured as host or router) 0.064087 0 1475 13 79 A1`65
3535 1195 (.) 0.064087 0 12 0 0 A1`65
/AA 120 120 w1`65
2062 1276 (\225 ) 0 0 31 1 1 A1`65
/AC 100 100 w1`65
2094 1276 (ip_masq_debug) 0 0 318 0 12 A1`65
/AA 100 100 w1`65
2412 1276 (: Enable or disable debugging of IP masquerading.) 0.297607 0 941 7 48 A1`65
/AA 120 120 w1`65
2062 1361 (\225 ) 0.416656 0 32 1 1 A1`65
/AC 100 100 w1`65
2094 1361 (tcp_syncookies) 0 0 312 0 13 A1`65
/AA 100 100 w1`65
2407 1361 (: Protection from the \223SYN Attack\224. Send syncookies when the SYN) 0.416656 0 1252 10 63 A1`65
2062 1415 (backlog queue of a socket overflows.) 0.249985 0 687 5 35 A1`65
/AA 120 120 w1`65
2062 1496 (\225 ) 0.416656 0 32 1 1 A1`65
/AC 100 100 w1`65
2094 1496 (rp_filter) 0 0 155 0 8 A1`65
/AA 100 100 w1`65
2250 1496 (: Determines if source address verification is enabled.  Enable this option on) 0.416656 0 1412 12 77 A1`65
2062 1550 (all routers to prevent IP spoofing attacks against the internal network.) 0.416656 0 1285 10 71 A1`65
/AA 120 120 w1`65
2062 1631 (\225 ) 0 0 31 1 1 A1`65
/AC 100 100 w1`65
2094 1631 (secure_redirects) 0 0 335 0 15 A1`65
/AA 100 100 w1`65
2429 1631 (: Accept ICMP redirect messages only for gateways listed in default) 0.124985 0 1248 10 66 A1`65
2062 1685 (gateway list.) 1.249969 0 230 1 12 A1`65
/AA 120 120 w1`65
2062 1766 (\225 ) 0 0 31 1 1 A1`65
/AC 100 100 w1`65
2094 1766 (log_martians) 0 0 260 0 11 A1`65
/AA 100 100 w1`65
2354 1766 (: Log packets with impossible addresses to kernel log.) -0.052078 0 998 8 53 A1`65
/AA 120 120 w1`65
2062 1851 (\225 ) -0.416656 0 31 1 1 A1`65
/AC 100 100 w1`65
2093 1851 (accept_source_route) 0 0 420 0 18 A1`65
/AA 100 100 w1`65
2514 1851 (: Determines whether source routed packets are accepted or) -0.572891 0 1118 8 57 A1`65
2062 1905 (declined. Should be disabled unless specific reason requires it.) -0.208328 0 1163 8 63 A1`65
2062 1980 (The file ) 0.208328 0 150 2 8 A1`65
/AC 100 100 w1`65
2212 1980 (/etc/sysctl.conf) 0 0 301 0 15 A1`65
/AA 100 100 w1`65
2513 1980 ( on recent Red Hat contains a few default settings and is) 0.265137 0 1050 11 56 A1`65
2062 2030 (processed at system startup. The ) -0.166656 0 630 5 32 A1`65
/AC 100 100 w1`65
2692 2030 (/sbin/sysctl) 0 0 227 0 11 A1`65
/AA 100 100 w1`65
2919 2030 ( program can be used to control these) -0.238083 0 703 7 36 A1`65
2062 2080 (parameters. It is also possible to configure their values using ) 0.791641 0 1140 10 63 A1`65
/AC 100 100 w1`65
3202 2080 (/bin/echo) 0 0 183 0 8 A1`65
/AA 100 100 w1`65
3385 2080 (. For example,) 0.833313 0 269 2 13 A1`65
2062 2130 (to disable IP forwarding, as ) 0.416656 0 518 5 28 A1`65
/AC 100 100 w1`65
2580 2130 (root) 0 0 81 0 3 A1`65
/AA 100 100 w1`65
2661 2130 ( run:) 0.416656 0 84 1 4 A1`65
/AB 100 100 w1`65
2062 2209 ( echo \2230\224 > /proc/sys/net/ipv4/ip_forward) 0 0 1025 4 40 A1`65
/AA 100 100 w1`65
2062 2284 (This must written to a system startup file or ) 0.324051 0 810 9 45 A1`65
/AB 100 100 w1`65
2872 2284 (/etc/sysctl.conf) 0 0 400 0 15 A1`65
/AA 100 100 w1`65
3272 2284 ( on Red Hat to occur) 0.333313 0 385 5 19 A1`65
2062 2334 (after each reboot. More information is available in ) 0.937469 0 936 8 51 A1`65
/AB 100 100 w1`65
2998 2334 (proc.txt) 0 0 200 0 7 A1`65
/AA 100 100 w1`65
3198 2334 ( file in the kernel) 1.041641 0 309 4 18 A1`65
/AB 100 100 w1`65
2062 2384 (Documentation/) 0 0 350 0 13 A1`65
/AA 100 100 w1`65
2412 2384 ( directory) 2.083282 0 173 1 9 A1`65
2583 2384 (.) 2.083282 0 12 0 0 A1`65
O1`65
N1`65
F M1`65
/AF 220 220 w1`65
F g`65
0 0 0 1 (Black) 0.6 _process d`65
2256 -2327 (http://www) 2.812424 0 442 0 9 A1`65
2694 -2327 (.LinuxSecurity) 2.812424 0 583 0 13 A1`65
3272 -2327 (.com    info@LinuxSecurity) 2.812424 0 1087 4 25 A1`65
4353 -2327 (.com) 2.812424 0 186 0 3 A1`65
O1`65
447 -163 72 533 -72 -370 4.199105 -4.202454 150 -1715 F kHu$65
i2`65

%%BeginDocument:
%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 7.0%%For: (Steve S Trank) (Eclipse Imaging)%%Title: (lscupart.eps)%%CreationDate: (7/24/00) (6:05 PM)%%BoundingBox: 72 370 519 533%%HiResBoundingBox: 72.1474 370.4435 518.7281 532.4656%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.1 0%%+ procset Adobe_Illustrator_AI5 1.2 0%%+ procset Adobe_cshow 2.0 8%AI5_FileFormat 3%AI3_ColorUsage: Black&White%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 306 396 306 396%AI3_TileBox: 30 33 582 761%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 612 792%AI5_RulerUnits: 2%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI5_OpenToView: -126 748 1.5 1146 827 18 0 1 -29 42 0 0%AI5_OpenViewLayers: 7%%PageOrigin:30 33%%AI3_PaperRect:-30 761 582 -31%%AI3_Margin:30 -33 -30 31%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 25 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			0			6 packedarray		} bind def		/findrgbcustomcolor		{			1			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop 			0 eq			{				pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				pop				3				{					1 exch sub					3 index mul 					1 exch sub					3 1 roll				} repeat				4 -1 roll pop				setrgbcolor			} ifelse		}		def	} if		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	level2?	{		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore		add add add 4 eq	}	{		1 0 0 0 testCMYKColorThrough		0 1 0 0 testCMYKColorThrough		0 0 1 0 testCMYKColorThrough		0 0 0 1 testCMYKColorThrough		and and and	} ifelse	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 24 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize{ 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6	{		dup type /arraytype eq		{			dup xcheck			{				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not{	/Adobe_ColorImage_AI6_Vars 15 dict def} ifAdobe_ColorImage_AI6_Vars begin	/channelcount 0 def	/sourcecount 0 def	/sourcearray 4 array def	/plateindex -1 def	/XIMask 0 def	/XIBinary 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIBuffer null def	/XIDataProc null def	/XIVersion 6 defend/WalkRGBString null def/WalkCMYKString null def/StuffRGBIntoGrayString null def/RGBToGrayImageProc null def/StuffCMYKIntoGrayString null def/CMYKToGrayImageProc null def/ColorImageCompositeEmulator null def/SeparateCMYKImageProc null def/FourEqual null def/TestPlateIndex null defcurrentdict /_colorimage known not{	/colorimage where	{		/colorimage get /_colorimage exch def	}	{		/_colorimage null def	} ifelse} if/_currenttransfer systemdict /currenttransfer get def/colorimage null def/XI null def/WalkRGBString{	0 3 index	dup length 1 sub 0 3 3 -1 roll	{		3 getinterval { } forall		5 index exec		3 index	} for		 5 { pop } repeat} def/WalkCMYKString{	0 3 index	dup length 1 sub 0 4 3 -1 roll	{		4 getinterval { } forall				6 index exec				3 index			} for		5 { pop } repeat	} def/StuffRGBIntoGrayString{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/RGBToGrayImageProc{		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		dup length 3 idiv string		dup 3 1 roll 				/StuffRGBIntoGrayString load exch		WalkRGBString end} def/StuffCMYKIntoGrayString{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/CMYKToGrayImageProc{		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		dup length 4 idiv string		dup 3 1 roll 				/StuffCMYKIntoGrayString load exch		WalkCMYKString end} def/ColorImageCompositeEmulator{	pop true eq	{		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat	}	{		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne		{			Adobe_ColorImage_AI6_Vars begin				sourcearray 0 3 -1 roll put							channelcount 3 eq 				{ 					/RGBToGrayImageProc 				}				{ 					/CMYKToGrayImageProc				} ifelse				load		 end		} if		image	} ifelse} def/SeparateCMYKImageProc{		Adobe_ColorImage_AI6_Vars begin		sourcecount 0 ne		{			sourcearray plateindex get exec		}		{						sourcearray 0 get exec						dup length 4 idiv string						0 2 index						plateindex 4 2 index length 1 sub			{				get 255 exch sub								3 copy put pop 1 add								2 index			} for			pop pop exch pop		} ifelse end} def	/FourEqual{	4 index ne	{		pop pop pop false	}	{		4 index ne		{			pop pop false		}		{			4 index ne			{				pop false			}			{				4 index eq			} ifelse		} ifelse	} ifelse} def/TestPlateIndex{	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where		{			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 FourEqual 			{ 				/plateindex 0 def			}			{				0 1 0 0 FourEqual				{ 					/plateindex 1 def				}				{					0 0 1 0 FourEqual					{						/plateindex 2 def					}					{						0 0 0 1 FourEqual						{ 							/plateindex 3 def						}						{							0 0 0 0 FourEqual							{								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/colorimage{	Adobe_ColorImage_AI6_Vars begin		/channelcount 1 index def		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def		4 sourcecount add index dup 		8 eq exch 1 eq or not end		{		/_colorimage load null ne		{			_colorimage		}		{			Adobe_ColorImage_AI6_Vars /sourcecount get			7 add { pop } repeat		} ifelse	}	{		dup 3 eq		TestPlateIndex		dup -1 eq exch 5 eq or or		{			/_colorimage load null eq			{				ColorImageCompositeEmulator			}			{				dup 1 eq				{					pop pop image				}				{					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq					{						gsave												0 _currenttransfer exec						1 _currenttransfer exec						eq						{ 0 _currenttransfer exec 0.5 lt }						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse												{ { pop 0 } } { { pop 1 } } ifelse						systemdict /settransfer get exec					} if										_colorimage										Adobe_ColorImage_AI6_Vars /plateindex get 5 eq					{						grestore					} if				} ifelse			} ifelse		}		{			dup 1 eq			{				pop pop				image			}			{				pop pop				Adobe_ColorImage_AI6_Vars begin					sourcecount -1 0					{									exch sourcearray 3 1 roll put					} for					/SeparateCMYKImageProc load			 end				systemdict /image get exec			} ifelse		} ifelse	} ifelse} def/XG{	pop pop} def/XF{	13 {pop} repeat} def/Xh{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIMask exch 0 ne def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				XIMask		{			/_lp /null ddef			_fc			/_lp /imagemask ddef		}		if		/XIVersion 7 def end} def/XH{	Adobe_ColorImage_AI6_Vars begin		/XIVersion 6 def		grestore end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIMask exch 0 ne def		/XIBinary exch 0 ne def		pop		pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq		{			XIImageWidth 8 div ceiling cvi		}		{			XIImageWidth XIChannelCount mul		} ifelse		/XIBuffer exch string def		XIBinary		{			/XIDataProc { currentfile XIBuffer readstring pop } def			XIVersion 6 le			{				currentfile 128 string readline pop pop			}			if		}		{			/XIDataProc { currentfile XIBuffer readhexstring pop } def		} ifelse				XIVersion 6 le		{			0 0 moveto			XIImageMatrix concat			XIImageWidth XIImageHeight scale			XIMask			{				/_lp /null ddef				_fc				/_lp /imagemask ddef			} if		} if				XIMask		{			XIImageWidth XIImageHeight			false			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]			/XIDataProc load			imagemask		}		{			XIImageWidth XIImageHeight			XIBitsPerPixel			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]			/XIDataProc load						XIChannelCount 1 eq			{				gsave				0 setgray				image				grestore			}			{				false				XIChannelCount				colorimage			} ifelse		} ifelse		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)%%Version: 1.2 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 107 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XA{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/_rgbtocmyk{3	{	1 exch sub 3 1 roll	} repeat3 copy 1 4 1 roll3	{	3 index 2 copy gt		{		exch		} if	pop 4 1 roll	} repeatpop pop pop4 1 roll3	{	3 index sub	3 1 roll	} repeat4 -1 roll} def/Xx{	exch	/_gf exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%EndProlog%%BeginSetupAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_BeginPalette0 0 PbPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 0 79 128 255 Lb(Layer 1) Ln0 Au0 O0 g800 Ar2 J 0 j 1 w 2 M []0 d%AI3_Note:0 D0 XR122.0805 505.1437 m120.8625 502.9176 L122.1225 502.5396 121.0725 500.6916 122.0805 499.8936 C122.6265 500.0196 123.3825 499.5156 123.7185 500.2716 C123.8865 501.2376 123.0885 503.3796 124.8945 502.9176 C125.2725 501.7416 124.7265 499.0116 127.1206 500.1036 C128.2966 500.9016 126.3646 503.7156 128.7586 503.2956 C129.1366 502.9176 L129.3046 502.3717 128.8006 501.0276 129.5566 500.4816 C130.3966 500.6496 131.5726 500.1456 132.1606 500.9016 C131.9506 503.1277 L132.6646 503.2117 133.2246 503.5407 134.1766 503.1277 C134.1766 500.9016 L136.9906 500.6916 L137.8726 501.6996 135.9406 504.0517 138.4186 503.5056 C138.6706 503.1277 138.7546 501.8676 138.6286 501.2796 C139.2586 500.1456 140.6446 500.9856 141.6527 500.9016 C141.8627 503.5056 L144.2567 504.4717 142.6607 501.6156 143.6687 500.9016 C144.6347 501.0276 145.7687 500.5236 146.4827 501.2796 C146.1467 501.9096 146.3147 502.7496 146.2727 503.5056 C146.6507 503.8836 147.2387 503.6737 147.7007 503.7156 C148.1627 502.7076 147.6587 502.1196 148.0787 501.1116 C148.6667 500.7336 149.4647 500.9436 150.0947 500.9016 C150.5147 503.7156 L150.9032 503.6737 151.658 503.7544 151.7747 503.4006 C152.1252 502.3395 151.2182 500.1141 153.3287 500.9016 C154.1268 501.6156 153.4547 503.2956 153.9587 503.7156 C154.8827 502.9597 153.5807 500.4396 155.7648 501.1116 C156.1008 501.2376 155.8908 501.6576 155.9747 501.9096 C156.8568 501.2376 157.2768 499.9776 158.3688 500.4816 C158.2848 499.6416 156.0587 499.7256 157.1508 498.8856 C157.7808 498.8856 L157.6548 498.5916 158.0328 498.4656 158.1588 498.2556 C157.8228 497.4576 156.8568 498.1716 156.3528 497.6676 C156.4788 495.7356 159.5868 494.8536 157.5708 492.8376 C157.7388 492.4596 158.1168 492.6696 158.3688 492.6276 C158.0328 491.7876 159.1248 490.9476 159.1668 490.0236 C161.2668 481.2035 158.7468 470.4934 164.4168 463.1854 C172.7329 448.6953 184.1989 435.5072 185.7949 418.2451 C186.551 415.179 182.3509 411.945 186.593 409.971 C187.853 405.267 187.559 399.051 193.271 397.0769 C194.573 394.7669 198.3531 392.9189 196.463 389.8109 C193.775 384.9809 187.769 385.4429 183.7789 382.3348 C178.9489 378.5548 173.9509 375.2788 169.2469 371.2468 C165.9708 369.9447 161.1828 370.0708 158.3688 372.2548 C156.6468 373.3888 155.6388 375.2788 154.1268 376.4968 C144.4667 377.2528 133.9666 376.7488 124.3065 376.9168 C122.7525 373.0108 118.7205 370.9108 114.8145 370.4488 C104.9024 369.8608 98.8544 378.6388 88.8163 377.7148 C85.5403 379.1848 81.0043 379.7308 79.7442 383.9729 C81.2563 389.8949 78.5262 395.3969 79.7442 401.487 C81.5083 404.469 84.7423 404.889 87.8083 405.141 C92.6383 406.947 92.9044 414.8151 99.1064 414.591 C100.3244 415.9351 100.2824 417.7411 100.5344 419.4631 C95.5783 422.3611 90.8793 423.8887 85.8392 426.6187 C86.9312 429.9367 89.4303 432.6457 90.1443 436.1737 C91.4623 438.9932 L92.8483 438.1952 L97.8464 439.4972 103.2224 440.7992 106.5824 445.2513 C110.1104 450.8793 116.2005 455.4153 118.4685 461.5894 C118.6785 471.6694 116.4525 481.4975 117.2505 491.8296 C116.6625 492.2076 L118.0485 492.4176 119.7705 491.1156 121.4925 491.0316 C127.3446 490.3455 133.0146 489.2255 142.1147 490.6956 C142.9967 491.1156 144.3967 491.4936 144.3547 491.9556 C130.9146 490.6256 123.8865 491.6196 117.4605 494.4336 C117.7125 494.5596 117.6705 494.8536 117.6705 495.0636 C117.4605 495.2316 L103.9364 467.6374 L93.4783 446.2593 L93.2263 445.9233 92.7223 445.6713 92.6383 445.2513 C93.6043 444.7472 94.3183 444.4533 94.8643 443.4452 C95.0744 442.1432 93.5623 441.5132 92.6383 441.2192 C91.6303 441.2192 L92.0083 441.5552 93.1003 441.7652 93.0583 442.6472 C91.7563 443.4452 89.8243 442.7312 88.4383 443.2352 C87.0103 443.6972 85.7083 445.7133 84.1963 444.6633 C84.4483 443.2772 85.9603 443.1932 86.8003 442.4372 C88.2283 442.0172 89.5303 441.5552 91.0423 441.4292 C88.1023 437.6912 87.6823 432.4832 84.4063 428.7032 C84.9103 426.7711 82.5583 425.5951 81.3823 424.6711 C80.1642 424.5871 79.1142 425.2591 78.5262 426.3091 C78.1062 431.3912 81.7603 435.2132 83.5663 439.6232 C83.4823 440.0012 83.0623 440.3792 82.5583 440.2112 C80.7523 437.1872 L79.9542 438.9512 79.7442 441.2192 80.1642 443.2352 C82.3063 445.2933 82.9783 449.8293 86.5903 449.4933 C88.4383 448.0653 L89.7823 452.2653 84.0703 453.0213 81.7603 455.1213 C78.6942 456.4234 76.1742 458.9434 72.8982 459.7834 C72.1002 460.5814 71.8902 461.9254 72.3102 462.9754 C75.1662 467.4694 77.8542 460.8754 80.7523 460.1614 C84.0283 458.7753 86.7583 456.1293 90.0343 454.7433 C91.3363 454.3233 92.1343 455.2893 93.0583 455.9193 C100.5344 470.8714 L115.0245 501.2796 L115.5285 501.6996 115.7385 502.2456 115.6545 502.9176 C112.7985 504.3876 109.1025 506.4877 109.6064 510.3517 C111.3705 516.2737 117.7125 517.9958 122.8785 519.0458 C136.3606 523.5398 153.3287 522.0278 164.0388 512.5777 C164.8368 511.3597 165.0468 509.5957 164.6268 508.1677 C163.0308 506.6977 162.3588 503.7156 159.7968 503.7156 C159.1668 503.1277 L158.9148 503.5476 158.9148 504.1777 158.3688 504.5137 C157.9908 503.5056 L157.9908 504.3037 L158.1588 504.2196 158.4948 504.5137 158.3688 504.7237 C158.5788 505.2697 158.0748 505.5637 157.7808 505.9417 C157.3608 505.9837 157.0248 505.8997 156.7728 505.5217 C156.6048 504.8917 157.1088 503.7576 156.3528 503.5056 C156.7728 504.2617 155.2187 506.2777 157.1508 506.3197 C157.5288 507.1597 156.6468 507.6637 156.1428 507.9577 C155.8908 507.9157 155.5128 508.0837 155.3448 507.7477 C155.1347 507.1597 155.9747 507.0337 155.9747 506.5297 C154.6307 506.1517 155.3448 509.7637 153.5387 508.3357 C153.8747 508.0417 153.5387 507.4537 153.9587 507.1597 C153.7067 506.9497 153.4967 506.5717 153.1187 506.7397 C152.1947 507.4117 153.4967 509.3437 151.7327 509.3437 C151.1867 509.2597 150.2627 508.8397 150.9347 508.1677 C151.2707 507.8317 151.0607 507.3277 151.1027 506.9497 C150.3047 506.6557 149.5067 507.2437 149.2967 508.1677 C149.2967 508.7137 149.4227 509.5117 148.7087 509.5537 C148.1627 509.4277 147.4067 509.9317 147.0707 509.1757 C146.7767 508.3357 147.7007 507.7897 147.0707 507.1597 C145.2227 507.0337 146.6507 509.4277 145.0547 509.9737 C144.4247 509.8057 143.4587 510.3097 143.0387 509.5537 C143.1227 508.9237 142.9127 508.0837 143.2487 507.5377 C142.9547 506.7817 142.1987 507.2857 141.6527 507.1597 C141.1487 508.1677 141.9467 509.7637 140.4347 510.3517 C139.8466 510.3517 L140.1407 511.2337 140.1407 512.8717 139.8466 514.0057 C138.6706 514.2577 139.7207 516.3157 137.9986 515.8117 C136.8226 516.1057 137.1586 517.7857 135.6046 517.2397 C135.3526 517.5757 135.3526 518.1638 134.8066 518.2478 C134.6386 518.0377 134.3026 517.9117 134.3866 517.6177 C134.5966 517.4077 L133.4626 517.1138 133.3366 516.4837 132.5806 515.8117 C130.9426 515.8957 131.8666 514.2157 130.7746 513.5857 C131.3626 512.7457 129.5566 512.3677 130.7746 511.7797 C130.3966 511.0657 130.3966 510.6877 130.7746 509.9737 C130.1866 509.5957 129.9346 508.6717 129.1366 508.9657 C128.7586 506.3197 L127.5406 506.3197 L126.9106 507.1597 128.0866 509.4277 126.1126 508.9657 C125.5666 509.1757 125.2725 508.6717 124.8945 508.3357 C124.8106 507.4537 125.7345 505.5217 123.8865 505.9417 C123.3825 506.5717 123.6345 507.4117 123.5085 508.1677 C122.7945 507.5797 122.3745 506.5297 122.2905 505.5217 C123.7606 505.7737 123.1305 504.1356 123.2985 503.2956 CF133.9666 512.9977 m133.7986 512.7877 L133.5886 513.5857 L133.8406 513.5857 133.9246 513.2497 133.9666 512.9977 Cf136.9906 512.5777 m136.4026 512.5357 136.6546 513.2497 136.6126 513.5857 C136.7386 513.2497 137.1586 513.0397 136.9906 512.5777 Cf134.8066 510.3517 m133.8406 510.2257 133.2946 510.9397 132.1606 510.3517 C132.4126 510.9817 133.3366 511.5697 132.9586 512.1997 C133.5466 511.6957 134.3026 510.9397 134.8066 510.3517 Cf138.2086 510.9817 m137.6206 510.8137 137.2426 511.2337 136.8226 511.3597 C137.2006 511.7797 L138.2086 510.9817 Lf136.6126 510.7717 m136.4026 510.4357 135.7306 510.5197 135.8146 510.9817 C136.0666 510.9397 136.4446 511.1077 136.6126 510.7717 Cf1 g111.7905 486.7895 m94.6543 451.7193 L93.6043 450.5433 93.6463 448.3593 92.2603 447.8553 C91.7143 448.5693 93.0163 449.2833 92.2603 450.0813 C91.9663 451.0053 90.0343 451.7613 91.0423 452.7273 C93.1003 452.2653 94.5704 454.0293 95.4943 455.5413 C99.2744 462.6814 102.3824 470.1574 106.1624 477.2975 C118.8465 503.2956 L120.0225 505.0177 120.5265 507.0337 121.7025 508.7557 C121.7025 507.3277 L111.7905 486.7895 Lf0 g138.4186 508.3357 m138.7546 508.1677 138.5866 507.7057 138.6286 507.3277 C136.9486 506.4037 134.9746 508.4617 133.3786 506.7397 C132.7066 507.0757 132.1606 505.9837 131.7826 506.9497 C131.7826 508.5457 L133.4626 507.2857 136.5706 507.4957 138.4186 508.3357 Cf1 g116.0325 503.7156 m115.6965 503.3796 116.9985 505.2697 116.8305 506.3197 C117.3345 505.5637 116.7045 504.4297 116.0325 503.7156 Cf0 g155.3448 504.1356 m154.5467 504.1356 L154.3367 506.1517 L155.2608 505.8997 155.0928 504.8077 155.3448 504.1356 Cf1 g119.8545 500.1036 m120.4845 501.2796 L120.2745 500.1036 L119.8545 500.1036 Lf120.4845 497.8776 m120.4425 497.6256 120.6105 497.2056 120.2745 497.0796 C120.0645 497.0796 L120.0645 498.0876 L120.2745 498.1296 120.3585 497.9616 120.4845 497.8776 Cf131.7826 497.0796 m130.7746 497.0796 L130.6906 497.6676 131.4046 497.4156 131.7826 497.4576 C131.7826 497.0796 Lf133.1686 497.4576 m133.1686 497.2476 133.2106 496.9536 132.9586 496.8696 C132.5806 497.4576 L133.1686 497.4576 Lf137.2006 497.0796 m136.1926 497.0796 L136.1506 497.6676 136.8646 497.4156 137.2006 497.4576 C137.2006 497.0796 Lf139.0066 497.0796 m138.4186 497.0796 L138.4186 497.4576 L139.0066 497.4576 L139.0066 497.0796 Lf0 R0 G0 J 0.84 w147.2807 488.0075 m149.2547 486.4115 149.3387 484.0595 149.5067 481.7495 C148.9187 479.0195 148.5827 475.7855 145.8947 474.2735 C147.5327 473.0554 150.2627 472.0054 148.9187 469.2334 C147.7847 465.8454 145.0827 465.7334 142.8147 463.8854 C139.6227 460.6513 132.2446 460.5954 129.3466 461.1694 C128.3806 461.6734 126.7846 461.9674 126.7426 463.3954 C129.8506 464.6554 133.1686 463.4374 136.4026 464.4034 C145.2647 469.4434 L145.5587 469.3594 145.8947 469.1914 146.2727 469.2334 C146.5667 469.5274 147.2387 470.0314 146.6927 470.4514 C145.4747 471.0394 L135.8146 465.8314 L132.9166 465.1174 129.8926 466.4194 127.3306 464.9914 C125.2725 465.4954 122.6546 466.4754 121.1846 468.5755 C121.3526 470.3815 121.0305 472.2574 123.2985 472.8874 C126.4066 473.3914 128.8006 475.6595 131.3626 477.5075 C133.1266 476.5415 135.1006 477.4655 136.6126 478.3055 C136.1506 482.0435 136.0666 486.5375 139.8466 488.3855 C141.9887 489.3096 145.3067 489.3516 147.2807 488.0075 Cb2 J 1 w129.3466 485.1515 m130.1866 483.2195 130.2566 481.3155 130.2146 479.0055 C127.8206 476.6954 124.7265 474.9454 121.5345 474.5254 C118.2585 477.3815 119.2245 481.5395 119.4765 485.5715 C119.8545 486.9995 121.0305 487.8816 122.2905 488.5955 C125.5245 489.5616 127.7506 487.2516 129.3466 485.1515 Cf0 g144.8867 482.7575 m146.0207 481.6235 146.0207 479.7755 145.6847 478.3055 C145.0127 477.3395 144.6767 476.0375 143.4587 475.4915 C142.3667 475.0295 141.1067 475.4075 140.2247 476.0795 C139.1326 477.2975 139.0906 479.1875 139.4266 480.7415 C139.8466 482.0435 140.9386 483.1355 142.2407 483.5555 C143.3747 483.8495 144.0047 483.0515 144.8867 482.7575 Cf126.7426 482.3375 m127.6666 480.9515 128.2966 479.1035 127.7506 477.2975 C126.8265 476.4575 125.6506 474.7775 124.0965 475.7015 C122.7945 477.3395 121.1145 479.1875 122.0805 481.5395 C122.8785 483.2195 125.4826 483.8075 126.7426 482.3375 Cf1 g144.4667 480.3215 m144.0467 479.7335 L143.2067 479.8595 142.5347 480.8255 142.0307 481.3295 C142.6607 482.7155 144.5087 481.4975 144.4667 480.3215 Cf126.1126 480.9515 m126.1126 479.7335 L125.2305 479.8175 124.3486 480.4895 123.8865 481.3295 C124.5165 482.0435 125.6506 481.7915 126.1126 480.9515 Cf124.5165 463.3954 m126.9106 457.6833 135.6747 459.4053 138.4186 459.9514 C141.9047 461.5054 145.2507 463.1294 148.0648 465.3554 C150.9347 459.9514 L156.0587 444.9152 166.6428 431.0552 163.6188 413.583 C163.0308 412.239 160.8048 412.953 159.5868 412.197 C155.8068 407.409 157.7388 400.227 156.3528 394.4309 C154.8827 390.9029 150.9347 390.2309 148.2887 387.7949 C141.1067 384.6029 131.3626 382.5448 123.5085 385.7789 C117.5865 390.3569 117.2505 397.9589 111.7905 403.125 C109.2704 406.863 105.3644 409.971 104.9444 414.591 C103.7264 421.3951 106.7504 426.9391 108.5984 432.7352 C111.6645 435.9272 112.0005 442.1852 117.4605 442.4372 C118.8045 443.0252 120.6945 442.7312 121.4925 444.2433 C119.9385 445.7133 117.2925 444.7893 115.2345 445.0413 C116.2005 452.3913 123.1305 457.5153 121.7025 465.6214 C122.6265 464.8654 123.5646 464.9354 124.5165 463.3954 Cf0 R1 G0 J 1.26 w76.3422 461.3794 m76.0902 460.9594 75.6702 460.9174 75.3342 461.1694 C74.8302 462.1354 76.3842 462.2194 76.3422 461.3794 Cb0 g2 J 1 w133.2246 445.0133 m133.6866 443.7953 131.9226 443.4593 131.2086 442.7873 C130.6626 442.5353 130.8726 441.8632 130.2006 441.7793 C129.2346 442.4513 129.6966 444.1733 128.1846 444.0053 C127.7646 444.4253 L128.3526 445.6853 130.6626 445.1393 130.4106 447.0293 C130.6626 447.2393 130.8726 447.6593 131.2086 447.6593 C132.3006 446.9453 130.7046 445.8113 132.0066 445.2233 C133.2246 445.0133 Lf1 g0 R1 G0 J 1.26 w111.57 446.9261 m108.1259 443.776 106.7819 437.602 101.0699 438.232 C105.5639 439.114 108.2939 443.944 111.57 446.9261 Cb0 g2 J 1 w154.3367 443.8233 m154.7567 442.2272 156.1428 441.1352 156.7728 439.6232 C155.3028 438.6572 154.3787 441.5273 152.8247 441.4853 C150.0107 442.6613 147.4207 443.5433 143.9347 443.1653 C143.6407 443.5433 142.6607 443.4873 142.8707 444.0333 C144.8027 445.2093 147.7007 444.2852 149.9267 444.8312 C151.3547 445.0413 154.7567 447.3093 154.3367 443.8233 Cf1 g0 R1 G0 J 1.26 w167.0628 432.7352 m166.4328 434.1632 L167.0628 433.1552 L167.0628 432.7352 Lb0 g0 G0.84 w127.8346 428.6051 m127.2886 421.9272 124.8526 413.499 128.5486 407.535 C128.3806 407.199 128.3386 406.905 127.9186 406.737 C123.7606 412.7431 125.7345 421.4791 126.3226 428.5351 C126.5746 429.4591 126.6585 430.8872 127.7506 431.1392 C128.9546 430.7051 128.1146 429.7252 127.8346 428.6051 Cb1 g1 G1.26 w171.8929 422.2771 m171.6829 422.1091 171.5989 421.7731 171.2629 421.8571 C171.4309 424.7971 169.4988 426.8551 169.0788 429.5432 C171.0109 427.5271 171.9349 425.0911 171.8929 422.2771 Cb2 J 1 w82.9783 427.9051 m83.2723 427.1911 82.4743 426.9391 82.1803 426.5191 C81.7603 426.5191 L81.6763 427.3171 81.8863 427.9471 82.3903 428.5351 C82.7683 428.6611 83.1463 428.3251 82.9783 427.9051 Cf0 R1 G0 J 1.26 w182.3509 417.2371 m182.2669 416.4391 183.4849 415.6831 182.5609 415.0111 C180.9649 414.9691 181.5529 416.8591 180.5449 417.6151 C180.0409 419.1271 176.8909 418.4551 178.1509 420.0511 C179.9149 419.9671 181.3429 418.7071 182.3509 417.2371 Cb0 G102.8987 411.6289 m107.9811 404.1667 115.1207 397.5111 118.025 389.1614 C120.5258 386.0555 123.8334 382.9899 122.462 378.5125 C121.0906 375.7293 118.5897 372.9057 115.282 372.704 C108.1828 372.3006 102.818 375.9713 96.8885 378.5125 C92.4918 379.6823 87.4094 379.0772 83.7387 381.9814 C81.0362 383.3529 82.3673 386.0958 82.569 388.1933 C81.9757 392.4218 81.1525 399.5562 81.8026 400.5767 C83.7593 404.907 88.0951 401.7061 90.3136 404.449 C95.0733 406.6675 94.9478 414.2844 101.321 412.5903 C102.8987 411.6289 Lb165.6233 410.0102 m165.6233 407.3479 165.8653 404.4437 168.5276 403.2336 C172.5209 402.2655 176.0301 404.9277 178.6117 408.074 C180.5479 408.4773 181.6741 410.9526 183.7312 409.8233 C186.8775 405.9912 184.5816 399.7646 190.027 397.2234 C192.2455 395.4083 195.0296 393.3336 194.0212 390.0664 C189.7052 385.7907 182.0475 384.8318 178.9292 381.6972 C174.4834 378.6937 171.8149 373.9033 166.793 372.6583 C162.719 371.9726 159.5324 373.8684 157.1122 376.7323 C154.9191 379.0904 157.8383 386.2518 158.0803 391.0519 C159.4114 396.82 158.3821 402.8041 159.9955 408.4512 C160.6816 410.372 161.9123 410.3731 162.9207 410.6152 C163.9291 410.6555 164.8972 410.6152 165.6233 410.0102 Cb1 Ap0 g1 w 4 M141.2747 504.1882 m141.2747 506.6032 L138.9646 506.6032 L138.9646 504.1882 L141.2747 504.1882 Lf145.6322 504.3456 m145.6322 506.6557 L143.6897 506.6557 L143.6897 504.3456 L145.6322 504.3456 Lf149.9267 504.1356 m149.9267 506.5507 L148.3097 506.5507 L148.3097 504.1356 L149.9267 504.1356 Lf152.6147 504.0831 m152.6147 506.6032 L151.5647 506.6032 L151.5647 504.0831 LF131.5096 503.6894 m131.5096 506.262 L129.5146 506.262 L129.5146 503.6894 L131.5096 503.6894 Lf127.2571 503.5056 m127.2571 505.8682 L125.5245 505.8682 L125.5245 503.5056 L127.2571 503.5056 Lf121.902 503.1907 m121.902 505.5007 L123.372 505.5007 L123.372 503.1907 L121.902 503.1907 Lf136.8822 503.8906 m136.8822 506.6206 L134.0472 506.6206 L134.0472 503.8906 L136.8822 503.8906 LfU*u0 Ap0 0 0 1 k187.6014 530.7087 m199.1521 530.7087 L199.1521 495.8904 L213.3502 495.8904 L213.3502 486.4647 L187.6014 486.4647 L187.6014 530.7087 lf*U*u234.4694 520.0212 m245.2727 520.0212 L245.2727 515.9339 L245.3968 515.9339 L246.8218 519.22 249.6701 520.894 253.5158 520.894 c258.4208 520.894 262.2702 518.972 262.2702 511.7767 c262.2702 486.4588 L251.0944 486.4588 L251.0944 508.612 L251.0944 511.4044 250.3513 512.5837 248.3699 512.5837 c246.3883 512.5837 245.6453 511.4044 245.6453 508.612 c245.6453 486.4588 L234.4694 486.4588 L234.4694 520.0212 lf*U*u265.4379 520.0212 m276.6136 520.0212 L276.6136 497.8677 L276.6136 495.0753 277.3567 493.8963 279.3382 493.8963 c281.3197 493.8963 282.0628 495.0753 282.0628 497.8677 c282.0628 520.0212 L293.2386 520.0212 L293.2386 486.4588 L282.4354 486.4588 L282.4354 490.546 L282.3112 490.546 L280.8863 487.26 278.0378 485.586 274.1922 485.586 c269.2873 485.586 265.4379 487.508 265.4379 494.703 C265.4379 520.0212 lf*U*u295.3349 520.0212 m306.4927 520.0212 L309.8401 511.0253 L313.6833 520.0212 L324.8412 520.0212 L316.4108 503.767 L325.2754 486.4588 L314.1173 486.4588 L310.212 496.5708 L306.1208 486.4588 L294.963 486.4588 L303.8273 503.767 L295.3349 520.0212 lf*U*u204.8513 467.4587 m204.8513 468.4978 L204.8513 471.1014 203.8061 473.2714 201.6228 473.2714 c199.143 473.2714 198.0271 471.3494 198.0271 469.3657 c198.0271 460.6251 216.8454 464.9024 216.8454 448.7265 c216.8454 439.3 211.3408 435.084 201.1865 435.084 c191.6284 435.084 186.2889 438.37 186.2889 447.5349 c186.2889 449.0838 L197.4646 449.0838 L197.4646 448.0442 L197.4646 444.2606 199.0154 442.8961 201.2508 442.8961 c203.6066 442.8961 204.9705 444.7568 204.9705 447.1759 c204.9705 455.9215 186.8514 451.5797 186.8514 467.2723 c186.8514 476.1909 191.6321 481.0836 201.347 481.0836 c211.369 481.0836 215.6521 476.9341 215.6521 467.4587 C204.8513 467.4587 lf*U*u236.7695 456.8962 m230.6953 456.8962 L230.6953 458.3962 l230.6953 461.9587 231.4315 463.5837 233.7017 463.5837 c236.0331 463.5837 236.7695 461.9587 236.7695 458.3962 c236.7695 456.8962 Lf247.1952 450.8338 m247.1952 454.2361 l247.1952 466.4325 242.6649 470.3962 233.763 470.3962 c223.7415 470.3962 219.5195 465.5655 219.5195 452.6896 c219.5195 439.9109 222.9964 435.0838 233.763 435.0838 c242.974 435.0838 246.7584 439.6015 246.8827 447.7088 C236.832 447.7088 l236.832 443.1376 235.6659 441.8963 233.7022 441.8963 c232.1681 441.8963 230.6953 442.8273 230.6953 446.427 C230.6953 450.8338 l247.1952 450.8338 Lf*U*u267.0281 456.3962 m267.0281 459.1219 266.7823 460.7324 266.291 461.7792 c265.7996 462.8354 265.0012 463.2087 263.8342 463.2087 c261.316 463.2087 260.579 460.9715 260.579 452.7086 c260.579 444.4457 261.316 442.2713 263.8342 442.2713 c265.861 442.2713 267.0281 443.576 267.0281 447.8006 c267.0281 449.975 L277.0789 449.975 L277.0789 444.6942 276.2722 441.032 274.1007 438.6155 c271.9293 436.1991 268.4551 435.0838 263.8342 435.0838 c255.3015 435.0838 249.4032 437.6861 249.4032 452.1495 c249.4032 468.0416 256.0465 470.3962 264.387 470.3962 c274.2869 470.3962 277.0789 464.7577 277.0789 456.3962 C267.0281 456.3962 lf*U*u280.2244 469.5212 m291.4001 469.5212 L291.4001 447.3677 L291.4001 444.5753 292.1432 443.3963 294.1247 443.3963 c296.1062 443.3963 296.8493 444.5753 296.8493 447.3677 c296.8493 469.5212 L308.0251 469.5212 L308.0251 435.9588 L297.2218 435.9588 L297.2218 440.046 L297.0977 440.046 L295.6727 436.76 292.8243 435.086 288.9786 435.086 c284.0738 435.086 280.2244 437.008 280.2244 444.203 C280.2244 469.5212 lf*U*u312.2761 469.5153 m323.0793 469.5153 L323.0793 464.1855 L323.2035 464.1855 L324.4439 468.2185 327.4199 470.3903 330.7059 470.3903 c332.5039 470.3903 L332.5039 459.9658 L331.5119 460.1519 330.6439 460.2146 329.7139 460.2146 c325.7459 460.2146 323.4519 458.6631 323.4519 454.2587 c323.4519 435.9588 L312.2761 435.9588 L312.2761 469.5153 lf*U*u334.5994 469.5212 m345.7752 469.5212 L345.7752 435.9588 L334.5994 435.9588 L334.5994 469.5212 lf334.5994 480.2064 m345.7752 480.2064 L345.7752 471.8984 L334.5994 471.8984 L334.5994 480.2064 lf*U*u348.3751 469.5212 m352.0951 469.5212 L352.0951 479.3337 L363.2708 479.3337 L363.2708 469.5212 L367.6729 469.5212 L367.6729 462.0212 L363.2708 462.0212 L363.2708 446.0036 L363.2708 444.079 364.1389 443.3961 365.9369 443.3961 c367.6729 443.3961 L367.6729 435.956 L365.6269 435.708 363.4568 435.584 361.5944 435.584 c354.7648 435.584 352.0951 436.7 352.0951 444.1498 c352.0951 462.0212 L348.3751 462.0212 L348.3751 469.5212 lf*U*u372.9665 433.0819 m373.7722 432.8957 374.6398 432.8336 375.4454 432.8336 c378.2342 432.8336 379.1638 434.6959 379.1638 435.3787 c379.1638 435.8753 378.9159 436.9927 378.668 437.8618 c369.8059 469.5212 L381.3328 469.5212 L384.7413 446.8629 L384.8652 446.8629 L388.0878 469.5212 L399.2433 469.5212 L390.2569 434.82 L388.2737 427.1296 385.2371 425.0216 379.2257 425.0216 c376.8708 425.0216 374.8257 425.0836 372.9665 425.2696 C372.9665 433.0819 lf*U*u398.0493 448.2088 m408.475 448.2088 L408.475 435.9588 L398.0493 435.9588 L398.0493 448.2088 lf*U*u430.2938 456.3962 m430.2938 459.1219 430.048 460.7324 429.5566 461.7792 c429.0653 462.8354 428.2668 463.2087 427.0998 463.2087 c424.5816 463.2087 423.8446 460.9715 423.8446 452.7086 c423.8446 444.4457 424.5816 442.2713 427.0998 442.2713 c429.1267 442.2713 430.2938 443.576 430.2938 447.8006 c430.2938 449.975 L440.3446 449.975 L440.3446 444.6942 439.5378 441.032 437.3664 438.6155 c435.195 436.1991 431.7207 435.0838 427.0998 435.0838 c418.5671 435.0838 412.6689 437.6861 412.6689 452.1495 c412.6689 468.0416 419.3122 470.3962 427.6526 470.3962 c437.5525 470.3962 440.3446 464.7577 440.3446 456.3962 C430.2938 456.3962 lf*U*u453.7283 452.7086 m453.7283 461.2201 454.3419 463.2087 456.7966 463.2087 c459.3126 463.2087 459.865 461.2201 459.865 452.7086 c459.865 444.2593 459.3126 442.2713 456.7966 442.2713 c454.3419 442.2713 453.7283 444.2593 453.7283 452.7086 cf471.0407 452.7086 m471.0407 462.4005 469.861 470.3962 456.7966 470.3962 c444.2289 470.3962 442.5525 461.5928 442.5525 452.7708 c442.5525 443.0789 443.7322 435.0838 456.7966 435.0838 c469.3643 435.0838 471.0407 443.8866 471.0407 452.7086 cf*U*u490.9274 458.112 m490.9274 460.9044 490.1843 462.0837 488.2028 462.0837 c486.2213 462.0837 485.4782 460.9044 485.4782 458.112 c485.4782 435.9588 L474.3025 435.9588 L474.3025 469.5212 L485.1056 469.5212 L485.1056 465.4339 L485.2298 465.4339 L486.6547 468.72 489.5032 470.394 493.3488 470.394 c497.9432 470.394 500.1784 468.658 501.5443 465.248 c503.2797 469.03 506.5615 470.394 509.9738 470.394 c514.8786 470.394 518.7281 468.472 518.7281 461.2767 c518.7281 435.9588 L507.5524 435.9588 L507.5524 458.112 L507.5524 460.9044 506.8092 462.0837 504.8277 462.0837 c502.8462 462.0837 502.1032 460.9044 502.1032 458.112 c502.1032 435.9588 L490.9274 435.9588 L490.9274 458.112 lf*U*u204.2716 419.6038 m202.2203 419.6038 202.0475 416.4896 201.4645 416.4896 c201.3134 416.4896 201.227 416.5328 201.227 416.7275 c201.227 416.8572 201.3781 417.4627 201.9611 419.236 c202.501 420.8782 202.5442 421.0294 202.7817 421.0294 c203.2999 421.0294 202.7817 420.0791 203.4943 420.0791 c209.6051 420.0791 L210.4904 420.0791 210.2961 420.8998 210.7711 420.8998 c210.8791 420.8998 210.9441 420.8134 210.9441 420.727 c210.9441 420.5542 210.7927 420.2303 210.3393 418.5007 c209.8858 416.7275 209.7131 416.4031 209.5187 416.4031 c209.3244 416.4031 209.2812 416.5112 209.2812 416.641 c209.2812 416.9437 209.5619 418.0466 209.5619 418.6305 c209.5619 419.409 209.4108 419.6038 207.9424 419.6038 c207.1651 419.6038 L203.7102 408.1206 L203.6454 407.926 203.6022 407.7097 203.6022 407.4934 c203.6022 407.1907 203.8397 407.061 204.2716 406.9745 c204.6387 406.9112 204.7251 406.869 204.7251 406.7424 c204.7251 406.5315 204.5739 406.4682 204.2932 406.4682 c203.9693 406.4682 203.9045 406.5526 202.5441 406.5526 c201.3997 406.5526 201.119 406.4682 200.9247 406.4682 c200.7303 406.4682 200.6224 406.5104 200.6224 406.658 c200.6224 406.8479 200.7519 406.9323 200.9679 406.9745 c202.0043 407.1907 202.0259 407.2123 202.3714 408.3585 c205.7831 419.6038 L204.2716 419.6038 lf*U*u208.2525 406.5526 m209.5269 411.1755 212.0879 419.9722 212.0879 420.1459 c212.0879 420.4282 211.9812 420.5151 211.6822 420.5586 c211.2117 420.6219 211.0173 420.643 211.0173 420.8334 c211.0173 421.0068 211.1037 421.0718 211.2117 421.0718 c212.9912 421.2019 213.3584 421.8524 213.6175 421.8524 c213.7687 421.8524 213.8119 421.7655 213.8119 421.6571 c213.8119 421.4187 213.0776 419.2941 210.9957 411.7609 c211.0389 411.7178 L212.0452 413.6609 213.8119 416.6493 215.0863 416.6493 c216.2492 416.6493 216.5077 415.3449 216.5077 414.0063 c216.5077 410.3576 214.0063 406.2151 212.0879 406.2151 c211.5541 406.2151 211.2765 406.6882 211.2765 407.335 c211.2765 407.8315 211.5754 408.177 211.9385 408.177 c212.2801 408.177 212.4296 407.9611 212.4296 407.4645 c212.4296 407.0543 212.5376 406.9463 212.7104 406.9463 c213.7039 406.9463 215.1296 412.6893 215.1296 414.3511 c215.1296 415.2152 214.9352 415.4962 214.5032 415.4962 c213.7687 415.4962 212.7967 414.2215 211.436 411.6508 c210.6584 410.225 209.7944 407.6759 209.6432 407.1358 c209.5352 406.747 209.4703 406.5526 209.276 406.5526 C208.2525 406.5526 lf*U*u222.528 416.258 m223.0484 416.258 223.3087 415.87 223.3087 415.3529 c223.3087 414.685 223.2219 411.8842 218.9284 411.2163 c219.6006 414.5342 221.4004 416.258 222.528 416.258 cf224.4618 414.8359 m224.4618 415.6546 223.9707 416.6468 222.6364 416.6468 c220.3812 416.6468 217.2901 413.4139 217.2901 409.4711 c217.2901 407.3166 218.0437 406.3014 219.3838 406.3014 c220.3162 406.3014 221.3571 406.9494 222.0293 407.6613 c222.94 408.6093 223.5436 409.7297 223.5436 409.9451 c223.5436 410.0744 223.4582 410.139 223.3728 410.139 c223.2002 410.139 223.2219 409.9236 222.7232 409.2557 c221.7691 407.9845 220.8149 407.3382 219.9692 407.3382 c219.1452 407.3382 218.6682 408.0276 218.6682 409.4065 c218.6682 409.902 218.7332 410.3545 218.8416 410.7854 c222.8533 411.2163 224.4618 412.5952 224.4618 414.8359 cf*U*u232.4793 407.0843 m234.5098 407.0843 235.3738 407.3868 236.1946 409.0504 c236.8426 410.3683 236.7778 410.4115 236.9939 410.4115 c237.1451 410.4115 237.2099 410.3683 237.2099 410.2603 c237.2099 410.001 237.1235 409.7201 236.497 407.6244 c236.173 406.5585 236.1946 406.4709 236.065 406.4709 c235.5897 406.4709 234.7905 406.5499 230.6864 406.5499 c229.3471 406.5499 228.6559 406.4709 228.3967 406.4682 c228.2239 406.4682 228.1591 406.5104 228.1591 406.7002 c228.1591 406.8479 228.2455 406.9323 228.8719 406.9745 c229.412 407.0178 229.6712 407.2991 229.8656 407.9485 c232.8897 418.0567 233.1489 418.7494 233.1489 419.0752 c233.1489 419.4641 232.9329 419.5721 232.5657 419.6586 c232.0473 419.7641 231.8096 419.6797 231.8096 419.9328 c231.8096 420.0594 231.8744 420.1649 232.004 420.1647 c232.436 420.1647 233.0625 420.0807 234.1857 420.0807 c235.0065 420.0807 235.6546 420.1647 236.1514 420.1649 c236.3674 420.1649 236.4322 420.1438 236.4322 419.9961 c236.4322 419.743 236.2162 419.743 235.6546 419.6586 c234.7906 419.5289 234.661 419.3776 234.4449 418.6647 c231.0536 407.0843 L232.4793 407.0843 lf*U*u239.723 408.9068 m239.5503 408.3892 239.4856 408.152 239.4856 407.9364 c239.4856 407.7854 239.5719 407.6776 239.7446 407.6776 c240.0253 407.6776 240.3707 408.0226 241.191 409.3813 c241.5581 409.9851 241.5581 410.2871 241.7741 410.2871 c241.8821 410.2871 241.9469 410.2224 241.9469 410.1361 c241.9469 409.7263 240.198 406.3838 238.775 406.3838 c238.3013 406.3838 238.1075 406.8366 238.1075 407.2894 c238.1075 407.7854 238.3228 408.4539 238.6243 409.3166 c240.0685 413.3495 L240.457 414.3846 240.565 414.7728 240.565 415.0747 c240.565 415.2473 240.5002 415.3551 240.3275 415.3551 c240.1116 415.3551 239.8742 415.1826 239.3348 414.4709 c238.3659 413.1985 238.4951 412.875 238.2151 412.875 c238.129 412.875 238.0643 412.8966 238.0643 413.0044 c238.0643 413.2848 238.4951 414.0827 239.1195 414.9454 c239.8957 416.0021 240.5866 416.6493 241.2558 416.6493 c241.6877 416.6493 241.9469 416.3471 241.9469 415.7864 c241.9469 415.4414 241.7957 414.7297 241.5365 413.9749 C239.723 408.9068 lf242.4869 420.418 m242.8325 420.418 243.0269 420.0738 243.0269 419.6652 c243.0269 418.9555 242.5085 418.2243 241.9685 418.2243 c241.6229 418.2243 241.4285 418.5684 241.4285 418.977 c241.4285 419.6867 241.9469 420.418 242.4869 420.418 cf*U*u242.8761 406.5526 m244.1721 410.2809 L245.0577 412.8519 245.5761 414.5372 245.5761 415.0341 c245.5761 415.315 245.4897 415.4878 245.2305 415.4878 c244.8849 415.4878 244.4097 415.0341 243.7401 414.0834 c243.0489 413.1112 243.1353 412.9815 242.9193 412.9815 c242.8113 412.9815 242.7681 413.0248 242.7681 413.1328 c242.7681 413.5433 244.6689 416.6493 246.0714 416.6493 c246.6958 416.6493 246.9542 416.22 246.9542 415.639 c246.9542 414.5372 246.1575 412.6791 245.9637 411.7068 c246.0068 411.6636 L246.7604 413.176 249.1769 416.6493 251.2063 416.6493 c251.8738 416.6493 252.326 416.1986 252.326 415.4662 c252.326 414.602 252.0676 414.1483 250.8397 410.9722 c249.8662 408.4444 249.8229 408.1851 249.8229 407.8826 c249.8229 407.645 249.9311 407.537 250.0825 407.537 c250.407 407.537 250.7965 407.8394 251.3786 408.5956 c252.3045 409.7839 252.2614 410.1728 252.4556 410.1728 c252.5636 410.1728 252.6068 410.0864 252.6068 409.9784 c252.6068 409.503 250.6234 406.3838 249.3277 406.3838 c248.6602 406.3838 248.4448 406.8536 248.4448 407.3875 c248.4448 408.0555 248.7678 409.2222 249.2846 410.524 c250.5801 413.7615 250.9479 414.5817 250.9479 415.2292 c250.9479 415.6393 250.7532 415.8337 250.472 415.8337 c249.4999 415.8337 247.7434 413.999 246.0714 411.0204 c245.4681 409.9412 244.4961 407.7181 244.2801 407.0274 c244.1505 406.6173 244.1289 406.5526 243.8913 406.5526 C242.8761 406.5526 lf*U*u260.4359 411.2111 m259.1828 409.3524 256.7699 406.3838 255.1102 406.3838 c254.5288 406.3838 254.1843 406.7469 254.1843 407.3875 c254.1843 409.0946 256.8562 414.33 256.8562 415.1305 c256.8562 415.2819 256.813 415.4118 256.6405 415.4118 c256.274 415.4118 255.7349 414.8059 255.261 414.1569 c254.5288 413.1401 254.3781 412.7507 254.2274 412.7507 c254.0979 412.7507 254.0331 412.8156 254.0331 412.9238 c254.0331 413.1834 256.0799 416.5649 257.4375 416.5649 c257.9758 416.5649 258.2342 416.3087 258.2342 415.6254 c258.2342 414.4598 255.5624 408.9648 255.5624 407.9692 c255.5624 407.645 255.7565 407.537 255.9936 407.537 c257.0284 407.537 260.5005 410.6491 262.2061 415.9658 c262.2925 416.2684 262.3573 416.3118 262.9189 416.3118 c263.4373 416.3118 263.5237 416.2468 263.5237 416.0955 c263.5237 415.8361 260.7373 408.7905 260.7373 407.8611 c260.7373 407.6666 260.8453 407.537 260.9749 407.537 c261.1909 407.537 261.6229 407.8395 262.4005 408.8553 c263.1133 409.7846 263.1349 410.1304 263.3293 410.1304 c263.4373 410.1304 263.5237 410.0872 263.5237 409.9359 c263.5237 409.5901 261.5149 406.3838 260.0267 406.3838 c259.5746 406.3838 259.3592 406.7469 259.3592 407.1312 c259.3592 408.0124 259.8545 409.374 260.4789 411.1678 C260.4359 411.2111 lf*U*u264.344 409.058 m264.7129 409.058 264.9337 408.8419 264.9337 408.4097 c264.9337 407.999 264.5362 407.5452 264.5362 407.4156 c264.5362 407.3075 264.5804 407.1994 264.8012 407.1994 c265.265 407.1994 266.6072 408.9716 268.0349 411.2407 c267.4076 414.8282 267.2778 415.4118 266.8019 415.4118 c266.3909 415.4118 266.0448 414.9146 265.8285 413.8125 c265.6989 413.1209 265.7421 412.8832 265.5477 412.8832 c265.4397 412.8832 265.3533 412.948 265.3533 413.0777 c265.3533 413.2938 265.5045 414.2879 265.7637 415.0011 c266.1097 415.9243 266.6721 416.5649 267.4508 416.5649 c268.2945 416.5649 268.4891 415.9457 269.0083 412.7751 c269.0516 412.7751 L270.9119 415.9884 271.5824 416.5649 272.2689 416.5649 c272.7814 416.5649 272.9736 416.1806 272.9736 415.4972 c272.9736 414.6553 272.5892 413.8557 272.0127 413.8419 c271.7122 413.8419 271.5175 414.0794 271.5175 414.3601 c271.5175 414.6408 271.8205 415.0942 271.8205 415.267 c271.8205 415.4397 271.6906 415.5262 271.5392 415.5262 c271.1714 415.5262 270.609 414.4897 269.1165 412.2099 c269.7005 408.835 L269.9168 407.5802 270.0466 407.537 270.2629 407.537 c270.5441 407.537 270.8253 407.8614 271.1282 409.1162 c271.3229 409.9383 271.2363 410.133 271.4743 410.133 c271.6041 410.133 271.6473 410.0248 271.6473 409.9167 c271.6473 409.3325 271.0849 406.3838 269.8087 406.3838 c268.6189 406.3838 268.7055 407.2807 268.143 410.6739 c267.2778 409.3325 266.3693 408.0129 265.7205 407.2807 c265.2208 406.7255 264.7791 406.3838 264.1946 406.3838 c263.6607 406.3838 263.3831 406.7041 263.3831 407.3875 c263.3831 408.3807 263.8742 409.0513 264.344 409.058 cf*U*u287.5334 420.418 m288.473 420.418 288.537 420.2704 288.537 420.0172 c288.537 419.6736 288.3021 418.679 287.7683 416.9275 c287.6402 416.5166 287.6402 416.322 287.3622 416.322 c287.2326 416.322 287.0815 416.3869 287.0815 416.5599 c287.0815 416.7977 287.3839 419.1114 287.3839 419.5006 c287.3839 419.7385 287.2974 419.9118 286.9952 419.9118 c284.5556 419.825 280.0434 416.3869 280.0434 410.354 c280.0434 408.0187 280.799 406.7213 282.0944 406.7213 c283.2818 406.7213 284.3181 407.5863 284.901 408.9269 c285.6782 410.7216 285.6782 410.9162 285.9589 410.9162 c286.11 410.9162 286.1748 410.8081 286.1748 410.6784 c286.1748 410.527 286.0884 410.1378 285.8941 409.4458 c285.2248 407.0457 L285.1601 406.8511 282.9795 406.2151 281.9864 406.2151 c279.6567 406.2151 278.4966 407.9755 278.4966 410.7865 c278.4966 416.495 283.5841 420.418 287.5334 420.418 cf*U*u288.7917 409.2064 m288.7917 411.8859 290.697 416.1431 292.4508 416.1431 c293.4035 416.1431 293.9666 415.3649 293.9666 413.6362 c293.9666 410.9567 292.0611 406.7213 290.3073 406.7213 c289.3546 406.7213 288.7917 407.4776 288.7917 409.2064 cf287.6386 409.9843 m287.6386 407.6505 288.6208 406.2151 290.3073 406.2151 c292.9272 406.2151 295.1197 409.7898 295.1197 412.8583 c295.1197 415.1921 294.1374 416.6493 292.4508 416.6493 c289.831 416.6493 287.6386 413.0744 287.6386 409.9843 cf*U*u296.2053 406.5526 m296.4861 407.8466 299.1645 414.4889 299.1645 415.1356 c299.1645 415.3515 299.0349 415.481 298.819 415.481 c298.6029 415.481 298.3437 415.3083 297.7389 414.5959 c296.8101 413.495 296.7669 413.0201 296.5509 413.0201 c296.4429 413.0201 296.3997 413.0633 296.3997 413.1712 c296.3997 413.3871 296.9397 414.2937 297.6525 415.1572 c298.3437 415.9778 299.2291 416.6474 299.8751 416.6474 c300.3058 416.6474 300.5426 416.345 300.5426 415.913 c300.5426 415.3515 300.3488 414.6607 299.4014 411.8975 c299.4445 411.8544 L300.8228 413.9699 302.5252 416.6474 304.1843 416.6474 c304.7872 416.6474 305.2395 416.1506 305.2395 415.1788 c305.2395 414.4017 304.6365 412.6531 304.2705 411.6601 c304.3135 411.6169 L305.0241 412.9121 307.3699 416.6474 309.1804 416.6474 c309.9771 416.6474 310.3862 416.0642 310.3862 415.3731 c310.3862 413.7756 307.7144 408.5947 307.7144 407.9039 c307.7144 407.6665 307.7791 407.537 308.0163 407.537 c308.4259 407.537 308.9434 408.0334 309.5034 408.789 c310.214 409.7173 310.3432 410.1922 310.4942 410.1922 c310.6022 410.1922 310.6454 410.1058 310.6454 410.0411 c310.6454 409.8036 310.1709 408.8538 309.3742 407.9039 c308.5338 406.8963 307.8438 406.3838 307.0899 406.3838 c306.5947 406.3838 306.3363 406.7469 306.3363 407.1953 c306.3363 409.0049 309.0081 413.6245 309.0081 415.0496 c309.0081 415.3731 308.7925 415.6106 308.4691 415.6106 c307.2622 415.6106 304.4858 411.8363 302.7838 407.4799 c302.4821 406.7035 302.439 406.5526 302.3313 406.5526 c301.0814 406.5526 L302.8916 411.3618 303.8613 413.9282 303.8613 414.9849 c303.8613 415.3731 303.7105 415.6106 303.3657 415.6106 c302.202 415.6106 299.0565 410.9952 297.8037 407.4368 c297.5229 406.6389 297.5229 406.5526 297.2205 406.5526 C296.2053 406.5526 lf*U*u311.8865 406.5526 m312.1672 407.8466 314.8457 414.4889 314.8457 415.1356 c314.8457 415.3515 314.716 415.481 314.5001 415.481 c314.2841 415.481 314.0249 415.3083 313.4201 414.5959 c312.4913 413.495 312.4481 413.0201 312.2321 413.0201 c312.124 413.0201 312.0809 413.0633 312.0809 413.1712 c312.0809 413.3871 312.6208 414.2937 313.3336 415.1572 c314.0249 415.9778 314.9102 416.6474 315.5562 416.6474 c315.9869 416.6474 316.2238 416.345 316.2238 415.913 c316.2238 415.3515 316.0299 414.6607 315.0825 411.8975 c315.1256 411.8544 L316.5039 413.9699 318.2063 416.6474 319.8654 416.6474 c320.4684 416.6474 320.9206 416.1506 320.9206 415.1788 c320.9206 414.4017 320.3176 412.6531 319.9516 411.6601 c319.9946 411.6169 L320.7052 412.9121 323.051 416.6474 324.8615 416.6474 c325.6582 416.6474 326.0674 416.0642 326.0674 415.3731 c326.0674 413.7756 323.3955 408.5947 323.3955 407.9039 c323.3955 407.6665 323.4602 407.537 323.6974 407.537 c324.1071 407.537 324.6246 408.0334 325.1845 408.789 c325.8951 409.7173 326.0243 410.1922 326.1754 410.1922 c326.2834 410.1922 326.3266 410.1058 326.3266 410.0411 c326.3266 409.8036 325.852 408.8538 325.0553 407.9039 c324.2149 406.8963 323.5249 406.3838 322.7711 406.3838 c322.2758 406.3838 322.0174 406.7469 322.0174 407.1953 c322.0174 409.0049 324.6893 413.6245 324.6893 415.0496 c324.6893 415.3731 324.4736 415.6106 324.1502 415.6106 c322.9433 415.6106 320.1669 411.8363 318.4649 407.4799 c318.1632 406.7035 318.1201 406.5526 318.0124 406.5526 c316.7625 406.5526 L318.5727 411.3618 319.5425 413.9282 319.5425 414.9849 c319.5425 415.3731 319.3916 415.6106 319.0468 415.6106 c317.8831 415.6106 314.7377 410.9952 313.4848 407.4368 c313.2041 406.6389 313.2041 406.5526 312.9017 406.5526 C311.8865 406.5526 lf*U*u334.219 411.2111 m332.9659 409.3524 330.553 406.3838 328.8934 406.3838 c328.312 406.3838 327.9674 406.7469 327.9674 407.3875 c327.9674 409.0946 330.6393 414.33 330.6393 415.1305 c330.6393 415.2819 330.5961 415.4118 330.4236 415.4118 c330.0571 415.4118 329.518 414.8059 329.0441 414.1569 c328.312 413.1401 328.1612 412.7507 328.0105 412.7507 c327.881 412.7507 327.8162 412.8156 327.8162 412.9238 c327.8162 413.1834 329.863 416.5649 331.2207 416.5649 c331.759 416.5649 332.0174 416.3087 332.0174 415.6254 c332.0174 414.4598 329.3455 408.9648 329.3455 407.9692 c329.3455 407.645 329.5396 407.537 329.7768 407.537 c330.8115 407.537 334.2836 410.6491 335.9893 415.9658 c336.0757 416.2684 336.1405 416.3118 336.7021 416.3118 c337.2205 416.3118 337.3069 416.2468 337.3069 416.0955 c337.3069 415.8361 334.5205 408.7905 334.5205 407.8611 c334.5205 407.6666 334.6285 407.537 334.7581 407.537 c334.9741 407.537 335.4061 407.8395 336.1837 408.8553 c336.8965 409.7846 336.9181 410.1304 337.1125 410.1304 c337.2205 410.1304 337.3069 410.0872 337.3069 409.9359 c337.3069 409.5901 335.2981 406.3838 333.8099 406.3838 c333.3577 406.3838 333.1424 406.7469 333.1424 407.1312 c333.1424 408.0124 333.6376 409.374 334.2621 411.1678 C334.219 411.2111 lf*U*u338.4318 406.5526 m339.7278 410.2809 L340.6134 412.8519 341.1318 414.5372 341.1318 415.0341 c341.1318 415.315 341.0454 415.4878 340.7862 415.4878 c340.4406 415.4878 339.9654 415.0341 339.2958 414.0834 c338.6046 413.1112 338.691 412.9815 338.475 412.9815 c338.367 412.9815 338.3238 413.0248 338.3238 413.1328 c338.3238 413.5433 340.2246 416.6493 341.6271 416.6493 c342.2515 416.6493 342.5099 416.22 342.5099 415.639 c342.5099 414.5372 341.7132 412.6791 341.5194 411.7068 c341.5625 411.6636 L342.3161 413.176 344.7326 416.6493 346.762 416.6493 c347.4295 416.6493 347.8817 416.1986 347.8817 415.4662 c347.8817 414.602 347.6233 414.1483 346.3954 410.9722 c345.4219 408.4444 345.3786 408.1851 345.3786 407.8826 c345.3786 407.645 345.4868 407.537 345.6382 407.537 c345.9627 407.537 346.3522 407.8394 346.9343 408.5956 c347.8601 409.7839 347.8171 410.1728 348.0113 410.1728 c348.1193 410.1728 348.1625 410.0864 348.1625 409.9784 c348.1625 409.503 346.1791 406.3838 344.8834 406.3838 c344.2158 406.3838 344.0005 406.8536 344.0005 407.3875 c344.0005 408.0555 344.3235 409.2222 344.8403 410.524 c346.1358 413.7615 346.5036 414.5817 346.5036 415.2292 c346.5036 415.6393 346.3089 415.8337 346.0276 415.8337 c345.0556 415.8337 343.299 413.999 341.6271 411.0204 c341.0238 409.9412 340.0518 407.7181 339.8358 407.0274 c339.7062 406.6173 339.6846 406.5526 339.447 406.5526 C338.4318 406.5526 lf*U*u351.0462 408.9068 m350.8735 408.3892 350.8087 408.152 350.8087 407.9364 c350.8087 407.7854 350.8951 407.6776 351.0678 407.6776 c351.3484 407.6776 351.6938 408.0226 352.5142 409.3813 c352.8813 409.9851 352.8813 410.2871 353.0973 410.2871 c353.2053 410.2871 353.2701 410.2224 353.2701 410.1361 c353.2701 409.7263 351.5211 406.3838 350.0981 406.3838 c349.6244 406.3838 349.4306 406.8366 349.4306 407.2894 c349.4306 407.7854 349.6459 408.4539 349.9474 409.3166 c351.3916 413.3495 L351.7802 414.3846 351.8881 414.7728 351.8881 415.0747 c351.8881 415.2473 351.8234 415.3551 351.6507 415.3551 c351.4348 415.3551 351.1973 415.1826 350.658 414.4709 c349.689 413.1985 349.8182 412.875 349.5383 412.875 c349.4522 412.875 349.3874 412.8966 349.3874 413.0044 c349.3874 413.2848 349.8182 414.0827 350.4427 414.9454 c351.2189 416.0021 351.9097 416.6493 352.579 416.6493 c353.0109 416.6493 353.2701 416.3471 353.2701 415.7864 c353.2701 415.4414 353.1189 414.7297 352.8597 413.9749 C351.0462 408.9068 lf353.8101 420.418 m354.1557 420.418 354.3501 420.0738 354.3501 419.6652 c354.3501 418.9555 353.8317 418.2243 353.2917 418.2243 c352.9461 418.2243 352.7517 418.5684 352.7517 418.977 c352.7517 419.6867 353.2701 420.418 353.8101 420.418 cf*U*u355.1586 415.8056 m355.3094 416.3118 L356.7132 416.3118 L357.6636 419.163 L357.7932 419.5518 357.7716 419.5734 358.7436 419.5734 c359.0244 419.5734 359.046 419.5518 359.046 419.4654 c359.046 419.2062 358.8516 418.731 358.0956 416.3118 c359.7372 416.3118 L359.586 415.8056 L357.9012 415.8056 L356.13 410.2716 355.3524 408.6287 355.3524 408.0234 c355.3524 407.7856 355.5036 407.6776 355.6332 407.6776 c355.8708 407.6776 356.1516 408.0234 356.778 408.8233 c357.4908 409.7528 357.534 410.1851 357.7716 410.1851 c357.858 410.1851 357.9228 410.1203 357.9228 410.0122 c357.9228 409.6015 355.9356 406.3838 354.6418 406.3838 c354.1681 406.3838 353.9743 406.7073 353.9743 407.2247 c353.9743 408.3261 354.4911 409.796 356.5188 415.8056 C355.1586 415.8056 lf*U*u362.8346 407.4367 m363.4863 408.3859 366.1398 411.7941 366.1398 413.8434 c366.1398 414.3395 365.7048 415.0514 365.7048 415.6126 c365.7048 416.1742 365.9875 416.563 366.3966 416.563 c366.9529 416.563 367.1241 416.0446 367.1241 415.2239 c367.1241 413.3688 365.9222 410.8234 361.8737 405.4953 c361.3141 404.7403 360.8392 404.1148 360.4291 403.6402 c359.2852 402.305 358.573 401.9402 357.7749 401.9402 c356.9782 401.9402 356.6337 402.5626 356.6337 403.3166 c356.6337 403.7265 356.9136 404.1795 357.3442 404.1795 c357.7318 404.1795 357.8826 403.9422 358.0118 403.1656 c358.055 402.8636 358.2924 402.7558 358.5082 402.7558 c359.1125 402.7558 359.7169 403.4461 360.0622 403.8128 c360.7529 404.5462 361.4004 405.9267 361.5731 407.1563 c361.681 407.976 361.7242 409.0546 361.7242 410.6724 c361.7242 415.0729 361.5083 415.5262 361.0335 415.5262 c360.6882 415.5262 360.4291 415.1377 360.0191 414.3827 c359.5658 413.5845 359.5442 413.0453 359.2636 413.0453 c359.1341 413.0453 359.0694 413.11 359.0694 413.3041 c359.0694 413.563 360.3212 416.563 361.5299 416.563 c362.4716 416.563 362.8773 415.5694 362.8773 412.8511 c362.8773 410.4783 362.856 409.2056 362.7706 407.4799 C362.8346 407.4367 lf*U*u370.4375 420.1509 m371.1071 420.1509 371.3448 419.5677 371.3448 418.8335 c371.3448 417.0195 369.6815 415.3135 369.2711 415.3135 c369.1631 415.3135 369.0984 415.3999 369.0984 415.4862 c369.0984 415.6806 369.5303 415.767 370.1999 416.7388 c370.5023 417.1923 370.6751 417.7753 370.6967 418.0561 c370.7183 418.488 370.4159 418.4016 370.0487 418.5744 c369.8112 418.6824 369.6815 418.8983 369.6815 419.2438 c369.6815 419.8485 370.0702 420.1509 370.4375 420.1509 cf*U*u372.1937 413.5061 m372.1937 415.0839 373.3629 416.6493 375.0454 416.6493 c376.1246 416.6493 377.1398 416.1641 377.1398 415.9053 c377.1398 415.4946 377.0319 415.0407 376.9022 414.5003 c376.643 413.5061 376.6215 413.398 376.4055 413.398 c376.1031 413.398 376.1894 413.5277 376.1031 414.2842 c375.9492 415.5594 375.5579 416.1431 374.7251 416.1431 c373.8703 416.1431 373.2305 415.4081 373.2305 414.5436 c373.2305 412.7712 375.7074 411.4744 375.7074 409.3994 c375.7074 407.5838 374.1792 406.2995 372.4745 406.2995 c371.4519 406.2995 370.302 406.9354 370.302 407.2812 c370.302 407.627 370.4316 408.4051 370.6476 409.3778 c370.801 410.0911 370.8229 410.2207 371.042 410.2207 c371.2392 410.2207 371.2611 410.0911 371.2611 409.4426 c371.2611 408.0593 371.685 406.8057 373.0145 406.8057 c373.8703 406.8057 374.5543 407.6919 374.5543 408.5132 c374.5543 410.6314 372.1937 411.4311 372.1937 413.5061 cf*U*u391.751 420.418 m392.6905 420.418 392.7546 420.2704 392.7546 420.0172 c392.7546 419.6736 392.5197 418.679 391.9859 416.9275 c391.8578 416.5166 391.8578 416.322 391.5798 416.322 c391.4502 416.322 391.2991 416.3869 391.2991 416.5599 c391.2991 416.7977 391.6015 419.1114 391.6015 419.5006 c391.6015 419.7385 391.515 419.9118 391.2127 419.9118 c388.7732 419.825 384.261 416.3869 384.261 410.354 c384.261 408.0187 385.0166 406.7213 386.312 406.7213 c387.4994 406.7213 388.5357 407.5863 389.1186 408.9269 c389.8958 410.7216 389.8958 410.9162 390.1764 410.9162 c390.3276 410.9162 390.3923 410.8081 390.3923 410.6784 c390.3923 410.527 390.306 410.1378 390.1117 409.4458 c389.4424 407.0457 L389.3776 406.8511 387.1971 406.2151 386.204 406.2151 c383.8743 406.2151 382.7141 407.9755 382.7141 410.7865 c382.7141 416.495 387.8016 420.418 391.751 420.418 cf*U*u397.0941 416.258 m397.6145 416.258 397.8748 415.87 397.8748 415.3529 c397.8748 414.685 397.788 411.8842 393.4945 411.2163 c394.1667 414.5342 395.9665 416.258 397.0941 416.258 cf399.0279 414.8359 m399.0279 415.6546 398.5368 416.6468 397.2025 416.6468 c394.9473 416.6468 391.8561 413.4139 391.8561 409.4711 c391.8561 407.3166 392.6098 406.3014 393.9498 406.3014 c394.8823 406.3014 395.9231 406.9494 396.5953 407.6613 c397.5061 408.6093 398.1097 409.7297 398.1097 409.9451 c398.1097 410.0744 398.0243 410.139 397.9389 410.139 c397.7663 410.139 397.788 409.9236 397.2892 409.2557 c396.3351 407.9845 395.381 407.3382 394.5353 407.3382 c393.7113 407.3382 393.2342 408.0276 393.2342 409.4065 c393.2342 409.902 393.2993 410.3545 393.4077 410.7854 c397.4194 411.2163 399.0279 412.5952 399.0279 414.8359 cf*U*u399.1913 406.5526 m400.4873 410.2809 L401.3729 412.8519 401.8913 414.5372 401.8913 415.0341 c401.8913 415.315 401.8049 415.4878 401.5457 415.4878 c401.2001 415.4878 400.7249 415.0341 400.0553 414.0834 c399.3641 413.1112 399.4505 412.9815 399.2345 412.9815 c399.1265 412.9815 399.0833 413.0248 399.0833 413.1328 c399.0833 413.5433 400.9841 416.6493 402.3865 416.6493 c403.011 416.6493 403.2694 416.22 403.2694 415.639 c403.2694 414.5372 402.4727 412.6791 402.2789 411.7068 c402.3219 411.6636 L403.0756 413.176 405.4921 416.6493 407.5215 416.6493 c408.189 416.6493 408.6412 416.1986 408.6412 415.4662 c408.6412 414.602 408.3828 414.1483 407.1549 410.9722 c406.1814 408.4444 406.1381 408.1851 406.1381 407.8826 c406.1381 407.645 406.2463 407.537 406.3977 407.537 c406.7222 407.537 407.1116 407.8394 407.6937 408.5956 c408.6196 409.7839 408.5766 410.1728 408.7708 410.1728 c408.8788 410.1728 408.922 410.0864 408.922 409.9784 c408.922 409.503 406.9385 406.3838 405.6428 406.3838 c404.9753 406.3838 404.76 406.8536 404.76 407.3875 c404.76 408.0555 405.083 409.2222 405.5998 410.524 c406.8953 413.7615 407.2631 414.5817 407.2631 415.2292 c407.2631 415.6393 407.0684 415.8337 406.7871 415.8337 c405.8151 415.8337 404.0585 413.999 402.3865 411.0204 c401.7833 409.9412 400.8113 407.7181 400.5953 407.0274 c400.4657 406.6173 400.4441 406.5526 400.2065 406.5526 C399.1913 406.5526 lf*U*u411.0369 415.8056 m411.1876 416.3118 L412.5915 416.3118 L413.5419 419.163 L413.6715 419.5518 413.6499 419.5734 414.6219 419.5734 c414.9027 419.5734 414.9243 419.5518 414.9243 419.4654 c414.9243 419.2062 414.7299 418.731 413.9739 416.3118 c415.6155 416.3118 L415.4643 415.8056 L413.7795 415.8056 L412.0083 410.2716 411.2307 408.6287 411.2307 408.0234 c411.2307 407.7856 411.3819 407.6776 411.5115 407.6776 c411.7491 407.6776 412.0299 408.0234 412.6563 408.8233 c413.3691 409.7528 413.4123 410.1851 413.6499 410.1851 c413.7363 410.1851 413.8011 410.1203 413.8011 410.0122 c413.8011 409.6015 411.8139 406.3838 410.5201 406.3838 c410.0464 406.3838 409.8526 406.7073 409.8526 407.2247 c409.8526 408.3261 410.3694 409.796 412.3971 415.8056 C411.0369 415.8056 lf*U*u420.1405 416.258 m420.6609 416.258 420.9212 415.87 420.9212 415.3529 c420.9212 414.685 420.8344 411.8842 416.5409 411.2163 c417.2131 414.5342 419.0129 416.258 420.1405 416.258 cf422.0743 414.8359 m422.0743 415.6546 421.5832 416.6468 420.2489 416.6468 c417.9937 416.6468 414.9026 413.4139 414.9026 409.4711 c414.9026 407.3166 415.6562 406.3014 416.9962 406.3014 c417.9287 406.3014 418.9695 406.9494 419.6417 407.6613 c420.5525 408.6093 421.1561 409.7297 421.1561 409.9451 c421.1561 410.0744 421.0707 410.139 420.9853 410.139 c420.8127 410.139 420.8344 409.9236 420.3357 409.2557 c419.3815 407.9845 418.4274 407.3382 417.5817 407.3382 c416.7577 407.3382 416.2807 408.0276 416.2807 409.4065 c416.2807 409.902 416.3457 410.3545 416.4541 410.7854 c420.4658 411.2163 422.0743 412.5952 422.0743 414.8359 cf*U*u422.3212 406.5526 m422.8396 408.5444 424.4596 414.3898 424.4596 414.9743 c424.4596 415.1692 424.438 415.2993 424.2652 415.2993 c423.9844 415.2993 423.574 414.8661 423.1204 414.13 c422.5156 413.1341 422.71 412.896 422.3644 412.896 c422.2564 412.896 422.17 412.9609 422.17 413.0908 c422.17 413.3939 423.6604 416.4524 424.9764 416.4524 c425.5362 416.4524 425.8377 416.1321 425.8377 415.5342 c425.8377 415.0826 425.5793 414.1517 424.9548 411.6735 c424.9979 411.6303 L426.6436 415.3251 427.8199 416.5649 428.7055 416.5649 c429.2223 416.5649 429.4376 416.1378 429.4376 415.4759 c429.4376 414.2232 428.727 413.4237 428.2103 413.4237 c427.907 413.4237 427.711 413.5534 427.711 413.9423 c427.711 414.4393 428.0595 414.6121 428.0595 415.0659 c428.0595 415.2603 427.9942 415.4118 427.7981 415.4118 c427.3625 415.4118 425.4716 412.3865 423.8116 407.2454 c423.6172 406.6392 423.5524 406.5526 423.3796 406.5526 C422.3212 406.5526 lf*U*u435.0307 415.8056 m435.182 416.3118 L436.6733 416.3118 L436.8895 417.0713 L437.8621 420.695 439.3751 421.8524 441.1673 421.8524 c441.8118 421.8524 442.4134 421.5359 442.4134 420.8469 c442.4134 420.2827 442.0052 419.979 441.6399 419.979 c441.1243 419.979 440.8665 420.2827 440.8665 420.7601 c440.8665 421.129 440.7368 421.3461 440.499 421.3461 c439.6777 421.3461 438.9212 420.2176 438.4241 418.1996 c437.9486 416.3118 L439.7425 416.3118 L439.6129 415.8056 L437.8189 415.8056 L436.6085 410.8551 L435.2252 405.1917 434.2525 401.9402 431.594 401.9402 c430.9039 401.9402 430.2354 402.2987 430.2354 403.1813 c430.2354 403.765 430.5589 404.0028 430.9039 404.0028 c431.3135 404.0028 431.5292 403.6785 431.5292 403.1597 c431.5292 402.6626 431.6805 402.4464 432.0479 402.4464 c433.1286 402.4464 433.4096 403.5488 435.2468 410.7254 c436.5437 415.8056 L435.0307 415.8056 lf*U*u440.3759 409.2064 m440.3759 411.8859 442.2813 416.1431 444.0351 416.1431 c444.9878 416.1431 445.5509 415.3649 445.5509 413.6362 c445.5509 410.9567 443.6454 406.7213 441.8916 406.7213 c440.9389 406.7213 440.3759 407.4776 440.3759 409.2064 cf439.2228 409.9843 m439.2228 407.6505 440.2051 406.2151 441.8916 406.2151 c444.5114 406.2151 446.704 409.7898 446.704 412.8583 c446.704 415.1921 445.7217 416.6493 444.0351 416.6493 c441.4152 416.6493 439.2228 413.0744 439.2228 409.9843 cf*U*u447.851 406.5526 m448.3694 408.5444 449.9894 414.3898 449.9894 414.9743 c449.9894 415.1692 449.9678 415.2993 449.795 415.2993 c449.5142 415.2993 449.1038 414.8661 448.6502 414.13 c448.0454 413.1341 448.2398 412.896 447.8942 412.896 c447.7862 412.896 447.6998 412.9609 447.6998 413.0908 c447.6998 413.3939 449.1902 416.4524 450.5062 416.4524 c451.0661 416.4524 451.3675 416.1321 451.3675 415.5342 c451.3675 415.0826 451.1091 414.1517 450.4847 411.6735 c450.5278 411.6303 L452.1735 415.3251 453.3497 416.5649 454.2354 416.5649 c454.7521 416.5649 454.9675 416.1378 454.9675 415.4759 c454.9675 414.2232 454.2569 413.4237 453.7401 413.4237 c453.4369 413.4237 453.2408 413.5534 453.2408 413.9423 c453.2408 414.4393 453.5894 414.6121 453.5894 415.0659 c453.5894 415.2603 453.524 415.4118 453.328 415.4118 c452.8923 415.4118 451.0015 412.3865 449.3414 407.2454 c449.147 406.6392 449.0822 406.5526 448.9094 406.5526 C447.851 406.5526 lf*U*u460.4513 407.2829 m460.7561 406.9373 461.3439 406.7213 461.733 406.7213 c463.463 406.7213 464.5964 408.2333 464.5964 410.1772 c464.5964 412.4019 461.4746 414.1946 461.4746 416.3977 c461.4746 418.7737 463.5502 420.4155 465.5223 420.4155 c466.7953 420.4155 467.8321 419.7888 467.8321 419.6808 c467.8321 419.5296 467.6377 418.7304 467.4433 417.8881 c467.1409 416.6137 467.0761 416.4626 466.8601 416.4626 c466.7305 416.4626 466.6873 416.5705 466.6873 416.7433 c466.6873 417.2401 466.7953 417.7585 466.7953 418.2337 c466.7953 418.9033 466.6441 419.4 466.3849 419.6376 c466.0825 419.9184 465.6946 420.0267 465.35 420.0267 c463.8117 420.0267 462.8527 418.7521 462.8527 417.3481 c462.8527 415.0154 465.9745 413.6763 465.9745 410.7388 c465.9745 408.2333 463.8771 406.2151 461.4528 406.2151 c460.6254 406.2151 459.1001 406.7861 459.1001 407.3477 c459.1001 407.6717 459.1865 408.0605 459.4241 409.9396 c459.5118 410.6092 459.5775 410.6956 459.8185 410.6956 c459.9938 410.6956 460.0376 410.6308 460.0376 410.3716 c460.0376 408.5789 460.0376 407.7581 460.4513 407.2829 cf*U*u472.3884 416.258 m472.9088 416.258 473.1691 415.87 473.1691 415.3529 c473.1691 414.685 473.0823 411.8842 468.7887 411.2163 c469.461 414.5342 471.2608 416.258 472.3884 416.258 cf474.3222 414.8359 m474.3222 415.6546 473.8311 416.6468 472.4968 416.6468 c470.2416 416.6468 467.1504 413.4139 467.1504 409.4711 c467.1504 407.3166 467.9041 406.3014 469.2441 406.3014 c470.1766 406.3014 471.2174 406.9494 471.8896 407.6613 c472.8004 408.6093 473.404 409.7297 473.404 409.9451 c473.404 410.0744 473.3186 410.139 473.2332 410.139 c473.0606 410.139 473.0823 409.9236 472.5835 409.2557 c471.6294 407.9845 470.6753 407.3382 469.8296 407.3382 c469.0056 407.3382 468.5285 408.0276 468.5285 409.4065 c468.5285 409.902 468.5936 410.3545 468.702 410.7854 c472.7136 411.2163 474.3222 412.5952 474.3222 414.8359 cf*U*u479.8144 416.6493 m480.9809 416.6493 481.6289 416.0998 481.6289 415.2365 c481.6289 414.7402 481.2401 414.3302 480.6569 414.3302 c480.2681 414.3302 479.9441 414.5891 479.8577 415.4523 c479.8144 415.8408 479.771 416.1431 479.3162 416.1431 c478.06 416.1431 475.8075 413.467 475.8075 409.6904 c475.8075 408.2445 476.4789 407.3382 477.5402 407.3382 c478.3632 407.3382 479.2729 408.223 479.8793 409.1725 c480.5705 410.2515 480.4841 410.4457 480.6785 410.4673 c480.7865 410.4673 480.8729 410.4241 480.8729 410.2515 c480.8729 409.9925 480.5489 409.043 479.7494 408.0072 c479.0346 407.079 478.0383 406.3014 476.8687 406.3014 c475.3983 406.3014 474.4294 407.4461 474.4294 409.712 c474.4294 413.5533 477.2586 416.6493 479.8144 416.6493 cf*U*u488.438 411.2111 m487.1849 409.3524 484.772 406.3838 483.1123 406.3838 c482.531 406.3838 482.1864 406.7469 482.1864 407.3875 c482.1864 409.0946 484.8583 414.33 484.8583 415.1305 c484.8583 415.2819 484.8151 415.4118 484.6426 415.4118 c484.2761 415.4118 483.737 414.8059 483.2631 414.1569 c482.531 413.1401 482.3802 412.7507 482.2295 412.7507 c482.1 412.7507 482.0352 412.8156 482.0352 412.9238 c482.0352 413.1834 484.082 416.5649 485.4396 416.5649 c485.978 416.5649 486.2364 416.3087 486.2364 415.6254 c486.2364 414.4598 483.5645 408.9648 483.5645 407.9692 c483.5645 407.645 483.7586 407.537 483.9958 407.537 c485.0305 407.537 488.5026 410.6491 490.2083 415.9658 c490.2946 416.2684 490.3595 416.3118 490.921 416.3118 c491.4394 416.3118 491.5258 416.2468 491.5258 416.0955 c491.5258 415.8361 488.7395 408.7905 488.7395 407.8611 c488.7395 407.6666 488.8474 407.537 488.9771 407.537 c489.193 407.537 489.6251 407.8395 490.4026 408.8553 c491.1154 409.7846 491.1371 410.1304 491.3314 410.1304 c491.4394 410.1304 491.5258 410.0872 491.5258 409.9359 c491.5258 409.5901 489.5171 406.3838 488.0289 406.3838 c487.5767 406.3838 487.3614 406.7469 487.3614 407.1312 c487.3614 408.0124 487.8566 409.374 488.481 411.1678 C488.438 411.2111 lf*U*u492.7343 406.5526 m493.2527 408.5444 494.8727 414.3898 494.8727 414.9743 c494.8727 415.1692 494.8511 415.2993 494.6783 415.2993 c494.3975 415.2993 493.9871 414.8661 493.5335 414.13 c492.9287 413.1341 493.1231 412.896 492.7775 412.896 c492.6695 412.896 492.5831 412.9609 492.5831 413.0908 c492.5831 413.3939 494.0735 416.4524 495.3895 416.4524 c495.9493 416.4524 496.2508 416.1321 496.2508 415.5342 c496.2508 415.0826 495.9924 414.1517 495.3679 411.6735 c495.411 411.6303 L497.0567 415.3251 498.233 416.5649 499.1186 416.5649 c499.6354 416.5649 499.8507 416.1378 499.8507 415.4759 c499.8507 414.2232 499.1401 413.4237 498.6234 413.4237 c498.3201 413.4237 498.1241 413.5534 498.1241 413.9423 c498.1241 414.4393 498.4726 414.6121 498.4726 415.0659 c498.4726 415.2603 498.4072 415.4118 498.2112 415.4118 c497.7756 415.4118 495.8847 412.3865 494.2247 407.2454 c494.0303 406.6392 493.9655 406.5526 493.7927 406.5526 C492.7343 406.5526 lf*U*u501.6578 408.9068 m501.4851 408.3892 501.4204 408.152 501.4204 407.9364 c501.4204 407.7854 501.5067 407.6776 501.6794 407.6776 c501.9601 407.6776 502.3055 408.0226 503.1258 409.3813 c503.4929 409.9851 503.4929 410.2871 503.7089 410.2871 c503.8169 410.2871 503.8817 410.2224 503.8817 410.1361 c503.8817 409.7263 502.1328 406.3838 500.7098 406.3838 c500.2361 406.3838 500.0423 406.8366 500.0423 407.2894 c500.0423 407.7854 500.2576 408.4539 500.5591 409.3166 c502.0033 413.3495 L502.3918 414.3846 502.4998 414.7728 502.4998 415.0747 c502.4998 415.2473 502.435 415.3551 502.2623 415.3551 c502.0464 415.3551 501.809 415.1826 501.2696 414.4709 c500.3007 413.1985 500.4299 412.875 500.1499 412.875 c500.0638 412.875 499.9991 412.8966 499.9991 413.0044 c499.9991 413.2848 500.4299 414.0827 501.0543 414.9454 c501.8306 416.0021 502.5214 416.6493 503.1906 416.6493 c503.6225 416.6493 503.8817 416.3471 503.8817 415.7864 c503.8817 415.4414 503.7305 414.7297 503.4713 413.9749 C501.6578 408.9068 lf504.4217 420.418 m504.7673 420.418 504.9617 420.0738 504.9617 419.6652 c504.9617 418.9555 504.4433 418.2243 503.9033 418.2243 c503.5577 418.2243 503.3633 418.5684 503.3633 418.977 c503.3633 419.6867 503.8817 420.418 504.4217 420.418 cf*U*u505.7703 415.8056 m505.921 416.3118 L507.3249 416.3118 L508.2753 419.163 L508.4049 419.5518 508.3833 419.5734 509.3553 419.5734 c509.6361 419.5734 509.6577 419.5518 509.6577 419.4654 c509.6577 419.2062 509.4633 418.731 508.7073 416.3118 c510.3489 416.3118 L510.1977 415.8056 L508.5129 415.8056 L506.7417 410.2716 505.9641 408.6287 505.9641 408.0234 c505.9641 407.7856 506.1153 407.6776 506.2449 407.6776 c506.4825 407.6776 506.7633 408.0234 507.3897 408.8233 c508.1025 409.7528 508.1457 410.1851 508.3833 410.1851 c508.4697 410.1851 508.5345 410.1203 508.5345 410.0122 c508.5345 409.6015 506.5473 406.3838 505.2535 406.3838 c504.7798 406.3838 504.586 406.7073 504.586 407.2247 c504.586 408.3261 505.1028 409.796 507.1305 415.8056 C505.7703 415.8056 lf*U*u513.4463 407.4367 m514.098 408.3859 516.7514 411.7941 516.7514 413.8434 c516.7514 414.3395 516.3164 415.0514 516.3164 415.6126 c516.3164 416.1742 516.5991 416.563 517.0082 416.563 c517.5646 416.563 517.7358 416.0446 517.7358 415.2239 c517.7358 413.3688 516.5339 410.8234 512.4853 405.4953 c511.9257 404.7403 511.4509 404.1148 511.0408 403.6402 c509.8969 402.305 509.1846 401.9402 508.3865 401.9402 c507.5899 401.9402 507.2453 402.5626 507.2453 403.3166 c507.2453 403.7265 507.5252 404.1795 507.9559 404.1795 c508.3435 404.1795 508.4942 403.9422 508.6234 403.1656 c508.6666 402.8636 508.904 402.7558 509.1199 402.7558 c509.7242 402.7558 510.3285 403.4461 510.6739 403.8128 c511.3646 404.5462 512.0121 405.9267 512.1847 407.1563 c512.2927 407.976 512.3359 409.0546 512.3359 410.6724 c512.3359 415.0729 512.12 415.5262 511.6451 415.5262 c511.2998 415.5262 511.0408 415.1377 510.6307 414.3827 c510.1775 413.5845 510.1559 413.0453 509.8753 413.0453 c509.7458 413.0453 509.681 413.11 509.681 413.3041 c509.681 413.563 510.9329 416.563 512.1416 416.563 c513.0833 416.563 513.489 415.5694 513.489 412.8511 c513.489 410.4783 513.4676 409.2056 513.3822 407.4799 C513.4463 407.4367 lf*U*u205.3827 392.862 m208.6947 392.862 L210.2067 383.7058 L210.2547 383.7058 L211.8627 392.862 L215.4628 392.862 L217.1668 383.7058 L217.2148 383.7058 L218.7748 392.862 L221.9428 392.862 L219.1588 379.9617 L215.3908 379.9617 L213.6868 389.1179 L213.6388 389.1179 L212.0307 379.9617 L208.1907 379.9617 L205.3827 392.862 lf*U*u222.5906 392.862 m225.9026 392.862 L227.4146 383.7058 L227.4626 383.7058 L229.0706 392.862 L232.6707 392.862 L234.3747 383.7058 L234.4227 383.7058 L235.9827 392.862 L239.1507 392.862 L236.3667 379.9617 L232.5987 379.9617 L230.8946 389.1179 L230.8466 389.1179 L229.2386 379.9617 L225.3986 379.9617 L222.5906 392.862 lf*U*u239.7985 392.862 m243.1105 392.862 L244.6225 383.7058 L244.6705 383.7058 L246.2785 392.862 L249.8785 392.862 L251.5825 383.7058 L251.6305 383.7058 L253.1906 392.862 L256.3586 392.862 L253.5746 379.9617 L249.8065 379.9617 L248.1025 389.1179 L248.0545 389.1179 L246.4465 379.9617 L242.6065 379.9617 L239.7985 392.862 lf*U*u260.4329 383.7058 m260.4329 379.9617 L257.2767 379.9617 L257.2767 383.7058 L260.4329 383.7058 lf*U*u263.2264 379.9617 m263.2264 397.0837 L266.6893 397.0837 L266.6893 382.7996 L272.8093 382.7996 L272.8093 379.9617 L263.2264 379.9617 lf*U*u274.6789 392.8649 m277.9909 392.8649 L277.9909 379.9588 L274.6789 379.9588 L274.6789 392.8649 lf274.6789 397.2682 m277.9909 397.2682 L277.9909 394.4304 L274.6789 394.4304 L274.6789 397.2682 lf*U*u280.6257 392.862 m283.7937 392.862 L283.7937 391.37 L283.8417 391.37 L284.5415 392.6355 285.749 393.2087 287.1496 393.2087 c289.2136 393.2087 290.4377 392.0863 290.4377 389.5223 c290.4377 379.9588 L287.1256 379.9588 L287.1256 388.8512 L287.1256 390.1455 286.6909 390.6491 285.7007 390.6491 c284.5656 390.6491 283.9377 389.9537 283.9377 388.5156 c283.9377 379.9588 L280.6257 379.9588 L280.6257 392.862 lf*U*u299.5816 381.4537 m299.5336 381.4537 L298.8338 380.1882 297.6263 379.6151 296.2257 379.6151 c294.1617 379.6151 292.9377 380.7374 292.9377 383.3011 c292.9377 392.8649 L296.2497 392.8649 L296.2497 383.9723 L296.2497 382.6779 296.6844 382.1746 297.6746 382.1746 c298.8097 382.1746 299.4376 382.8697 299.4376 384.3078 c299.4376 392.8649 L302.7497 392.8649 L302.7497 379.9617 L299.5816 379.9617 L299.5816 381.4537 lf*U*u311.4625 392.8649 m314.9178 392.8649 L311.5585 386.6037 L315.0619 379.9588 L311.6065 379.9588 L309.6869 384.1808 L307.7673 379.9588 L304.312 379.9588 L307.8153 386.6037 L304.456 392.8649 L307.9112 392.8649 L309.6869 388.9786 L311.4625 392.8649 lf*U*u319.5526 385.2976 m319.5526 384.7924 L319.5526 383.1807 320.0088 382.1463 321.8339 382.1463 c322.8905 382.1463 323.8992 382.8199 323.8992 384.2632 c323.8992 385.8269 323.1066 386.4042 320.8051 387.198 c317.7272 388.2565 316.3085 389.5315 316.3085 392.3941 c316.3085 395.7319 318.3525 397.4274 321.6226 397.4274 c324.6982 397.4274 326.9302 396.114 326.9302 392.8271 c326.9302 392.346 L323.6182 392.346 L323.6182 393.9578 323.0652 394.8962 321.7507 394.8962 c320.1817 394.8962 319.7713 393.9096 319.7713 392.8993 c319.7713 391.8408 320.0851 391.1913 321.5576 390.5659 c324.2346 389.4112 L326.822 388.2806 327.4929 386.9575 327.4929 384.8646 c327.4929 381.2388 325.2888 379.6151 321.5375 379.6151 c317.6287 379.6151 316.0897 381.4299 316.0897 384.6 c316.0897 385.2976 L319.5526 385.2976 lf*U*u332.2607 387.8646 m332.2607 388.3722 l332.2607 389.5808 332.6437 390.9587 333.9603 390.9587 c335.3247 390.9587 335.5641 389.8467 335.6359 387.8646 c332.2607 387.8646 Lf338.7921 385.8966 m338.7921 386.6406 l338.7921 390.6202 337.9313 393.2087 334.08 393.2087 c329.6207 393.2087 328.9487 389.9917 328.9487 386.5206 c328.9487 383.3049 329.1407 379.6151 333.9363 379.6151 c337.0466 379.6151 338.4812 381.2905 338.6007 384.2887 C335.6359 384.2887 l335.4444 382.7049 334.9896 381.865 333.8885 381.865 c332.6676 381.865 332.2607 383.3528 332.2607 384.8646 C332.2607 385.8966 l338.7921 385.8966 Lf*U*u347.0599 388.2098 m347.0599 389.4595 346.8204 390.8054 345.5757 390.8054 c343.948 390.8054 343.6847 389.3634 343.6847 386.3833 c343.6847 383.1869 343.9719 381.865 345.456 381.865 c346.5571 381.865 347.0599 382.8023 347.0599 384.8932 c350.2161 384.8932 L350.2161 381.5059 348.8053 379.6151 345.3124 379.6151 c342.0046 379.6151 340.3726 381.2187 340.3726 386.4073 c340.3726 391.7175 342.5567 393.2058 345.5997 393.2058 c348.6379 393.2058 350.2161 391.2615 350.2161 388.2098 C347.0599 388.2098 lf*U*u358.9093 381.4537 m358.8613 381.4537 L358.1614 380.1882 356.9539 379.6151 355.5534 379.6151 c353.4893 379.6151 352.2653 380.7374 352.2653 383.3011 c352.2653 392.8649 L355.5774 392.8649 L355.5774 383.9723 L355.5774 382.6779 356.0121 382.1746 357.0022 382.1746 c358.1373 382.1746 358.7653 382.8697 358.7653 384.3078 c358.7653 392.8649 L362.0773 392.8649 L362.0773 379.9617 L358.9093 379.9617 L358.9093 381.4537 lf*U*u364.5774 392.862 m367.7454 392.862 L367.7454 391.1523 L367.7934 391.1523 L368.4654 392.3957 369.4014 393.2087 370.7694 393.2087 c370.9614 393.2087 371.1774 393.1847 371.3694 393.1608 c371.3694 390.0042 L371.0334 390.0283 370.6734 390.0525 370.3374 390.0525 c369.1854 390.0525 367.8894 389.4515 367.8894 387.7212 c367.8894 379.9588 L364.5774 379.9588 L364.5774 392.862 lf*U*u373.0062 392.8649 m376.3182 392.8649 L376.3182 379.9588 L373.0062 379.9588 L373.0062 392.8649 lf373.0062 397.2682 m376.3182 397.2682 L376.3182 394.4304 L373.0062 394.4304 L373.0062 397.2682 lf*U*u379.6717 396.561 m382.9837 396.561 L382.9837 392.8649 L384.9037 392.8649 L384.9037 390.615 L382.9837 390.615 L382.9837 383.6234 L382.9837 382.6143 383.1997 382.2059 384.1597 382.2059 c384.4237 382.2059 384.6877 382.2299 384.9037 382.2539 c384.9037 379.9495 L384.1837 379.8775 383.5117 379.8055 382.7437 379.8055 c380.1517 379.8055 379.6717 380.5976 379.6717 383.2228 c379.6717 390.615 L377.9917 390.615 L377.9917 392.8649 L379.6717 392.8649 L379.6717 396.561 lf*U*u386.3828 378.2153 m386.6705 378.1674 386.9583 378.1434 387.246 378.1434 c388.4688 378.1434 388.9244 378.8147 389.0203 379.9656 c385.3998 392.8649 L388.8524 392.8649 L390.7706 383.9457 L390.8185 383.9457 L392.4969 392.8649 L395.8059 392.8649 L392.6887 380.8287 L391.5378 376.3671 390.7946 375.743 387.7255 375.743 c386.3828 375.743 L386.3828 378.2153 lf*U*u399.3928 383.7058 m399.3928 379.9617 L396.2366 379.9617 L396.2366 383.7058 L399.3928 383.7058 lf*U*u408.3083 388.2098 m408.3083 389.4595 408.0689 390.8054 406.8241 390.8054 c405.1964 390.8054 404.9331 389.3634 404.9331 386.3833 c404.9331 383.1869 405.2203 381.865 406.7044 381.865 c407.8056 381.865 408.3083 382.8023 408.3083 384.8932 c411.4645 384.8932 L411.4645 381.5059 410.0537 379.6151 406.5608 379.6151 c403.2531 379.6151 401.6211 381.2187 401.6211 386.4073 c401.6211 391.7175 403.8051 393.2058 406.8481 393.2058 c409.8863 393.2058 411.4645 391.2615 411.4645 388.2098 C408.3083 388.2098 lf*U*u416.3883 386.4118 m416.3883 389.0581 416.5327 390.9587 418.1697 390.9587 c419.5178 390.9587 419.9512 389.6354 419.9512 386.4118 c419.9512 383.1882 419.5178 381.865 418.1697 381.865 c416.5327 381.865 416.3883 383.7655 416.3883 386.4118 cf413.0763 386.4118 m413.0763 381.9132 414.1803 379.5431 418.1697 379.6151 c421.9672 379.6151 423.2632 381.9853 423.2632 386.4118 c423.2632 390.9104 422.1592 393.2807 418.1697 393.2087 c414.3723 393.2087 413.0763 390.8383 413.0763 386.4118 cf*U*u425.3457 392.862 m428.5137 392.862 L428.5137 391.561 L428.5617 391.561 L429.4036 392.7311 430.4381 393.2087 431.8334 393.2087 c433.3454 393.2087 434.4494 392.4684 434.8094 391.155 c434.8574 391.155 L435.3623 392.5162 436.5653 393.2087 438.1291 393.2087 c440.3131 393.2087 441.3451 391.8475 441.3451 389.3555 c441.3451 379.9588 L438.033 379.9588 L438.033 388.9951 L438.033 390.0765 437.6721 390.6775 436.7337 390.6775 c435.6751 390.6775 435.0014 389.9564 435.0014 388.4663 c435.0014 379.9588 L431.6894 379.9588 L431.6894 388.9951 L431.6894 390.0765 431.3284 390.6775 430.39 390.6775 c429.3314 390.6775 428.6577 389.9564 428.6577 388.4663 c428.6577 379.9588 L425.3457 379.9588 L425.3457 392.862 lf*Uu*u219.7722 512.0753 m220.1124 513.715 220.5107 515.0578 220.3654 515.8002 c220.2638 516.32 219.8141 516.688 219.2486 516.6826 c218.3061 516.6737 217.2587 515.8449 215.5388 513.2994 c213.1631 509.8549 213.41 508.5927 212.3954 508.583 c211.8411 508.5777 211.5182 508.7978 211.4165 509.3175 c211.0244 511.3222 216.7195 521.4361 223.8705 521.5044 c225.8254 521.523 227.4898 520.6432 227.9417 518.3333 c228.7271 514.318 222.3445 494.0983 222.9255 491.1284 c223.0417 490.5344 223.3825 490.2401 223.8537 490.2446 c224.6077 490.2518 226.0139 490.7859 228.4992 494.9753 c230.8667 499.0892 230.7855 499.9811 231.4371 499.9873 c231.9957 499.9927 232.3185 499.7726 232.3912 499.4013 c232.6962 497.8421 227.3312 485.5002 219.5128 485.4256 c217.668 485.4079 216.2649 486.4396 215.813 488.7495 c215.478 490.4622 215.7759 493.6636 216.3453 496.4214 C219.7722 512.0753 lf*U1 Ap225.5157 524.1436 m227.8137 524.1436 229.6767 526.0066 229.6767 528.3046 c229.6767 530.6027 227.8137 532.4656 225.5157 532.4656 c223.2177 532.4656 221.3547 530.6027 221.3547 528.3046 c221.3547 526.0066 223.2177 524.1436 225.5157 524.1436 cfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF
%%EndDocument

V1`65
N1`65
F M1`65
/AA 120 120 w1`65
T g`65
0 0 0 1 (Black) 1 _process d`65
3775 2121 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
3807 2121 (Detect and alert based on pattern matching for threats including buf) 0.530273 0 1255 10 67 A1`65
5061 2121 (fer overflows,) 0.530273 0 249 1 13 A1`65
3775 2175 (stealth port scans, CGI attacks, SMB probes and NetBIOS queries, NMAP and) -0.075745 0 1454 11 72 A1`65
3775 2225 (other portscanners, well-known backdoors and system vulnerabilities, DDoS) -0.059509 0 1406 7 72 A1`65
3775 2275 (clients, and many more;) 0.694412 0 446 3 22 A1`65
/AA 120 120 w1`65
3775 2331 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
3806 2331 (Can be used on an existing workstation to monitor a home DSL connection, or on) 0.059509 0 1505 14 77 A1`65
3775 2385 (a dedicated server to monitor a corporate web site.) 0.312485 0 944 8 50 A1`65
O1`65
N1`65
F M1`65
/AA 100 100 w1`65
3712 1549 (Intrusion detection devices are an integral part of any network. The Internet is) 0.347198 0 1436 12 79 A1`65
3712 1599 (constantly evolving, and new vulnerabilities and exploits are found regularly) 1.208298 0 1402 9 76 A1`65
5112 1599 (. They) 1.208298 0 117 1 5 A1`65
3712 1649 (provide an additional level of protection to detect the presence of an intruder) 0.476166 0 1416 12 78 A1`65
5126 1649 (, and help) 0.476166 0 185 2 9 A1`65
3712 1699 (to provide accoutability for the attacker's actions.) 0.90274 0 906 6 51 A1`65
3712 1774 (The ) 0.833313 0 85 1 3 A1`65
/AB 100 100 w1`65
3797 1774 (snort) 0 0 125 0 4 A1`65
/AA 100 100 w1`65
3922 1774 ( network intrusion detection tool performs real-time traf) 0.833313 0 1017 7 56 A1`65
4939 1774 (fic analysis,) 0.833313 0 217 1 12 A1`65
3712 1824 (watching for anamolous events that may be considered a potential intrusion attempt.) 0.303009 0 1564 11 82 A1`65
3712 1874 (Based on the contents of the network traf) 0.499985 0 767 7 40 A1`65
4479 1874 (fic, at either the IP or application level, an) 0.499985 0 770 8 45 A1`65
3712 1924 (alert is generated. It is easily configured, utilizes familiar methods for rule) 1.02269 0 1359 11 78 A1`65
3712 1974 (development, and takes only a few minutes to install. Snort currently includes the) 0.520813 0 1503 12 81 A1`65
3712 2024 (ability to detect more than 1) 0.798584 0 518 5 28 A1`65
4228 2024 (100 potential vulnerabilities. It is quite feature-packed out) 0.798584 0 1061 7 60 A1`65
3712 2074 (of the box:) 1.041641 0 198 2 10 A1`65
O1`65
N1`65
F M1`65
/AC 120 120 w1`65
F g`65
0 0 0 1 (Black) 0.55 _process d`65
5575 2321 (\251 2000 Guardian Digital, Inc.) 0.833313 0 678 4 28 A1`65
5575 2381 (http://www) 0 0.057465 259 0 9 A1`65
5832 2381 (.GuardianDigital.com) 0 0.057465 503 0 19 A1`65
O1`65
N1`65
F M1`65
/AC 100 100 w1`65
5769 2138 (Implementation By Dave W) 0.833313 0 537 3 23 A1`65
6304 2138 (reski) 0.833313 0 98 0 4 A1`65
5769 2188 (Concept By Benjamin Thomas) 1.944382 0 607 3 25 A1`65
5769 2238 (Permission to distribute granted) 1.38884 0 647 3 31 A1`65
O1`65
0 0 0 1 (Black) 0.25 _process b`65
F yy`65
2 0 2 Qy65
153.333 -1600.833 @m65
153.333 -1475.833 2032.083 -1475.833 2032.083 -1600.833  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
T g`65
0 0 0 1 (Black) 1 _process d`65
186 -1509 (Introduction:) 0 0.208328 413 0 12 A1`65
O1`65
F yy`65
2 0 2 Qy65
150 -274.167 @m65
150 -150 2032.083 -150 2032.083 -274.167  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
183 -190 (Controlling File Permissions & Attributes:) 1.979111 0 1332 4 41 A1`65
O1`65
F yy`65
2 0 2 Qy65
2062.5 -2231.25 @m65
2062.5 -2106.25 3679.583 -2106.25 3679.583 -2231.25  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
2095 -2140 (Security Glossary:) 0.833313 0 587 1 17 A1`65
O1`65
F yy`65
2 0 2 Qy65
2062.5 412.5 @m65
2062.5 537.5 3679.583 537.5 3679.583 412.5  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
2095 492 (Kernel Security:) 1.666626 0 511 1 15 A1`65
O1`65
F yy`65
2 0 2 Qy65
3712.5 -2231.25 @m65
3712.5 -2106.25 5313.333 -2106.25 5313.333 -2231.25  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
3745 -2140 (General Security T) 1.666626 0 590 2 17 A1`65
4334 -2140 (ips:) 1.666626 0 118 0 3 A1`65
O1`65
F yy`65
2 0 2 Qy65
3712.5 1375 @m65
3712.5 1504.167 5313.333 1504.167 5313.333 1375  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
3744 1453 (Network Intrusion Detection:) 1.666626 0 916 2 27 A1`65
O1`65
F yy`65
2 0 2 Qy65
5337.5 -2231.25 @m65
5337.5 -2106.25 6450 -2106.25 6450 -2231.25  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
5370 -2140 (Linux Security Resources:) 1.249969 0 842 2 24 A1`65
O1`65
N1`65
F M1`65
$1 tsi^65
%%BeginFont: MSTT31c7d4
31 255 2048 0 /MSTT31c7d4 Type1Hdr
9E67EDC6F3DDB54288D663369F8878B525F6C387D4C0BF9F428EB9407E51E952
128195F343ED526D7EF485FEA7E5D287ED91A53373FD7FB6F77C800240920C39
15217EB1FFBBD9A01126C5DE89A01A5A5A7C5200678645AB4D6CD8706FA69D49
4650B734CAA451D7C6A0E0F042C3C95D25DBDBF78E512BCBA18F52BB8FD4C150
A68BCAE089DE3BE4895C5958EDDEF79B30321F0BF1B702CE1C76E58ED3EDCE87
CE3E59DDE6E765EB08F9DC8500FC9DB0ADC36F5DBF29A6F76EBCD8B25058789B
7DAAE3AC98E2C6EA9022556CDA49BCD956BB54E353C210EFF038EC2B76C6ADA5
7503B1CE9D805098B8992A3C0F0D6E0A20A42660FA0DCD799AE26780BFD694B5
0F8142B278039DB725E1BA178716E98EE7B20004BC956BCF58257C395823DC14
3083AD3032972BA1E14336156CEDB0EEC8A228AE9E9CA1B6064C32669A410C91
758E20F100BDC4783ED4EA2228E4572B391308379533F9B4635B98C2958AFACB
E3E2A12AE1472F9B8DC9FBD99B29D4FA6294587FD02BE07DC2E77B1CA1616A23
D699F942A41CB3C93B9DD532EE2193B8662CA00487B62C7D2E6FFC1EC22E1E22
095815DC0716581D7CD91E9D4A705B97495392E22A940AA1CF13D333934A2894
ED4D03E9F98DCC45E7AFA0BC7B40E9E0127BD1978FBE1D07FB8654C6A246A1BF
0293BD16BD9F0AD2C79C30BAEF049328F7A885E4DF903DA98FD1CF59029960EB
7AA25FF49F58A54449E10E0004FE591C1485BA89CD8B077BD77661B8E69D4395
E8678EA05675E451D4A59E2BBFBC3859284F59FCAF9A66F282C4573598495F67
6754965A36D653BFAC869475E635A21E6CD83BFF12C55F1C7243296F2C6C49BE
166804761504AB60762A7E9124FA6AA5F9A5F0BDB7108CF802797257679DF6E3
36BA9D66A3FE682141DA70E0E58EE525B2E7D09A12E037F9C3A6DDF3249E57BD
A828C9D7C662E389FD902804B9B2B070A8E17CC633BD4FFCE76CD7FF142DA197
6462339E9D0CE302507EEEA59A797CB50FF65AE03589131FF768F274F60279AD
F5921606193243DB525DCFD773C1D2D6E8C05EADE913DAE53EBFC0ABC6962290
0E21512EAE3E5C54BE3C4478FCE960E8D123DA718583C368F16A2A7BEAEC38E1
5F09C93B797CAB19ACEDF8E9439CBB05AAAC9C43BDECA72998C24801014DB267
C76A480EDA84F018DFC8022E0F8C164C72AB09AE74EBBD3A55ED9895245BCFAF
40F0D9B1A6A1296B793F4F2B8BA45D4E7D658FF3D9471C5960ACDF0B35A83E4F
C643A3C59B245EDE99C12E917E509FD0BCA817EA15D10AF2BA8B7C3CBEAA7175
E0E8B02385D226CAD64A4056B15B25049928B05981E2B6ABD4487330AA428AB1
5ABF200FD3C48C547D5BA650F8E0C24FDDAFD0E6ACEE13662B27CD2DFEC6B56C
638F230AD3F6AACD05AC6B58E514EFBDB4F31B45F90291176B5A75AF2FE9DB3D
81140B51C8E4835393B8A65FA637A6F8F9197B7F9E63D4FBF7C83332AE683C41
D2A9D1F6D66D32E248C54850941EDD492F67030E904E273D04CA727433CD7546
5400A35FA7F42ABAD6D30A1CD1ABEE30E3C65C1E64DF6625A60EA27128052904
CDEC6793D1B78C9F3A71C0798CF077BFE15E482386E4CA0053EDFF8A592910EE
FB0767CA7DBACD4846366D9D429AA51EF1915F8A4D89B7F0FE98F775A96D781B
6C1E4C63551D2348CFA1CDB2FA4AD44A26D8A1D04E9ED36D15E25485CEEC14BC
C1535C24BE5099A5B6414DC82C6336A702A1913DAF63A001C9A5BE0AC9A03826
EE1166E063239DADF000A9BAA7DE1D0EEA2BFC9FA5A70AB29E392A44A380E5DB
0F69F47C73BAA74DA82491FB0F74A4F8A52BE149FBB06E032E9F4B73DB3E4052
7FC88CCF1752A464DD0F6735BD844802AD49F7B8452694E7BF26A548AE458647
3EC3EA9EEAA7B342799FF78176C88484E03D324C4D7B8705E30DBED5C8041DDB
4F0170BF699A802AAFA77BE65DBEFC8CD659FE34E547787F414E3304A1A6C6BE
F2192674BE9D7F4925828F1415EDEFB8BAD417D6F67368B438582DDF08EF81D3
CE9C84334B51F73FAAEECF30E521A96083E75025EA43BC4BE9D302D4DF347FC0
3E2A8251B6F357BA141A8DDCEF986B932D9CC49C43D2813872FF1A805E6879D4
A4A987691F01A8069F59580728F9E218C781ADCEC2E3061577526B7D2478CF98
3E78B1ED1FC9276DC83638E6D388A0C1F7A93920507F16D00247389DD07368F1
3D3358D195C3068720ADEFDDAF7CD1AC97EB449B12DC88AD7E526260D871297E
AF05D1CEDB59585183E7386BFC2E23CD465A4C252DF316440E10C8097AFDC9A0
E46001EB8C5629883A1E4A7A8A5BEEA96707189250366D1413F237DCC8C2EBF1
501CF9F05DF91DB81B3503F706B00EDA621C3D039094C9B0D6E68309FAEB22AF
72D0218B6289B9BDF10CFEE0938602E17F62294A1C50DD308E32FE927046256C
0355A754D7A68B97DE71DA6758C65AB01054DB3D5D2EE90241CED26AE5676582
85494276ADD9EA6C642A2D99700C31FC0068BB565C62541471FBC44891A607CF
6AAC56FCAD5F4CAF1226A301FDD140D1E274392FF8B8B0CB5EAAC30CB7B3C1A2
3633BCB2B120948F1610E3E83F17C896CBF23A99B29B2DC7F30B3DCBB85EB373
3DCBEC233E13C65673C3B6357D1EFD575A396D155D90AA8C09FBDCDF297DBF14
EEE8050D9563089E7EFE41A8225C3A74FC5576C5760CCC150354A5C14CD1F206
88CBF1E9EFBD2A3B92FB39CCF995472E66869954C56045DB5344957C89F3E7AC
2DAEF824021D92A2720414A6B51FAA510B79FE666AEBB721EF433ADAA087FD5E
2FD9E50BA8360D85E12192EF29DFF3BE934126E6AB6B5266DA3CFACBE7ED6B6D
C6B9FFEAED0C1AEF911BFCFB99B40511B08AB4AE81D8B70AC0630276337772A0
AB91C06AA0757D84194EBC30008F7BC9DF57DEC706DE9C984CAC40B18174AA5D
26D0C922A6B3E73AE3CD58336C3AB2DE2E884826011A7114766507A5FECE34AE
A2D596CDA35E2D37F11F2DCF62CE72F444748C66E8DF3B1D551E200CEE4D9633
48E0CEE98289D48C3DE72D63586707D39DCCC1E117EF6A9D64891AB5198CDE18
EF95C142414678B8DBBD6D35DA317608734087AD1E4930AFF2E9A4DD76EAC100
5A10A5A3335DF2885AE53E244C26DA179F09A22C508AC271CC526CF5D3C99ADA
C03F753B2D6DD0660C2082B89E6A448C51C7D7882AB9565C9221FA46B21CEFEE
E03B88619F92922D08E85E2B698204426F96E37E132C05A88413F33B66B6AA64
882E1CF29EECF4BF086888FAAFB3B9019386A27CF17CF6C6A01D1493C200A801
C57C06DE2831FFDB9A6CD3495CE6C68FEBA6013901E98608887EE4DD96AF4F3B
2D18DEB01D00824F0EAF85DA964F6DCB523E3931502692446438FED1F42D065D
88F3C6A2DF93C6025D1E45B1390B26B3FBA73B97110AC918DCA28E1FF0D1CC10
7D4A34A563D8FC12FAE966F72768D86706124BBD7C7405103A43059814D7E109
394BD38826AFB54DDA68213874521A2B86488DD4D68792BFEB8434D4B5A6B596
19297CD10BF1D1D7045057487BE14F432EC516998D35539E40789BB2D9DF25D3
3BAB48C24F1475849E767A76D5C06B318DBFC9AC67A177CBFF1A7DF28BABDD3D
E537885F60568139C27D43D064415EE1BB92389DB31E19417DCBA195933FEF93
F20BF17904548643E9C7F3655F4131D4581093CDA66064B214E966BEE4EBAAD2
E1D81816AD6A512BF9F91C398651E0F46CF5C11D995AD0D154472C20B39889F2
10CAF1527BFA2ECE30B3B242FD2664090F2AF5E3F1D2AFF635360F8253DD6162
03CBE5B58D745491BB8DB41B5501CF2B07A93ED5BE7A1E0880C19E5B741C3823
F366FEF0133FD508CA07A4589036841C114ACFBBAFFBDFFBE11CD2BB39EFF4E2
0A597808E59012F43FC1A52BA2DFBCD0E45BDAB484795BADBC2D1B7AAA2FC9A4
80FE24326448C4897297D7DF14E10E1E97CC2E8B26277305EED56AED8CCBE816
CD37E37F051C191047F0D510CDD6475ED03AAEAD43365A28D71138647FDEDC1A
E07F073F0C1F0A3E6304C3CA579F75994607CED60F93116751DFDFE5B166FBBE
4CF250375A451D79319694EB437BEA40ACC86501E293750C530A7BF8DDF470F6
EFECC4134361154727AA50BB9AE719927B79C71B24C3274781BC48DB84345E6E
A02F2ED8E8C8DF16549C9C139E5D7BDEEDC21867AD4B178C83D929A9EF16E7FB
0C633A9676616715385E8FDF90147E2210AE1AA3247F3206327BCDFC1001D2E0
7A3214F91013C2FE47BA602DAFFA88C55F91A1847CF45D770B09567064EEEFD1
894DA934AF3D0A8411B40D4CBAE3C24521E87BA724A0B6066E54B81A3FC1EDFC
08CA02A759CB5355B1EB2628F7EB4818545357F5997C5E7FEBFF130B0177CA85
ACA20A3EBA84C51349432E568D632A32E71D15693C909678D779D891931E13BD
DACABC5EA0C70DD71DA0A39AA61FB1E8F9DB2C77A5619B11D6EDCDB9720CF330
9F7A5D6F10C41B6C7D2AC2CA1E94BE0789E9D1E39FC4365E8CBC6A315E76056A
D66A7178A0C3E19413821A9DDD19EF1BF2C390D611C1F4EB049DD168D669A6F2
12167C8F807B579BF1691BE22F77BCA64A1B41A218DC03D7E9EA323E470F11CB
6526756D9A55741AE24E5F83A99EFB108B55A3EDA9FC11F6CE44D933F5723817
23D3BE75A414A623216A0221B6667DDFAB7A37C2996EDC5225853B6D43D5774F
5F85F11D416F961174E8D96FAE368BB93568B0632AA3C6DE5DFF48177FF7E38D
D70A4201ECB3C0AE4ED325082827E745F058F446D8EADEC8583AB88926108A8A
28712ECD03153B177292BD98B62A74D92FA0D5741E87DD27B7FF69371FD7B5C6
D770BE3AA0ECED171392F5CBAB1A0F0552910D43CFB6682C931F13FFAD9387C1
C509B6D89152E34029C77D28564E35C901E146F8D74C6D231ED97A80F48A826E
AB06309239A48E7B42425585ABEB8590BB7DD336143EE79E1429BFAA9CF298BA
B78372204DB737BEA803299ABC0EF3D9477D26E8F036E429D7261BF254D2F9BA
047DE25FB77A27A3FC1B2C70A0C0CB0604B966E124E25E6B06323BAAC42B95C3
7C3E1751F2B8B81F7545DF81546A7D9DB4850C215658587D5E9F9A19F90935BC
9703D6863F3BBAD4305958AC25893F0C90F7CBAE17AF82C9EB1F7F9DB7187DC3
E828A4AB88E9E088CBC7BFCF953B8AD92A668939F95EE2066DB60B6ACC45E403
BFBEFD577B606D2C0D74165FB4133A9350ECEE56AD1A7BE41298D6C5FA7FFE6D
44577094AF45CFDE7F47A56F29117429601B4509BD1691C06585CC6CC1663A0B
10CD24EAD0B3D27780F73AF01FB49E678751CA3D0EDD893E36244BA69F66CA3F
2111491B8CD1A0FEB61BAFC3271D8F4100E8E7454FB6D250A61CA181D95CA8AA
4EEB7908D50CFBF5747251C026F2D4B8B2D2FD765B62271006DBDF5F246DB5AA
7A25CD0991B3D71953E16F3C50DABF27F3AA855B9079D4ECAEBCE2A8A509FF3A
38D6F06484EC83161BE21D90AD6A9B6099B4EF160C3353E8EDEEEDD2B9153297
D83AF48036F7CBDD499C716C2E8446AA4CD4BD6210BE6A93DD1DC623CA4A8B84
9311C7F2E5041056A43FD7745635BDF2DB1DEBF1241E3D9F2F7EA91400CA2258
E658BD9741D45B4F5FE01C48A53DA68652E7BAA24AB6072417726DFB98D0F2E0
07607C5A9009058FFBC512B07500A8D5F9BD9F3354367D814E99EB2F082097E1
6B4C42D1CCE1E6EA8E266E59B38F89B328D86FB1CB7F3A2BFCC3FBA9FAAF9158
DD4E2EA8AC783B8AC967D3B5282A9D8C6F59BF69A2E98BBBB47D361746758375
EFC1FF620BE5A5C0A720D0D3E423C03F9D8F15B0E5351EA8FB63275F1A198CB6
13140A961C2A6C44D506B7418D73DEDE014C95E43A219968F4CAFDBF07B9C5B5
7062C79560A892DCEEE0381CC323776AB06ED93F1BDF9DA88A0E2AAECE8DBDE6
632C464A9A64436CE3F33661774B2042FB12727C52888E12A7E0E3EC61CBF51E
9CB8B8B0485B7FFC98889243602EDECE46FE9F5720D2E94AA5B8BF3DF63B589C
D7DA4648F7DB77C516BBFAFCCDC3A288F8F35AFCA14954205A0BD902B9BCEB28
5781580234D5B47DFEE12E0BC6C8822C4C4B088F7C445FC82D9E9FD895CBE422
363E990932647215CD1DBF88B4686FF78F78BBFC0C736F39C21A74E870D49348
9DE0E1713656AE7F264A02E382C8972D489A17F34C4D1B4B45FFE3C55026516F
7839A13474A73ADD2E54DD873A7252022F38E769638A585D8815E07520BAB4CE
68599355BD9460190D7FA93E6F0F99ADC39C8496F8A34FD14CB3E66EA9CFEB53
9744BDA49EB5E9E8CEFD7332BD998FE8FC10BE3A2E616FC7729D3790EEFE4AA9
D757B5CA4DE8FD1DEF7B33AFE2087F1FC82D53DD1E0C2BA7023E6C52CFFE8722
266FBB1234D77354486BBBB81779461ADD13CB6B096E7EBE1D87436A1C55828F
890BF81364308CFCAF69C60D67704DFE797A35B4573434C762EA472C4F228BB4
2CC712862FCCBCD41BA6C5B7B22F2CBA195B43CE1A4BA76B902D61A048DF51CE
DBE4A609255AFC725A4A027A08BB21A3A772E277807E14306A34BB227EC9A6C0
A0CAFCA9D60A37969D9E104919739BEB6F493BA4D175630994E4336F08E2AD36
A6EFD0CC9AAE3A9E94960B32EE3DBB55F8D3FBAB49719929B772CEE59D23BF85
ECACBD0F00958F201A6E8355A33D4F62FE6CFA8A9DE34A5809F4908FD33367F3
9680936C509CFF406D6EB4E66B8AF6E300CE009216BFF1209072358CD223789F
9E8A39CC71F37968120881054144026C18413155DEEF70B247A3860FC41CB748
E76D557D0E16B73BC9466D43EEA0705CA74DBEEACEDF0E8A9B1DF23D4FD52973
CCC68D7797B32A1DD2E7EA9287C0C1DA8B6E03E172F9760069685F77ABEE415A
131B77DAE87DC17B8B367F68EBA1DE937C204AFB7A7D816271C60A713CB75A1F
96EA5BB020EB9F7C7EDDDFAFF5B1202C0E5B247A9A6E5D8EACF1F1D18ABB1EAA
212A3805DBADA8E861E295F7B87122C7D8DBA5D9072917E36134D2C92341DDA1
A1BCF1D47F477242BC5333282539F5E32571B6E70186347EC4BE0BE4899FDCFE
959D7921101E7484B6153127ECFB3DE37D7CAB22EF375E154E5923C9E977B5D6
88612AF60948604C139D12BF2EADFF84FF11FBAB5D196F4A03DF2FA7CAB9FED0
A899DE9DE69BC38AB06E6C82EC4DCB8200070E3DE38BA68A92C6E1A3CABB8A2E
EB2FE6802991F7E6E616C56FAA710C27183A2B1E9E4ED9EB0FFC7BCE926E27AE
B8FA2DF5359295033D1C9AE0B36BB9E2B4D56B5FE20FD035BAECF5E18D24A676
6B318AA32848086DBD9F3CB22060F8D47ECDD189FD4F8B0BAD166F1C9CE6AB0D
942C3967DFF44E229274FB7C005A63AB41FC80CD224A77BA03AAAB971572B05A
EB8ABC6F1685D8346B2F0D9956B0E8D6FE59EADE512BB0401D76BFC3466A6AF0
0150EF022CE4DBB03E00732FFF992AC44A309B0824206781EA2292F4F4B3A3AD
47FB74B4A2B10BDE3FEA9C750B5BB77543F20736F1C5AF437597143AB534E0D0
4993CF992AD1A0FAF63AA8B1385FB49B447C1C2B6BF8F5F274DB6495F3EAAF2D
FAB3AF7F87DF19C4F0CD21536ADCC17A7CD3914D80C20F7F54A32A45CCDF08AF
4380207292148712A1DAD3DF1169209AD571824DCB18483C36E011813B8A9186
80807AC0278A15EE25B68C0F935543924004F1D01162C184038F0BC3B3E0A120
3F7ECA8B392663EC769B77E199D496228C7B683B0EE498B5F7A8DD6A1BE30157
B339A1937CEB12DDF05AB3B09F1A1AC87FC420211BD86EC7161DF0410CCBEC47
B0E54E0086111F4DCA3F92AB097866469506842F5004D8BB52FFD13AC6BF641B
6E3BD08DC646AB637489179E9461B67F5333233547A965D57F2A01F1375CCF33
E48E2F6D3AF69AB64E0B8C8DAC331161C0591A68A1B31E79C12EC9FE95661B73
20AAA7754B0ED345D4E35EC5CC5DB7237ADC734E4A3AF5B36F4D0EAF665BF17C
A5ABE3D9D37FFBC79BDF2D31629256B1089B325548D1EB5F64E2B57C5851BE10
322DE4AE930AA6FE5D849FD1DC326BDEC65328FCA62ACE832FD6DEFF79C3D442
1AB1C8669EF9F75CF8CCE47AA04AF8D92E4764C4CE25388BDAF4E25F1AD5B310
4A104A63EDDE62240C042B07F0A1A36AEDCD9D2A1BE766FA6CB598499F94DDBF
573EBE4C635F8BCBFD1B534F34D96650C0B2AAE5F54F225039ABFD61D705F778
E5D9D033105B1E85FB6E44EE3AC0D8BA62CD340D9278FB2EA438FAC9B025DE8C
FC7042CE1EEF56CFED18E6A8CF20B69E8C5E4146DBB675CFACA6175EA3ABD5A7
96C07F4D4DDDB75C85A07C36FC171D86D42677CD01C917FB5D362D20B211E31B
D45D1BE8CDD7FEF9E6E0A3B4FE99F86727FF3B14B2E075E42CF3928D3BA188B1
F1627489AA402FFA2FB592DBFDA066A1389EE75680A78C8DF053850BB173726F
B55B5EFEA203B3AB8E657EF727FC390193AC726F55329A1E39752185CB2058B5
3318788196E9E60D31E9BFF3B8ECD5AA0050C3DF22BE466FE965DD44B4D465AB
7A43E8DF4097E134212E2AFC144E465D6951AB2BE926BC363F7223F35442150D
5BCDDFE4EA95B3ED118E43DAFC5C95CCBED475C9C257FC9E02C1F3B1B07D21B4
E7BC721AEDD805899B16B950A7A3F2E511A7A46B214157899424D6E5D6475836
BF37C36898D84549A33754A510CC2079CD99B406011E159DFF81E3CC30399D7A
7802DEFA23EC98FC9379901BC031654F234EE38AA5F516E0CF43E2DB6838A264
7249883F3E31C4363F07A42710031E006459D368E0D67A0D1DF2309A2EB2CA8F
71CA736FEAE0790B1BBD07E4532524B51D6944C1B4B98948BCD04EF7B1C572E1
F154CA399B6725AEA78A2FD54DBC2CCF8058EBB07993E7B9DDC218409DE71259
09B7B897AD92B6EF57CC59E7EFD376649C0ED06E47079608B404DE1BB6B7F6BE
738AED31A50974A8BD6EDF6743BBE49AA62423BB352CBABF686C264C7D2E1FD8
BAD1590FB350F1AF817552874F07668F248E28C96BC30536836E3AABDCE5F2A3
57E890E287DE2443BF82C73DF847637CFABE3A3A01C1E0823C172EB46F7E2F77
DF1DB259C50EABE74067C3BBED1C992CEF4E24F668806840F031B2610B3ADC6E
43C102BEE5215A8448D0ABC3A7AE4DFAE7892195306FF873035993DD4BA7E258
68F28DBF2D35ED970D8A513C2D7CE51283F1BC28078378D863502F1CB990BC66
6CA51C65358B76C7AE474EB660736617255C864F12A5A74C667E603B16B714C9
0A722024E67AB802DD1F0430488FE74FE42699306E54673578834AA0F7A8BAA6
7278635478E024388A5E26E350AB1D9DEFD2A1E9DA2A0AE619AA22F3C6E78CE8
D5EF2736430CFA8D51CC1F29DF6892016F90A5CA48C3890F0F980CD12E6BFB25
562C12FF71D83A97651FEF932510934CC4A6A6AF55B16D6D83A08D1675D312E3
9B57C8BC372E5A2EA0B95C09C88493EF14C4A6AA692D5E6EF85FA096262A8ECD
E65693F1516FA6E9F028A77475C578FEC9112B2EAD26E818583AC995135A0074
742855640347319B933FCEC4B1B69D06EB689EB3C74B39FDD1DB84F870E02343
B3F1DDF5263011937272417FA9477A3D5577C97F21182B02AD38EC547A0F3889
7292FA7A3ABAEE6A4436BB967E299D013671C1F3B02BACF020986DA279DF9383
4DCBD734A3F0A78301C69714A5E032B8E1AE26FD2182CA2ECCAFEF5C3FEE2D36
AC906CA26451FAB6A2C9A3CA62D94AF12704EC1874A84F7B6F7BABF654D40620
111A4BAD4DF9792CD0392F9EB40D1FCF3C4243DF689F57D85A01195DB3D71B52
2C4A4D923004C26D770FD36BBCDC9065C6B569D8B49F58324367E814B5369B33
9FF635E9BAAAD74178E47486C9CD2B0399E09E3A660E29A0E613795CF6CF81CB
F3B3CDB09D14EA39D5C17E113E91420D75E325DFAA3120C955A55DF7174A163A
BCA3A9CB8C9B324097546DCD0C09895462E2505616FB1EA629B20BEF767BC4D6
D521E997F9D40B14DD0F026DA572665DC120A7C2C3EEAD0790325DF275A04064
0EEDADB8D0B315E2D2ECA32F28B4B11C8C9D84A78BBFAC02FFAAE6A5517E2FD7
3325C55DFDE64928356E6F63E1A5BCBDD36F701CDA359FC43F963AB91593BDB0
8EDB8B343A337A7335752751186724355681E2C7D89B6F69E917FFF0A7365E57
86D19C8B4DCDBEEBB7A8AABCE360BEE71C4706C56A12BF0A5C666DFC059ED1F0
E53C5FB393EA71A0F9BD55C432CFCE17DB148B847F345517A495663329085A55
C35E815B361B61078244AD69808B8938795F14F5CCB5E9898356A0EDC652321C
8AFD296932A7FB2C63307B5C3E6784505F89DFD650C36C814F5EBD1FD38EB5D8
BE7938C1B338F95D6740D3EF928BF8F2F8A6C570D2A1AA6B43F2CC00527AD0D0
EC084235B2220ECF131BCD256689E816B182D421577D7407904FBD192C6E6EF4
4390708CE5A9A4554F8BDCDB5B1BE2C731DA8EB52CB7D31E430CD58E5CF1B973
F864EA35F671EE8600979B86AA2B02A45042D4B9F7C0594483845AF04EFA21F6
AE0D2DDE37ED3360CFB340D028836B6010A131F4B6FAC164F3AAC25805F8DEDC
A49B4E207966A914CB1AF150531D29B97E72096EC5388F54052E57E9D46DE636
28084316B05E0B1E928B38092A115626031865BF88BF3BE1727D7AEEE72F9C1D
67C79C5EA4DD80FA9083104C4ECA2067A8DFE9E6179A2E6AEF9C24F771CAF244
046DAC71494061694844DCD32B5A3F758269078CFF9F66EA5167245F0853ED50
386308C9DA8E9982847A9119B29C9941CBC22E403A61CF559C7292F88613D543
1196911CF305D7F3CF4140F041F98ED86F364751548D997676CF0B866A795ED6
368796A972F2225C957D8D836A9B19532230712A8CCA6FA33D809CE514A101D2
4014199F3FFEE3AE04EDE4AF22567100094653BED207B5EC40BB290F739E136D
B460E737F17E5D8903F31D5BA4323CB87CA86B3103C2E3D1F171F520C1815BBB
FBEFB6F496AD1ABEA6C20FE8A61EAA10F315208853BCA074DB5DFED2D827C606
DAA2848AD0EB322AB05D80403C2DDCBF5907D921760F81774C0BC4E57D73BAE7
D260A70148422CF5A6E6CFE95E9BA721739B5BF3F50B60C3E17EC5EEE7E1C0C5
89C5C7502F5F8A6AB00914069C7909AFC850459539F00DB4513C414B4D609D96
E61F5B92CECAAEA67255E369A03B25CD01287AB1A6309983E8DD202675F67D65
280641344F46A338D6312EA5E9C89A53C599F6ACED7CC615FEE5F27F62379501
08A17A1C3826875E46268069BC76FAAD86274699F8AF9630FE6B55E9296D6D96
9D798C33766C4F4A96E954ACB59089194FE982F671DC4E0FFDB2AE0A30EB099E
7E73D162B53361184F01E61A492C7A7DBE192DA468CFF8F24532F9EDE4EFAD79
DD1674FBE9BC7865A118A0B82C59DB2D4677B264C79F7863BFC1C1798F30C8D2
44584CF567E1BDFE915F70F882A73A4D5D1F97468057D8A3726C3B71F8DEA886
21BE1723C54891B14188B201E178D740D7489A96AE65D08E01D8AA97F42EFF0A
65A9461AD0D81A3F643834F8C32C7D35D9BF93A5DCAFD066E500CE801CF8C5C2
BD5762B781591F961EB74B5BF8B37698F28D923A00C8DF9955CAD55EA2325425
19B9C63E4C4CEB9F1EFB6B7BC833D3B53C7969D5F11A5F5233AAC81B5628F171
A843D6002C3CBAD2FC7C42F982B8827E922758B38BABB68D2B0FBF8A956EC679
90BB2D570054DBDCFFBB8CDFAAD82E6A36F961832DA6FF428F29EBC75B48F5AC
9E623208CA7F498494E1ECA89402381C25C5BAEBCB2AD1C039097148E723FE20
41F96E0D5DDDD8A1E8135552BB63BDFA1F8FECD627CAE0FE14ADEC1674D035CD
17EB249BD5651FBA368B2AA75472597EB5C1AD41AD6E4B5A9B3128CDE1AAB0D5
137664EB3594E37669D7C9DF78F49A8A34B76A015D4D70EB8480C1519D2C7504
6B4D8DF0308432647D6A3DDD2D6C612F3C78C4080EB70216A5C15D3517015AB5
242B4985F4EA199540E3B2FA05BB2E14A725B79E84F7559A9978A818B1B3F2F3
B30B7BF5CF82EF5AC94C44FB47DCF661FE0B876500EBE3BF7A8A4CB90F560022
A537561819A909E99D43A2186A9C7BCABE588270A757A802750771226D27112B
A48E6DFDAD95D12F7448FBE982F8D5C8E481D07681C14CB926FF254D505E9E18
7CC0951EE7EA97E5DD52744F509F4A0DCC6148EAED76ED52D830AE781488C638
BC23F0EA1E315D8AFD765474E1FDA7E2109D0245DDE29F70375711A5E3D99AFB
2DF3230DA865DA05CBBDD61BA76253946786D78E391606172D221E3D23DEA262
26FA4FCA643355F40E1EDE3F1278BB6358189444EF46F04C04A9C72B251AB5ED
2DFC9D28F95F3FFDF9A9E02EF192816772A83C4ED17F37249F5107B92E6B28BE
7CFD3619ACD973A939BC80D1EA13ADC97BDA1C651077AB5A4A3D4F40B8101D5F
A149ED25B3E1A9091714BA2D10BA444B763F50CE797B86164A3451F1A31538D9
F58F4E09113CEE9DA6855D1EF732FD90D3DD53B4793F7F177AE43FFC7C89C9AC
F312DE26950BF9377CD6310704064A7D61E9D8D7E322E1E059C5C9EA1E912D8D
D58C6C1640A992E142A1AAE8AEEBFDE8100A8B728200C34B4E11A43F41AC7C25
000EED3A1C4D005C7B9090DAF6E28BCCCED760E834C75F1DC020BBE039389AAC
1C1A289DBFEAF6E41A791E84530D1B9B72A2C0FF346A9D9D56586D8793A66A93
AEBA47DF024A7BCB0B8F5C9337C9328EAF8E530E013AF7CCBFFE5C3042416881
1834B3621DC608E2A4C64CBDEC775390A4334AFF8EB491C267C829ADB9AF772E
D29E7A4705B27C3AFE7C755D35D79CAD404859722C0AF3AD850C5B6A258499DC
D8F189F3BB904858E9B2C7EC7652E03900B3FB47CA68499B80BE215DB8F15376
EA7A096F235AFF1F3A866A05AB317D7F4F27EE2513174FF8D0356D6CA5F56C95
DDE393ABD8C9B7FDF7088069A64780F2267B98ECF8241DE1C0AC21ADBB1926B8
69F66626AE3A35D9AA30C76D45D6D27D41ADDEB13579F8730068516DB73D8826
645041796E35C5469DBBFE5CD66AD12BE854FE797255D05E738780AC054F3CF5
5D560BA0073D8E0F297C1C1C4B7143A256D62A49F4491C0FC45DA4E5D6F2D21C
C7ACAC164AA98900B46D1B5AA2DAA3F5056D3764B318AF3B33B6D58FF17A4610
BFAA83AE2BD6F9A16073A50DC2BAD9B5B9309CCB1DFC8F870708E9CACF779EEC
A10EB2DC21F5762B3EC5132FA0CC395706CD761FAE3FAB8F9AFFEF603873B43E
F71DC4D1A0D205A00D1BA87BACEA815F1BD2E0FB3E91A21E3AFBDAE23F1B266A
E5418BDDC306DEC8CA76749BE87CD482DD17E9F48BD43C62F381BBA5A8612E88
31B1B136F1710EF531FD3B0A92970903D0AF2D4CBB6FB1B8D20E5A8CE92AC1D6
7C7C92F88EC7A263B74C2067DB2F4894CA126DA4038F266D9F9F9629175BF705
9305CF3A29C975A7F7DA4210E05EC2225CC137044C96858E8CA900B43D7969C7
AA51EA8B1EF7E4E428F116430A61D76D09034F90AE2BB0E7F89B75D2467D5A9F
EE3175F213E1AEB78DA89E5AE156383881A8337C81E996DE100FC44A7F9A526F
8A1E422D8BD33F31B10FBFE0750C97AB7AC464D3702AC414569978B6D9FC9DB2
762A27C967C59101A2FB26D20BE9F5312281C42CFCC8A4E6648B1F57CE74DA86
CBF83447D0399F3D13C281497AABA5FB582B6CF5FDFFADFED814ED98640B6A3C
B4353782B8F898396E5E848B476004C8882FFFC75889AD3C837536299F6D517A
C31557F21091DA452D94DC4CB985BAA2901F50EDF1AB61AD23A42CB35B60175A
6C0AA6DDB3CE257442548D6B2E3814DBCA37BD2ABBDB0CCE121A67BDF7016010
B01B1C0C973A5C89408C1DD07C0028269811B0876B98895C921C907F3A7C8919
BDC34CDD9B10C624F32427D462E12FAD8096D006D5A2782C49580A4609DFA541
C2E29A7321EF3DCCE01F864D6340B59D6F1560B20FCD69B6D44FFBB71DBB890E
401C1B582C128A3761D8D68906234B520AF200BB4EFF9C42D0260AFD416BA37E
2565A905076976B75C4F8CCBE4691F3D71C276EADC8EE5338381576A1BAD61B2
BC9C6FEDA5A828827B53A2B8D82CFB36349455CA70116C74AC35CEFABF77D2B7
43728D529337C85C3F2E02C0D29B044CEB9E9A307CA4C5F9F56E85B8742AEDAC
FE6D4F0752A4834D94758874CEAA99C88202B656E7D0207BFC21ED9EA90D23E6
18CD3E4114B399AA959455E6BCF0C9876B40F495EB4DBB6D3CAF3177FB68C006
659FE6EBCF6FB9C3C049E7E830607D858BD24D4E487B874A75CE5BD29173E7CD
D5DE4F030E1A48D431BE4B794E349169B536C905C6BD615756ADF77979DCCD5B
819B352814B3746573EA74DF329094E0930E26DBE22B769369C58AEE0E4E6C79
E7855C4098E7BF580BF65DFA283C1DC488CB368D25682CA7DCD88888252A2339
8F9EC77F8E9B1A19059D5EF0F333561E1680FD28D1E9EEB37011899A99B2081D
6ABD7C7987EB1313DBEA1F7ABF14B5E94A50D9468BFEABAD477457C8C9E2D2DD
798D5DC42F310416CA8267F434D511A0FDDB2AD4792570FA76D530DC40910EB7
5E716A41676AAA3A6B78B3CF52B1C89ACB59C46ACF6C0677E67B079D6F326816
EFE3C7A83BCB211B5F0A2EB573086CA91DA43B9CC4D1BD3BF6DC57E68A69E29A
FAEB04D3E359C2DC184ADD7A42C46FE6070D2BF4DB30FAAD5B86B1A1FE33839B
D4A935E4C6458F2512575880647AF0C22363ECB60EC63D9B0E2F2FD0B57619B5
B45755C2CCA9FBF2CEE335ABC15DD11661706102CDA18227B080D85C3A82DC83
FB5E1D565F5064A7CFF30814C9872D62B602391B25874F7D2FC74D9DE95A7368
6DE83833399F767E70ACAEB637B5633E695D27BBC294AC4E22AAE9650AFFA156
8149D7D9C407F27DEF7D87E85EA615CC7B4A08F6E4E36BC61E139EFE1B7474E9
737F06F40D21BF4970C7E31D3CE862FD83EB2DC7F5448E35B414DC77015847AE
C5A26B6C686A7A0FA154FDA5BA19986E21AB5C821DCDD004732682011C8D2344
B155206F161D3623E99C077F8CE2D9F1032EA21E0434403AA6FB272FA8CD1B84
43307B7917DA75892EBFA73A1983BBC86374A87A5AFCDDA195BFE019D95AC3FB
6F734323CD0F0F7872D81F38B70EF8D68E652404AC12670B02D2796C87DFF0FE
9E65D228451C4DE429D7261BF2514EBA59025273B3DE1F0D8CBCC4973484C97F
7E1352A150EA54F2711D960195BEABE9BE1BD5F8CEFF980B64FA8E94B154C8C9
1D3FAF3886B2F71835E83435C07692748BF785FCBE794111D4019BE0D83171EB
758C4FF670D9EA8AF3D49148F7D66552129E7C43FF4D166170BF21EAA013D9CC
EBFA4BF677C36A6F8D8A67AA2E6C33732175BD13FDE6ED917F81FB51980D12B9
3D0E6DBB3556897701079719F549E08242E8735FAB645899934980BCA7047D33
1330F515E4ED49472781FE937337EEA833603758BF9772E68A16CD744D8BED18
BDFE6A2CBAC6577DAA20E066D9CB311743ACE7868909DC08927E0794A0F9C6F4
B6F1D43E52F1A86DDF20C16167C26F851BA804AF04C6E021063CA26513F24EC6
B562689C954CC56538E4D4358DE0BD6B97EE91B2B8DAB1BF4A0A9E6275DDEDEF
0DA4322E9DB60F7AF2B74918BDCCF8A011D23C12DA2A66FA5B2BA0CD1759BF89
C963F3A89FE749B0ABAD195D6976E4BE0E37C530E34E636EF740CEA6309DDB07
6AB002DE06B83A2DF2169A2AF1F05C835ACDB09D87EA9851990E7405337C81EF
DE97D4CBAD382B49B4283176256828A2A45B6359ECD269538B0F9A8B9F639875
87C776EAE80F676A28FBF8F18C2B05260CA66333EAE4ABF6774306DE2455E027
F76A83247A52F2AEFBA04789FC0BC0C7FCE894C642FA4C2DE338733326361D5E
2EED56A95942318704457C4B9BB1C14CDA12184799CA951127620D2FF47E4347
1113E4DA75B559E4D0AAB7FA6D04D76978FE9AE6019F8324F16D49D5E3D7D5B8
573BCDB4DB73DD524D7B127F2A56E560198BEFCCA245129B885A584A7B93C6A1
4CBF6B3CE2A005C40BD4F255B16393C4F78947A2CD931533D2D7E29A00250148
7D782454B0E8734DD5656AD7718CD26861D0835923A757255F0F60B527D2070F
125BD87E3C6FEB3D9D7DCC209DEFD02FDD36519C2E61D908DDBE9FB7E73CC08B
4148B4EBB0E90301FC37AC4D4A98AC2C8A735F87AE830AEE21A6150F93D0D93D
B1688AE79AA71701C13FB59EAB35B6C65B74D2F2209CF9B72EFEE469EE772A73
8964FB0646C475E7E60143CF09E6416673B8A2579E9DA172A4C6541D46CD9D50
7BB72E63DBB0142AA2E14CAB11B6DC582E24115E3DCAB9A5DF8259A414944896
6270836DBA98CBA1CA30107B5FB068C900E84972E8D53B54A702D4482AD1F444
50EEB835CBBEC12DCA141C498DF4A8D56C008A3E451624A2DDEF21B460A228B1
1F0B086BB29BC5DBD3C098B2061F5F0C541AD54413CE520B0F96BFA896C4C75E
2334441FE0A9E1AF1254AC5B8001973648FBBA5C87B38A271BE1CC576C0FD45C
86ECDB1F3E57776716AEC6F2C0F877F536D697995B1B14327B8DBB362D422965
89B8E3AFD5634D71CB1B8FC14C6FD5275433EBD87BCE826A05DC74CCA6099EE7
6CD28EA8B199886153ED9245A3FD262FE60EE97F67C2410DC45483E09231F5DC
2DFE377799C299D046E47DB98BD33169FF355F21722A0047A1C42668D30C830D
03E8A4934B2933688E61891068273A610B97ABD3FB6702882BD05961C9E35558
9EF71517615C3C5EAAC7C6B5204A154E075F62D1805DCB885EEA1869BFFEBE7D
97E2126ADAC0F5CFA2EF6003B61D17B6A304FB3E4A47AD7B7BB0E95D9AED5D36
4CE09C99AE34BECB8F628CBF77A4BA5353C3ED257A46352C9BEF3F05CD8D2D73
605AB2578FAC1BE2B47CBBFC7166509AE5ADB7041D3841D9E52197DD95B67621
9DE4C4FA14F1C83ACA9BF18AE6B43F710D12D82EC8E2ABDB90678183442705AB
24CC6AE4E4115DD2FFF9EEA0D0E043A9C4532FB3F1AED4FE7F23C9F14B6B244A
AE1A194BB73C6D82BEF642109E775779D1584DC16C1A0627FB809C6DF5B0B876
49EBA49B82B2686D150F158716F24A57555C674B69B7E00A88A5520CD91D451E
4B0671C6C2786E5F9FE52FC399E25B76B6D485EB0C32E603EC2B69C5D2F55942
4130C7CA5D43384871AF81BA1CB186C080F1CD3238F1AA134387539D3F059410
4120EAFBB92EE0D7D331D3B7FC013965F2C703AB903AAAF3D62DD78BC305F2A2
415B1F2368ED6CC9F4917B92FAF732DEFECA62B532CFE10D77DB221C7D2B6C33
2BEB4981CE1815D36F3C5CDA4F4E557F76CD2B80DAB8FAFCA12204E8CAAE1434
D43FF4C471867EC7DF8EF99F4C1F4F4DF02D9BC00662C2F02AC535FA1700D923
DF66C66DA90362D9C01EC219DD8D8927812DFFBF38B412909C660A420570B8D9
58F1C0FBFF9E7D81180AAFEFA13E5BB2C9F82EA7578A3E1242D393EA25233540
039CD1CED2364B2777B2B15539DA15BEA08D97F1FC48EB5AAD44ED4B4F02612D
1B3ED24840ACFC23678463397482A882D0FC5B69208364FD4A156B5B0154831E
B1CE4604C6764822786E4CF0CE0770A60BD09329E106ED261B464C73B2EA0FF9
72A2CF90B6B9327EBC1A47F6D82297B133670B6FFB486C33C22124591C8E8D18
77C7AED7604EB6DC802355F06F6B01A5D2F217E100B89AF4A06D1CF1E0526D17
71D9BFC64D7C3C3E5E9056440F4BF8F190EDB726DC3EB227D51B5CD1CB57AAB2
5257CDFFF35E2924697F141E981D84E42D61580EC8560B49E18B9C602D1D7650
2F535B62D08B001E91B3C899F5F5A0C4956B83C347F9756111227EBF0A8D0777
6F8AEB63114D874EB66A5DE3662471CEB28FAD3DEDB886FB02FA143537AC4F22
4D2A6B3E781A7EF84E41CE44FAEE0298A31031D7F476D7AA4688089831E86AB8
6F7E2AC7F1D225AEF19BACA1F921BAF0AA1A99B6E206A82822F6E595032B0090
86092E287F8C12D5B36DD69C0E8AA8438B928343D857A3B0A48B727D60723DE9
FEA6458AE73A5848F5CB7276330E92E52A23C2679029E4E15DD1D416AAA1056E
38025BF23073CD2050914651B87912F73E91468A9499B7EE2A9EA5CFF5E2D3EF
E3C9C5865A6EBC36649541ACCB6D23FAB6BF7D6DABFFEAE7FA1A3AF22D270829
339032FA327F86D4A87B3B5EA2DB77C8D2248D9A6587BC5A6F3F52105E68D0F1
B942DF0DB27ECF950D8532519FBB65600FF5657EFD1E5FB6023FF4F6BAE079C3
2BB7332F0099215F48C7CB09A87EAD2896FA94E13BB9AC2A366135F05E028293
2758AE2B24A42215F9795F26C23E8AAFE902D5836D9722A595D069565EB6F761
659B690F7CDAB79E32E5A368F1D9FFA78603916708B7E4776B1103CA8E23DDBF
80314E2A34145C1AF3617639B243F7ED2892982734928D563FB3252C1BD92B68
2B6FD96A70588F1259C1F565F614D0B527E17772DF305C39C3C67F92C9891482
89302400AA290710363872DACE4EA656712626FCC3D675023F67A19D9867F8D0
D2C767C0F80C8BB5E797FF46A11877E227E105E883B5529B1041A4EF77624E1B
EDCBFC2FDE9EC267DF61A9EE42D16843B2F9795AF57F3E088FF704AC7834C156
2A3900BF6ABE0E9AD71AC0BF3349094947ECFC9EC6EBB9B50E4409486D4CA5A7
724314567E55F5ED04C62A565DF09155BC4F295265C27CD59DC2888AAB3C1098
91C5A7F8286C2FD30B951B6458D553C654D1675D8161B909768A201D8D5127D3
B0EA71026C7FF0ECD014DC1CE4C63C3D89C455C369001B70096009F903EF8135
156F9C1C5363F0ADB060C81BC057E2AB0F9E0E39CF6D7D4535FA36B6A47759D0
B30D2D737C6ADBA23905C4A5CDFC547433D226E38653F055D580B7AC3B2D5907
1908F3FAA233933DB69F41F810791C68853FBFBB53910F42ED03715339249F2A
AE28812AFB6990958CF06E055AC682A505E062746CA69122565B9BCA2DD66CBB
FC580E3EB0F820833C5AE5877691B80A3F93D03AB24631DCA5301527717154D2
271EE4882EA4CCD30138C98FB12F65C183B3AE445CF5BD918FCF4002F9806E78
56926B52D8E799EA67CBE4C4793E85CA41CF10C52E80D5BE9406F57FD92AF7E2
4B0C88084A8D3A1FEE68A124D8B74D2B82B801D63770AC5C4E0FCC626CA26C98
770D378EC9492891CD8E26899D02F59F4E42DEA9D61F01A651E16632383F113E
D8BC8D9AFB9F008BE32456F1BFF66FB9A105FB84544EA0CDDDB6A95A1958A910
6C53AA93018AB29CFED6D738D5B8C32CBD5C95E2805423E16CF8B2189929EE1E
CE104945EDA0640AB07EDDBE4C7233969A8A9A11AAC2E5C5C283A2859CEF7793
A326DF7F28BA5386DD6D97FC846FCEE35BD7CEF34A8AA2D309D898899F5C6D1B
513F7F9FCF09925B3E19C7DCFB6238FDC97AE15F8C7CDEEDC568089A8F137F36
E3A4DE30A76938B57A06D6B89C0028AC67C13AA991F98CF365032D0A2D16343F
6F96C58855C5E282F8608B75979144974417DB3D524938AB05C85E2D0B1D5F5F
9335409DA085E5E810B2B269D921BE77DE719208E0A47BF3A5B2B6D12CEF534B
AF601A30881EF5ADD080D2F8A965A34C7F42275A2A44DB18641CA1C9D9704580
2365B9796CCF4B61DEB3AF7F807C98109E59A383947096D25F8A1314BC5A9983
8086EDE9C54BE114F84861328850732B0B264C8C754A77C2BDB229C94BCFE02C
A8996A050AF617E1D738D0CFE3F82E30F90AF4738FFD73C0081629CE881B54FF
BBB7E8421630C49E5FD28E9054E1F64C8722E230D354523E7827B4EF78662DED
70B338664346C874A5C0B2E7806E11E429526ECF3CC71FB6BE1C713EF36B8EC3
734EB946FC0B8EC0D3B4800295432CC8BD8A64B97D5BC5946AFEB3F555B51553
790344B655D447B3724B5F62E6564DB3C95596C8361986FF15AB1FA31347C3AB
7514329D44CA6BADC552AD8BD224EDF438970C44B72C68612DCB2457152048AD
BD491F4CE3E71F4D1A313DF78ED57126755E19A2ED53E13AADC100FCE93EC306
9A30D2FC8B6FE6CD1432438B2DD5F9F29ACC8749CE6BA1E935897D1209AB4912
438E8A6D11AEF7F4274734560783144384F41910C20CBB30F47E8D0C3AC6BAA3
0855F81E1398F4C9A7BEFC76A05DD0D6FA1762622CFC5B497F4675CEB69DA5E9
ABA66CE0A485B49C878441C09D10066F2123B75874FE8D07C1AEE8F73DB33BE6
5CFFA2E49F9B961CB62E600C7D2BD51D22D7C48A20F5469B53E43C0F80274D11
1F2940044B61DBF99A37B24151E1288621C1690812A7D890CC3F230908BECF93
F14D2256A6BEF7599C31C8C13615002DD95BBD881851D6362979A1476E16DF23
81BC1A8FD4740A550B09B256A5F493D5270456DA7201189C210FB1F5000D8D98
11391C679EC2C89962900D97BEB08B74903D0FCE73DE6F478451BB0E28D38394
E6F25B1AE80998B4D180478DB49EBDBF5B02BA8C7D3A72889D51113970F9A5FF
C944344D879FDEB5381D6E14B3F693F50065E38CEF3F49DAE0F927FB2EFB63FF
D35D7ED731BA0FB337492A43A912EC22DF2973548B1AF504024CBC44B9F2AF1D
5522CA0F1C9296D2E9F59EE52062C38B4F28804E20EB9D3AB09A7519E5EEDD18
BC3B33A3A9630A14132775EAE625440E10E444E541BFEFD24CEDBD3AE7F0AC95
6A67263F8C1796BD4D0101979FA244AC934E16B584E91EEFC18D911CDE82E3C9
4AF2DE25E814F7A20A444AA26E7CA99EBF915A76631A5E58B1E2E71B1CB2B78C
6B7B4999B07AC17436C7B565457DA7442A32832127C0361A8898BC417F3A206D
E97156DCD101C5181836F3A56014E8266C70A6B97728C54089CEB69BDFE77E69
14E41C38A01E1383FD030D213FCFA040E2B18E43B5B7FD81E01A504751E8E6F4
4B83B8EEEC5622F819D17AC80DE57A28DD0279E225EA923E8BD862134C41978C
C994484BFD1FDB7F46A163C012EE9E396C822AD6D93E4466F5C4E26A10894DE5
F4CC41F2A6698C8EFA9DEC41908A9D9CE77E9B0364F1B3F680D1F8E6BAB55005
34A241BE1E9BF0D137158E9762AE0366CF92520CC974C4846A0DACBDCFF25664
E0619FA5A7AF836DA7D6AB09A4474B0E06D6D2AE5793A58D0B978A964C3B125D
4A595BFB03C8045BEB0BAC5004312224A89BEE4331D1B15DFCA0A63FC67BEE5F
E7057EAE375A421A628EBD8585C27D57F8E559A31799F93F62A035A675D3B1E0
A3F2C3558E0B96A8D432B16AC05A580735361E09FA040D54AE63A5CB3AC2DBB0
BC7F550EC06631D60A86AB259CBD08BE37421BA761098C141B08C513A723642A
831BC16ACC229FCCBEF4B6AB24A50C690E36B9BD0E1AAB1EA1236D3850D0E629
09C7C1A3111B759B29512311CF6BF6C98A75A7496813683CE58EBA0B68ACB0E3
C459A0D7F38215AC09FCB0985DB71622C99E849912CE4AB18C7DC067A0AFDA54
5AB64614A4D0E15B73024B389F39AB2E52C7DE159B6CCC2A8D627130383B8BBB
F0CD45747619F1E15520496B96DB6A8A2CF5E8BA395E49B9B6478BC1E638BE12
472F5BEEF6BDE379C6A3A459274FE0A98555542F412B6C6A9BE32662EC5D17BD
EE8064714133F235E2CC8D44BA8A796073CFF466A8C24CA563616EE6097AD141
D2BF54986E7A57B38EAF9748A6D073A5BA2F9ECC3D58D6BCDC28C5181D5F0A07
6C8E6BB20BE5B62A5DFBD124B08339472C8E2E65DCD61A9A66B2F7B1E7EA7B8A
8926454BF2386A5B166AF8D1B2D9C5978B6D8166C19D77191163FD1C687F85F9
44020C03A8C544AA9D8E24EF2AA3AAACEA35DE177B66589ABCF4978659BF778A
9585DD4976788E1A19F2C031B9BAD43125FF1E21045DD1F910F4C68C8FA8B9D4
C31017BAC3135DDFB693A13271865CB04B3F699F76F878F8D298FCC2EC96AAF9
A15E53E3B8BA1B9BB27B9D903909912DC48B820701B85A7B578A59C67DB136C8
A1121DB2EA93AB544416B4527D5BF93EAF884388C555A74C37F6E00EA48B84C9
773CFEE45E5E7832ED4B89B344B1A5B6C41F585DC367BF0AEC365755A1DAE4AE
61ABC422107E5AC98A320D73CBDDF749B5DC80F25355C4E3232991C6568DC194
D6883AB6ABBD2FA07981FDD62FB75225769D8EA82A7A46162CE5C1AE709E0526
CC4AF10BCE7C580BE4F1A80F0173C8105F92CFBD15A21BBF07B6D1CF06D80E06
95D16E80DAB0EEB2B5C7F5E7EAEBC669157427D1D49456CD73F11D703004131E
4086301042C8C116642AE7E6AEFB537BE121D2B9FBA2DFAF164AAA3664CEAD3B
C32DBCD6151FB5F849D7F73EAE64E94C0B946FC79925A704882346FDB9E4105E
BFC256E1989C0BC653D1D9B4F438CB4D5D5A373ED90E724120D67A4176FB9F9B
3EECA37493EF7E75E42F22BCA873A06E5E56EEDC5BD6705AF5A2458CBB8E3C1C
347CD2F747D252D57E589C1796BC16EAADB452ABA18228F4029F9A94DE0DB99B
0E2C5FD9603874E2CE550B59E179E5589689E0444E5219108B134936BEB25EAD
3BD155DE72804B8A259F58363610F22A3DB742C00B9860C4931352C558A56CC5
5E3F1F22E6AFC5595ED601C0017E94908348272E5A71DEDBC601C5A52EA5C79D
4A641C578801EEF4D0A7B934B6ADDBF2ABBFF3CD1C96B86B9DF72DEFF4DF24F5
20F9F7A03FFCDFF5D871954DCC8C4262032A337C121CF6C7C1A82561EC07CD6D
8B6F8F8676CC705CCE8434310A30AB0C60112D90F7D41B1F87650F3E1177C10C
8AE0C23EAD5DFE3B3C309AC1C6C18BF9F43C90AA4443D7E92AFDD635B0054536
5D2564B53D5360EDA41980B016D5F3CD2454758D777611230B2F53EC48873723
CA52A1E70F0609724ADC8D09DD496B87EA7385B95E7C7C353DD8DBEDD544BEFA
035213FE2F18AB6583A868131699A59C1547A45CE91E0EB241E196ED8C3D47E2
C18815EB8EE90D5199768F14B0594219C6FF50BC4663940221C67741874018A5
587F44650015F4502A5A92BF86B575E4B79739B5CF4F448118AE42E5FFAA3E0A
C0447FEF8F443DFFCDC9655A6FF61E943F33B1320EA46AD65C841F61B2AFFC17
378E74CDFB4125DAE6954865D141EF45C04363E49CB8EBD387D8639964A9D970
3188587CB60987CF1325C6FC11640EAF586BDBE55E92757169B62396BE00BC34
9C81A0124589BAD592142B9D0D56D59B8E92F11F3A66A8B9A8C79B1E4E4AD452
9C40C47BAC9C2BFE5419926A0ACF84DFF51A04134156CDEFFE74E9FCB61D66D5
6570173FB497AC042ECB8E3AD4C3DDBE7A235BFE4F9334B8B62B1849079EB59D
8D903506F5C9EAEC56A31CB0EBEC084ACA08AD505D23F7204F63060FE5A0CA1F
7621B9E58DD6B63588C307D0F5EB14A6827E557FF3C8A12586962DAF8C467048
46575452767297DEAFB3B45EA09ECB3D0B4DABE0AB9AF837B0429708E6AEF561
B59D0D2DE09CA14B89DF59C42547784DA9D3C985E3D0B1EA2604F2EED8596066
CB7907A3B61E3C18C5A8A37493A1EB7C17294D1916750AAE659A98B4C33EC28D
1F54F06DE207744009691C5347A523F2165EA35C7963E6ECD6BCD2F679C0761A
90807E924C2F3283E363AA982000590B150340A543BC4CE86BC2B10DE9B54553
DBF2B2A89EBF47A0E3DDC46BFCA3A9E8F92C2219C656C8E261BAFD423980982E
5693BB9BB40E7BC7A49A074DD19203165D0D6FFE84FE00C2E60C5B871EC0C1DB
EA8365233CE688086E0803D1D6C36620FDE9B6DE840A1139311147AA03BB171D
60BEB63C69EBA5F42D1C8F672CA028150FCB4F5CD48E515892A503B0F718A73E
784885C731355434A63CE3CC7B2814751D19EEF11D273C5391DE67DB5EE2E08E
056B466191C15336BB98B355AA7A30DAACF1022CA7C98AE34B1631CE2A2F244F
8F41F0D0258F96E83ADA11182CC063048AE92D5E8AAC6936A69E21C3ED2D3A8E
4A8370DDFF95F52330614044AB3B65099030BD9FE5972E0E0642A33248E8082B
A5F7DBD8717F6CBB92F7D9E6C3CD6A12D037F6E9B29D2B02E347FBFCA4DD9972
03D971896CA9C60D7D15F2CC361E4209A1AEB877FB312EEFE8E8FB541928BE31
4352220DE411D03FBFF91EF9E67684B2541C1BB0A671D6C1724B07835F35D751
11F08977F4EF55D57B5D87F6F868CB5A64B785A0CD4F08BAC41D462CE0480770
1EF041F389E973F3A4B8DF113559218A70F6782514990538835DCB4BBBA0B691
F7DBE1A669D74F92E97CDCD2B973E52BE5A7B1BC6102468A4CF1586BC7D229A8
8043AEA49E612F4CF80C916F139380402670240DC4015A082952EF38A8C39743
C06E9C46499C36F31A151F7AE5F54794201C38299C0B6B23C7FB5F25973C01A7
B489071D4BF220A42CF1C4D11344A9747F159C58DB08A2F32CB90169C90DD0CB
B62D139B816AF579030F1A900F22F0DC3A74921CFBCA03E26B5EDB2AE29EB12C
9CECD0B7F609D140C2B7818F14D3BE73EEC4357DDEC81C40C3971F5AB0D766DF
BD36769E350DCD3E4048D41732EB927AFA06D4A4D5AB2A987ED7881658CF8107
89A6B746D0B5BA815E8CD27A98ECDEB1CFFBFD92D2E45425480807F4371824DB
7BC6B1492E329B840949697904ED4A6C78D2BFE75AA55323DDB00193100E24C9
250C0C9DF3DA423CC5C687E685814824F47D7D4165903BDEC0A2E2558C32F7F8
0D2FC5181BD80EA4BB3A02EC2449B051BBF148FFECACC378C268E8CB42970165
A0B45113B94FF8214D3BAF8AF2BF44599B85B57A579D885D4A734D12CE2006D6
D76FC92280DC3E964B4AD6682C64E2F6D372D37E1FA02C26FDB4D5FF28FF4864
BCC464A128F490DAF86486E8F6558104C2260D24AE6E040280ECCCE6F78F9093
07D1FE65D6FFB7B3B0A35F06A2BE2103BC21A825B1A46819D295BDFDE6E1B80C
AAD24CCFE11124D0F8032B4ADA0B1468AE81227D54384ABFC1B94EA919D71872
23B725D40D0210150B1496C45D2B55DF5EB3D70F4969D13DFE8B9582B7D2C023
E811C9365E12977C88F851457955335802481B4B94965F0D71BD3C7D10A4F427
FE15CFE73E749DC036C385B73C96514AC8639685D9826220EFB99F7727F82725
25ADA145E42FC4FEBD7525D4D07E9467E56E83BDFA7FBC4EDB8C5161BB0AAA4D
1DD993D15CAC246D7E3BD695B5444A5D28113E64103ABB24B91E94752D0B260C
1B8F1779CF6DDCC3C3AAFBE029C6C45059C993DACDB48FAA5CC9F62BF7A62475
84321D2B86B324FA99E125B1C5F282991037F87FB56993B9AA953BA9F7AE4836
51345C287C40E3101C52E8EA3D913BA87F4D9A77EA7AD038C486E1810DB9B80C
CAAEEFD9FA918D3B0A8D00D1A9FBCF5AA2635119E163B25C614BF15AEF5E9DE0
A52462A138960D1AB94D6D148F6CE22A3FAFAFEF2D6A656B8CF0E0FA3A8DD6E9
2FDD1DB20779BC88167DC948387D18D0E500440A9EA241A84168EF4FF7EF899A
155FBC2DA3F32188D27E20951E53AF7D7CE4774119FB9EAA3CF5A1C803AB18E2
37BC82BEDD9BF4676CA89C28613B40C3811DDE88F30DCF0356BF801D0A1D146E
B13C5B86F8303A3FA596035DF4EE06CAD66EC5FCCF1D69303CCAFAEC35B8AB1B
1F7594FB0E7BCA9904060C4367AF99B390313CF524AB29E867901D1DE5D66EBD
2B6A07B2CF1DA66DA49424F59236D65A9B7FCFE5FF3533E9D53AEB822D000896
2720B5561E55BEE41171B5B377511B77702EA046FF6B880DC0BAEA47633A7A64
D979B2EA9BE8E99600116F2FF4F2460E13B1EE262CB84B6115528B995BF3F2C4
939C0226291631ECCC338542DE60CDD07B01BEB3C0A08FFCEF0FFB437E81EAC7
BB6B85E6DE0AB935F7E997B31F4C5E28888F531FFEEDC5CE41A08D0AD3A68960
D2DA067CAF21F6B554FC77E3FF1ECAD7BECD8DDAF4D7AAFA6ED8DC3776D9A22A
89E9DB6CD94A680A7AD525B034448179F0829C04EAAA8863FAB20B01DFB4A58A
85BE5149C3392790A1355D9CB25E9CBE37985CCD15285C7DE5BA784D01E9934B
ADB7CDF98089C7DB0D1F59064E6AE2258520C2D02E7B9AE002165E9D07786E0E
8FE249D973C469050FF9977E02C21A1042426260D2847668EAEF380734C7D8FC
88CDD024C3C58680CBAE2CB9FE0827771DB6676AD9580789C41BDB76C732F860
C0F60CDF8C8A8F0CCCA4C3FBDF8F953672FC104D3742610CFE51764B1BC1A792
9E00CD48C72D44CA9E574C5A92E3B6350F8194D684A8683369936EA05F83285F
DD8089CA4DBE844581920A8892B6DE094135CF01A41ADFED2752096D4FB905FC
8E24AE59C5D267FD3C5407D7BBC59CCC1ED3A4716D68B6F43D004A1D1E4810EC
39A3008FEC62DD0B3BB98BB929604E34BD65C5E10E928CFD67E74F0921FD4BF4
E79699D55E50B782F9D775039B2A03E7FC65362C8F98934F77D8BBD03FBECA56
0E8FC5CB65D8D8669F296A6CFECCB89790333E05FD90EB25591B356148DCF2F1
707A366DFC111BF1898AE527AFA6CB8220CB5A4A1D916CE9D9B5F013B63FF1DD
45394862646EDB3C16FDADBE5412B54EDD480BD9161114DF3EEEB29DC7582C9F
62C545513E6471AA167CA4690FB5305EE7E655F007677A18058548480AB5717E
D9A3A73BEEC3929F28049E51D9AECBC40638AAE8466AC9FCD9652E04C99BB49F
F4E9CCCC3BC907B7E8AB71FCD1386F591AD0176FFF5E7A106E5E0D26F87D7CFD
F564F2D01C8ADC2EE5621E7CD86E8A66CD797B6CC7B18CE52E82E5A97FA1BB20
AEF2B515FFCE15BD31188A9EAECB9416568527DEAADB0AF33DE0B40E5F71CF0E
4BB523D99F54AEFF51A21662883CA394A35380EA3F69498458E979D6C097D106
EE8AEA5C9B8C4BC050937137ABD1B895B11E11F68B3CFE9B3E70B863E509FF71
8BB87E5570E06D6562202A7754F9BC57B7334EEB38FBF4046248AD19F4B83373
EB42B1B609FBEDEFD56FF16237E8CAFF0D53AA22DFABC94A7BCAC9D400F02ABE
2836AF17C4C2CFD1DCC7DF5E7465140CD0B945DE0DF08263656BB947AF7C9A57
1E71A71C9FB4CC32AC8FAEB4D0CC19C3F7C0C87A9B75EE1B648F10F4752BF52E
3CABB520A667F6801458A8E7C89767DD567524379F631E8CFDCC6E65E6FBEEC7
6756590D106A07042F80AA9232F0DBE49362A0223ACBDA23886A48C264AE6C22
21E61158330739DD3FA1EAC73B6B0B66D87CE74E79E22AEEDAFE11A224294407
C6A3D6A398E2F6009053D0115D0E91E863A8616FF30745BFA690921679ADFED9
3F5BF7F9AFA9851FE38297BEFE3645A71DB4D53554742A589A067C327CAA8350
DFA87E10F3B0AA0EBDA5F3B5BC553F8E8C47EF8536BA5269C78D326C811B702D
383CC2ED4EE566C1202C15B03ADF8CA87916117A5537C5B7CC60ED95C6246B36
727A6B00D6CFA0465AF05A8E25BAC1C9AE9DD3BF004102185F1D2C17A3EC7B73
ADEF813324A48DF0D19474760B7D65E9C024026B3DBBDCBC3F4E65E3D52794A9
EC876A53AF9FEF8AA64F9FE93536891A0A080145AD05BD4CF409370064C38562
EBACAA0FD5B242FB48A46655DF4CE54820CEC197339124115A2B08A420639C58
BFBB4FD432E1DA184B8A5C715460735965066F2F012B62881A6524A4FC46A296
A87AE20E7EC3B94CA46D5F389748908B3528D9244F194E0A57DBDDE94F889027
96D812E1DD8795D68CA2BFDBA6F83615C3B4D460ECCEC34F7129868F9322F159
3E6E81BFDD229853A7FD8F91CBCE187C5E4DD4339FB267218779FCACECA47A44
9C280DF00895C734F8A9F5A1225454F60F562B2534B74E9C7C5430B7DFFAA726
0C7B92D391BEFF81CA5AC2FF3E848204A99E9CB6FB4FDB3F0ACC3F2BC673737D
CDD1BB23192C4E6BE27B05C097F0D6CE14ABEC612153B3F470F76B495F87B5AF
BA1AB6C26F6622E8586D085B1B56AC639A4BE3E7E606FEF85C39F7C704E8E8B8
17A0CE950D438C8AD41DA7573B7EF8DF928F33F5B9AA9E67E8DDE02849B9EC67
DBCAD2C96B4FCF7392BD130038FCA4A17BDF9968CC8C5E99B889ADBE55ACA107
6F69C533C1E53C9D9D792E30E2DA3262DB084211B596B50FC8298A31EFBC80F7
DB54431A4A02B7956E67373DD6710B5712B778FA27ECFD40050CE56F483E53F4
3C6F72A8AB2016F99B54D316CFD9AFAAD045E26B925D258B5690BB66E9006AD4
224F5925DE1CCA505CBEE2AE209F48EA94E6A2F8C3A016ED6090163FC11BDEB0
1A07477312936FB0AF47AD46C58A92A76DE9FBE3DC50CBCAA858B87E989638A3
3FE9750113FB0E2A2F18CA715ABB1B8C4F493A35A6115179C24FBA90C6DD7C05
05142F77C8F8E575EE74414D26FE155BD6BC7FF84B48B266BF4942D2721EC1F5
5929CDBCDD1401BCD1AD98C5991CBAD979D158580CC29289AC1E25D2ACF07D44
EAADB7EDECC8104C53D1C462875BD4602313C5B6FF67AFA37A7FB7C96FA3E0A3
E28505A79E61012883781251EA5765059CD4702D0A7CD17CFA7B92447D0DC40E
059F4EB95AC6C83E04337998D2DDE0C2BB4BDFCB6D3FADA6CF8BA5BF117A80A2
A97EBF7BEE340F0537B01F4B30370391923DBA84A68F36B76B27D563E4FA92D7
A328C41273FAF7FB7C6B25DEF5E615397E1E027806F0B0307120B1E1A3EE92C1
8DDD0CF445797FFA67FC14CD3C17B25F21ED7B49E71AB33295CD2A0BFC0D683B
BC1D993A2693D98F242B06F4CA30E6CC65458297FF673A5B53D8680C5BE7FC64
02DAECD9B0CA98F098061F76E1CDE717F3883EDD19A35FDB01177873C20AD8CB
C91932ADBE66A57C19BFE87DB22A7A584751700EF87CDB154ECD429E42E65186
C1DBE335C481E9368228DE791F832ADE8DAB4014CDAEC08CC008A436A9D31099
E4FC8087E6BCE5EC15711508F10FA885CDC4CEA5285526C476531E80A30B50C0
DA477122726605F48F825E403F563ECAC5CE752D9A26B04236E8C2BFCA99FC25
F600B750CE3202FE622AAA38A6EB791C6D905BB9C95F71264A9DB6DF125E8B42
CBE08E2BA24A74F3F0C9192908100FF0BC2DF1D16D6478292002F72B8C638D37
6C4EA92B6A013B196F5CB194BE74CF97388F4F3A089B9BC5696E6FF2D5D7C169
97A786F17D981A3A0F7660A81B49A206F09EA328164C70D063A90ED4E9877F99
0E303E05D418172381C3388147A2BE1837B3E12A55938E80C24AA64BB6FCCC49
D9ECEE74BCF804B8A3E1DF8636EAE7F536BF61976500070BE6A97647749AE8F0
571E07A3EA74C9C9B6B923BB9BB9462BAEBAB79A1F9D4EEFACFCC9F4DAA5D18A
93D0A688E848AD291C2F4126DC78FA3150A7C9EFD26D0715A4E64C7DF2F1F5E2
8EB82D9499F075D5FD26B92213A89DAF136DF7F9EF9135C6EF5AB52293C75113
455D74B4D9FD13607114762442C6866F19B73202D02DCD14169AC73A3290BE8E
E27CA347579B97E4019D2F8917CB20280EC39F0478FCFF22283319A1F4705A0A
B81AAA1948C3DC9ABA7F9614A4B340089AC3FDF84937FD550478FDB6F39E206E
8E5771B183080E7DC8EDC26E40A9A6AC69E6DBA579F8B77D38781CDB5257E4A4
83D94D1A1AD38886BAA3ABAA62BF6F53A0A20E5170F6F49F781E5C6A644FE904
1CB7556CC3421B976913768F2B8B16504800965DCD7455A0BE4429A473797528
032F4880B9615C531124AD256272657D8D4917D5390FC2505A9E0997FC4265AC
598D289820AA542364A154A3A7702230E5BCBDD7E95A544EF7ABB4BC88DDFB7B
421D78D0777200A147CAB867AC2D68E76CB7E1EE732774D4CC0B9E4B3F128CF8
126ABAAF74940E8B706B4D2C17984A65C635F2635BCE854028240F7D28FEBA00
867B7167618592D21468401003E2869E6A3CE4CB28050904C02D72E390621A8A
C5FB8160967DD152DF6A92FDD15212443383E33842B80F596B6E78ABE0A23215
DC6B449509B1A1833EBD3D4A9E391E5683A238F5A461BE69EA4BD5A4639BD6B9
945EE2A8C77265919BFAF85B6F2DE3CCE33BA6523439E9BDAC55815687146414
C732870956B76FEA84E8D430898CF52B8EF6B2C021763B76BDC8EFFB82F2362F
DB80143438AFCEF696AEF6D96168B71FDC4FACB6A6C02E6F82448CA5B2C2B77E
379A82D48FE9C36F96EC6DDC92FD16BABC9F35920FCEA80B72EA1B4D0B448E31
4B5D63E88518541A76E39B2F8AB5E5C9EE8D5102008AB278AA335CC7D47676F8
C63F77C5923DA031D12C820207FA78E06176104F4BCDBEBE3A57983DEBB79F86
7C3B46014F257803966EF01307A39CBE68AC746B5595E13DBFFB0C2A7EC2A320
534568126F9B718AD90EBC40BCC929FDE366A782B751492C6FB63481B15E5B4D
F1C6D5F6A03834FB413539FC77EBC6F40F5C7723A6A1BF2C1465653DA87B8224
686ACEAB19A9F7CDEB8532E37AA0E6D61CE23F508F952795363B944EC0EC34BC
B5376920E6A2219482300B0FE3B5C9D0AA19287D163A2EA7B889713DB37463A2
16E8A2F52F88372DEFE78F1539932411651B77720BE542FA06919453C01ECF5E
DC9614998CF5E3EBBDB4FC5510266128351E4BED037E13CB1F6EF5AF35D3EB93
4FF67AF0FFFE95B658551641EECAAD00E61B837280D6009BEC894013EE467C42
6BA05823BDACC18E663D9A7C351D9D7F5D5DE8F13540ACD8267018F698CC73F7
5B437503F3EBBF321479B70CA48B44C2A11B5E537A579D15A96C3F132C107263
A613DED4C2332A36726E4812884AA603B1A66A5570BD9E332509CF66EEA373AF
D4D485E432901C7322FF64427C803ED826DE148065EE8F65B19CED3549688394
CEBB9F2CA4F725C607BFAA3A9179606ECBCC3EF4367C0E48EB52D8DA168AE0E1
BB76FD0CC0E31C04EB08C77E40FB92635ED042E0B13075B71F789643CC5B668E
0543311B5E60740B42DDD55DD4E3B229F79C28FEA9E3C8ABC42576DE9F1536FD
19ADD086EB244C5F40AE9BFC2FB1A3EB5662ED334369F9567E63C571F63E65A2
3FCDBAD915AE046AB6C63311265BA9FA6979C0E96B6C58F4739CCC142B2B99ED
428357A6C57E2984547C26BF5BE92294144319B7C1FD895D44BCC89B31C5516C
62182A1918D38FA1FBFA0F5636E821269309B2D0F3D44497116870A1D9B24744
591C17DE7A6BD6F1E64C5F283B3CD94C92684DF234B2451567E3D4EBFEB3FF40
565232AE3B53A5637FF7DC0EA980A58289583267C66AD56BDBE450BFD9EC7221
769DFFAEE70E98F922A171B470345BE5C38CFD076F1B66CC586F937ACAD94D20
D917AA5505611D80907BB87B88BDC3C3E8F924CF2B4DD976994DACE271B484DF
C1A9295C3DC78B6E044B6F659ED5DFE0037EC98C2E94D531BE2A91266243A3AF
A0C1A63324EA02A40A300CBFEE0C134F5AE542ACD1B2B961A3D5F096D1E043A6
665C6AD74FD761933C42E9F52612CBC69BDAE294CCFA4E6D054A0A0B300713D4
33294B3750889AAE4B37801468C739C24D96C9BFF9271783F68416E4D81F0EFC
5A3050E0003E186B3457D976E29A2471E59594D1B28EB6D8E1444F7C6DA80013
D685A13EEA3DE8EEE21D8A05637029E28312610093F9208244ECFD6A5B5F0E90
AE1CEDE7ED4F14C6C1148B0D7AC84EFDE362DAFEBE3FB632D94638C8C207E5C9
D1429C42B628B23CBDAEE45918E87D507C65F2C68E749DA629391C8A74C48726
B2A0FD542FBDAE7AAD254620498E289BA8D52A58CB5E6DD412B1BA7AD007E1AB
B9797408D799956231A1CA84CFF87F6ED0F44B6D53214F674B79197F411AF293
269F8A1D9495A07E12FFEE3594F356F10B42EDA2D212260B5D728827590F329D
4C1821239F8C6ACC6BFEF2E3846730BD1BEFE812810EB445C4F7431E0533B03A
615BA3285F7CDEE7734684E084941176D4A191E455026184E54F64F14AEE5871
47B5FB8D2B80128D5CDC825FF53A95C28487AA6373645121EFC4EBFE154BAC69
6CF030BCB8CFFCBF0009E71E263A9C08E454C03FC16EB0592EB51EA4002DB595
DAD6BED3E66496B809AF444DF08D1E23168C71BCB3758C30374E5ED018616C5E
20667C9CDFE2E68511A9F6013AEB3AF0A7F204017F4439EC2C827BE1C84E2E56
95D20BB5D96292F8E1895154D12074C2C458BA6498450E3780C656B1309DAE12
946C8509164C611962BC6C46FA93D495DDDDF43821D4DDF46B4621F969F70AB4
510B42C033C49F9902475E2B37141FB909164FD554B47F6537BCDEFE57546CE8
F9F43E08A5531B1B33B49F7C02478239A3E24ACB05B62183D366DD25ACF8E4AF
DF34EBA8F1905368F7F8CC3D37846F8215B38D461F939121ADBEE4BA569CBE7A
909883B5C19257CB4038543F6D3A41FB8CB414D232007B70BA479665936B4915
7794339071188C2869428FC3622ED1D1C2774C47DBD293BC227707225ACDC69F
44081E34AFBAA3AE3751303DE09746FF257215BE6F9B409188B46E5827F2E6A7
E0FC43C95DA55A66DE8DB072862E6F58AFF1E9D3494F90821E408175085E28A8
72CC4A4826D004B5C82FE172EA3034C8C0AEAB0387E780F3F89C45EB6FE49F15
C648625F7785CB5DBCBB4E654C9F36780F9137C188FDCDDA9C40AD6CFE2BA6F6
21EFBA8D310C2AECE868EDCCE91A6EE6802411F8AD3ACC13E5771B18E7A51E22
9B0701508C8FAFD95AB583087C947DF043330BEBDF8FCDEDECC306F260A69B3E
D45D164EB37E82D4FDFC3DD53F43A5AB66379BC3810B693EC167656B17786EFA
2207395A5D3F58B89DF6DB965135A2EBD7485E662C4B1B895782C8961A400779
73882C172A9281F7F0CF49845A595F9A2869918CF0AC34ABD2CA13F5CC9D3093
DD7B1C7A31BB91FCAA644673606227556A6D5FC4FDFF96FE1B8D4D8AB6EC5C02
501DA7999E9DB2D06DBB2E3C1A8EA74949BE9F130EE9CD9E98DC58667C758803
7BA9E546E1AE00BC16130F1EF97DF88E106E7709145FAFC54BB3D11AD9585452
882DCDB88DD8DA992C99A94DDCF1C8EBF763DCDBF5CA216C0A51FB47F671B9DD
EE6AC7E97E72B93B5329ECC02DB67E81111317B4923F3242AA241070DF0D1A5B
2A3F07B9F5FA8055798CB0DE32BAAAB953AE12E7226C984C1E8D44B436453202
CF468B1B6DC74BA5473590228720E19AAF94BF28AD1E2988E81D880087EB2095
58BF7E399EB409CE9F42CD00998BBC5C47860BB6474715866427FC4D7653A29B
61D5E989686E568B52B1F36D4F77239DA8C4F487A3A1422A253FCC5CEF69E162
57508529631E6FAC84F891163F46D6E218550C3ED6D01BDDCCEBA2E27FF72BB6
EC4BE7B0B02E8943EC5A706B41B794B5070C3BEBEA26DF454A1604485B45A4D9
2D280D3AA8D24FA48DCD5498FAB3FFC0BAB98A043D1A83B4F3D5977546174CCD
A85506D00E575F55EB4E0F2C0E68F2315E45850E436073C2C58EC7210D2510C6
076925ADACF9D4D8CBCE0F6B8DE9E08FB470C10228A4940EC2C7C7E14491C8E4
1DE19BD150D6DF284FBFB4E29A9AFF7AA035F7A30EDD21AAD3D9A064BF6174E1
EDDC81C7DAD4999150C7BFA5D33B3D12A17276B8C12D2590AE1ADDD9E3643A62
E4B0DBABB34A936B45C61CC6877BAC8AF5739A512867A3F214E047CEE254AC80
A4E6E64E516E8FB4B071D4399821BB75C88E00F2E5DAACAB1F05DC8B0110F901
3292A26E9A9C1C5FF10958493310C1831AF9AE006FCE8311B5C571D4BA338896
A7BD591D2B21B02A3E34CE5A7131C378381D3E6FEF44D52877E34436A1A60344
CB632F41C58F64699EB71D829A5420319487BE24B91790D9576999685BA89A2E
3DBA8B63864E9B271871D5E6DA51ADAD82A2CC826D25012451E471494E571E31
72A67A354261D9EE9D649077D4699A98B27C52B5902EB89D2179CF5D61DF057B
0B6701390ABF880E00AF9AFCD31D2267807E8CBBC1932CFCB5E3AE5CD158BE7C
5A7A930D20BEC1096E517E6778D290BD6FF74F85AD62C6AF4BB28C388CC78152
C5B68929D727F20C081EFAE2815A267EB0FB8450294664D75FBA267DA44C9937
C6DA2567FC6C74312FD94259168AC225DD4E62FDE59D570A9DBA910F902A2A4D
EEA768CA3E3254C21328B0D723016E22497D302343069C531E3C41A85672F2FD
D4569AC14C87AB92A778AE13456C503EA624DD9554BA695B2A88EA6B44539AF8
BFEC5D34CFB3E9B2DDEA2C01C48813A600C416671CF99078D357059B453287B9
4AC2BF6B4A633123B8FFF92700E306EB5E07684E6180B930E55C0646C0C316F0
E7D9EA61DF51724B2513FFD643F2FC76BC1B58BA567C705C84A4303BDBEB615D
8D6176A194DAC367F9217D6348E1FA373470D4A359E398857F7EF7E9CB5BC3F3
BE04C348BCF9A4B02A71ED936E493514DD2BE9AE2A1BD102254AD1665E276286
25EE435F1E22902B85B4437E7E34A998496F9AF67A94DC9152AB8C696C4F6CC4
7ADB3F46989E1686A251E25B22AA0979B90E22C8E904F9A4366E5F0183F47753
981D9D829C30E90944AFE09450D8D49E8E26FC8CD58F592349FAC72D3F2A02E4
26E6638ECBDCA65E203DA104FAC159A39F745ECFD968E60B6C4A2824D2483380
522B8CF26C18273A8FD0489CA9C084C5D6329E9C056856C8DEDEB2110D11E4DA
E9EAA7964197883831F51250DE6C828ECA10DECB1AF4ED4DB921F94EF2D2FBDB
5A3BECD87851D0CCD6334492303830A3F6D477539BD2A7DE067116A3D9AB765B
DDE5778E060C6E22802CB2DC5E53DBEAA8E5F0BC84B41B84E1D1C118034C865D
CD5191715ED062AD36B1916930F099E33D264B4DFEB4B259BD1334859B1B60A9
638EFA3E865BDF989AD1980E74B3D3F4240B33DED888EF702A5AA9FCE3E6ADF7
B12BB8B49386D6C4991C5EDD06150AFB7E8804CE311215A0C5E93DA0E9D2876E
BB3703957874B8683EF41DB6D453771D1E94E50696E42D65569D9B80447A2E99
0D9398770C8244A09D14DB05962D9B1FA7B0BD7BB7A35A30E1915639C59111B7
3E7E0470DC0269CEBF305D1D6CA71A12499EE9C35A8D4E43EDCD7E4B308C7070
69AF1294E5DFC2C94F4A597898ABD3AB037C89093F2F8C7A652A894CD63E9945
54D5700E4AB15427731C5AA8CC41FFFE0E729A94FDC4230CE956D5DF6FEEDABD
1347E66F6E53C5BA04CD499B46BD865FE4D264EDADA6602BD08CFB74FBA28819
F6EA9107DE6A552AD0964D6331565610BC7C0BDC66CDF2BE9751230BDBABDB7C
6E474BA656B177EECE554FC42EA252FB56BB4019AD410B6CB09700DD0F02F2CB
09CC303128C8F01F73B651CFA6B8E01D087B8D07B9CD949CA055BE9651DA8AE5
151FD241A7B59F32672C409E5C1EA81F8E45B6CCB2B3FD1946D48BEE7DD6F4A1
66C0E81E9DD235803EE73F481F82D7F83C149F89D16E1C1801B62BA8FE9CF93E
359DB672A5663A893539808818C2FF539E2E8198FF0B1E9A861B3E45E96ABAA6
8278222578C558166596881DE9E591183E0E9FD19BC3F83A507A7C96BB90C7C0
C154E2ADA27040B7A0FB13F2503EB7B79A9195F5540E39ACEE3901F395A9470F
03939B6ED3885434A934D52A7325A010BB49EC0123B4887B9D40DD74E7ACB98C
9400D750F2776E2CD32E45951C9C27493855EA19BC820D7E568F7C242839B573
DB9C1CD93DB075F91BE5318B58EE5847057D472696F2DFCB461D0C9F8CE0274D
34A8163EAC0243F8C6D15F37C75A44CD39E69F062ABB73FA634B58927D14DAC1
7849134D62E16C7376C0908DCFF7CF0E2555BE82AE0267D93271BF8531F0F268
DC45D7CF6CC8E196B1A53D83C29AAD9D7F613B0D67A1B496285B057E94DE77F8
F4A46FED50D16CAB78B18747A4E3A28E672F19E73722A4D9F1297A7ED807FD00
D50D6502FFC00853CF48FAFF5318AF27C3EA76AC83A834BCC67E53756BB7C0F7
36206277450AADBF1F619C5C1E7E28541DEF81FEA3D256C4EE5FA1C269936F8F
B15DEEE86270F37B3EC3B7755EECC914987BDEFA2934426B18434C1FF0E68F17
A66143E1878C48053D3A887F82A79146918C5F23504C746DC738EF80E4B2E3E0
6C4714FB59723FF11295E41BB01B0734FB9DA5FACD99A375D829CC301C1F584E
31293360E6C7F4CA9A883A35C10F5CC53766EF2F26699570F8BF6C4A5132E348
44D6057D3CF0B0FDA893B2877A71930F44D67D39A1DD011B7B1877225F4A64D5
510F6C3646B451C474A67D797C9D30EDC7D6C3B5C7AC1AB72CAE28736A9BDF8E
41E0DD1A5ECB1C04A3784FBD2F6492ED13D6A52149FC7E56B3D18AF316EA3287
68EA32851A54B28AE60DBAC8428A2EB584FDAED82A98E88885F2A199A3513386
17C4792593D37DEBFABB886E933E2BED34BE3EED5C9B0E7AD7F9D353878B96D6
9CBAEBD5D174DB4002CD4C656A97D7A179E219839B6CD7F28D50B4F2B86231D9
38C8FC35C034372B1E513B537FAE37B86C6DB0D80CFDF3DBC21D0B7D16450E25
DD12BE3A3C913FB406D06795AEB6B3D22BC0CE01E8E466E18177EDB43D7A8514
2E786DFFB5F2D5D0CC0B3E614084BE0311FF9C4F128B51117A4D6BBF276042C2
11996D3F2EAB6F63215ABFDEB5B1627251050F16A101840F8718EE293E5935EB
ED3F137C73EB58395AA2ED0975DABA6BFEA6896010761F036E2BCCD3CC0F79A4
F0AF21E89BAF2826D0AB35D2366B48A67D7AB8256E7EE8A5D0D6C74A5055A9A6
0426EE1E452B9D4561C6DE3C20ADCB7038F53130CB0A77A78BCA56D3D61BDE42
2901124F90D1F3CD38BB3AE46E66DEE7BCDE7C472DA95770CCDD22D4A47D09E3
A558F933AD17A13E8AC2B6D898943C27CA87623A12E0D9B78204AEE5AE33E8C4
2B30448569B522BEA923FDB85A394F5858416DBB6DDCC0F995A93310C63E86EC
8AB96D0A3774F7CAA3319F012FA6B8BC8359CBD875AAF5BB91BB3C1C45F10E56
461541826BD037A6E27D4758A537FAD62A85EB4F6F629EAD6DC9999A5B20527E
EBFD66247360DDA2EBBE1A1F4D221D343C59AA1C7C55E20EEDF01FF69E1D276F
CBF573D64CD3FB9B7F0A41BFC33423E929AE078393BCA37E0257E06F3086E2CA
612766133C601332C9D1F7E3453B3707DA94283F921B9F08A9B63166850ADBE3
0F7D08A17A175FF4941D4D12A51542B5383DA170FE8D3725E17B6EAA6D7ABB73
B3130BEF179BEA7AE7605EC35949EE52359DA46CA667B68B8741A6471CD9A804
13749DD1F98A95E0A21991B753C8610556A955C5CBADE12EE8F080D59F3745F6
F181A8768AB83FC3CD0F25AFD261C473E0D0B8BC55B663ADB3630F92D0ED2FEF
954930D3EB5650A1DF150B0131004DEDDB281E1176B7BC7956F1AD4FD445CB82
1FCB6773D447D8033AD596C113832A9631A535C921785FD6A4C61DDFB3E06611
6372FD9C3A7DAB9A2C8BAF59B4E65C34894AEBC24AFD344B1ECE86B7468AC2AE
46113D5014F9EC07B7F30F19EAE22D9743F65AA04B60BF14E9CA1934A2F50975
19335939B5D9CB62514BB8037CCC981CA4BE7A193E47DCDC0D4AACABC5C4B564
CD7AAA50D391A26C559F318905EDAD7B65DA53C03CB7C4CCE2E2EA7738558D3B
A995C3DA949659D2B2FB425188B74A7E329289AA94B18C4F33187CCAFD088E34
A93CB9231C7C566C93CCA3E84C97885F54CE36C46CDCE0B4E7635E15FD8AF559
8705A83C3AF9FFE1F31B5CE081565F217FF51FA996B3A9365E1A99D08CAF69D6
C537FD631B9BAB0091C11EF4A35B6EDA6E99635D225BFCFDECBBB00630581E83
08EFC0DC71847F995DE03E886CCDD9485C21FE931000CF82B56EE71402E0CAF8
8A547699851CBA81D0E9CB1CACEA9D843364B117A93F7710CA364EB6005E7D42
FCF5EA112B12D34AB78D5BCD76BCF3427866A8A19007601E37C73164E184AF16
6E6230FBAD4F04A43D848871622A1876137D5CDD936348886761524D9E8A7666
B6A76F6DF57D96D4624926980CB0C2CDE09B08C88F882C5F1B138EB4B23D1AC1
97054FE146E1CC1D7C093EF94F50EFF2F49BAA530541174FECD7B713D2A0989E
C0C897F8CBA3FB33CF6C4AD2C4DF90416C33BE0B75902650D1255C4B07859417
849F49B14B70BDFA54E61F78E282AFA3B4248C18FA7E4A2668D2FC1012716FAE
08E673424143DED6E305FAE4A7DCC3EEDDA7795DCBFD10B3DBDDAB8FA91DE55E
F322D667DA21FD72FB016485ED2E1D1554937BCD17EFAFCCA3773375BFA7F4E9
F4E5E2D78CFF8C5AEBF1F6E0F7BE06C27DFF6E930211BAA433ACE4C4F7C3027D
010520BE22467C5C4B752AE7D7B64A0788BC5D7C28046687BA71FD6BCCCB4DA9
B8032DDF0983BDB34EB1105B35199F76BC3472BABFDFFD1C6F0B1E92023CF37F
06B7944646C759EECC7506B3C669717109E3894EA0943B5A386BDD3233730D48
45A26E6A6EA702FFE60C5D77D652227EFFAA5088FA51C48D0A2BB8EAD932743B
245F5EB54FFD5A8C3AC750B2CB91992901C1F5BFF2F41E707E43243E92EF1DB4
523DE52B2C727E38EFCFEA4C4B7378B28C99DFFC8FD5E520E01ADF36CB8111B6
90BA9930BDAA9C408A34EBC8AADEA0893208CA1E045CB37CE55B1CC01D0CDFF3
A2DB8F13036270577FDBA79E9F7C7F86068E91E96FD4834E2C788811DE6A1F63
B490442F7F8845917184A540E2B1D02910D2076A126B2C522FAF1B01B40F2D10
3863AE9FA5F190086D51FFAEC0E0E727BE73868E9CFBEBDD8E0905C4B1A31124
E0DF880F78CCB90D28E90E9629FE2883CBDEA3B1C6D4413FE1597E0843DA0F3E
3E2A7B39A696180937D740DF623C33F6FFA425D9AB1FD50BB05D665A890F7EC7
6885EA601262B845EF108C557C3CD3C70D373688B042D59942E764F6199A942A
9C9B66D60C74728AB6F7B5A91B0AA7B9C7A32154FF9B641DD64152BCDB35C467
84361B2B6A533884972DCC897BBB178412219555E55318A81B948A0220EB33DE
21D4F47A75A2FBC99C86783072E995ED3C85AF5FE6A6AF0FF48153A72AEC12B8
2261BBD0BC213116ABAE89E37B54F47D99EBC5A895028002E870DCC653A51C46
4488D3D681B1D253615867B59C3110392D5522575D8E5351880151F90705C966
4BC60D6D4DC81BC007B8DA932324AA2415C7D6EF837A1928181E7AA01486D0C6
41A2B828D6F78993C09B50B6CC305FFF4CD0A64C6D040AF5EDC8CB616E2A9F0B
AB8B493FC72D4277E5F651D2D262E8436E8EAE370307B30D0E23FF6DB5329850
CC2391075A13231BC071B6191FA8B6CDA43DC80652BE2900CDED70CB878B28DB
01DC77758B49A9791FBFE1E1FB4163110686B7F669171AEC13D56E9A11A490AE
F22A74D785C4F3C59E1C2DE04D335562594B5598295FEC356A657D782303A57E
E49BC0145490F137CD7094FE80D1640F881C2AAC472A1EABAF854E9CFFC7B33F
214D6D3809277422537B04EAD1C74E9B57762ADDBE82E7F171AEBCF2BD69CE88
3F18326C67C09F43758098862224D4E3877A19BCF6AC7F9279FA306A2A15B5A3
348DF16F631EADBA984EEC875074C093B239C2A7EEC5206B6833BC2305FDD441
5F8DB1C9778706BA91FFEFA9D1CC4380483D357C9EE6938ACE0E60E6D77E35F0
69A23877052CD0BE9C849339B9B64BCFEA4E8A1E2ABB264A2725BAC038D42BE4
2AA49C67833075D61BA75E1D4DC2DD0516940DAD5AE71DFAAA3EA48192ED478C
FBBC6892804774DDB6FB19B459BE56A35202FFB7EEE4B9052CF1B44D94BD164C
FCF7CE2D4050C6BA4FCA6FCB16D452138D3F1D32A14973E6C705E875CF344BED
B6859FA8525A0CDD2A951482BB17A9A1BB449948CB8FE598CE068183A68BB6C1
8515A1C14C881910AD008BBFAE187684CABBF6AE4677AD8A8C187CEEBC13A722
3343F8E8C852447520B6E07D88331AD53DB128C92CD132DBD838C6B4F02ECD2C
82087F329E84C571ABB64F1F94C478CABA16B048BD016F3DC79C37AFC7E00DB2
710E1CF8D734C33319B73B3F7FEBA22B6A2FE863462B258953A3EF7D19D999F5
30E25A39A156B99739161229B99BB49EB82417CD0185CA50D38215CCACC0B372
C9A20A3DBC4D287EDD88B7B9A0AF998ABD44ADBFFDED15240F60ED626722ED40
CF084B1E4A82BD81F127447F6A1ABB8D327A1AE052FC4C09745DB391CF1CAFF1
B4742F9DDE768C3AD821460A0CF56601ED93355E52DF3692F6BB1B872003F296
B37920FCC56B50465E8CFE52C67FAD8A5C8CE701FAA657BAE8D82EC66620E307
1728C742A509017336863A9DE1CBF06B3A7B04E64F5DEFF433708CDC429C932A
471AE3C5E133DCD1C4BFFDACBCFE33C6F25143B98674B0A281C7C01584CEF2B8
79840E3841299946B8C20FBBF0948109E6A1C0BEEC8C5DA2D62676FAA598154A
8083C6299F423A1D84AC77C35E7D60EA511166FB00BD87114D0A9DABA47C77E5
22896238881BAA6ABA8321D5A684394BE3FB7945616023B1825464B5E32E8319
4CA96CF8BA3BEA127C2D3EBD290C1839C7B9FB7156933433999D941317E858DA
4B317718B33E99D331194429F500926D245692B50F06FE6F0BEE7A6C08BB22A8
426334E129F06EC2688A71C89D17D013223A0690E3C83A283EBF0364F7B25331
887157B794FCC36A17A919FF30ECBBA4D305DB65EDDD1D7134B9DB92E59FAA9A
0BBC8A30DD78D8F205977A46EE5F47350880C53C38CE9D1E48DEC7C9C17648C2
4634B91F324B0E7EC487E806C60292EF5D9B619851877D4ABF08F3ED15A4A175
08E5F08D106D31372A769015C8C84F60A271B42120F02217EE4361D543892AD7
E1D01878A8800AA1507689AE6C1E6A25809625633DB8423398921261F820A394
74B46AF7606770265EA245316AEC8D80C1245137D33526F909ED6EAB43D54662
C9D744EABF6BE76F511948C50DD2AAF48AFFD19108DFDADF7A13AC768C840ADE
8D3D5140BD776283D491164971C4472BD25F0ABA39EAEA3ECB64384B40AE324E
D845A65549E3D28BCE0FAF5859E704BFEC1EB3CB16FF96CD5F9536E67F9FD8AE
2C530C9668BFFE54EBBFF68BAEA10394534DAADE0D5E7CC2C9A8F86EE3AA337A
0FC35E2E7A86F3F157CB094D184AA0CD739E578F84D9996E209C70A8DE6BA350
DC7BAF2120F513D5DFBA1B80E7A950E4AF9036C540C2211B280C8F9172ACB7AE
89AB13DC94EAFCC182F279F5FF9E96B568CC8E88805E7D48EA13E6D78D1D7A26
0B5B2DCE0ABBFA841424120DF8FB7D9CD3E5584DF1D3E5A4CC8AC7CCDC6FB301
2EFE8A06973CD9F84094E971061162DF524C45F00521E88AEF489A0E821730B4
A159FFCD4FAC5669E48C6C430E623A5B32DF56AD0A0EC116CDCBEC3A61A0378D
6C18AC98E8FCBC02F51DB06FFB7EB2DE57791E3C1F09A3BA6CFCB3455C588632
92C72FA1F3A2BF3210A4B7CAA6913938B575F1D448E8991B892177E89A99F421
4BEA6D0AAD021BE2C38FE8EFDD730E4A927C6068A7263A85050D1AB30B616703
2CFB69601552D85D8EF89E0901125F61384D586F661A38EB54F95D38FAE7E6AE
E6BEB2FAB9C5A32ACB9F07C3B1672BDCFAC9050FEC82A00453BB39FA85301F09
524F6C167FE75AD5C06EAFE05C8D0DB14A16B013A948428C225AB15503417B97
38F35C24FAE67901D34CD01C1B91569D069840046126D4EE75E806DD7BEAB8A5
C2211D1EAB2C2F9259B708CFC745B1A299EE9632ED55C8659C5C36302965440B
28930CA814362BAE3226A6CCB5393CCF941E7BA05694A67CBE200ADA9F792B68
AB95F1D6D1F69649379E03A439847B4F5F14A300D6D916B51A8D553C145E0F92
C669E87255A60056C4DCF3F92F0FFDE9092CAE945EC9964C67BF847B0CB7AA8E
8651AF5ECC83782D3084B96D4D4460417A3377F29B638D205F1B3291ABFB5842
A3EA2111960DBD4741F24D9BB0F7CB5AFDD946E0C2C2D8E9B781A18DBD6CD16D
70726AEC7E849B2A8C56D87D6A5B8E144D4F20505C8649E59AC99EB5FFA24B4B
FD3DA8389D9E02B6D9D2CDAF7CDA7E8AD55536C788930D805B93B757FBEA1E5E
C417C347417459D0AD55B20CF5AA255388BFA718CD850CC680BE1AFEA29C829B
B86BB3B7C9582DA5AF19A4A7B2C472B77330E524F3EDA068A774BAD375BF74F2
6FEE7D0DBA82E47829FAE1A5F4814E4F274D347AD4B50C6B322623E416E5B7B4
A0A543F5F699FB92A3F478262B0DBAA320EEDF4A70CDB10CAB5B2AA9804CB584
AE22338128479DAB63D84C800AE6C1084773357FCE68F7E0C97A7CEE7C18B0B0
23ECD0CBA317D4F2B5AF5C8B6143CA50E92F178800D0BC671D410BB74AF20E70
4A0F18EC8E1EB925004033428D9D034C1C8837D22C7A988C63133B1A1D113CFF
DDE37D13B70E575DC396B698F2F333D610D69491844E4B37B6B99FCE67839E2F
48E4C7BB1EFB784A91FBE6F6830799B0A8F9B2719EDE4A050FDD64863A60EE12
2EEC902505595F5693E4E4ACC5003D0897E82FC636A673A7082C7872D08334AB
73A745DB15B86974ACCDF1B601EA54F8CD8518B5EEAB6F7F908231C484B9C249
85622969447527A82E5836113290DBBDA37EA63D00FB004C082C359FF723A286
14549911BB8667CDDA4FC826BAAF8F06AC2495D14F977497CE36B00032E3E9D2
7917F0AB1163E6B488F96B5A5EBD728DA271360BDE18A8BEB0EBAEACA4857B95
404A345402388398A1F9433B37943EFAAC59FBF8B887DF9B44F3455A5B7D9B7E
80FEF233284AF82720F18ACA13D92232D361CE3D229089E7AA442811530362A8
1D5A11F2013906742D38116DD176BA451806162D31AFC3B895258561499C63F0
0CA3456746DC96D00B5B6211AE0D27FFA0D792D1F5D6CC59379CEA901870CDFC
374F987DE375200994C5C9BA0948B51B803CFA2A56180CB4D261524EC3543B15
1A975A38C1B0110BE8D2F85D9F242A833CEA7E6952FF34967C42F23F6B59CF0E
7356B8A1A6A93ACC378A158C786ABEE8B66950C50EB694057BE0B96F3958C96D
07067AB9FA91ED5EE515C59869243B204C7AA72860A4AC142F72EF6B67D78DA5
BA48CFCC7948B32ADCCC917F2CE18262E6E38556E41F9ACB6FE85C833FED1AED
BB63D2B85B3361C3AE84B9F29328736AD9C532DB044DEA31FA89CF55FCAA6673
55AE6C9D986014D70396713F1D450C5CC078D0C74D5E8F64679DD88B742E6D70
4E4ECA516B14BDAC08689EF5A3555A318D333D9EA4E6DA920DABD2999851E94C
BF39FEE811FE8343B957538EE541D9068D3AB2D74548000796C8AFBCBB6FAB84
E6341239674EA053FF614A8DD7704A5F6F1DB722B7898A460E3BB50174C08137
AFB0297493604714DFA89D728361861FF473D343C151E35D2746DE89FE76BBB8
89BFC541302C4560335FA30C098F589BB35DEC9AC2292B804C14C688BB1D087E
DFFF3003EA89C8D5EA267E55DDD206F90672191AFCD702F55FAE08EA468172AD
AF1EA662761026F47D7BFA57773C2C2BE64E9E39219E799F4260DC22B043A9A2
21B70B16446DABC4552408A5B05CF531E3F9CDEC7342205978E49AACA883764F
09CE3C42C0295A5730BDCDB053226F88E1B1A5071D3D8E4C53EBEF07A5EFDF33
67FD65AE3083F63CF9154DDBB17099BF413BFABD7CF7EEB7BF6FDF289873E0C2
0EADA822B1F3F9382CA9C05DB48BB5CA1DAA4C85E3674A28CEEEF5B1EDDA4FA1
7DDDC1ED90A009B474161E7FC61759364E40CFE32AE40E9C130113A666A19064
26C13889DD37B416A75C9DF6F6793477C96DDB56284C3EAAB3D634A9E2B3E300
A0858CD3DE610523F9C979234AA326C6ED6D806126EA681425E1063FA52A929B
7FA04887AF6C3A1B63BF8FC5A2D3E0B21CA62FD8EB6E45484D5F8364EDFF8348
22F4E57B427628EA3151918CA693D634BC9FCC2CF3FC6BFC86DEA46C0BE00DEC
3028A0AA798005E5A8AE9379DD4B777773D3724CADE4D64DCAD5D8E19DA471E5
4AC6257EEAB54BBD57481407DA7F9A2CD648F21C2185D71D1C666D24414D63D6
B024411CF1AFD402324961CEA530A1DD587940D48F4090E2AB11376673F89AC9
CDEB5902F46D8E482067B8ECB9AACB30347B56F8259C20ABB657197D36500905
843AC58D5CB77E906EBF89A46D4A74D807CFFCE374493E2FD0FF14E56F77C819
7E5354A07AFDDC5E1623A904D1761357083FE376FD65FC2E6091F284ADC07D4A
6CF52B520A4E3E79FD95B28333A0ED2397CDDFF7702087C94ED2A24E7B41AC9E
6056541DA1A90D934A21C4CEEF9618CFD04C8A3231A1C80927DA4480F3B1E0A9
8383766A36B0B5853B6E21449117CA9786A3BE42C79FB22789C3C3FA9F06BA28
0DF89F3462CA0D7E71C0E392F0C3BC4483186ABF8D1DE9807ABB9558F0B153B9
C151E5343DCE8D7037548D9FC81412B582EE71D31894E90A64DEBCC6ACC841BB
0F74156AE3034EC7DD9AB6D25CC0D5DD192A7B29C036D1BF0C5520E318267B85
9FC35F9CB10FD004D228F12FD293F6CA1ABF940602F940E28CAEF25C58EFE145
9812C8896FE514AF15D36D74EA57388AFBB2CA8E1D3BC49D7BDEE8F455281601
C4855F7020A68F0EB2378E11EE9982116A93D814B6A27CCC2D36C2ED37354759
C8A5A63E567BFBE24A6954E4F9A5EDDE4C0DED5B97B277FCE80B92E781838FF6
A02A05729B858E657DBBF80581C6568233D43C04CD4A7059ECA3E7080A81C699
A5B737ADC7204011F1C2CBAE9929F6343CEE0B2D7B6DD7F9D7C78B8B18F81E63
195C7D37C9C89F50773E8475B14FF959948F67D88166E0D1005B3EB2C7C02396
34B44322DB44DAE1FDAEEB433A7B79F471072B6C9BEF787065832B44C378D145
6D4A5F3EAC5A6207F4438122D964A8D9B7FE09046DF7B25E94A91FF9990C03E0
D2ECFAC79B7AF7E5E31A834424E286AD3C116710EF4F01C73406976FB68F78A9
BEE0D0A451A70D3B8478B5141B4DD903B31C5AD53450D0727592838AA4B00DF4
5B0DB4EF12BD211833B1327D076EDD1C19E048D3E11EF26827BBA6FBC1ABB9BE
8EF871E3D2A0FB37EB9370BD0CE2DF6BB20ADF0D05AA801FF3F79E1CB88DDCA0
8ED989D0D891E45926568D7AB99A44B99A90FB1B7409DACBC9A85F5527F9B596
0E722F06F94A52490252C5AE776E030C21E324B39C35AA929B5FD3C5C91D3B81
2B063D4CD649B388A69E645C958014DA6F7DCB3146CC7C9277F92499804DDD18
660E2172E4534A2171C5C72BED50CBF487DF282FF2612CF0B312B554C6E28BD6
A3FC7DD7C84CA97E3D27838A37E21D0129E73158FB1F9641CB240072C0885AB7
7FBBE3CAF971499073F0500E36411A61A5C94CC111230406E861B291AECFED15
2B4FFF6252BDAE576DDF7AC6AA6424A4AE8851A136A7A70243FFCBE3DE312EF8
F646140FD717C4AA7E1A7DC4F25779B1971155ACD7EBCA1E621E95323A549468
91D0ABF11C4CB3FB33AA0E45B0B9D5E91A7A8C3D74BCB8AA458D2EE28F758A26
3990EB983504ED094373454068D1E4ABF0BC12CC213BE91256E22FE07DA264A2
093FDAC77B8DD69F36364526EC59561D5239C858B406DD37C66A9ADA901E1630
1CFEF76C94404035D06CC93C6436FE43C32F949DE6B71CE60590401A4AEE64B4
EF05F74E50B21A6A593FBA398B5F697987D6A4C1CAAB1FD055C6D5F1FA095830
1CF63AE031F7CC71C54FC2AB46FFB6738B5C4D8CBE57F89271F79DF745B45D1B
AC7302DD70F6AB02C7F7CFCEF5E868B1E75F13A5D524EF50AFB48CFB9BDDE202
8DF2050BB80199AA29BE8C1903BA1FCC15478952AE13F685E6389356D67A3EA6
8E6BCD72E4FF2BD44373C6E3170B2EAD282DA431963FC642CA5870F358844E7E
E68BF84244DDC70E6148DCF284F5CACE0DE1178885055417D7B83E5FE51B0930
61C81607EB1EFF1A8BAC6797A456C2B84727F745B33C7FCB4BDDCD9E881825D8
AFD0D59EDF5CA6635B8461BD0E5568F5D77895FBCE8C568BF6F9643F2C2345D2
12D47F07096842955689E93DFC982ABB222A490564881D04A89CC752EDC89C96
00BA8113E57A2E39DA7086B753BE6E90F7413EA5DAED7BC4DFA7D0D5183A8DAD
CA58FBBB78F2FE791E35F40CF6C65D3F1672FF6258BB8852FAB61FE3FB78A321
2BE8344C30F3A95065CA2CFF7CBA88D547446D89834C049830001F7A1E74CBA1
60A7548C3104F5C2A5748478E9153D13EAA8B70F694AFD2686EA77F69DC6CB0C
B773E86EF8E49A2A6ECE778F680D265E3D2A96A4A6A183411420168F5004D774
E85D8E64B74596961B065751AB69010E0188C8EF899918816AF88529A33C2015
CCAE7AD99504E6DC8F523F0E8AB31363B3352B5D6DCD869F8874A24090998476
88C420777DD84F16F05974FF5E7E47929DF335D4DD82381EEA4F1D2C9882BEB7
898F2890CBD271E60A19F20CEE4C12D75561896A45D66F3B6ED865963B5C96EE
009311845035195AB4370F6154C1988732ECC4805488525BE1EE3AA18C0B6E3D
442662EAA5FDE363318ED141D9ADB62F62A839DEAC30F6080941B770119248D6
12CF99970AD351AF9644AC0FFA7D5DD0904415CF0CC7830740AD0A3D8A7FBD75
FBEB0E6D355EA9B2FCB3CA4ABFDC6E7EEDE23BB23DE01784F49EEF90792B5006
EB54EF3F655E443DEFBDAB51F40EF61CBF0A60BD5A892EA67C1F6316C2E89482
B39075241940A0E899FFC7240586FF32F6F045B8C05CA7D768FB016ECA94A858
D6A066FEA9B361B59EFFE74EE2029518D189E1D469E0C130A48476112CFEE509
21C09594391ED54B4C266C84FE5730E478716FE3BB899C7A92FA5FDC24CB4E16
B9ADB5395990C0FC24BA3D44E09287D7FC57D45EBD7242BFA7665BBFE0DCBF59
18BD548A9CC7E07D372E117B5D310DBD102CBAD8B7B60C7D1CF4D071E273048D
79C71D06FB037450D6D034FBCF806C7EDFDEA07AB089BFFCEFE93D5427F753B1
176D3A4D1E98CFD3A1AA18175DA0444C6BB1F74B7C16629EAE76D142FAAFEE87
7EEFE882DEEFFF23F65FB1E1F0E91247C4C0DFFCD91D4023AA9BD289B3149131
F7D47E6A0E84ADE88D4878E1A274E7185B6124FCAFE84158FA08A184F601BAA3
B088F1EB91F7606565590ED7E996BA8B7FCCB3228926BCA71E6D59940E90EC1E
5CFF85C77FE6045D3559101E2BF84AC0B12EBE591BB3108F7E71DB7B443F39BF
EFC00D846815F45DA2D7CDE90F8777A6F607029206C4ECBC18B4413FE8513E30
65848F0F47766698EA5022F687DA08ED4CF1C4227B6322F0CA7BBEAA02126F18
74984C9366374009A70A82200D20AE1FB9E9774C8531D9D8DF7AF0ED14303380
D9F48ADFAA57B8523EAF7C4F6F5D79A211B8EBD5C80DB1BBDC1EAD8381574F5C
4C53D2C0338EA0774DF5DD48BE684C7EA5E17B240008492D95938FBC41E9D328
62FBB644ED6272CF5CD4319F7CE00BEBF322AA5B0BFEFB6B6DB84E3D4178B45C
BDDB6C420B0FD0F6B21F93095B7484CFDA4A51E5147D287D2DA16A35F883CEB7
B93DE4274DA968617E8609C5AA8353B881D56F607CFC0E5191DD7EA0318A3B87
1A59C4F794A4F07C6EBCCBB1425116091FA003A892CAA3A88367C34C6A65A45C
E510D72B1B728FB6F9F67FC1F00C539658EAF3A8C986BFE644606366C6334421
F97C9AB7BEA28C22E3802F427DC164BB7ADD16554FFF8CA7C7CA8AB504535DFE
32567AC9B8B7A41A3E2932564DFA322433B2370FF967488C7BC6D4B27F6529E5
EF5C38106ABD10886C237658C7F51746AA3A48CEBFC46F6C7A3BECA202DFA0C0
34DD605EAB22877FC6A101BC91DE9E8C3F97235F3CE94738B8BAA61FA846047B
D11926EAFD765FFFDE6E44C433BC54764CF24CAF6B1A438638C6BE89806AE1E5
54345DF3AA55522FBDD5834F0E001BD6BE790DD44B14EDA74332C43F8406FA29
D3002E9D40D596BD4945D760F04D31E67C53F9A99F651394CC806638B2198F4C
1BAD36DE8DE5868633A5146B76769961F88226A26FF7D51FCC16AB0F3A93B31E
3276A20DC03915EFF3C56A83ED7F03109923035D22E3FD3C24DF575A2004270F
98BF3C459350D840E7DB0C9FF23143AC73CB0AEEC03D4446722DA9133EC8957E
949F7BE961AD86FFA12F7609ECE026438F96444F07B5AA06E4D2366CAE56B666
F62502F54499AC8318FF235FB8A3A7AF2DC91866786A673090E94B0649E4AF4E
4214CBAA8F0EF0A1A1FE240153A89AF0E11FAD70255A9E7FB07AD0F098984B5E
AE48FC6657A1243C8DAFBCEABBDA06470DE3FB9865AF0A5BC86B282F7AE146FB
83201F5E793179FD6AD065725021DAEF6E088CA00251B9C8524D89848C25AA4D
C38C99314BEB26ADFE1779C5136B61E0BB7DF082269849B0A4B1E02F8BD6FF62
F3174319598C084565F43D9CAA7C64F1C027B488FBE1BE7122421B7458A286FB
A4D783307AAA4B715EF83CB92D7D82ECC550FA265B4F49A42A059C5DBED3B28C
3BF6D433728473A6C3BA9CB070C5F791610E8A142B91CA2BBAA199C2388B5967
1F72D9DF924EF3F36BC03CAC6FD44C43C474AD9F58C022C675FDB1A5D520532F
CFD637ED9B6E8EAB34BD963AD134E0D039D2AE16175FCEC2B87C28D876F5D5E5
92969644DDB4501F80298F4846F20E507FF1F40693011E99DF476CED72E6FF97
A7EB28A05648194FF522BE7360C0F8F8950079F427B57F25D748FFDB3CD2BCD2
A5BCA81677D3E67C82561B06572F2F50312BC8FBD4CE28AE735A317C332F2C0B
E0C2A81C846E5F19D37A6C6F16E59A52D0525BC0DD742D82494F78909EAF5208
E9D5759ABC9ED5FFAF7542C951EB44D3874AC4DFE6D54C057ACEB28D00E579A7
7B7FF461C2541E70B659637C2038FAABC8117344A29AF4E49CEF44D9DDD7C066
B58F38ACF911D74E63D212661E6443FF14E7F028193E0F925DF7A6F50D53DAE8
1BC58D30E50089930186E780B04BE2919D76D4F7B72626F0A390FD641E2855BF
C060BCD469AC7874BF64AA86FAF6B02F7AA122EFF6DAA3A89A31982E17C4DB69
025B4FE58A3179FDE4DEBFB79E286981D58DCB185A7894DF2B5320DA043A4016
EA74E84C1E08AA3D93B4A0F1D1BA4238FCBDCCF8B5342E43CEFEAB07F387D80D
33A4A7604ACAE87F5039701A2FFB85B2CCE4AA00C2F215DA45011639115BD2C1
D9AF29959CAC1B6A6044555EC87A1A9CB8A2F81DDDF2D01D3740BC8A2BFC8C98
A09FCC1D0EE3FF2489C8B4815FF5493084A13143935BC08A9939AB54FE78EDD5
547D753051BAF0FAB46CD4B267D493B86603930E14098EB0D12CE93D168E46E2
8E083489F06AF0175F2F24876E446C208F9E24105C805E2271F91D307B1499FE
B8E840498F31E3EBD5FB8387D859372957FC7C6F2FA0998D952A13A19D89DDCC
760BD077C847BA7EB22117152D00BF3EF0F019126FC9C1F473AC2021E547DE95
16D357F6686BA9F1B3C55E451102DBDE39B9BF18660F9689970D064986C1291F
55A051AF82D8DF3EA8381D1E6FDC39FEE7DFB1731487B838F4601F895844FDA8
D389D4F53B368013EEDD83A263B75E2F0EA483E56ACDBBA257E64116BF7133AB
79838AC4CD5779E612F2B5D1E47AC1EC38505A340AF7C30FEF59D7ED06534504
CB5F55655A8D288E61FAF32A24F91B31F44561887F8640DFC126E731CDC89985
AB3EBA6DE5080C9F235C7A39E5D87C2130C7CAED67A2CB80ACFA8EF3CF79D6BE
01E38C83F2FDFFE9D4EAB39D756A76FB6E86CA20D6D914D937AA4BEC797B8FF4
7F5DE9714A22650C0175FF4F130876786B3735FC038D3E8D9CBC2FAD2E601EDE
DA4680AD3DAC4DE42CBEC16DF15273E4A217E9C1EC255CB39E6DA60576642AF3
6E3E5F2F67CF9EE6499E421BF0FC46C80CFF00869AAD34B25B6CA148839A7D69
4ACCEDCD122C5FD80D1A859F477934F9A5288333B46B0044A0CF7719699907E6
E389326667682ED9D8E2A6C1025C20CD83D2EFFBFF1039957754ACAEA9E03D7C
8531DC28363BD3F39C8CA913D3916C0574338A281A1A43CF3A1E03837159F3E3
4A401CA8D7A3A6B89185F8A72DD81A19814723F909009F8AA7312304B13CCC6E
D04922512F4F7657BB90E3EF75B571FE75970447EF241E2B098D7A3C6FD9D984
07757049AB10D257876923B82CB6ACE9EB5B276A2C4062402E0EB67F810C0C2A
64DD1D26D0005072BFCF3E0C60797DDEF7128072202705498BDA5B556B6F4D35
8387C361AFD6A3AE40FCB5E31AFC764F5AC91A58B0BF5335B42926777748AC04
5F80CC584A4F45F3BBCE136EC20B7FC58C69BC005C49CFA4FC2F9BBA503176DD
CC75AB46D6038F43662DABF5B09627F3D6220787FA2E29E5B13169DE6BFF8CDD
083D5AA9A54A36987589520F5605EB9C2FE15689B3F19561DE7E88EA85937961
A7B6CFC4206E89222C6861FAE86D80DC39118E40BA4C3920F1AA044CA7745B93
AD8A9D07ECC1848A9F92310B0B895EEF5039650FE7425BF75D4507E770BBBCE5
87610AB22F5E54499772251152DEF48A50E414B269C2835DC97721C7280259A2
DF32A080F58E6B879E32E7114D2DD4A175CC804016E7759118614A2B2B5ABDAE
96E30BD9B4EFE76068F749E5691E3EE5E274DBCB69FBCD78D6AC2A62CF7DB60C
5B53FD3F31926211E26D2479A92E7497BE4A67C48A4CD8219C50971279F8DFC5
0A936A8C2A40B201DC08FCC2B2D915ED8025D67642FCC737068B0196F37A8673
52E76686DCFCE20FB8DCE6D5FE858EE6B97C40E62AD94C9109CB66FC5B6D514F
A9284A275F096C89EC82B437F41CC5B3F9A2AF2624A1B426E6B3B93A6CE6B269
10723AC97EE9F81C3BD0A6BE6E6E532F6C178C5C179185794EA8378E481EABCB
A91B729060D6ADF30C0D4DA44AF849EDF1ED9856E8B4C9559D0E4898EBB913CF
B51BD76A7628D5C4260D52671AFB6828B4A82E936C956A12EB64081F3F8D8C62
1F4EE8C4C85BE6BB410BF862EB7DE616DCD398549F5F47EA1B4F8BFBC237C11F
FCDCF9516F2D2C72B51AE895C7647D31A64994682F0F49EDCDCB53BED8526F09
D226FC796FE4F7F88E4BEDB1EF3CAC1C8F5EDB5D06934EA11AE4BECD0720D4AE
CDEA5BBB513D7804D97042EF980908E576258C4E8056CDDD14967E4136B794DB
9DE5C536E572CCFD183CC29C0CCA59654189EA52E5B02AF32C2C61BFB5FE12BC
A5F242E2438D12989D2188433AFA333A458269554F2B2C3B63CD229968483B60
37EAB78C3F182C543E42E78038C61BFC932B982438622781F284F08E48960CA4
DAD1DB9D0AFB31590CE0365DCF0D61AED4561921EADDA7978C0CBF4F93431AAC
91D03BEFF79444E0DCA47230469AFC4EF75EE3C10F84BD2831AE0875EA238AD5
FE800CE1A471B04FD270EB7FD0C6BBA18004DB7168B94103E9CB5783CCEB4817
21D20D0DCA61A35FCB9648059F5C54F6E54D76DA5E230E3D4B7712B803BC1D44
D84F30735915EFE766814C0D7F1783AD3FFD4B6FFB0CECD6EAC1F0EA61D94F42
72882F4487BB798BF5CE48DA60EAE495FD812177CC65057E8F885335D0D7CC10
2F9B157A95B182E958535173CD4C0AB4EB67C55D8FC79BC19AE4F35718498338
FECCF5237C60FF2B874FD72797A3AFDFDCF43BC3EA3423FC495DF081C634670F
9EAC656A22362C4B124FD0DD2ED66043116B5DA6098C0606232935396CCEA13A
77E085DCFA01DC95DDF911140F910555A65B1516D46B4D8BE629A861F7F6DA96
55CE4894B33945E757B47A773EE0B268E6F4E753A7546240E4F94764B9EF3F2D
21E73B0A573CEE0C9E8581735DC25A0B81542559F09D67B3163616EDDF86FB55
5DB6BD9664766589C31FD205ABD6EDEE6920E9FD1B5E5255F8E417255ECA78FE
D81F6145CA1977E7C7E49FFD116FEE4B98794C10D41865E5278D774389BF5477
AFCAC2021489411D4467ACBA049DD21FBD8AA4706F6F9DA84C8090B31B7C6BA8
5CA75EE1FA3053A8B1B7497CA5950CF1E72EDB5056FD9CE1ACB5EC606155FF44
0E48F7936E8E3B5327A3D0F488486915708A6A8866B8017FBF3CAB19
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
%%EndFont
(F0) cvn
1.000 
 (Verdana) cvn /TrueType 
F 
(MSTT31c7d4) cvn
mF 
/AG /|______MSTT31c7d4 T /MSTT31c7d4 x1`65
/$1 bmt^65
/AG 80 80 w1`65
T g`65
0 0 0 1 (Black) 1 _process d`65
6373 2389 (v1.1) 0 -0.13887 74 0 3 A1`65
O1`65
$1 tsi^65
showpage
%%PageTrailer
%%PageProcessColors: Black
%%PageCustomColors: 
%ADBPageMultiInkColors: 
%%Page: 2 2
%%PageProcessColors: (atend)
%%PageCustomColors: (atend)
%%BeginPageSetup 
%%EndPageSetup 
0.05 -0.05 scale
7920 -6120 translate
7920 0 translate
bse^65
2.4 2.4 1 1 ps$65
600 n`65
/$1 bmt^65
o`65
N1`65
N1`65
F M1`65
/AB 100 100 w1`65
T g`65
0 0 0 1 (Black) 1 _process d`65
-1822 1142 (/var/log) 0 0 200 0 7 A1`65
-1822 1192 (/var/log/messages) 0 0 425 0 16 A1`65
-1822 1242 (/etc/crontab) 0 0 300 0 11 A1`65
-1822 1292 (/etc/syslog.conf) 0 0 400 0 15 A1`65
-1822 1342 (/etc/logrotate.conf) 0 0 475 0 18 A1`65
-1822 1392 (/var/log/wtmp) 0 0 325 0 12 A1`65
-1822 1442 (/var/log/lastlog) 0 0 400 0 15 A1`65
-1822 1492 (/etc/ftpusers) 0 0 325 0 12 A1`65
-1822 1542 (/etc/passwd) 0 0 275 0 10 A1`65
-1822 1592 (/etc/shadow) 0 0 275 0 10 A1`65
-1822 1642 (/etc/pam.d) 0 0 250 0 9 A1`65
-1822 1692 (/etc/hosts.allow) 0 0 400 0 15 A1`65
-1822 1742 (/etc/hosts.deny) 0 0 375 0 14 A1`65
-1822 1792 (/etc/lilo.conf) 0 0 350 0 13 A1`65
-1822 1842 (/etc/securetty) 0 0 350 0 13 A1`65
-1822 1892 (/etc/shutdown.allow) 0 0 475 0 18 A1`65
-1822 1942 (/etc/security) 0 0 325 0 12 A1`65
-1822 1992 (/etc/rc.d/init.d) 0 0 400 0 15 A1`65
-1822 2042 (/etc/init.d) 0 0 275 0 10 A1`65
-1822 2092 (/etc/sysconfig) 0 0 350 0 13 A1`65
-1822 2142 (/etc/inetd.conf) 0 0 375 0 14 A1`65
-1822 2192 (/etc/cron.allow) 0 0 375 0 14 A1`65
-1822 2242 (/etc/cron.deny) 0 0 350 0 13 A1`65
-1822 2292 (/etc/ssh) 0 0 200 0 7 A1`65
-1822 2342 (/etc/sysctl.conf) 0 0 400 0 15 A1`65
O1`65
N1`65
F M1`65
/AA 100 100 w1`65
-1128 1142 (Directory containing all log files) 1.562454 0 581 4 33 A1`65
-1128 1192 (System messages) -2.083282 0 339 1 14 A1`65
-1128 1242 (System-wide crontab file) 1.249969 0 457 2 23 A1`65
-1128 1292 (Syslog daemon configuration file) 0.972183 0 607 3 31 A1`65
-1128 1342 (Controls rotating of system log files) 0.833313 0 655 5 36 A1`65
-1128 1392 (Who is logged in now) 0.416656 0 400 4 19 A1`65
-731 1392 (. Use ) 0.416656 0 110 2 5 A1`65
/AB 100 100 w1`65
-621 1392 (who) 0 0 75 0 2 A1`65
/AC 100 100 w1`65
-546 1392 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
-534 1392 (to view) 0.833313 0 130 1 6 A1`65
-1128 1442 (Who has logged in before. Use ) 0.347198 0 590 6 29 A1`65
/AB 100 100 w1`65
-538 1442 (last) 0 0 100 0 3 A1`65
/AC 100 100 w1`65
-438 1442 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
-426 1442 (to view) 0.416656 0 130 1 6 A1`65
-1128 1492 (List of users that ) 0 0 319 4 18 A1`65
/AE 100 100 w1`65
-809 1492 (cannot) 0 0 126 0 5 A1`65
/AA 100 100 w1`65
-683 1492 ( FTP) -0.416656 0 90 1 3 A1`65
-1128 1542 (List of the system\222) -0.499985 0 333 3 18 A1`65
-796 1542 (s user accounts) -0.499985 0 292 2 14 A1`65
-1128 1592 (Contains encrypted account passwords) -2.083282 0 723 3 35 A1`65
-1128 1642 (P) 1.666626 0 28 0 0 A1`65
-1103 1642 (AM configuration files) 1.666626 0 403 2 21 A1`65
-1128 1692 (Access control file) 0.624985 0 338 2 18 A1`65
-1128 1742 (Access control file) 0.624985 0 338 2 18 A1`65
-1128 1792 (Boot loader configuration file) 1.111069 0 534 3 29 A1`65
-1128 1842 (TTY interfaces that allow root logins) 0.583313 0 667 5 36 A1`65
-1128 1892 (Users permitted to ctrl-alt-del) 1.38884 0 540 3 30 A1`65
-1128 1942 (System access security policy files) 0.624985 0 642 4 34 A1`65
-1128 1992 (Program start-up files on Red Hat systems) 0.208328 0 789 6 40 A1`65
-1128 2042 (Program start-up files on Debian systems) 0.166656 0 767 5 39 A1`65
-1128 2092 (System and network config files on Red Hat) 0.238083 0 813 7 41 A1`65
-1128 2142 (Internet SuperServer configuration file) 1.944382 0 710 3 38 A1`65
-1128 2192 (List of users permitted to use ) 0.069427 0 550 6 30 A1`65
/AB 100 100 w1`65
-578 2192 (cron) 0 0 100 0 3 A1`65
/AA 100 100 w1`65
-1128 2242 (List of users denied access to ) -0.486084 0 560 6 30 A1`65
/AB 100 100 w1`65
-568 2242 (cron) 0 0 100 0 3 A1`65
/AA 100 100 w1`65
-1128 2292 (Secure Shell configuration files) 1.111069 0 578 3 31 A1`65
-1128 2342 (Contains kernel tunable options on recent Red Hat) -0.357117 0 935 7 48 A1`65
O1`65
N1`65
F M1`65
/AA 100 100 w1`65
-1243 1142 (751) 0 -0.624985 69 0 2 A1`65
-1243 1192 (644) 0 -0.624985 69 0 2 A1`65
-1243 1242 (600) 0 -0.624985 69 0 2 A1`65
-1243 1292 (640) 0 -0.624985 69 0 2 A1`65
-1243 1342 (640) 0 -0.624985 69 0 2 A1`65
-1243 1392 (660) 0 -0.624985 69 0 2 A1`65
-1243 1442 (640) 0 -0.624985 69 0 2 A1`65
-1243 1492 (600) 0 -0.624985 69 0 2 A1`65
-1243 1542 (644) 0 -0.624985 69 0 2 A1`65
-1243 1592 (600) 0 -0.624985 69 0 2 A1`65
-1243 1642 (750) 0 -0.624985 69 0 2 A1`65
-1243 1692 (600) 0 -0.624985 69 0 2 A1`65
-1243 1742 (600) 0 -0.624985 69 0 2 A1`65
-1243 1792 (600) 0 -0.624985 69 0 2 A1`65
-1243 1842 (600) 0 -0.624985 69 0 2 A1`65
-1243 1892 (400) 0 -0.624985 69 0 2 A1`65
-1243 1942 (700) 0 -0.624985 69 0 2 A1`65
-1243 1992 (750) 0 -0.624985 69 0 2 A1`65
-1243 2042 (750) 0 -0.624985 69 0 2 A1`65
-1243 2092 (751) 0 -0.624985 69 0 2 A1`65
-1243 2142 (600) 0 -0.624985 69 0 2 A1`65
-1243 2192 (400) 0 -0.624985 69 0 2 A1`65
-1243 2242 (400) 0 -0.624985 69 0 2 A1`65
-1243 2292 (750) 0 -0.624985 69 0 2 A1`65
-1243 2342 (400) 0 -0.624985 69 0 2 A1`65
O1`65
N1`65
F M1`65
$1 tsi^65
%%IncludeResource: font Times-Roman
/AH /|______Times-Roman T /Times-Roman x1`65
/$1 bmt^65
/AH 120 120 w1`65
T g`65
0 0 0 1 (Black) 1 _process d`65
-1753 1087 (File/Directory) 0 -0.288452 277 0 13 A1`65
O1`65
N1`65
F M1`65
/AH 120 120 w1`65
-1279 1094 (Perms) 0 -0.312485 123 0 4 A1`65
O1`65
N1`65
F M1`65
/AH 120 120 w1`65
-940 1087 (Description) 0 -0.249985 230 0 10 A1`65
O1`65
N1`65
F M1`65
/AA 100 100 w1`65
-4853 896 (Frequently used to monitor and control access to services listed in) 0.291656 0 1225 10 66 A1`65
/AB 100 100 w1`65
-4853 946 (/etc/inetd.conf) 0 0 375 0 14 A1`65
/AA 100 100 w1`65
-4478 946 (.  The ) 0.416656 0 120 3 6 A1`65
/AB 100 100 w1`65
-4358 946 (in.ftpd) 0 0 175 0 6 A1`65
/AC 100 100 w1`65
-4183 946 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
-4171 946 (service might be wrapped using:) 0.416656 0 600 4 30 A1`65
/AD 80 80 w1`65
-4853 1039 ( ) 0 0 20 1 0 A1`65
/AB 80 80 w1`65
-4833 1039 (ftp stream tcp nowait root /usr/sbin/tcpd  in.ftpd -l -L -i -o) 0 0 1240 11 61 A1`65
/AA 100 100 w1`65
-4853 1136 (Before the ) 0.208328 0 206 2 10 A1`65
/AB 100 100 w1`65
-4647 1136 (in.telnetd) 0 0 250 0 9 A1`65
/AA 100 100 w1`65
-4397 1136 ( daemon is spawned, ) 0.208328 0 408 4 19 A1`65
/AB 100 100 w1`65
-3989 1136 (tcpd) 0 0 100 0 3 A1`65
/AC 100 100 w1`65
-3889 1136 ( ) 0 0 12 1 0 A1`65
/AA 100 100 w1`65
-3878 1136 (first determines if the) 0.277756 0 390 3 22 A1`65
-4853 1186 (source is a permitted host.  Connection attempts are sent to ) 0.189377 0 1122 11 60 A1`65
/AB 100 100 w1`65
-3732 1186 (syslogd) 0 0 175 0 6 A1`65
/AA 100 100 w1`65
-3557 1186 (. All) 0.416656 0 70 1 4 A1`65
-4853 1236 (services should be disabled by default in ) 0.059509 0 763 7 41 A1`65
/AB 100 100 w1`65
-4090 1236 (/etc/hosts.deny) 0 0 375 0 14 A1`65
/AA 100 100 w1`65
-3715 1236 ( using the) 0.208328 0 182 2 9 A1`65
-4853 1286 (following:) 0 0.231461 176 0 9 A1`65
/AD 100 100 w1`65
-4853 1361 (  ) 0 0 50 2 1 A1`65
/AB 100 100 w1`65
-4803 1361 (ALL: ALL) 0 0 200 1 7 A1`65
/AA 100 100 w1`65
-4853 1436 (T) 0.265137 0 26 0 0 A1`65
-4832 1436 (o send an email to the admin and report failed connection attempt:) 0.265137 0 1233 11 65 A1`65
/AB 100 100 w1`65
-4853 1511 ( ALL: ALL: /bin/mail \\) 0 0 550 4 21 A1`65
-4853 1561 (   -s \223%s connection attempt from %c\224 admin@mydom.com) 0 0 1325 9 52 A1`65
/AA 100 100 w1`65
-4853 1636 (Enable specific services in ) 0.624985 0 504 4 27 A1`65
/AB 100 100 w1`65
-4349 1636 (/etc/hosts.allow) 0 0 400 0 15 A1`65
/AA 100 100 w1`65
-3949 1636 ( using the service name) 0.729141 0 444 4 22 A1`65
-4853 1686 (followed by the host:) 0.13887 0 382 3 20 A1`65
/AB 100 100 w1`65
-4853 1761 ( sshd: magneto.mydom.com, juggernaut.mydom.com) 0 0 1150 3 45 A1`65
-4853 1811 ( in.ftpd: 192.168.1.) 0 0 500 2 19 A1`65
/AA 100 100 w1`65
-4853 1886 (T) 0.277756 0 26 0 0 A1`65
-4829 1886 (railing period indicates entire network should be permitted. Use ) 0.277756 0 1180 9 64 A1`65
/AB 100 100 w1`65
-3649 1886 (tcpdchk) 0 0 175 0 6 A1`65
/AA 100 100 w1`65
-3474 1886 ( to) 0.416656 0 47 1 2 A1`65
-4853 1936 (verify your access files.  A syslog entry will be created for failed attempts.) 0.8974 0 1363 13 77 A1`65
-4853 1986 (Access control is performed in the following order:) 0.476166 0 928 7 50 A1`65
O1`65
N1`65
F M1`65
/AA 100 100 w1`65
-3378 -2230 (The ) 0.416656 0 85 1 3 A1`65
/AB 100 100 w1`65
-3294 -2230 (/bin/rpm) 0 0 200 0 7 A1`65
/AA 100 100 w1`65
-3094 -2230 ( program on Red Hat and derivitives and the ) 0.416656 0 835 9 43 A1`65
/AB 100 100 w1`65
-2258 -2230 (/usr/bin/dpkg) 0 0 325 0 12 A1`65
/AA 100 100 w1`65
-1933 -2230 ( on) 0.833313 0 59 1 2 A1`65
-3378 -2180 (Debian and derivitives are used to control the management of packages.) 0.374985 0 1348 10 69 A1`65
/AA 120 120 w1`65
-3378 -2098 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
-3347 -2098 (Remove a package) 0.624985 0 361 2 15 A1`65
/AB 100 100 w1`65
-3378 -2045 ( # rpm -e <package-name>) 0 0 600 4 23 A1`65
-3378 -1995 ( # dpkg -r <package-name>) 0 0 625 4 24 A1`65
/AA 120 120 w1`65
-3378 -1913 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
-3347 -1913 (List contents of entire package) 0 0 568 4 30 A1`65
/AB 100 100 w1`65
-3378 -1860 ( # rpm -qvl <package-name.rpm>) 0 0 750 4 29 A1`65
-3378 -1810 ( # dpkg -c <package-name.deb>) 0 0 725 4 28 A1`65
/AA 120 120 w1`65
-3378 -1728 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
-3347 -1728 (List all installed packages with info about each) 0.238083 0 860 7 47 A1`65
/AB 100 100 w1`65
-3378 -1675 ( # rpm -qvia) 0 0 300 3 11 A1`65
-3378 -1625 ( # dpkg -l) 0 0 250 3 9 A1`65
/AA 120 120 w1`65
-3378 -1543 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
-3347 -1543 (List contents of a package) -0.208328 0 486 4 25 A1`65
/AB 100 100 w1`65
-3378 -1490 ( # rpm -qvpl <package-name.rpm>) 0 0 775 4 30 A1`65
-3378 -1440 ( # dpkg -c <package-name.deb>) 0 0 725 4 28 A1`65
/AA 120 120 w1`65
-3378 -1358 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
-3347 -1358 (Print information about a package) 0.520813 0 628 4 32 A1`65
/AB 100 100 w1`65
-3378 -1305 ( # rpm -qpi <package-name.rpm>) 0 0 750 4 29 A1`65
-3378 -1255 ( # dpkg -I <package-name.deb>) 0 0 725 4 28 A1`65
/AA 120 120 w1`65
-3378 -1173 (\225 ) 0.833313 0 32 1 1 A1`65
/AA 100 100 w1`65
-3346 -1173 (V) 0.833313 0 28 0 0 A1`65
-3321 -1173 (erify package characteristics \(basic integrity check\)) 0.833313 0 945 5 52 A1`65
/AB 100 100 w1`65
-3378 -1120 ( # rpm -Va) 0 0 250 3 9 A1`65
-3378 -1070 ( # debsums -a) 0 0 325 3 12 A1`65
/AA 120 120 w1`65
-3378 -988 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
-3347 -988 (Determine to which package a file belongs) 0.347198 0 787 6 40 A1`65
/AB 100 100 w1`65
-3378 -935 ( # rpm -qf </path/to/file>) 0 0 650 4 25 A1`65
-3378 -885 ( # dpkg -S </path/to/file>) 0 0 650 4 25 A1`65
/AA 120 120 w1`65
-3378 -803 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
-3347 -803 (Install new package) -0.208328 0 366 2 18 A1`65
/AB 100 100 w1`65
-3378 -750 ( # rpm -Uvh <package-name.rpm>) 0 0 750 4 29 A1`65
-3378 -700 ( # dpkg -i <package-name.deb>) 0 0 725 4 28 A1`65
O1`65
N1`65
F M1`65
/AA 100 100 w1`65
-3372 -517 (The ) 0 0 84 1 3 A1`65
/AB 100 100 w1`65
-3288 -517 (syslogd) 0 0 175 0 6 A1`65
/AC 100 100 w1`65
-3113 -517 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
-3101 -517 (is responsible for capturing logging information generated by) 0.357117 0 1122 7 60 A1`65
-3372 -467 (system processes.  The ) 0.104156 0 454 4 22 A1`65
/AB 100 100 w1`65
-2918 -467 (klogd) 0 0 125 0 4 A1`65
/AC 100 100 w1`65
-2793 -467 ( ) 0 0 12 1 0 A1`65
/AA 100 100 w1`65
-2782 -467 (is responsible for capturing logging information) 0.166656 0 865 5 47 A1`65
-3372 -417 (generated by the kernel. System logs provide the primary indication of a potential) 0.694412 0 1507 12 81 A1`65
-3372 -367 (problem.) 0 0.119034 164 0 7 A1`65
/AA 120 120 w1`65
-3372 -260 (\225) 0 0 17 0 0 A1`65
/AA 100 100 w1`65
-3355 -260 ( Fine-tune the default ) 0.520813 0 410 4 22 A1`65
/AB 100 100 w1`65
-2945 -260 (/etc/syslog.conf) 0 0 400 0 15 A1`65
/AA 100 100 w1`65
-2545 -260 ( to send log information to specific) 0.624985 0 637 6 35 A1`65
-3372 -207 (files for easier analysis.) 0.694412 0 437 3 25 A1`65
/AB 100 100 w1`65
-3372 -124 ( # Monitor authentication attempts) 0 0 850 4 33 A1`65
-3372 -74 ( auth.*;authpriv.*) 0 0 450 1 17 A1`65
-2472 -74 (/var/log/authlog) 0 0 400 0 15 A1`65
-3372 10 ( # Monitor all kernel messages) 0 0 750 5 29 A1`65
-3372 60 ( kern.*) 0 0 175 1 6 A1`65
-2472 60 (/var/log/kernlog) 0 0 400 0 15 A1`65
-3372 143 ( # Monitor all warning and error messages) 0 0 1025 7 40 A1`65
-3372 193 ( *.warn;*.err) 0 0 325 1 12 A1`65
-2472 193 (/var/log/syslog) 0 0 375 0 14 A1`65
-3372 293 ( # Send a copy to remote loghost.  Configure syslogd init) 0 0 1425 11 56 A1`65
-3372 343 ( # script to run with ) 0 0 550 6 21 A1`65
$1 tsi^65
%%IncludeResource: font Courier-BoldOblique
/AI /|______Courier-BoldOblique T /Courier-BoldOblique x1`65
/$1 bmt^65
/AI 100 100 w1`65
T g`65
0 0 0 1 (Black) 1 _process d`65
-2822 343 (-r -s domain.com) 0 0 400 2 15 A1`65
/AB 100 100 w1`65
-2422 343 ( options on log) 0 0 375 3 14 A1`65
-3372 393 ( # server. Ensure a high level of security on the log) 0 0 1325 11 52 A1`65
-3372 443 ( # server!) 0 0 250 2 9 A1`65
-3372 493 ( *.info) 0 0 175 1 6 A1`65
-2472 493 (@loghost) 0 0 200 0 7 A1`65
-3372 543 ( auth.*;authpriv.*) 0 0 450 1 17 A1`65
-2472 543 (@loghost) 0 0 200 0 7 A1`65
/AA 120 120 w1`65
-3372 633 (\225) 0 0 17 0 0 A1`65
/AA 100 100 w1`65
-3355 633 ( Restrict access to log directory and syslog files for normal users using:) 0.312485 0 1317 12 73 A1`65
/AB 100 100 w1`65
-3372 711 ( # chmod 751 /var/log /etc/logrotate.d) 0 0 950 5 37 A1`65
-3372 761 ( # chmod 640 /etc/syslog.conf /etc/logrotate.conf) 0 0 1225 5 48 A1`65
-3372 811 ( # chmod 640 /var/log/*log) 0 0 650 4 25 A1`65
O1`65
N1`65
F M1`65
/AA 100 100 w1`65
-6444 -1025 (The ) 0 0 84 1 3 A1`65
/AB 100 100 w1`65
-6359 -1025 (md5sum) 0 0 150 0 5 A1`65
/AC 100 100 w1`65
-6209 -1025 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
-6197 -1025 (command is used to compute a 128-bit fingerprint that is strongly) 0.333313 0 1203 10 64 A1`65
-6444 -975 (dependant upon the contents of the file to which it is applied. It can be used to) 0 0 1445 16 80 A1`65
-6444 -925 (compare against a previously-generated sum to determine whether the file has) 0.249985 0 1457 10 75 A1`65
-6444 -875 (changed. It is commonly used to ensure the integrity of updated packages) -0.075745 0 1367 11 71 A1`65
-6444 -825 (distributed by a vendor:) 0.833313 0 437 3 23 A1`65
/AB 100 100 w1`65
-6444 -750 (  # md5sum package-name) 0 0 575 4 22 A1`65
-6444 -700 (  995d4f40cda13eacd2beaf35c1c4d5c2  package-name) 0 0 1200 4 47 A1`65
/AA 100 100 w1`65
-6444 -625 (The string of numbers can then be compared against the MD5 checksum) -0.227249 0 1350 11 66 A1`65
-6444 -575 (published by the packager) 0.192291 0 488 3 24 A1`65
-5958 -575 (. While it does not take into account the possibility that) 0.192291 0 1009 10 57 A1`65
-6444 -525 (the same person that may have modified a package also may have modified the) 0.480743 0 1489 13 74 A1`65
-6444 -475 (published checksum, it is especially useful for establishing a great deal of) 0.265137 0 1359 11 75 A1`65
-6444 -425 (assurance in the integrity of a package before installing it.) 0.462936 0 1069 9 60 A1`65
O1`65
N1`65
F M1`65
/AA 120 120 w1`65
-4853 -2235 (\225 ) 0.833313 0 32 1 1 A1`65
/AA 100 100 w1`65
-4821 -2235 (Limit Apache to listen only on local interface by configuring) 0.833313 0 1093 9 60 A1`65
/AB 100 100 w1`65
-4853 -2182 (/etc/httpd/conf/httpd.conf) 0 0 650 0 25 A1`65
/AA 100 100 w1`65
-4203 -2182 ( to read:) 0.208328 0 154 2 8 A1`65
/AD 100 100 w1`65
-4853 -2099 ( ) 0 0 25 1 0 A1`65
/AB 100 100 w1`65
-4828 -2099 (Listen 127.0.0.1:80) 0 0 475 1 18 A1`65
/AA 120 120 w1`65
-4853 -2009 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
-4822 -2009 (Use the following to disable access to the entire filesystem by default, unless) 0.243042 0 1421 12 78 A1`65
-4853 -1955 (explicitly permitted. This will disable printing of indexes if no ) 1.624954 0 1128 10 65 A1`65
/AC 100 100 w1`65
-3725 -1955 (index.html) 0 0 209 0 9 A1`65
/AA 100 100 w1`65
-4853 -1905 (exists, server-side includes, and following symbolic links.  Disabling symlinks) 1.064774 0 1423 9 78 A1`65
-4853 -1855 (may impact performance for large sites.) 0.999969 0 740 5 38 A1`65
/AB 100 100 w1`65
-4853 -1755 ( <Directory />) 0 0 350 2 13 A1`65
-4853 -1705 (  Options None) 0 0 350 3 13 A1`65
-4853 -1655 (  AllowOverride None) 0 0 500 3 19 A1`65
-4853 -1605 (  Order deny,allow) 0 0 450 3 17 A1`65
-4853 -1555 (  Deny from all) 0 0 375 4 14 A1`65
-4853 -1505 ( </Directory>) 0 0 325 1 12 A1`65
/AA 120 120 w1`65
-4853 -1399 (\225 ) 0.833313 0 32 1 1 A1`65
/AA 100 100 w1`65
-4821 -1399 (Use the following to control access to the server from limited) 0.791641 0 1123 10 61 A1`65
-4853 -1345 (addresses in ) -0.624985 0 247 2 12 A1`65
/AB 100 100 w1`65
-4606 -1345 (/etc/httpd/conf/access.conf) 0 0 675 0 26 A1`65
/AA 100 100 w1`65
-3931 -1345 ( to read:) -0.624985 0 152 2 8 A1`65
/AB 100 100 w1`65
-4853 -1245 ( <Directory /home/httpd/html>) 0 0 725 2 28 A1`65
-4853 -1195 (  # Deny all accesses by default) 0 0 800 7 31 A1`65
-4853 -1145 (  Order deny,allow) 0 0 450 3 17 A1`65
-4853 -1095 (  # Allow access to local machine) 0 0 825 7 32 A1`65
-4853 -1045 (  Allow from 127.0.0.1) 0 0 550 4 21 A1`65
-4853 -995 (  # Allow access to entire local network) 0 0 1000 8 39 A1`65
-4853 -945 (  Allow from 192.168.1.) 0 0 575 4 22 A1`65
-4853 -895 (  # Allow access to single remote host) 0 0 950 8 37 A1`65
-4853 -845 (  Allow from 192.168.5.3) 0 0 600 4 23 A1`65
-4853 -795 (  # Deny from everyone else) 0 0 675 6 26 A1`65
-4853 -745 (  Deny from all) 0 0 375 4 14 A1`65
-4853 -695 ( </Directory>) 0 0 325 1 12 A1`65
/AA 120 120 w1`65
-4853 -589 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
-4822 -589 (Use the following to require password authentication when attempting to) 0.092575 0 1334 9 70 A1`65
-4853 -535 (access a specific directory in ) 0.416656 0 545 5 30 A1`65
/AB 100 100 w1`65
-4308 -535 (/etc/httpd/conf/access.conf) 0 0 675 0 26 A1`65
/AA 100 100 w1`65
-3633 -535 (:) 0 0 12 0 0 A1`65
/AB 100 100 w1`65
-4853 -441 ( <Directory /home/httpd/html/protected>) 0 0 975 2 38 A1`65
-4853 -399 (  Order Deny,Allow) 0 0 450 3 17 A1`65
-4853 -357 (  Deny from All) 0 0 375 4 14 A1`65
-4853 -316 (  Allow from 192.168.1.11) 0 0 625 4 24 A1`65
-4853 -274 (  AuthName \223Private Information\224) 0 0 800 4 31 A1`65
-4853 -232 (  AuthType Basic) 0 0 400 3 15 A1`65
-4853 -191 (  AuthUserFile /etc/httpd/conf/private-users) 0 0 1100 3 43 A1`65
-4853 -149 (  AuthGroupFile /etc/httpd/conf/private-groups) 0 0 1150 3 45 A1`65
-4853 -107 (  require group <group-name>) 0 0 700 4 27 A1`65
-4853 -66 ( </Directory>) 0 0 325 1 12 A1`65
/AA 100 100 w1`65
-4853 15 (Create the ) 0.833313 0 209 2 10 A1`65
/AB 100 100 w1`65
-4644 15 (private-groups) 0 0 350 0 13 A1`65
/AA 100 100 w1`65
-4294 15 ( file using the following format:) 0.999969 0 568 5 32 A1`65
/AD 100 100 w1`65
-4853 98 ( ) 0 0 25 1 0 A1`65
/AB 100 100 w1`65
-4828 98 (group-name: user1 user2 user...) 0 0 775 3 30 A1`65
/AA 100 100 w1`65
-4853 181 (Create password entries for each user in the above list:) 0.04628 0 1023 9 55 A1`65
/AB 100 100 w1`65
-4853 265 ( # htpasswd -cm /etc/httpd/conf/private-users user1) 0 0 1275 5 50 A1`65
-4853 315 ( New password: <password>) 0 0 625 3 24 A1`65
-4853 365 ( Re-type new password: <password>) 0 0 825 4 32 A1`65
-4853 415 ( Adding password for user user1) 0 0 775 5 30 A1`65
/AA 100 100 w1`65
-4853 498 (Be sure to restart apache and test it.  This will result in the enabling of double) 0.208328 0 1432 16 81 A1`65
-4853 548 (reverse lookups to verify the identity of the remote host. Remove the ) 0.972183 0 1288 12 69 A1`65
/AB 100 100 w1`65
-3565 548 (-c) 0 0 50 0 1 A1`65
/AA 100 100 w1`65
-4853 598 (option to ) -0.208328 0 172 2 9 A1`65
/AB 100 100 w1`65
-4681 598 (htpasswd) 0 0 200 0 7 A1`65
/AC 100 100 w1`65
-4481 598 ( ) -0.416656 0 11 1 0 A1`65
/AA 100 100 w1`65
-4470 598 (after the first user has been added. Be sure the password) -0.374985 0 1062 10 56 A1`65
-4853 648 (file you create is not located within the ) 0.833313 0 725 8 41 A1`65
/AB 100 100 w1`65
-4128 648 (DocumentRoot) 0 0 300 0 11 A1`65
/AA 100 100 w1`65
-3828 648 ( to prevent it from) 0.937469 0 330 4 18 A1`65
-4853 698 (being downloaded.) -2.499939 0 348 1 16 A1`65
O1`65
N1`65
F M1`65
/AA 120 120 w1`65
-1816 -2232 (\225) 0 0 17 0 0 A1`65
/AA 100 100 w1`65
-1798 -2232 ( Zone transfers should only be permitted by master name servers to update the zone) 0.089279 0 1569 14 81 A1`65
-1816 -2179 (\(domain\) information in their slave servers.  Failure to do so may result in IP numbers and) 0.755188 0 1669 16 90 A1`65
-1816 -2129 (hostnames being revealed to unauthorized users. Restrict queries to only public domains.) 0.075745 0 1655 11 87 A1`65
-1816 -2079 (Suitable for name servers with both public and private zones.) 0.648117 0 1135 9 60 A1`65
/AB 100 100 w1`65
-1816 -2005 ( // Allow transfer only to our slave name server. Allow queries) 0 0 1575 11 62 A1`65
-1816 -1963 ( // only by hosts in the 192.168.1.0 network.) 0 0 1125 8 44 A1`65
-1816 -1922 ( zone \223mydomain.com\224 {) 0 0 550 3 21 A1`65
-1816 -1880 (     type master;) 0 0 425 6 16 A1`65
-1816 -1838 (     file \223master/db.mydomain.com\224;) 0 0 875 6 34 A1`65
-1816 -1797 (     allow-transfer { 192.168.1.6; };) 0 0 925 8 36 A1`65
-1816 -1755 (     allow-query { 192.168.1.0/24; };) 0 0 925 8 36 A1`65
-1816 -1713 ( };) 0 0 75 1 2 A1`65
/AA 120 120 w1`65
-1816 -1626 (\225) 0 0 17 0 0 A1`65
/AA 100 100 w1`65
-1798 -1626 ( Deny and log queries for our version number except from the local host. The ability to) 0.651016 0 1598 16 86 A1`65
-1816 -1573 (determine the bind version enables an attacker to find the corresponding exploit for that) 0.416656 0 1622 13 88 A1`65
-1816 -1523 (version.) 0 0.297607 148 0 7 A1`65
/AB 100 100 w1`65
-1816 -1445 ( // Disable the ability to determine the version of BIND running) 0 0 1600 11 63 A1`65
-1816 -1403 ( zone \223bind\224 chaos {) 0 0 500 4 19 A1`65
-1816 -1362 (     type master;) 0 0 425 6 16 A1`65
-1816 -1320 (     file \223master/bind\224;) 0 0 600 6 23 A1`65
-1816 -1278 (     allow-query { localhost; };) 0 0 800 8 31 A1`65
-1816 -1237 ( };) 0 0 75 1 2 A1`65
/AA 100 100 w1`65
-1816 -1156 (The ) 0 0 84 1 3 A1`65
/AB 100 100 w1`65
-1732 -1156 (./master/bind) 0 0 325 0 12 A1`65
/AA 100 100 w1`65
-1407 -1156 ( file should then contain:) 0.208328 0 453 4 25 A1`65
/AB 100 100 w1`65
-1816 -1062 ( $TTL 1d) 0 0 200 2 7 A1`65
-1816 -1020 ( @     CHAOS   SOA     localhost. root.localhost. \() 0 0 1275 16 50 A1`65
-1816 -978 (              1          ; serial) 0 0 825 25 32 A1`65
-1816 -937 (             3H          ; refresh) 0 0 850 24 33 A1`65
-1816 -895 (            15M          ; retry) 0 0 800 23 31 A1`65
-1816 -853 (             1W          ; expire) 0 0 825 24 32 A1`65
-1816 -812 (             1D \)        ; minimum) 0 0 850 23 33 A1`65
-1816 -770 (             NS          localhost.) 0 0 875 23 34 A1`65
/AA 120 120 w1`65
-1816 -683 (\225) 0 0 17 0 0 A1`65
/AA 100 100 w1`65
-1798 -683 ( Control which interfaces ) 0.312485 0 470 4 25 A1`65
/AB 100 100 w1`65
-1328 -683 (named) 0 0 125 0 4 A1`65
/AC 100 100 w1`65
-1203 -683 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
-1191 -683 (listens on.  Restricting the interfaces on which ) 0.364563 0 862 8 48 A1`65
/AC 100 100 w1`65
-328 -683 (named) 0 0 135 0 4 A1`65
/AA 100 100 w1`65
-1816 -630 (runs can limit the exposure to only the necessary networks.) 0.04628 0 1096 9 58 A1`65
/AD 100 100 w1`65
-1816 -546 ( ) 0 0 25 1 0 A1`65
/AB 100 100 w1`65
-1791 -546 (listen-on { 192.168.1.1; };) 0 0 675 3 26 A1`65
/AA 120 120 w1`65
-1816 -456 (\225) 0 0 17 0 0 A1`65
/AA 100 100 w1`65
-1798 -456 ( Use Access Control Lists to classify groups of hosts with dif) 0.104156 0 1112 11 61 A1`65
-687 -456 (fering degrees of trust.  The) 0.104156 0 515 5 28 A1`65
-1816 -403 (\223internal\224 ACL label might be used to describe internal hosts that are permitted a greater) 0.297607 0 1632 14 89 A1`65
-1816 -353 (degree of access to the information than other hosts might be.  Before it can be used it) 0.122543 0 1605 17 87 A1`65
-1816 -303 (must be defined:) 0 0 310 2 15 A1`65
/AB 100 100 w1`65
-1816 -225 ( acl \223internal\224 {) 0 0 425 3 16 A1`65
-1816 -183 (        { 192.168.1.0/24; 192.168.2.11; };) 0 0 1050 11 41 A1`65
-1816 -142 ( };) 0 0 75 1 2 A1`65
/AA 100 100 w1`65
-1816 -61 (It can then be used in \223zone\224 statements or the main \223options\224 statement:) 0.034714 0 1350 12 72 A1`65
/AB 100 100 w1`65
-1816 17 ( zone \223inside.mynet.com\224 {) 0 0 650 3 25 A1`65
-1816 58 (        type master;) 0 0 500 9 19 A1`65
-1816 100 (        file \223master/inside.mynet.com\224;) 0 0 975 9 38 A1`65
-1816 142 (        allow-query { \223internal\224; };) 0 0 900 11 35 A1`65
-1816 183 ( };) 0 0 75 1 2 A1`65
/AA 120 120 w1`65
-1816 270 (\225) 0 0 17 0 0 A1`65
/AA 100 100 w1`65
-1798 270 ( Configure BIND to run as a normal user) 0.245087 0 748 8 38 A1`65
-1052 270 (. Once BIND has been started, it has the ability) 0.245087 0 872 9 47 A1`65
-1816 324 (to relinquish its privileges, and run as a user with limited abilities instead of ) 0.803543 0 1400 14 81 A1`65
/AC 100 100 w1`65
-416 324 (root) 0 0 81 0 3 A1`65
/AA 100 100 w1`65
-335 324 (.) 0 0 12 0 0 A1`65
/AB 100 100 w1`65
-1816 402 ( # useradd -M -r -d /var/named -s /bin/false named) 0 0 1250 9 49 A1`65
-1816 443 ( # groupadd -r named) 0 0 500 4 19 A1`65
/AA 100 100 w1`65
-1816 524 (This account should be used for nothing other than running the name server) -0.178558 0 1406 12 73 A1`65
-412 524 (. Ensure the) -0.178558 0 225 2 11 A1`65
-1816 574 (zone files are readable by the ) 0.208328 0 562 6 30 A1`65
/AB 100 100 w1`65
-1254 574 (named) 0 0 125 0 4 A1`65
/AC 100 100 w1`65
-1129 574 ( ) 0 0 12 1 0 A1`65
/AA 100 100 w1`65
-1117 574 (user) 0.260406 0 81 0 3 A1`65
-1039 574 (. It is then necessary to modify the default) 0.260406 0 775 8 43 A1`65
/AB 100 100 w1`65
-1816 624 (named) 0 0 125 0 4 A1`65
/AC 100 100 w1`65
-1691 624 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
-1679 624 (init script, typically found in ) 0.749969 0 512 5 31 A1`65
/AB 100 100 w1`65
-1167 624 (/etc/rc.d/init.d/named) 0 0 550 0 21 A1`65
/AA 100 100 w1`65
-617 624 ( on Red Hat or) 0.833313 0 275 4 13 A1`65
/AB 100 100 w1`65
-1816 674 (/etc/init.d/named) 0 0 425 0 16 A1`65
/AA 100 100 w1`65
-1391 674 ( on Debian:) -0.208328 0 214 2 10 A1`65
/AB 100 100 w1`65
-1816 757 ( /usr/sbin/named -u named -g named) 0 0 850 5 33 A1`65
/AA 100 100 w1`65
-1816 840 (It is also possible to run ) 0.277756 0 450 6 26 A1`65
/AB 100 100 w1`65
-1365 840 (named) 0 0 125 0 4 A1`65
/AC 100 100 w1`65
-1240 840 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
-1228 840 (in a \223chroot jail\224 which helps to restrict the damage that) 0.374985 0 1017 10 57 A1`65
-1816 890 (can be done should ) -0.416656 0 376 4 18 A1`65
/AB 100 100 w1`65
-1440 890 (named) 0 0 125 0 4 A1`65
/AC 100 100 w1`65
-1315 890 ( ) -0.416656 0 11 1 0 A1`65
/AA 100 100 w1`65
-1304 890 (be subverted.) -0.416656 0 253 1 12 A1`65
O1`65
N1`65
F M1`65
/AA 100 100 w1`65
-3378 1015 (T) 0.833313 0 26 0 0 A1`65
-3354 1015 (ripwire is a program that monitors file integrity by maintaining a database of) 0.833313 0 1399 12 77 A1`65
-3378 1065 (cryptographic signatures for programs and configuration files installed on the) 0.324051 0 1418 9 77 A1`65
-3378 1115 (system, and reports changes in any of these files.) -0.104156 0 918 8 49 A1`65
-3378 1198 (A database of checksums and other characteristics for the files listed in the) 0.069427 0 1388 12 76 A1`65
-3378 1248 (configuration file is created.  Each subsequent run compares any dif) 0.037872 0 1259 10 67 A1`65
-2120 1248 (ferences to) 0.037872 0 207 1 10 A1`65
-3378 1298 (the reference database, and the administrator is notified.) 0.119034 0 1049 7 57 A1`65
-3378 1381 (The greatest level of assurance that can be provided occurs if T) 0.416656 0 1184 11 63 A1`65
-2196 1381 (ripwire is run) 0.416656 0 237 2 13 A1`65
-3378 1431 (immediately after Linux has been installed and security updates applied, and) 0.208328 0 1419 10 75 A1`65
-3378 1481 (before it is connected to a network.) 0.069427 0 650 6 35 A1`65
-3378 1565 (A text configuration file, called a policy file, is used to define the characteristics for) 0.952347 0 1525 14 89 A1`65
-3378 1615 (each file that are tracked.  Y) 0.608948 0 525 6 29 A1`65
-2857 1615 (our level of paranoia determines the frequency in) 0.608948 0 911 7 48 A1`65
-3378 1665 (which the integrity of the files are checked. Administration requires constant) 0.499985 0 1402 10 77 A1`65
-3378 1715 (attention to the system changes, and can be time-consuming if used for many) 0.104156 0 1440 12 74 A1`65
-3378 1765 (systems. A) 0.833313 0 205 1 9 A1`65
-3174 1765 (vailable in unsupported commercial binary for Red Hat and similar) 0.833313 0 1227 9 64 A1`65
-1949 1765 (.) 0.833313 0 12 0 0 A1`65
/AB 100 100 w1`65
-3378 1834 (  # Create policy file from text file) 0 0 925 8 36 A1`65
-3378 1876 (  /usr/TSS/bin/twadmin -m P policy.txt) 0 0 950 5 37 A1`65
-3378 1951 (  # Initialize database according to policy file) 0 0 1200 8 47 A1`65
-3378 1992 (  /usr/TSS/bin/tripwire \227init) 0 0 725 3 28 A1`65
-3378 2067 (  # Print database) 0 0 450 4 17 A1`65
-3378 2109 (  /usr/TSS/bin/twprint -m d) 0 0 675 4 26 A1`65
-3378 2184 (  # Generate daily report file) 0 0 750 6 29 A1`65
-3378 2226 (  /usr/TSS/bin/tripwire -m c -t 1 -M) 0 0 900 7 35 A1`65
-3378 2301 (  # Update database according to policy file and report file) 0 0 1500 11 59 A1`65
-3378 2342 (  /usr/TSS/bin/tripwire --update --polfile policy/tw.pol \\) 0 0 1450 6 57 A1`65
-3378 2384 (     --twrfile report/<hostname>-<date>.twr) 0 0 1075 6 42 A1`65
O1`65
N1`65
F M1`65
/AC 120 120 w1`65
-6441 2374 (\251 2000 Guardian Digital, Inc.       http://www) 0.795425 0 1038 11 45 A1`65
-5404 2374 (.guardiandigital.com) 0.795425 0 488 0 19 A1`65
O1`65
N1`65
F M1`65
/AA 100 100 w1`65
-6441 -245 (OpenSSH is a replacement for ) 0.333313 0 581 5 28 A1`65
/AB 100 100 w1`65
-5859 -245 (telnet) 0 0 150 0 5 A1`65
/AC 100 100 w1`65
-5709 -245 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
-5697 -245 (and ) 0.416656 0 82 1 3 A1`65
/AB 100 100 w1`65
-5615 -245 (ftp) 0 0 75 0 2 A1`65
/AC 100 100 w1`65
-5540 -245 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
-5528 -245 (that eliminates eavesdropping,) 0.416656 0 568 2 29 A1`65
-6441 -195 (connection hijacking, and encrypts all communication between hosts. One of the) 0.083328 0 1487 10 77 A1`65
-6441 -145 (most indepensible free security tools in existence.) 0.416656 0 923 6 50 A1`65
/AA 120 120 w1`65
-6441 -63 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
-6409 -63 (Install the OpenSSH and OpenSSL Packages:) -0.333313 0 859 5 40 A1`65
/AB 100 100 w1`65
-6441 7 (  openssh-<current-version>.rpm) 0 0 775 2 30 A1`65
-6441 44 (  openssh-server-<current-version>.rpm) 0 0 950 2 37 A1`65
-6441 82 (  openssh-clients-<current-version>.rpm) 0 0 975 2 38 A1`65
-6441 119 (  openssl-<current-version>.rpm) 0 0 775 2 30 A1`65
/AA 120 120 w1`65
-6441 197 (\225 ) 1.666626 0 33 1 1 A1`65
/AA 100 100 w1`65
-6408 197 (Generate Public/Private Key Pair:) 1.805496 0 627 3 32 A1`65
-6441 275 (OpenSSH uses public key cryptography to provide secure authorization.) 0.208328 0 1334 8 68 A1`65
-6441 325 (Generating the public key) 0.347198 0 475 3 24 A1`65
-5969 325 (, which is shared with remote systems, and the private) 0.347198 0 1006 9 53 A1`65
-6441 375 (key which is kept on the local system, is done first to configure OpenSSH.) 0.320496 0 1368 13 73 A1`65
/AB 80 80 w1`65
-6441 443 ( orion$ ssh-keygen) 0 0 360 2 17 A1`65
-6441 483 ( Generating RSA keys:  ...ooooooO....ooooooO) 0 0 880 5 43 A1`65
-6441 523 ( Key generation complete.) 0 0 500 3 24 A1`65
-6441 563 ( Enter file in which to save the key \(/home/dave/.ssh/identity\):) 0 0 1280 9 63 A1`65
-6441 603 ( Created directory '/home/dave/.ssh'.) 0 0 740 3 36 A1`65
-6441 643 ( Enter passphrase \(empty for no passphrase\): <passphrase>) 0 0 1140 7 56 A1`65
-6441 683 ( Enter same passphrase again: <passphrase>) 0 0 840 5 41 A1`65
-6441 723 ( Your identification has been saved in /home/dave/.ssh/identity.) 0 0 1280 7 63 A1`65
-6441 763 ( Your public key has been saved in /home/dave/.ssh/identity.pub.) 0 0 1280 8 63 A1`65
-6441 803 ( The key fingerprint is:) 0 0 480 4 23 A1`65
-6441 843 ( ac:42:11:c8:0d:b6:7e:b4:06:6a:a3:a7:e8:2c:b0:12 dave@orion) 0 0 1180 2 58 A1`65
/AA 120 120 w1`65
-6441 922 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
-6409 922 (Copy Public Key to Remote Host:) 0.499985 0 622 5 30 A1`65
/AB 100 100 w1`65
-6441 1000 ( host2$ mkdir -m 700 ~dave/.ssh) 0 0 775 5 30 A1`65
-6441 1050 ( host2$ cp /mnt/floppy/identity.pub ~dave/.ssh/authorized_keys) 0 0 1550 4 61 A1`65
/AA 120 120 w1`65
-6441 1132 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
-6409 1132 (Log in to Remote Host:) 0.416656 0 430 4 21 A1`65
-6441 1218 (The SSH client \() 0.555527 0 306 3 15 A1`65
/AB 100 100 w1`65
-6134 1218 (/usr/bin/ssh) 0 0 300 0 11 A1`65
/AA 100 100 w1`65
-5834 1218 (\) is a drop-in replacement for ) 0.555527 0 550 6 30 A1`65
/AB 100 100 w1`65
-5284 1218 (rlogin) 0 0 150 0 5 A1`65
/AC 100 100 w1`65
-5134 1218 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
-5122 1218 (and ) 0.416656 0 82 1 3 A1`65
/AB 100 100 w1`65
-5040 1218 (rsh) 0 0 75 0 2 A1`65
/AA 100 100 w1`65
-4965 1218 (. It) 0.833313 0 47 1 3 A1`65
-6441 1268 (can be used to securely login to a remote host:) -0.04628 0 867 9 46 A1`65
/AB 100 100 w1`65
-6441 1368 ( orion$ ssh host2) 0 0 425 3 16 A1`65
-6441 1418 ( Enter passphrase for RSA key 'dave@orion': <passphrase>) 0 0 1400 7 55 A1`65
-6441 1468 ( Last login: Sat Aug 15 17:13:01 2000 from orion) 0 0 1200 9 47 A1`65
-6441 1518 ( No mail.) 0 0 225 2 8 A1`65
-6441 1568 ( host2$) 0 0 175 1 6 A1`65
/AA 120 120 w1`65
-6441 1658 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
-6409 1658 (Copy Files to Remote Host:) 0.520813 0 513 4 25 A1`65
-6441 1745 (The OpenSSH package also includes ) 0 0 707 5 33 A1`65
/AB 100 100 w1`65
-5734 1745 (scp) 0 0 75 0 2 A1`65
/AA 100 100 w1`65
-5659 1745 (, a secure and improved replacement for) 0.069427 0 752 6 38 A1`65
/AB 100 100 w1`65
-6441 1795 (rcp) 0 0 75 0 2 A1`65
/AA 100 100 w1`65
-6366 1795 (.  This allows you to securely copy files over a network.) 0.492401 0 1021 11 56 A1`65
/AB 100 100 w1`65
-6441 1870 ( orion$ scp /tmp/file.tar.gz host2:/tmp) 0 0 975 4 38 A1`65
-6441 1920 ( Enter passphrase for RSA key 'dave@orion:) 0 0 1050 6 41 A1`65
-6441 1970 ( file.tar.gz  100% |***************************| 98304 00:00) 0 0 1500 6 59 A1`65
/AA 100 100 w1`65
-6441 2045 (It is also possible to encapsulate ordinarily insecure protocols such as IMAP and) -0.208328 0 1482 12 80 A1`65
-6441 2095 (POP within SSH to prevent transmitting clear text passwords to your mail server) 1.041641 0 1487 12 78 A1`65
-4956 2095 (.) 1.041641 0 12 0 0 A1`65
-6441 2145 (Additionally) 0.833313 0 213 0 11 A1`65
-6230 2145 (, the ) 0.833313 0 95 2 5 A1`65
/AB 100 100 w1`65
-6135 2145 (rsync) 0 0 125 0 4 A1`65
/AA 100 100 w1`65
-6010 2145 ( incremental file transfer utility can use SSH to securely) 0.972183 0 1031 9 57 A1`65
-6441 2195 (synchronize two hosts or backup data to a log server securely) 0.089279 0 1142 10 60 A1`65
-5302 2195 (. SSH can even be) 0.089279 0 349 4 16 A1`65
-6441 2245 (used to securely connect two subnets across the Internet, ef) 0.075745 0 1115 9 59 A1`65
-5327 2245 (fectively creating a) 0.075745 0 345 2 19 A1`65
-6441 2295 (virtual private network. Disable remote root logins and emtpy password ability) 0.999969 0 1439 10 77 A1`65
-5005 2295 (.) 0.999969 0 12 0 0 A1`65
O1`65
N1`65
F M1`65
O1`65
N1`65
F M1`65
/AA 120 120 w1`65
-4803 2043 (  \225 ) 0.13887 0 59 3 3 A1`65
/AA 100 100 w1`65
-4744 2043 (Access will be granted when a daemon/client pair matches an entry in) 0.189377 0 1294 11 67 A1`65
-4803 2096 (the ) 1.249969 0 71 1 3 A1`65
/AB 100 100 w1`65
-4732 2096 (/etc/hosts.allow) 0 0 400 0 15 A1`65
/AA 100 100 w1`65
-4332 2096 ( file.) 1.666626 0 79 1 5 A1`65
/AA 120 120 w1`65
-4803 2153 (  \225 ) 0 0 59 3 3 A1`65
/AA 100 100 w1`65
-4744 2153 (Otherwise, access will be denied when a daemon/client pair matches) 0.092575 0 1276 9 65 A1`65
-4803 2206 (an entry in the ) 0.833313 0 280 4 15 A1`65
/AB 100 100 w1`65
-4523 2206 (/etc/hosts.deny) 0 0 375 0 14 A1`65
/AA 100 100 w1`65
-4148 2206 ( file.) 0.833313 0 78 1 5 A1`65
/AA 120 120 w1`65
-4803 2263 (  \225 ) 0.13887 0 59 3 3 A1`65
/AA 100 100 w1`65
-4744 2263 (Otherwise, access will be granted.) 0.312485 0 634 4 33 A1`65
O1`65
N1`65
F M1`65
/AA 100 100 w1`65
-4854 2329 (A non-existing access control file is treated as if it were an empty file. Thus,) 0.624985 0 1401 14 79 A1`65
-4854 2379 (access control will be turned of) 0.416656 0 574 5 31 A1`65
-4281 2379 (f if no access control files are present!) 0.416656 0 706 7 40 A1`65
O1`65
0 0 0 1 (Black) 0.25 _process b`65
F yy`65
2 0 2 Qy65
-6450 -2400 @m65
-6450 -2274.167 -4917.083 -2274.167 -4917.083 -2400  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
-6403 -2312 (Disable Unnecessary Services:) 2.083282 0 987 2 28 A1`65
O1`65
F yy`65
2 0 2 Qy65
-4854.167 -2403.333 @m65
-4854.167 -2279.167 -3398.75 -2279.167 -3398.75 -2403.333  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
-4822 -2316 (Apache Security:) -2.083282 0 541 1 15 A1`65
O1`65
F yy`65
2 0 2 Qy65
-4853.333 721.667 @m65
-4853.333 845.833 -3397.917 845.833 -3397.917 721.667  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
-4822 806 (Configuring TCP W) 2.499939 0 616 2 16 A1`65
-4207 806 (rappers:) 2.499939 0 267 0 7 A1`65
O1`65
F yy`65
2 0 2 Qy65
-3378.333 -678.333 @m65
-3378.333 -563.75 -1851.667 -563.75 -1851.667 -678.333  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
-3345 -597 (Configuring Syslog:) 2.499939 0 638 1 18 A1`65
O1`65
F yy`65
2 0 2 Qy65
-3378.333 840.417 @m65
-3378.333 965.417 -1851.667 965.417 -1851.667 840.417  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
-3331 925 (Install and Configure T) 2.083282 0 728 3 22 A1`65
-2607 925 (ripwire:) 2.083282 0 242 0 7 A1`65
O1`65
F yy`65
2 0 2 Qy65
-1828.333 -2406.25 @m65
-1828.333 -2282.083 -150.417 -2282.083 -150.417 -2406.25  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
-1786 -2312 (DNS Security:) 0.833313 0 444 1 12 A1`65
O1`65
F yy`65
2 0 2 Qy65
-3378.333 -2403.333 @m65
-3378.333 -2276.667 -1851.667 -2276.667 -1851.667 -2403.333  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
-3345 -2312 (Using RPM and dpkg:) 1.805496 0 695 3 18 A1`65
O1`65
F yy`65
2 0 2 Qy65
-6450 -409.583 @m65
-6450 -286.667 -4917.083 -286.667 -4917.083 -409.583  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
-6400 -328 (Install and Configure OpenSSH:) 2.361038 0 1018 3 29 A1`65
O1`65
F yy`65
2 0 2 Qy65
-6450 -1197.083 @m65
-6450 -1073.75 -4917.083 -1073.75 -4917.083 -1197.083  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
-6406 -1115 (Checking Package Integrity:) 1.666626 0 895 2 26 A1`65
O1`65
F yy`65
2 0 2 Qy65
-1828.333 912.5 @m65
-1828.333 1036.667 -150.417 1036.667 -150.417 912.5  3 yy^65
@cp65
@fp65
r2`65 
yyq65
N1`65
F M1`65
/AC 160 160 w1`65
-1782 991 (Critical System Files:) 2.916595 0 677 2 21 A1`65
O1`65
N1`65
F M1`65
/AA 100 100 w1`65
-6450 -2235 (Disabling  or removing unused programs and services from your host is the most) 0.4487 0 1497 13 77 A1`65
-6450 -2185 (ef) 1.076355 0 35 0 1 A1`65
-6415 -2185 (fective way to limit threats originating from a remote host. Use your distributions) 1.076355 0 1483 12 82 A1`65
-6450 -2135 (package management tools to scan the list of installed packages, then remove) 0.151505 0 1453 11 75 A1`65
-6450 -2085 (those that are unnecessary) -1.249969 0 501 3 25 A1`65
-5952 -2085 (.) -1.249969 0 12 0 0 A1`65
/AA 120 120 w1`65
-6450 -1995 (\225 ) 0.416656 0 32 1 1 A1`65
/AA 100 100 w1`65
-6418 -1995 (Many of the services running from ) 0.624985 0 645 6 33 A1`65
/AB 100 100 w1`65
-5773 -1995 (inetd) 0 0 125 0 4 A1`65
/AC 100 100 w1`65
-5648 -1995 ( ) 0.416656 0 12 1 0 A1`65
/AA 100 100 w1`65
-5636 -1995 (are legacy programs, which are hardly) 0.666641 0 710 5 36 A1`65
-6450 -1942 (ever required, yet typically enabled by default. The file ) 1.018478 0 1020 9 57 A1`65
/AB 100 100 w1`65
-5430 -1942 (/etc/inetd.conf) 0 0 375 0 14 A1`65
/AA 100 100 w1`65
-5055 -1942 ( is) 1.249969 0 43 1 2 A1`65
-6450 -1892 (used to specify which services are of) 0.416656 0 683 6 36 A1`65
-5768 -1892 (fered.  Disable all services that you do not) 0.416656 0 780 8 43 A1`65
-6450 -1842 (want to provide by commenting them out using the ) 0.601822 0 951 9 48 A1`65
/AB 100 100 w1`65
-5499 -1842 (#) 0 0 25 0 0 A1`65
/AC 100 100 w1`65
-5474 -1842 ( ) 0.833313 0 12 1 0 A1`65
/AA 100 100 w1`65
-5461 -1842 (character in the first column) 0.624985 0 517 4 28 A1`65
-6450 -1792 (of the line.) 1.041641 0 196 2 11 A1`65
/AA 120 120 w1`65
-6450 -1702 (\225 ) 0 0 31 1 1 A1`65
/AA 100 100 w1`65
-6419 -1702 (The ) 0.416656 0 85 1 3 A1`65
/AB 100 100 w1`65
-6334 -1702 (/etc/rc*.d) 0 0 250 0 9 A1`65
/AA 100 100 w1`65
-6084 -1702 ( or ) 0.208328 0 61 2 3 A1`65
/AB 100 100 w1`65
-6023 -1702 (/etc/rc.d/rc*) 0 0 325 0 12 A1`65
/AA 100 100 w1`65
-5698 -1702 ( directories contains shell scripts that) 0.249985 0 684 5 39 A1`65
-6450 -1649 (control the execution of network and system services during runlevels. Rename or) 0.568161 0 1522 11 79 A1`65
-6450 -1599 (otherwise disable any that are not required or remove the package entirely) 0.277756 0 1377 11 73 A1`65
-5075 -1599 (. Red) 0.277756 0 100 1 4 A1`65
-6450 -1549 (Hat users can use ) 0.104156 0 349 4 17 A1`65
/AB 100 100 w1`65
-6101 -1549 (/sbin/chkconfig --list) 0 0 550 1 21 A1`65
/AA 100 100 w1`65
-5551 -1549 ( to list which services run in which) 0.178558 0 627 7 35 A1`65
-6450 -1499 (runlevel, and ) 0.416656 0 252 2 13 A1`65
/AB 100 100 w1`65
-6198 -1499 (/sbin/chkconfig --del <name>) 1.249969 0 702 2 27 A1`65
/AA 100 100 w1`65
-5496 -1499 ( to disable a service.) 0.624985 0 383 4 21 A1`65
-6450 -1415 (If you don\222t understand what a particular service does, disable it until you find out.) 0.386887 0 1512 14 85 A1`65
-6450 -1365 (Use ) 0 0 86 1 3 A1`65
/AB 100 100 w1`65
-6364 -1365 (netstat) 0 0 175 0 6 A1`65
/AC 100 100 w1`65
-6189 -1365 ( ) 0 0 12 1 0 A1`65
/AA 100 100 w1`65
-6177 -1365 (and ) 0.416656 0 82 1 3 A1`65
/AB 100 100 w1`65
-6095 -1365 (ps) 0 0 50 0 1 A1`65
/AC 100 100 w1`65
-6045 -1365 ( ) 0 0 12 1 0 A1`65
/AA 100 100 w1`65
-6034 -1365 (to confirm they have not been started after a reboot. Use) 0.208328 0 1052 10 56 A1`65
/AB 100 100 w1`65
-6450 -1315 (/bin/netstat -a -p --inet) 0.555527 0 627 3 24 A1`65
/AA 100 100 w1`65
-5823 -1315 ( to determine which are available and the) 0.297607 0 765 7 40 A1`65
-6450 -1265 (process ID associated with them. A port scanner should also be used to get a view) -0.166656 0 1524 15 80 A1`65
-6450 -1215 (of what remote hosts see.) -0.416656 0 478 4 24 A1`65
O1`65
$1 tsi^65
showpage
%%PageTrailer
%%PageProcessColors: Black
%%PageCustomColors: 
%ADBPageMultiInkColors: 
%%Trailer
end
end
end
%%Pages: 2
%%DocumentSuppliedResources: procset P65PS_PS 1.0 1
%%+ procset P65IMAGE_PS 1.0 1
%%+ font MSTT31c7d4
%%DocumentNeededResources: font Times-Roman
%%+ font Helvetica
%%+ font Courier-Bold
%%+ font Helvetica-Bold
%%+ font Courier
%%+ font Helvetica-Oblique
%%+ font Times-Bold
%%+ font Courier-BoldOblique
%%DocumentProcessColors: Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%ADBDocumentInks: 
%ADBDocumentMultiInkColors: 
%%EOF
